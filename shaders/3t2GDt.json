{
    "Shader": {
        "info": {
            "date": "1561554740",
            "description": "Using pixels color mixing to break color limitations of ZX Spectrum",
            "flags": 0,
            "hasliked": 0,
            "id": "3t2GDt",
            "likes": 6,
            "name": "ZX Spectrum plasma",
            "published": 3,
            "tags": [
                "retro",
                "plasma",
                "zx",
                "8x8"
            ],
            "usePreview": 0,
            "username": "klk",
            "viewed": 620
        },
        "renderpass": [
            {
                "code": "#define float3 vec3\n#define float2 vec2\n#define float4 vec4\n\n\n#define pal(c) vec3(c/4&1,c/2&1,c&1)*( c<8 ? .66 : 1.)\n\n\nstruct NC\n{\n    int i0;\n    int i1;\n    int w;\n};\n\n\nNC near(float3 col)\n{\n    const float3 W=float3(0.299,0.587,0.114);\n    NC res;\n    float rv=100.0;\n    float luma0=dot(col,W);\n    for(int i=0;i<15;i++)\n    {\n        for(int j=i+1;j<16;j++)\n        {\n            for(int f=0;f<4;f++)\n            {\n                float3 icol=mix(pal(i),pal(j),float(f)*.25);\n                float3 dist=(col-icol);\n                dist*=W;\n\n                float d=length(dist);\n                if(d<rv)\n                {\n                    res=NC(i,j,f);\n                    rv=d;\n                }\n            }\n        }\n    }\n    return res;\n}\n\n\nvec3 col(int x, int y)\n{\n\tfloat time=iTime;\n\tvec2 uv = vec2(float(x), float(y))/160.0;\n    vec2 uv0=uv;\n\tfloat i0=1.1;\n\tfloat i1=0.9;\n\tfloat i2=0.5;\n\tfloat i3=0.6;\n\tfloat i4=0.0;\n    float r=0.0;\n    float g=0.0;\n    float b=0.0;\n    float w=0.0;\n\tfor(int s=0;s<4;s++)\n\t{\n\t\tvec2 d;\n\t\td=vec2(cos(uv.y*i0-i4+time/i1),-sin(uv.x*i0-i4+time/i1))/i3;\n        d+=vec2(-d.y,d.x)*0.7;\n\t\tuv.xy+=d;\n        \n\t\ti0=(i0-0.2)*1.1;\n\t\ti1=(i1-2.0)*1.05;\n\t\ti2=(i2-1.51)*1.06;\n\t\ti3*=0.8237;\n\t\ti4+=0.05;\n\t    r+=(sin(uv.x-time)*0.75+0.5)/i2;\n\t    b+=(sin(uv.y+time)*0.75+0.5)/i2;\n\t    g+=(sin((uv.x+uv.y+sin(time*0.5))*0.5)*0.75+0.5)/i2;\n        w+=1.0/i2;\n\t}\n    r/=w;\n    g/=w;\n    b/=w;\n\treturn vec3(r,g,b);\n}\n\nfloat4 border(int y)\n{\n    return float4(pal(int(float(y)+iTime*90.+sin(iTime))/12%8),1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n\n    int ix;\n    int iy;\n    \n    int sc=int(iResolution.y/192.);\n    \n    ix=int(fragCoord.x)/sc;\n    iy=int(fragCoord.y)/sc;\n    \n    int bx=int(iResolution.x)/sc-256;\n    int by=int(iResolution.y)/sc-192;\n    \n    if((ix<=bx/2)||(ix>=256+bx/2))\n    {\n        fragColor=border(iy);\n        return;\n    }\n    else\n        ix-=bx/2;\n\n    if((iy<=by/2)||(iy>=192+by/2))\n    {\n        fragColor=border(iy);\n        return;\n    }\n    else\n        iy-=by/2;\n    \n    int x0=(ix/8)*8;\n    int y0=(iy/8)*8;\n\n    int fx=ix-x0;\n    int fy=iy-y0;\n\n    NC nc=near(col(x0+4, y0+4));\n    if(iMouse.z>0.)\n    {        \n\t    float3 c=col(ix, iy);\n\t    fragColor = vec4(c,1.0);\n    }\n    else\n    {\n        fragColor = vec4(pal(nc.i0),1.0);\n        switch(nc.w)\n        {\n            case 1:if((fx%2+fy%2)==2)fragColor = vec4(pal(nc.i1),1.0);break;\n            case 2:if((fx+fy)%2==0)fragColor = vec4(pal(nc.i1),1.0);break;\n            case 3:if((fx%2+fy%2)<2)fragColor = vec4(pal(nc.i1),1.0);break;\n        }\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}