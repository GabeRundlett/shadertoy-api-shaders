{
    "Shader": {
        "info": {
            "date": "1648352259",
            "description": "001 - I'm learning GLSL and math concepts.\n\nI was able to discover a way to draw a diagonal line, then, pulse it by creating a cycle function.\n\nComments are more \"me talking to myself\" than a documentation. Code feedback is always appreciated. Thx!",
            "flags": 0,
            "hasliked": 0,
            "id": "stsyR2",
            "likes": 2,
            "name": "001 - Respiration line",
            "published": 3,
            "tags": [
                "beginner",
                "learning"
            ],
            "usePreview": 0,
            "username": "PiGIon",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "// 2022.03.27 rev 1\n\nfloat cycle(float perSecond) {\n    // doing this multiplication, we make the animation % grow by perSecond factor\n    // _____________________________\n    // | iTime | perSecond |   d   |\n    // |_______|___________|_______|\n    // |0.1    |1          |0.1    |\n    // |0.2    |1          |0.2    |\n    // |0.45   |1          |0.45   |\n    // |0.5    |1          |0.5    |\n    // |_______|___________|_______|\n    // _____________________________\n    // | iTime | perSecond |   d   |\n    // |_______|___________|_______|\n    // |0.1    |2          |0.2    |\n    // |0.2    |2          |0.4    |\n    // |0.45   |2          |0.9    |\n    // |0.5    |2          |0      |\n    // |_______|___________|_______|\n    // _____________________________\n    // | iTime | perSecond |   d   |\n    // |_______|___________|_______|\n    // |0.1    |0.5        |0.05   |\n    // |0.2    |0.5        |0.1    |\n    // |0.45   |0.5        |0.225  |\n    // |0.5    |0.5        |0.25   |\n    // |_______|___________|_______|\n\n\n    float x = iTime * perSecond;\n    float d = (x) - floor(x);\n    \n    if (d > 0.5) {\n        d = (1. - d); // reverse the keyframe, go back to start\n    }\n    \n    // since the cut point is 0.5, we need to get original place (e.g. 1 again) if d is exactly to 0.5\n    // this means that it cycles from 0...1...0 every second\n    d *= 2.;\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    // Now, the coord system is 0 to 1\n    // [0, 0] = left bottom corner\n    // [1, 1] = top right corner\n    \n    // if x is +- equal to y, then paint black\n    // For humans, the typical respiratory rate for a healthy adult at rest is 12â€“16 breaths per minute.\n    // perSecond = 14 / 60 ~= 0.2333\n    if (distance(uv.x, uv.y) < (0.1 + (cycle(0.233) * 0.04))) {\n        fragColor = vec4(0, 0, 0, 1.0);\n    } else if (uv.x > .5) {\n        fragColor = vec4(1.0, 0, 0,1.0);\n    } else {\n        fragColor = vec4(0, 1, 0,1.0);\n    }\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}