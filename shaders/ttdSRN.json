{
    "Shader": {
        "info": {
            "date": "1580551260",
            "description": "golfed version of  \"Stellar magnetic field\" by tdhooper. [url]https://shadertoy.com/view/3lc3WN[/url] ( original 1439 chars )",
            "flags": 0,
            "hasliked": 0,
            "id": "ttdSRN",
            "likes": 14,
            "name": "Stellar magnetic field (~400 ch)",
            "published": 3,
            "tags": [
                "field",
                "magnetic",
                "golf",
                "3tweets"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 557
        },
        "renderpass": [
            {
                "code": "// Golfing https://shadertoy.com/view/wtdXz4 ( original 1439 chars )\n// deferred: -18 chars by injecting d, a, d, a\n//           -18 chars with usual #define mainImage trick\n// Shortened version of \"Stellar magnetic field\" by tdhooper. https://shadertoy.com/view/3lc3WN\n\n#define H(n)   ( fract(sin(n) * 4e5 )*2. - 1. )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy,\n          p = 3.* (2.*U - R) / R.x, f;\n    float N = 15.,  i=-1., s=i, TAU = 6.2832, a = 0., d;\n  \tfor ( ; ++i < N ; s=-s )\n        f  = p - sin( TAU *( ( i +  H(i/N)/2. + H(i+1.)*(iTime+23.78e3) ) / N +vec2(0,.25))),\n        a += s* atan(f.x, f.y) / TAU;\n                                                        // --- derivative\n    d = 1.6* length( fract( vec2(dFdx(a),dFdy(a)) +.5 )  - .5 ); // fract: anti-wrap\n    s = 1./30.;                                         // s = 1 / nb radial isolines\n    a = abs( mod( a, s ) *2. -s );                      // --- isolines\n    a = clamp( a/d - R.x/2e3 ,0.,1.);\n    d = length(p) - 1.;                                 // --- central disk\n    a = mix( 1.-a, a, clamp(d*R.x/6.,0.,1.)) ; \n    O = vec4( sqrt(a) );                                // --- to sRGB\n} /*\n\n\n\n\n\n// --- 445 chars\n\n#define H(n)   ( fract(sin(n) * 4e5 )*2. - 1. )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy,\n          p = 3.* (2.*U - R) / R.x, f;\n    float N = 15.,  i=-1., s=i, TAU = 6.2832, a = 0., d;\n  \tfor ( ; ++i < N ; s=-s )\n        f  = p - sin( TAU *( ( i +  H(i/N)/2. + H(i+1.)*(iTime+23.78e3) ) / N +vec2(0,.25))),\n        a += s* atan(f.x, f.y) / TAU;\n    f = abs(vec2(dFdx(a),dFdy(a)));                     // --- derivative\n    d = 1.6* length( f - floor(f+.5) );                 // floor: anti-wrap\n    s = 1./30.;                                         // 1 / nb radial iso\n    a = abs( mod( a, s ) *2. -s );                      // --- isolines\n    a = clamp( a/d - R.x/2e3 ,0.,1.);\n    d = length(p) - 1.;                                 // --- central disk\n    a = mix( 1.-a, a, clamp(d/fwidth(d),0.,1.)) ;       \n    O = vec4( sqrt(a) );                                // --- to sRGB\n} /*\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}