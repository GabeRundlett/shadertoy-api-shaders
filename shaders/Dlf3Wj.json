{
    "Shader": {
        "info": {
            "date": "1672382890",
            "description": "Another simple fractal pattern.",
            "flags": 0,
            "hasliked": 0,
            "id": "Dlf3Wj",
            "likes": 6,
            "name": "Fractal flower stars",
            "published": 3,
            "tags": [
                "fractal",
                "flower",
                "star"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    return abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 16.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    bool t3 = false;\n    for(int k = 0; k < 12; k++){\n        t3 = uv.x > uv.y || !t3;\n        //uv = (fract(vec2(uv+vec2(.5,1.5))*1.5)-.5)/1.5;\n        uv = (uv+t2)/scale+float(!t3)/2.;\n        t2 = triangle_wave(uv+.5);\n        uv = t2-triangle_wave(uv.yx);\n        //t2.x += .5+float(t3)/2.;\n        float c1 = abs(uv.x-uv.y);\n        col = col.yzx;  \n        if(uv.y > uv.x) col = vec3(col.yz,c1);\n        //t2 -= floor(iTime)*vec2(1.,1./16.)/16.;\n        \n    }\n    fragColor = vec4(abs(col)*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}