{
    "Shader": {
        "info": {
            "date": "1493050836",
            "description": "//within 2 loops, were n and k are ALWAYS only\nint k=0;int n=0;\n//and\n    mat3 T=mat3(0);\n           T[n][k] = 0.;//refuses to compile\n           T[0][0] = 0.;//compiles just fine\n           T[1][1] = 0.;//compiles just fine\n\non win7 Firefox",
            "flags": 0,
            "hasliked": 0,
            "id": "XdByzc",
            "likes": 0,
            "name": "compiler fails on matrix",
            "published": 3,
            "tags": [
                "error",
                "compatibility",
                "compiler"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 643
        },
        "renderpass": [
            {
                "code": "//pinnied down a compilation error that i got on\n//https://www.shadertoy.com/view/lsjcRK\n\n\n//uncomment the line below to have it compile by explicit const types.\n//#define DoConst\n\n\n//cartToBary refuses to compile. \"parameters require 1-value arguments\nvec4 cartToBary(){//from cartesian to barycentric coordinates\n    mat3 T=mat3(0);\n   // for(int n = 0; n < 1; n++){\n   //      for(int k = 0; k < 1; k++){\n   \n   //worse, even without a loop this fails:\n    \n   #ifndef DoConst\n   int n=0;\n   int k=0;\n   #else\n   const int n=0;//compiles just fine\n   const int k=0;//compiles just fine\n   #endif\n    \n   //type const int                  compiles fine\n   //type       int                  fails to commpile\n   //type    for(int i=0;i<1.;i++){} fails to commpile\n  \n           T[n][k] = 2.;//refuses to compile       <- BAAAAAD\n         //T[k][n] = 2.;//refuses to compile       <- BAAAAAD\n           T[0][k] = 2.;//compiles just fine    <- but but, this is fine?\n           T[0][n] = 2.;//compiles just fine    <- but but, this is fine?\n           T[k][0] = 2.;//compiles just fine    <- but but, this is fine?\n           T[n][0] = 2.;//compiles just fine    <- but but, this is fine?\n           //just to make REALLY sure:\n           T[n].x  = 2.;//compiles just fine\n           T[k].x  = 2.;//compiles just fine\n           T[0][0] = 2.;//compiles just fine\n           T[1][1] = 2.;//compiles just fine\n \n  //      }\n  //  }\n    return vec4(0);\n}\n\n\n//tiny default main:\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \n    \n    vec4 a=vec4(0);    \n    a= cartToBary();//this refuses to compile\n        \n    \n        \n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}