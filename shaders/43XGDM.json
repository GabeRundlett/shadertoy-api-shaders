{
    "Shader": {
        "info": {
            "date": "1707516410",
            "description": "This was programmed by me (14 years old) for Slider Revolution. Pls take your time and mess with a few numbers-",
            "flags": 0,
            "hasliked": 0,
            "id": "43XGDM",
            "likes": 5,
            "name": "Transition with Light",
            "published": 3,
            "tags": [
                "transition"
            ],
            "usePreview": 0,
            "username": "SamKriki",
            "viewed": 200
        },
        "renderpass": [
            {
                "code": "\nfloat rnd(float n, float seed){\n\n    return sin(cos(n * 582. * seed) * 314.);\n\n}\n\nfloat circle(vec2 pos,float size, vec2 p){\n\n    return smoothstep(0.0,1.0,(size-length(p-pos)));\n}\n\nvec3 blur(sampler2D tex,vec2 p, float size, float amp){\n        \n    vec3 color = vec3(0.0);\n    float am = 1.0/pow(size*2.,2.);\n\n    for(float i = -size;i <size;i++){\n        for(float j = -size;j <size;j++){\n            \n            vec2 newp = p + vec2(i,j) * 0.001 * amp;\n            color += vec3(texture(tex,newp).xyz);\n        }\n    }\n    \n    color *= am;\n    \n    p += rnd(p.x,p.y)*0.002 * amp;\n    \n    color += vec3(texture(tex,p).xyz);\n    \n    return color * 0.5;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 p = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 q;\n    vec3 col;\n    \n    float speed = 0.5;\n    float strength = 0.5 * (smoothstep(0.,1.0,4.-iTime));\n    \n    float amo = 15.; //Amount of Circles. Does effect the performance quit a bit.\n    float sd = 2.2;  //Seed for rnd. Change For diffrent result\n    float Cs = 1.7;   //Size of the Circle\n    \n    vec3 Col1 = vec3(0.7,0.1,0.1); //Assigns a random Color from these 5.\n    float tol1 = 0.1; //Changes the possible diffrenses for each Cicles Color\n    vec3 Col2 = vec3(0.7,0.1,0.1);\n    float tol2 = 0.1;\n    vec3 Col3 = vec3(0.1,0.5,0.7);\n    float tol3 = 0.1;\n    vec3 Col4 = vec3(0.1,0.5,0.7);\n    float tol4 = 0.1;\n    vec3 Col5 = vec3(0.1,0.5,0.7);\n    float tol5 = 0.1;\n    vec3[] Colors = vec3[] (Col1,Col2,Col3,Col4,Col5);\n    float[] tolerance = float[] (tol1,tol2,tol3,tol4,tol5);\n    \n    bool DoBackground = false;//Takes the avg of the Background as the Color\n    \n    bool DirNotRandom = true;//Change the Direction of the Circles to:\n    vec2 NewDir = vec2(1.,.0);//This is the new Dir Starting pos is Calculated with it too\n    \n    float EFCS = 0.5;//Changes the Effekt size/strength of each cicrle based \n                     //on the pixels distanz to the circle center\n    \n    vec2 colAmpX = vec2(1.); //Making a Strength gredient dosent Work jet...\n    \n    float t = speed * iTime;\n    \n    float zoom = 1.0 - sin(smoothstep(0.,3.14159,iTime*.25*3.14159)*3.14159)*0.1;\n    \n    //Shaking effekt\n    q.x = rnd(5.,2. + floor(t) * 0.01) * 0.1;\n    q.y = rnd(5.,1. + floor(t) * 0.01) * 0.1;\n    \n    vec2 dir = normalize(q);\n    \n    p += dir * sin(fract(t) * 3.14159 * 2.) * pow(sin(fract(t)*3.14159+3.14159),1.) * 0.1 * (20.-zoom * 20.);\n    p *= zoom;\n    \n    //weaking the Transition effekt with Time\n    float effSt = sin(smoothstep(0.,1.,iTime*0.25 * speed * 2.)*3.14159);\n    \n    \n    \n    \n    \n    \n    //Load image and Bluring it\n    col += blur(iChannel1,(p * iResolution.y + iResolution.xy)*0.5/iResolution.xy,10.,3. * effSt) * smoothstep(0.0,1.0,iTime*0.25);\n    col += blur(iChannel0,(p * iResolution.y + iResolution.xy)*0.5/iResolution.xy,10.,3. * effSt) * smoothstep(1.0,0.0,iTime*0.25);\n    \n    //circles\n    vec3 CirclCol = vec3(0.); \n    for(float i = 0.;i<amo;i++){\n        vec2 cq = vec2(rnd(i*5.32*sd,i*1.42*sd),rnd(i*3.32,i*0.42*sd));\n        vec2 Cdir = vec2(rnd(i*0.83*sd,i*0.89*sd),rnd(i*0.51*sd,i*0.82*sd));\n        if(DirNotRandom){cq += NewDir * -1.;Cdir = NewDir *(1.5 + 0.4 * rnd(cq.x*0.83*sd,cq.y*0.89*sd));}\n        int rnd1 = int(floor((0.5 + 0.5 * rnd(cq.x*1.4*sd,cq.y*1.2*sd)) * 5.) );\n        int rnd2 = int(floor((0.5 + 0.5 * rnd(cq.x*1.4*sd,cq.y*1.2*sd)) * 5.) );\n        \n        vec3 ChosenCol = Colors[rnd1];\n        float ChosenTol = tolerance[rnd2];\n\n        float C1 = rnd(cq.x*0.841,cq.y*8.459*sd) * ChosenTol + ChosenCol.x;\n        float C2 = rnd(cq.x*4.615,cq.y*2.195*sd) * ChosenTol + ChosenCol.y;\n        float C3 = rnd(cq.x*1.517,cq.y*3.315*sd) * ChosenTol + ChosenCol.z;\n        \n        \n        \n        float Csize = rnd(cq.x*1.517,cq.y*3.315) * .1 + Cs;\n        \n        vec3 Rcol = vec3(C1,C2,C3) * .5 * (1. * 12.5/amo);\n        \n        if(DoBackground == true){\n        \n            Rcol = blur(iChannel1,cq,4.,0.1) * .5;\n        \n        }\n        \n        float s = 20.-iTime*10.;\n        float StC = smoothstep(s-3.0,s,i);\n        \n        cq += Cdir * pow(iTime*0.5,3.0) ;\n        cq.x *= 1.2;\n        \n        CirclCol += 1.*Rcol * circle(cq,Csize,p) * sin(smoothstep(0.,1.,iTime*0.5 * speed + 0.25)*3.14159) * StC * effSt;\n        col *= 1.-circle(cq,Csize-0.5,p) * StC * .25;\n        //CirclCol *= 0.5 + smoothstep(0.,Csize-0.75,length(p-cq)) * 0.5; remove\n        // because it created darker holes at earlyer rendered circles.\n\n    }\n    \n    col += CirclCol;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}