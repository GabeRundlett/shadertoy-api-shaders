{
    "Shader": {
        "info": {
            "date": "1514797882",
            "description": "Comparison of using linear and smoothstep at different filter widths.\n\nTop row: linear. Bottom row: smoothstep.\nLeft to Right: Nearest Neighbor (no filtering), 1 pixel filter, 1.5 pixel filter, 2.0 pixel filter.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltBfRD",
            "likes": 15,
            "name": "Pixel Art Filtering Comparison",
            "published": 3,
            "tags": [
                "2d",
                "antialiasing",
                "filtering",
                "pixelart"
            ],
            "usePreview": 0,
            "username": "bgolus",
            "viewed": 2906
        },
        "renderpass": [
            {
                "code": "vec2 uv_nearest( vec2 uv, vec2 res )\n{\n\tuv = uv * res;\n    return (floor(uv) + 0.5) / res;\n}\n\nvec2 uv_aa_linear( vec2 uv, vec2 res, float width )\n{\n    uv = uv * res;\n    vec2 uv_floor = floor(uv + 0.5);\n    uv = uv_floor + clamp( (uv - uv_floor) / fwidth(uv) / width, -0.5, 0.5);\n    return uv / res;\n}\n\nvec2 uv_aa_smoothstep( vec2 uv, vec2 res, float width )\n{\n    uv = uv * res;\n    vec2 uv_floor = floor(uv + 0.5);\n    vec2 uv_fract = fract(uv + 0.5);\n    vec2 uv_aa = fwidth(uv) * width * 0.5;\n    uv_fract = smoothstep(\n        vec2(0.5) - uv_aa,\n        vec2(0.5) + uv_aa,\n        uv_fract\n        );\n    \n    return (uv_floor + uv_fract - 0.5) / res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy*0.5) / iResolution.x;\n    \n    vec2 res = iChannelResolution[0].xy;\n    \n    vec2 screenpos = fragCoord.xy / iResolution.xy;\n    \n    if (screenpos.x < 0.25) {\n        uv.x += 0.375;\n    } else if (screenpos.x < 0.5) {\n        uv.x += 0.125;\n    } else if (screenpos.x < 0.75) {\n        uv.x -= 0.125;\n    } else {\n        uv.x -= 0.375;\n    }\n    \n    float vert_uv_offset = 0.25 * (iResolution.y / iResolution.x);\n    if (screenpos.y < 0.5)\n        uv.y += vert_uv_offset;\n    else\n        uv.y -= vert_uv_offset;\n    \n    uv *= 0.1 + iMouse.x * 0.01;\n    \n    float angle = sin(iTime * 0.25) * 0.2 + 0.2;\n    \n    float c = cos(angle);\n    float s = sin(angle);\n    \n    uv = uv.x * vec2(c, s) + uv.y * vec2(-s, c);\n    \n    if (screenpos.x < 0.25) {\n        uv = uv_nearest(uv, res);\n    } else {\n        float width = 1.0;\n        if (screenpos.x > 0.75)\n        \twidth = 2.0;\n    \telse if (screenpos.x > 0.5)\n        \twidth = 1.5;\n        \n        if (screenpos.y > 0.5)\n            uv = uv_aa_linear(uv, res, width);\n        else\n            uv = uv_aa_smoothstep(uv, res, width);\n    }   \n        \n    fragColor = textureLod(iChannel0, uv, 0.0).xxxx;\n    fragColor *= abs(fragCoord.y - iResolution.y * 0.5 + 0.5) < 1.0 ? 0.0 : 1.0;\n    fragColor *= abs(fragCoord.x - iResolution.x * 0.25 + 0.5) < 1.0 ? 0.0 : 1.0;\n    fragColor *= abs(fragCoord.x - iResolution.x * 0.5 + 0.5) < 1.0 ? 0.0 : 1.0;\n    fragColor *= abs(fragCoord.x - iResolution.x * 0.75 + 0.5) < 1.0 ? 0.0 : 1.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}