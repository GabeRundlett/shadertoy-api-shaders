{
    "Shader": {
        "info": {
            "date": "1689445516",
            "description": "S1",
            "flags": 0,
            "hasliked": 0,
            "id": "dd2Bzh",
            "likes": 1,
            "name": "S_1",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "abhiramTS",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "\nvec3 palette(float t)\n{\n\tvec3 a = vec3(0.450, 0.450, 0.35);\n\tvec3 b = vec3(0.4, 0.5, 0.3);\n\tvec3 c = vec3(2., 3.0, 4.0);\n\tvec3 d = vec3(0.6, 0.5, 0.3);\n\n\treturn a + b * cos(6.28318 * (c * t + d));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 xy = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\tfloat t = iTime;\n\tconst float PI = 3.14159265358979323846264338327950288;\n\tfloat d0 = length(xy);\n\n\tvec3 fColor = vec3(0, 0, 0);\n\n\tfor (float i = 0.0; i < 3.0; i++)\n\t{\n\n\t\txy = fract(xy * (1. + (sin(.5 * PI * mod(t,11.) * d0)))) - 0.5;\n\n\t\tfloat d = length(xy);\n\n\t\tfloat p = sin(1. * PI * d + 0.75 * mod(t,17.));\n\t\tp = abs(p);\n\t\tfloat q = 2. * PI * p;\n\n\t\tfloat r = 1. - abs(sin(q) - p) / 2.;\n\t\tfloat g = 1. - abs(cos(q) - p) / 2.;\n\t\tfloat b = (pow(r, 2.) + pow(g, 2.));\n\n\t\tb = pow(0.1 / b, 0.5);\n\n\t\tvec3 col = palette(d0 * t * 0.01 * b);\n\n\t\tcol *= b;\n\n\t\tfColor += col;\n\t}\n\n\tfragColor = vec4(fColor-0.1, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}