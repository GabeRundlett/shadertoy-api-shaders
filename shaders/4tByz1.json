{
    "Shader": {
        "info": {
            "date": "1507333985",
            "description": "Droste",
            "flags": 0,
            "hasliked": 0,
            "id": "4tByz1",
            "likes": 5,
            "name": "alijaya - Droste",
            "published": 3,
            "tags": [
                "droste"
            ],
            "usePreview": 0,
            "username": "alijaya",
            "viewed": 431
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433832795\n\nvec2 cexp( vec2 c ) {\n    return exp(c.x) * vec2(cos(c.y), sin(c.y));\n}\n\nvec2 clog( vec2 c ) {\n    return vec2(log(sqrt(c.x*c.x+c.y*c.y)), atan(c.y, c.x));\n}\n\nvec2 crec( vec2 c ) {\n    return vec2(c.x, -c.y) / (c.x*c.x+c.y*c.y);\n}\n\nvec2 cmul( vec2 a, vec2 b ) {\n    return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x);\n}\n\nvec2 cdiv( vec2 a, vec2 b ) {\n    return cmul(a, crec(b));\n}\n\nfloat r1 = 0.2;\nfloat r2 = 1.0;\nint depth = 2;\n\nfloat circle( vec2 xy, vec2 pos, float radius ) {\n    float smoothness = 1.0;\n    \n    float ret = 1.0 - smoothstep( radius - smoothness, radius, distance( xy, pos ) );\n    return ret;\n}\n\nfloat circleO( vec2 xy, vec2 pos, float radius, float thickness ) {\n    float smoothness = 1.0;\n    \n    float dist = distance( xy, pos );\n    radius += thickness / 2.0;\n    float ret = 1.0 - smoothstep( radius - smoothness, radius, dist );\n    radius -= thickness;\n    ret -= 1.0 - smoothstep( radius, radius + smoothness, dist );\n    return ret;\n}\n\nfloat lineO( vec2 xy, vec2 a, vec2 b, float thickness ) {\n    float smoothness = 1.0;\n    \n    vec2 ab = b - a;\n    float lab = length(ab);\n    vec2 nab = normalize(ab);\n    vec2 axy = xy - a;\n    float d = dot(nab, axy);\n    float dist = length(nab * d - axy);\n    \n    thickness /= 2.0;\n    float ret = 1.0 - smoothstep( thickness - smoothness, thickness, dist );\n    ret *= smoothstep(-thickness, -thickness + smoothness, d);\n    ret *= 1.0 - smoothstep( lab + thickness - smoothness, lab + thickness, d);\n    return ret;\n}\n\nvec3 draw( vec2 xy ) {\n    float c0 = circleO( xy, vec2(0.0), r1, 5.0 );\n    float c1 = circleO( xy, vec2(0.0), r2, 5.0 );\n    float l0 = lineO( xy, vec2(r1, 0.0), vec2(r2, 0.0), 5.0 );\n    float l1 = lineO( xy, vec2(0.0, r1), vec2(0.0, r2), 5.0 );\n    float l2 = lineO( xy, vec2(-r1, 0.0), vec2(-r2, 0.0), 5.0 );\n    float l3 = lineO( xy, vec2(0.0, -r1), vec2(0.0, -r2), 5.0 );\n    \n    vec3 color0 = vec3(1.0, 0.0, 0.0);\n    vec3 color1 = vec3(1.0, 1.0, 0.0);\n    vec3 color2 = vec3(0.0, 1.0, 0.0);\n    vec3 color3 = vec3(0.0, 1.0, 1.0);\n    vec3 color4 = vec3(0.0, 0.0, 1.0);\n    vec3 color5 = vec3(1.0, 0.0, 1.0);\n    \n    vec3 color = vec3(0.0);\n    color = mix(color, color0, c0);\n    color = mix(color, color1, c1);\n    color = mix(color, color2, l0);\n    color = mix(color, color3, l1);\n    color = mix(color, color4, l2);\n    color = mix(color, color5, l3);\n    \n    return color;\n}\n\nvec2 droste( vec2 xy, float r1, float r2, int depth ) {\n    float scale = log(r2 / r1);\n    float angle = atan(scale, 2.0 * PI);\n    xy = clog(xy);\n    xy = cdiv(xy, cexp(vec2(0, angle)) * cos(angle));\n    xy.x += fract(iTime) * scale;\n    xy.x = mod(xy.x, scale) + float(depth) * scale;\n    xy = cexp(xy) * r1;\n    \n    return xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 center = iResolution.xy / 2.0;\n    vec2 xy = fragCoord.xy - center;\n    float res = min(iResolution.x, iResolution.y);\n    vec2 res2 = vec2(res);\n    r1 *= res / 2.0;\n    r2 *= res / 2.0;\n    \n    fragColor = vec4(0.0);\n    for (int i = depth; i >= 0; i--) {\n        vec2 uvxy = droste(xy, r1, r2, i) / iResolution.xy;\n\n        vec4 color = texture(iChannel0, uvxy + vec2(0.5));\n        float pct = smoothstep(0.0, 0.5, 1.0 - distance( vec2(0,0), uvxy ) / 0.5);\n        color = mix(color, vec4(0.0), pct);\n        fragColor = mix(fragColor, color, color.a);\n    }\n    \n    //fragColor = vec4(draw(droste(xy, r1, r2, 0)), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}