{
    "Shader": {
        "info": {
            "date": "1523330862",
            "description": "It's just experimenting.",
            "flags": 0,
            "hasliked": 0,
            "id": "4sGyDV",
            "likes": 3,
            "name": "old school 3D carousel",
            "published": 3,
            "tags": [
                "2d",
                "carousel"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 870
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14159265359;\nconst float DEG_TO_RAD = PI / 180.0;\n\nvec4 combine(vec4 val1, vec4 val2 ){\n    if ( val1.w < val2.w ) return val1;\n    return val2;\n}\n\nfloat dBox(vec2 p, vec2 b) {\n\treturn max(abs(p.x) - b.x, abs(p.y) - b.y);\n}\n\nfloat calculatePositionAndDraw(vec2 p, float index, float t, float deg, float height, float dist) {\n\tfloat x = cos(((index*deg)+t)*(DEG_TO_RAD))*dist;\n\tfloat y = (sin(((index*deg)+t)*(DEG_TO_RAD))*dist)/height;\n\tfloat z = y*-0.15+1.0;\n\t\n\treturn dBox(p-vec2(x,y), vec2(z, z));\n}\n\nvec4 draw(vec2 p) {\n\tp *= 6.0;\n\t\n\tfloat num = 8.0;\n\tfloat index = 0.0;\n\tfloat dist = 6.0;\n\tfloat deg = (360.0/num);\n\tfloat height = 1.5+abs(sin(iTime*0.1));\n\t\n\tfloat t = (iTime*60.0);\n\t\n\tvec4 b0 = vec4(1.0, 0.1, 0.0, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 1.0;\n\tvec4 b1 = vec4(0.1, 0.7, 0.51, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 2.0;\n\tvec4 b2 = vec4(0.5, 0.7, 0.51, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 3.0;\n\tvec4 b3 = vec4(0.1, 0.1, 0.51, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 4.0;\n\tvec4 b4 = vec4(0.3, 0.0, 0.1, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 5.0;\n\tvec4 b5 = vec4(0.3, 0.3, 0.5, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 6.0;\n\tvec4 b6 = vec4(0.1, 0.2, 0.3, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\tindex = 7.0;\n\tvec4 b7 = vec4(0.3, 0.0, 0.4, calculatePositionAndDraw(p,index,t,deg,height,dist));\n\t\n\tvec4 res1 = combine(b0, b1);\n\tvec4 res2 = combine(b2, b3);\n\tvec4 res3= combine(b4, b5);\n\tvec4 res4= combine(b6, b7);\n\tvec4 res5 = combine(res1, res2);\n\tvec4 res6 = combine(res3, res4);\n\tvec4 res7 = combine(res5, res6);\n\t\n\treturn res7;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ( fragCoord.xy * 2.0 - iResolution.xy ) / min( iResolution.x, iResolution.y );\n\t\n\tvec4 res = draw(p);\n\tvec3 resColor = res.xyz;\n\tif(res.w>0.0){\n\t\t// background\n\t\tfloat temp = length(p)+1.5;\n\t\tfragColor = vec4( vec3(2,2,2)/vec3(temp), 1.0 );\t\t\n\t} else {\n\t\tfragColor = vec4( vec3(resColor), 1.0 );\n\t}\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}