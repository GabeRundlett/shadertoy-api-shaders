{
    "Shader": {
        "info": {
            "date": "1614669052",
            "description": "Quick god rayzz",
            "flags": 0,
            "hasliked": 0,
            "id": "3dy3zm",
            "likes": 17,
            "name": "Block streams",
            "published": 3,
            "tags": [
                "2d",
                "blur",
                "godrays"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 400
        },
        "renderpass": [
            {
                "code": "// Cole Peterson\n\n#define R iResolution.xy\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\nfloat hsh(vec2 p){\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 color(vec2 uv){\n    float m = exp((sin(uv.y*3. - iTime)))+0.8;\n    uv.x *= m * 2.2;\n    uv.x += iTime;\n    \n\tvec2 fuv = fract(uv*7.);\n    uv.y += .9*iTime*sin(floor(uv*7.).x*0.4)+0.7;\n    vec2 id = floor(uv*7.);\n   \n    return vec3(smoothstep(.7, .27,fuv.x-0.5)*mod(id.y+id.x,2.0)*(hsh(id*999.)-.2));\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    uv*=rot(1.6);\n    \n    vec3 col = color(uv);\n\tvec3 acc = vec3(0);\n    \n    float m = 0., c = 0.;\n    for(float i = 1.0; i >0.0; i-=0.02){\n        vec2 nc = uv*(i+hsh(u)*0.15);\n        m = step(1.1, length(color(nc)));\n        acc += vec3(m) * vec3(0.97, 0.94, 0.9);\n        c++;\n    }\n    acc /= c;\n    col += acc*1.3;\n    f = vec4(col * .55, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}