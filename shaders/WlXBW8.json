{
    "Shader": {
        "info": {
            "date": "1596794920",
            "description": "idk, looks interesting\nmouse to control intensity",
            "flags": 0,
            "hasliked": 0,
            "id": "WlXBW8",
            "likes": 5,
            "name": "rgb crumple",
            "published": 3,
            "tags": [
                "voronoi",
                "glitch"
            ],
            "usePreview": 1,
            "username": "thefox231",
            "viewed": 534
        },
        "renderpass": [
            {
                "code": "#define amp iMouse.x / iResolution.x * 0.5\n\nfloat hash(float n)\n{\n    n=mod(n,64.0);\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise(vec2 p)\n{\n    return hash(p.x + p.y*57.0);\n}\n\nfloat smoothNoise2(vec2 p)\n{\n    vec2 p0 = floor(p + vec2(0.0, 0.0));\n    vec2 p1 = floor(p + vec2(1.0, 0.0));\n    vec2 p2 = floor(p + vec2(0.0, 1.0));\n    vec2 p3 = floor(p + vec2(1.0, 1.0));\n    vec2 pf = fract(p);\n    return mix( mix(noise(p0), noise(p1), pf.x), \n               mix(noise(p2), noise(p3), pf.x), pf.y);\n}\n\nvec2 cellPoint(vec2 cell)\n{\n    return vec2(noise(cell)+cos(cell.y)*0.3, noise(cell*0.3)+sin(cell.x)*0.3);\n}\n\nvec3 voronoi2(vec2 t,float pw)\n{\n    vec2 p = floor(t);\n    vec3 nn=vec3(1e10);\n\n    float wsum=0.0;\n    vec3 cl=vec3(0.0);\n    for(int y = -1; y < 2; y += 1)\n        for(int x = -1; x < 2; x += 1)\n        {\n            vec2 b = vec2(float(x), float(y));\n            vec2 q = b + p;\n            vec2 q2 = q-floor(q/8.0)*8.0;\n            vec2 c = q + cellPoint(q2);\n            vec2 r = c - t;\n            vec2 r2=r;\n\n            float d = dot(r, r);\n            float w=pow(smoothstep(0.0,1.0,1.0-abs(r2.x)),pw)*pow(smoothstep(0.0,1.0,1.0-abs(r2.y)),pw);\n\n            cl+=vec3(0.5+0.5*cos((q2.x+q2.y*119.0)*8.0))*w;\n            wsum+=w;\n\n            nn=mix(vec3(q2,d),nn,step(nn.z,d));\n        }\n\n    return pow(cl/wsum,vec3(0.5))*2.0;\n}\n\nvec3 voronoi(vec2 t)\n{\n    return voronoi2(t*0.25,16.0)*(0.0+1.0*voronoi2(t*0.5+vec2(voronoi2(t*0.25,16.0)),2.0))+voronoi2(t*0.5,4.0)*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 t=(fragCoord)/iResolution.y + (vec2(sin(iTime), cos(iTime)) - iTime * 2.0) * 0.4;\n    fragColor.a = 1.0;\n\n    vec2 tt = fract((t.xy+1.0)*0.5) * 32.0;\n\n    //float x=voronoi(tt).r;\n    //float x1=voronoi(tt+vec2(1e-2,0.0)).r;\n    //float x2=voronoi(tt+vec2(0.0,1e-2)).r;\n\n    //vec3 off = .86*mix(vec3(0.1,0.1,0.2)*0.4,vec3(1.05,1.05,1.0),0.5+0.5*dot(normalize(vec3(0.1,1.0,0.5)),\n    //                                                                            normalize(vec3((x1-x)/1e-2,(x2-x)/1e-2,8.0))*0.5+vec3(0.5)));\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 col;\n    for (int i = 0; i < 3; i++) {\n        vec2 off = voronoi(tt + float(i) * 90.).rg;\n    \tcol[i] = texture(iChannel0, clamp(uv + (1. - off) * amp, 0.0, 1.0))[i];\n    }\n    fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}