{
    "Shader": {
        "info": {
            "date": "1547159682",
            "description": "Test with tiles on sprite",
            "flags": 0,
            "hasliked": 0,
            "id": "tdfGRl",
            "likes": 2,
            "name": "[Ese] tiles",
            "published": 3,
            "tags": [
                "sprite",
                "tiles"
            ],
            "usePreview": 0,
            "username": "Eseris",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "const vec4 Bgnd = vec4(vec3(.8), 1);\nconst vec2 Size = vec2(400, 400);\nconst float Pi = 3.1415926535;\n\n\nmat2 rot(float a) {\n    return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\n\nvec4 drawTiledSprite(vec2 uv) {\n    float time = mod(iTime, 3.);\n    vec4 tex = vec4(0);\n    float nbTiles = 6.;\n    float tileOffset = .3 * smoothstep(.5, .0 , abs(time - 1.5) - .5);\n    float tileCoef  = 1. + tileOffset;\n    \n    uv -= .5;\n    uv *= nbTiles;\n    uv /= tileCoef;\n    vec2 fuv = fract(uv) * tileCoef;\n    fuv -= tileOffset / 2. + .5;\n    fuv *= rot(2. * Pi * smoothstep(.7, 2.3, time));\n    fuv += tileOffset + .5;;\n    vec2 p = floor(uv) + fuv - tileOffset;\n    p /= nbTiles;\n    p += .5;\n    \n    // clamp the texture to interval [0, 1]\n    if(all(greaterThan(step(abs(p - .5), vec2(.5)), vec2(.5))))\n    \ttex = texture(iChannel0, vec2(p.x / 6.6, p.y));\n    \n    // tile mask with antialiasing\n    vec2 mask = smoothstep(.0, .005 * nbTiles, fuv - tileOffset);\n    mask *= smoothstep(.0, .005 * nbTiles, tileCoef - fuv);\n    tex *= mask.x * mask.y;\n\n    return tex;\n}\n\nvec4 drawSprite(vec2 uv) {\n    vec4 tex = vec4(0);\n    if(all(greaterThan(step(abs(uv - .5), vec2(.5)), vec2(.5))))\n    \ttex = texture(iChannel0, vec2(uv.x / 6.6, uv.y));\n    return tex;\n}\n\n\nvoid addTexture(inout vec4 col, in vec4 sprite) {\n    col = mix(col, vec4(sprite.rgb, 1.), sprite.a);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - (iResolution.xy - Size) / 2.) / Size;\n    vec4 col = Bgnd;\n    addTexture(col, drawTiledSprite(uv));\n    //addTexture(col, drawSprite(uv) * vec4(vec3(1), .6));\n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}