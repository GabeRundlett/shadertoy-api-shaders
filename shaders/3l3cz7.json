{
    "Shader": {
        "info": {
            "date": "1608646467",
            "description": "A very simple IFS function.\n\n - https://darkeclipz.blogspot.com/2020/12/iterated-function-systems-ifs.html ",
            "flags": 0,
            "hasliked": 0,
            "id": "3l3cz7",
            "likes": 5,
            "name": "Basic IFS",
            "published": 3,
            "tags": [
                "fractal",
                "ifs"
            ],
            "usePreview": 0,
            "username": "darkeclipz",
            "viewed": 1019
        },
        "renderpass": [
            {
                "code": "// https://darkeclipz.blogspot.com/2020/12/iterated-function-systems-ifs.html \n\n#define PI 3.14159265358979323846264\n#define MOUSE_DOWN (iMouse.z > 0.)\n#define SS 4.\n#define R iResolution.xy\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12454.1,78345.2))) * 43758.5);\n}\n\nvec2 random2(in vec2 st) {\n\treturn vec2(random(st), random(st));    \n}\n\nvec2 ifs(vec2 p, float s, float r, int n) {\n    float co = cos(r), si = sin(r);\n    mat2 rot = mat2(co, si, -si, co);\n    for(int i=0; i < n; i++) {\n        p.x = abs(p.x);\n        p -= vec2(1.0, 0);\n        p *= rot;\n        p *= s;\n    }\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0);\n    float px = 1. / iResolution.y;\n    for(float i=0.; i < SS; i++) {\n        vec2 uv = 5.5 * (2.*(fragCoord + random2(R+i)) - R) / R.y;\n        float s = MOUSE_DOWN ? 1.11 + (iMouse.y / iResolution.y - 0.5) * 0.1\n                             : 1.11;\n        float r = MOUSE_DOWN ? PI / 2. + iMouse.x / iResolution.x * 2. * PI\n                             : 2.*PI*fract((iTime + 20.2*2.)/100.);\n        uv = ifs(uv, s, r, 24);\n        uv = ifs(uv, 1.17, PI/2., 8);\n        float ds = 0.5;\n        col += vec3(1) * smoothstep(ds, ds-16.*px, length(uv));\n    }\n    fragColor = vec4(col / SS, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}