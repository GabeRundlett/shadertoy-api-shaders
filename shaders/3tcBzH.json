{
    "Shader": {
        "info": {
            "date": "1612193263",
            "description": "Perlin Noise generation, fire shader after @febucci\nhttps://www.febucci.com/2019/05/fire-shader/\nAvailable on Cineshader here: https://cineshader.com/view/3tcBzH",
            "flags": 0,
            "hasliked": 0,
            "id": "3tcBzH",
            "likes": 44,
            "name": "Perlin noise fire shader",
            "published": 3,
            "tags": [
                "perlinnoise",
                "fire",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "trinketMage",
            "viewed": 12882
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat hermite(float t)\n{\n  return t * t * (3.0 - 2.0 * t);\n}\n\nfloat noise(vec2 co, float frequency)\n{\n  vec2 v = vec2(co.x * frequency, co.y * frequency);\n\n  float ix1 = floor(v.x);\n  float iy1 = floor(v.y);\n  float ix2 = floor(v.x + 1.0);\n  float iy2 = floor(v.y + 1.0);\n\n  float fx = hermite(fract(v.x));\n  float fy = hermite(fract(v.y));\n\n  float fade1 = mix(rand(vec2(ix1, iy1)), rand(vec2(ix2, iy1)), fx);\n  float fade2 = mix(rand(vec2(ix1, iy2)), rand(vec2(ix2, iy2)), fx);\n\n  return mix(fade1, fade2, fy);\n}\n\nfloat pnoise(vec2 co, float freq, int steps, float persistence)\n{\n  float value = 0.0;\n  float ampl = 1.0;\n  float sum = 0.0;\n  for(int i=0 ; i<steps ; i++)\n  {\n    sum += ampl;\n    value += noise(co, freq) * ampl;\n    freq *= 2.0;\n    ampl *= persistence;\n  }\n  return value / sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float gradient = 1.0 - uv.y;\n    float gradientStep = 0.2;\n    \n    vec2 pos = fragCoord.xy / iResolution.x;\n    pos.y -= iTime * 0.3125;\n    \n    vec4 brighterColor = vec4(1.0, 0.65, 0.1, 0.25);\n    vec4 darkerColor = vec4(1.0, 0.0, 0.15, 0.0625);\n    vec4 middleColor = mix(brighterColor, darkerColor, 0.5);\n\n    float noiseTexel = pnoise(pos, 10.0, 5, 0.5);\n    \n    float firstStep = smoothstep(0.0, noiseTexel, gradient);\n    float darkerColorStep = smoothstep(0.0, noiseTexel, gradient - gradientStep);\n    float darkerColorPath = firstStep - darkerColorStep;\n    vec4 color = mix(brighterColor, darkerColor, darkerColorPath);\n\n    float middleColorStep = smoothstep(0.0, noiseTexel, gradient - 0.2 * 2.0);\n    \n    color = mix(color, middleColor, darkerColorStep - middleColorStep);\n    color = mix(vec4(0.0), color, firstStep);\n\tfragColor = color;\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"Fire shader\",\n\t\"description\": \"Fire shader after @febucci\",\n\t\"model\": \"nothing\"\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}