{
    "Shader": {
        "info": {
            "date": "1690824803",
            "description": "Some cosmic smoke",
            "flags": 0,
            "hasliked": 0,
            "id": "cllcDM",
            "likes": 0,
            "name": "N-dimensional Pulsar",
            "published": 3,
            "tags": [
                "smoke"
            ],
            "usePreview": 0,
            "username": "Ares_ekb",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define RANDOM_DETAILS 20.0\n#define SMOKE_WAVES 8\n#define SMOKE_RADIUS 1.0\n#define SMOKE_EDGE_BRIGHTNESS 0.0\n#define SMOKE_CENTER_BRIGHTNESS 0.0\n#define SMOKE_PULSATION 1.2\n#define SMOKE_STABILITY 10.0\n\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat blured_random(vec2 uv, float scale) {\n    vec2 uv2 = fract(uv * scale);\n    float d1 = random(floor(uv * scale));\n    float d2 = random(floor(uv * scale + vec2(1.0, 0.0)));\n    float d3 = random(floor(uv * scale + vec2(0.0, 1.0)));\n    float d4 = random(floor(uv * scale + vec2(1.0, 1.0)));\n    d1 = mix(d1, d3, uv2.y);\n    d2 = mix(d2, d4, uv2.y);\n    return mix(d1, d2, uv2.x);\n}\n\nfloat layered_random(vec2 uv, float scale) {\n    float d = blured_random(uv, scale);\n    d += blured_random(uv, scale * 2.0) * 0.5;\n    d += blured_random(uv, scale * 4.0) * 0.25;\n    d += blured_random(uv, scale * 8.0) * 0.125;\n    d += blured_random(uv, scale * 16.0) * 0.0625;\n    return d / 2.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n\n    // Random circle in the center\n    float d = layered_random(uv, RANDOM_DETAILS)\n            * smoothstep(0.0, 0.3, +0.4 - length(uv));\n\n    for (int i = 0; i < SMOKE_WAVES; i++) {\n        // Add smoke wave\n        float time = iTime + SMOKE_PULSATION * 2.0 * PI * float(i) / float(SMOKE_WAVES);\n        float scale = RANDOM_DETAILS - abs(sin(time / 2.0)) * SMOKE_STABILITY;\n        float d2 = layered_random(uv, scale)\n                 * smoothstep(SMOKE_RADIUS, SMOKE_EDGE_BRIGHTNESS, length(uv))\n                 * smoothstep(-SMOKE_CENTER_BRIGHTNESS, SMOKE_RADIUS, length(uv))\n                 * sin(time);\n        d += smoothstep(0.0, 0.5, d2);\n        // Add rays\n        d *= abs(sin(iTime / 3.0 + 1.5 * uv.x / uv.y))\n           * abs(sin(iTime / 5.0 + 0.5 * uv.y / uv.x));\n    }\n\n    fragColor = vec4(d, d, d, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}