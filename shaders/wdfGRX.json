{
    "Shader": {
        "info": {
            "date": "1546975701",
            "description": "dazzling!\n\ntry uncommenting line 5 for more dazzling!",
            "flags": 0,
            "hasliked": 0,
            "id": "wdfGRX",
            "likes": 10,
            "name": "negative space",
            "published": 3,
            "tags": [
                "space",
                "negative"
            ],
            "usePreview": 0,
            "username": "robin_be",
            "viewed": 595
        },
        "renderpass": [
            {
                "code": "#define SIZE 100.\n#define PI 3.14159265359\n#define PI2 1.570796326795\n\n//#define HORIZONTAL\n\nmat2 rot(float a)\n{\n    return mat2(cos(a),-sin(a),\n                sin(a),cos(a));\n}\nfloat in_out_cubic(float t)\n{\n    t *= 2.;\n    if (t < 1.) return .5*t*t*t;\n    t-=2.;\n    return .5*(t*t*t+2.);\n}\nvoid mainImage(out vec4 fragColor, in vec2 uv)\n{\n    vec2 R2 = iResolution.xy / 2.;\n    float t = fract(iTime / 2.),\n         t3 = step(abs(mod(iTime, 4.) - 2.), 1.),\n         t4 = 1. - t3,\n   halfdiag = sqrt(2.)/2.,\n        pad = .5-halfdiag;\n\n#ifndef HORIZONTAL\n    t = in_out_cubic(t);\n    uv = (uv - R2) * rot(-iTime/5.) + R2;\n#else\n    uv.y += sin(t*PI)*pad*SIZE/2.;\n    uv.x += t*-halfdiag*SIZE;\n    uv.x -= halfdiag*SIZE*floor(iTime/2.);\n#endif\n\n    uv = fract(uv / SIZE + t4 / 2.);\n    uv = (1.-pad-pad-.6/SIZE)*uv+pad;\n    uv = (uv - .5) * rot(t*PI2);\n    uv =\n#ifdef HORIZONTAL\n        // smoothstep makes the transition look\n        //   somewhat less smooth if horizontal\n        step(0.,\n#else\n        smoothstep(0.,2./SIZE,\n#endif\n                              .5-abs(uv));\n\n    fragColor = vec4(1.,.6,1.,1.)*mix(t4,t3,uv.x*uv.y);\n}\n\n\n\n\n\n/* old code for reference\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 fc = (fragCoord.xy - iResolution.xy/2.) * rot(-iTime/5.) + iResolution.xy/2.;\n    float t = in_out_cubic(mod(iTime, 2.) / 2.);\n    float t3 = mod(iTime, 4.);\n    t3 = step(1., t3) * step(t3, 3.);\n    float t4 = 1. - t3;\n    \n    float pad = (1.-sqrt(2.))/2.;\n    vec2 uv = mod(fc + SIZE/2. * t4, vec2(SIZE))/SIZE;\n    uv = (1.-pad-pad)*uv+pad;\n    uv = (uv - .5) * rot(t*PI2) + .5;\n    \n    vec3 incol = vec3(1.,.6,1.);\n    float val = step(0.,uv.x)*step(0.,uv.y)*step(uv.x,1.)*step(uv.y,1.);\n    fragColor = vec4(incol*val*t3+t4*incol-t4*incol*val,1.0);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}