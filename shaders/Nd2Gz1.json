{
    "Shader": {
        "info": {
            "date": "1616957055",
            "description": "Moving Noise (with sound)",
            "flags": 8,
            "hasliked": 0,
            "id": "Nd2Gz1",
            "likes": 1,
            "name": "MovingNoise(+sound)",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "Biverom",
            "viewed": 368
        },
        "renderpass": [
            {
                "code": "//https://www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf\nuint hash(uint state) {\n    state ^= 2747636419u;\n    state *= 2654435769u;\n    state ^= state >> 16;\n    state *= 2654435769u;\n    state ^= state >> 16;\n    state *= 2654435769u;\n    return state;\n}\n\nfloat scaleToRange01(uint state) {\n    return float(state) / 4294967295.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float fact = scaleToRange01(hash(uint(0.1*iTime*iTime*iTime*iTime + (800.0*fragCoord.y+fragCoord.x))));\n\n    vec3 col = vec3(fact,fact,fact);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "uint hash(uint state) {\n    state ^= 2747636419u;\n    state *= 2654435769u;\n    state ^= state >> 16;\n    state *= 2654435769u;\n    state ^= state >> 16;\n    state *= 2654435769u;\n    return state;\n}\n\nfloat scaleToRange01(uint state) {\n    return float(state) / 4294967295.0;\n}\n\nvec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( sin(6.2831*440.0*time*scaleToRange01(hash(uint(0.1*time*time*time*time+2.0)))));\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}