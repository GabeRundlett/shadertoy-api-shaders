{
    "Shader": {
        "info": {
            "date": "1586648717",
            "description": "potato",
            "flags": 0,
            "hasliked": 0,
            "id": "wsBcWD",
            "likes": 11,
            "name": "Day 114",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 365
        },
        "renderpass": [
            {
                "code": "\n#define pi acos(-1.)\n\n#define tau (2.*pi)\n#define pal(a,b,c,d,e) ((a) + (b)*sin((c)*(d) + (e)))\n\n#define rot(x) mat2(cos(x),-sin(x),sin(x),cos(x))\n\nvec3 glow = vec3(0);\n\n\n\n\nfloat map(vec3 p, float t){\n\tfloat d = 10e7;\n\t\n    vec4 q = vec4(p, 1.);\n    \n    float id = floor(p.z);\n    \n    \n    \n    for(float i = 0.; i <0. ; i++){\n    \tq.xyz = abs(q.xyz);\n        q.xy *= rot(0.125*pi + i);\n    \n        q -= 0.1;\n    }\n    \n    \n    float dpp = dot(q.xyz,q.xyz);\n    \n    \n    //    q = q/dpp;\n    \n    vec4 j;\n    \n    //q /= dot(q.xyz,q.xyz);\n    vec3 b = vec3(2.4, 0.6, 1.);\n    \n    for(int i = 0; i <4 ; i++){\n    \tq.xyz = abs(q.xyz);\n        q.xy *= rot(0.25*pi);\n        q.xz *= rot(1.5);\n    \tq.x += 0.1;\n    }\n    \n    for(float i = 0.; i < 10.; i++){\n    \tq.xyz = abs(mod(q.xyz - 0.5*b, b) )- 0.5*b;\n        \n        float dpp = dot(q.xyz,q.xyz);\n        \n        \n        dpp = clamp(dpp, 0. ,1.54);\n        if(i == 2.)\n            j = q;\n        \n        q = q/dpp;\n        if(i == 20.)\n        \tq.xz *= rot(0.7 );\n        \n    }\n    \n    q.xyz *= 1. ;\n    \n    float db = length(j.yx)/q.w - 0.01;\n    \n        \n\tfloat da = length(q.yz)/q.w - 0.02;\n    \n    float sc = 0.5;\n    d = min(db,da);\n    //d = da;\n    d *= 0.5;\n    d += smoothstep(1.,0.,t*.5)*0.7;\n    d = abs(d) + 0.003;\n    \n    //d += exp(-t*4.)*0.7;\n    \n    \n    vec3 c = vec3(1,1.,1.);\n    da *= 0.5;\n    db *= 0.5;\n    da = abs(da) + 0.003;\n    db = abs(db) + 0.003;\n    glow += 0.9/(0.01 + da*da*1500.)*c;\n    glow -= 0.9/(0.01 + db*db*2000.)*c*vec3(0.,0.8,2.);\n    return d;\n}\nvec3 getRd(vec3 ro, vec3 lookAt, vec2 uv){\n\tvec3 dir = normalize(lookAt - ro);\n\tvec3 right = normalize(cross(vec3(0.,1.,0), dir));\n\tvec3 up = normalize(cross( dir, right));\n\treturn normalize(dir + right*uv.x + up*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.9,0.6,0.4);\n\n    vec3 ro = vec3(0);\n    ro.z += iTime;\n    \n    float T = iTime*0.2;\n    ro.xy += vec2(cos(T), sin(T))*3.;\n    \n    vec3 lookAt = vec3(0);\n    \n    lookAt.z = ro.z + 4.;\n    \n    vec3 rd = getRd(ro, lookAt, uv);\n    \n    float d;\n    vec3 p = ro; float t = 0.; bool hit = false;\n    \n    for(int i = 0; i < 60; i++){\n    \td = map(p, t);\n        if(d < 0.001){\n        \thit = true;\n            //break;\n        }\n\t\tt += d;\n    \tp = ro + rd*t;\n    }\n    \n    \n    col -= glow*0.001;\n    \n    col = pow(col, vec3(0.454545));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}