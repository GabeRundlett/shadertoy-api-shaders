{
    "Shader": {
        "info": {
            "date": "1525266084",
            "description": "on windows Angle the floor and ceil are ignored so that the strips look white and ending between integer lines:  \nboth floor(red) and ceil(green) are identical to the fractional version (blue), and not falling on integrer values (red lines).",
            "flags": 0,
            "hasliked": 0,
            "id": "MdtfWN",
            "likes": 3,
            "name": "GLSL Bug floor (Windows)",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1098
        },
        "renderpass": [
            {
                "code": "float f( uint x )\n{\n  //return abs(sin(float(x)));        // <--- no bug with this variant\n    return float(x * 1103515245U ) / float(0xffffffffU); // (small bit from GLIBC integer hash)\n  //return float(x * 215245U ) / float(0x3d0900U);   // <- bug too   (same for int )\n  //return float(x * 215245U ) / float(0x3d08ffU);   // <- no bug !  (same for int )\n}\n\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u/R.y;                                      // normalized coordinates\n\n    float t = U.x*10.,               // <- bug need this (i.e. t not const )\n          V = 4.* f( uint(t) ),                          // rand scaled to [0,4[\n       // V = 4.* f( uint(t) ) + 1e-10*U.x,  // <- no bug with this version !\n          Y = 5.* U.y;                                   // y coord in same units\n    \n    O.r = float( Y < floor(V) );                         // floor and ceil are ignored      \n    O.g = float( Y < ceil(V) );                          //    on windows Angle !!!\n    O.b = float( Y <  (V) );                          \n    \n    if ( mod(u.y, R.y/5.) < 1.) O = vec4(1,0,0,0);       // red integer grid\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}