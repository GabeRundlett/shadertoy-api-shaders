{
    "Shader": {
        "info": {
            "date": "1457213219",
            "description": "This is a modification of Fabrice's clock shader: https://www.shadertoy.com/view/4sVGDd   Jedi Master Fabrice reduced this shader from 345 chars down to 280 chars (less than 2 tweets)!",
            "flags": 0,
            "hasliked": 0,
            "id": "MdK3Wt",
            "likes": 5,
            "name": "2TC Clock - 280 chars",
            "published": 3,
            "tags": [
                "clock",
                "small",
                "short",
                "2tc"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 888
        },
        "renderpass": [
            {
                "code": "// 280 chars\n/**/\n#define N(T,r,l) smoothstep(l,0.,length( clamp(dot(U,R=sin(iDate.w/T+vec2(0,1.57)) ),0.,r) *R-U)) +\nvoid mainImage(out vec4 O, vec2 u) {\n\tvec2 R=iResolution.xy, U = (u+u-R)/R.y;\n    O +=  N( 6875., .6, .04)\n          N( 573.,  .8, .03)\n          N( 9.55,  .7, .01)\n          max(1e2*cos(atan(U.y,U.x)*12.)-99.,0.)*step(abs(length(U)-.8),.1) - O; }\n/**/\n        \n// 280 chars - Fabrice made it UNDER TWO TWEETS with different size needles & Anti_Aliasing!\n/**\n#define N(T,r,l) smoothstep(l,0.,length( clamp(dot(U,R=sin(iDate.w/T+vec2(0,1.57)) ),0.,r) *R-U)) +\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    \n\tvec2 R=iResolution.xy; U = (U+U-R)/R.y;\n    O +=  N( 6875., .6, .04)\n          N( 573.,  .8, .03)\n          N( 9.55,  .7, .01)\n          max(1e2*cos(atan(U.y,U.x)*12.)-99.,0.)*step(abs(length(U)-.8),.1)\n        -O;\n}\n/**/\n\n// 245 chars - smallest version with same length needles\n/*\n#define N(T,l) length( clamp(dot(U,R=sin(iDate.w/T+vec2(0,1.57)) ),0.,.6) *R-U)<l||\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    O-=O;\n\tvec2 R=iResolution.xy; U = (U+U-R)/R.y;\n\n    N( 6875., .04)\n    N( 573.,  .03)\n    N( 9.55,  .01)\n    abs(length(U)-.8)<.1&&cos(atan(U.y,U.x)*12.)>.99? O ++ : O ;  \n}\n*/\n\n// 272 chars - GRAND MASTER FABRICE does it AGAIN! WOW!!\n/*\n#define N(T,w) .4>length( clamp(dot(U,R=sin(t/T+vec2(0,1.57)) ),0.,.6) *R-U)/w? O++ :O\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    O-=O;\n\tvec2 R=iResolution.xy; U = (U+U-R)/R.y;\n    float a = atan(U.y,U.x)*12., t = iDate.w/60.;\n    abs(length(U)-.8)<.1&&cos(a)>.99? O ++ : O ;\n    N( 114.6, .1 );\n    N( 9.55,  .07);\n    N( .159,  .03);      \n}\n*/\n\n// 295 chars - Fabrice made the dials the same length\n/*\n#define N(T,w) l<.6&&.4>length(max(0.,dot(U,d=sin(t/T+vec2(0,1.6)))/dot(d,d))*d-U)/w? O++ :O\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    O-=O;\n\tvec2 R=iResolution.xy,d;\n    float,l = length(U = (U+U-R)/R.y), a = atan(U.y,U.x)*12., t = iDate.w/60.;\n    abs(l-.8)<.1 ? O += cos(4.*a)+cos(a)-1. : O ;\n    N( 114.6, .1 );\n    N( 9.55,  .07);\n    N( .159,  .03);      \n}\n*/\n\n// 315 chars - Fabrice's latest version without -AliasinAntig\n/*\n#define N(T,r,w) d=sin(t/T+vec2(0,1.6)); l<r&&.4>length(clamp(dot(U,d)/dot(d,d),0.,1.)*d-U)/w? O-=O++ :O;\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    O-=O;\n\tvec2 R=iResolution.xy,d;\n    float,l = length(U = (U+U-R)/R.y), a = atan(U.y,U.x)*12., t = iDate.w/60.;\n    abs(l-.8)<.1 ? O += cos(4.*a)+cos(a)-1. : O ;\n\tN( 114.6, .6, .1 );\n\tN( 9.55,  .8, .07);\n\tN( .159,  .7, .03);     \n}\n*/\n\n// 343 chars - Fabrice's version + Anti-Aliasing\n/*\n#define z(b) length( clamp( dot(U,b)/dot(b,b), 0.,1.) *b - U )\n#define N(t,r,w)d=sin(6.283*t+vec2(0,1.6)); a = smoothstep(.4,e,z(d)/w); O = l<r ? 1.-a+a*O :O;\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    O-=O;\n\tvec2 R=iResolution.xy,d;\n    float e=.6,s=60.,l = length(U = (U+U-R)/R.y), a = atan(U.y,U.x)*12., t = iDate.w/s;\n    abs(l-.8)<.1 ? O += cos(4.*a)+cos(a)-1. : O ;\n    N( t/s/12., e, .1);\n    N( t/s,    .8, .07);\n    N( t,       e, .03);      \n}\n*/\n\n// 345 chars - Size optimization help from Dave & Fabrice:\n/*\n#define z(b) length( clamp( dot(U,b)/dot(b,b), 0.,1.) *b - U )\n#define N(t,r)d=sin(6.283*t+vec2(0,1.6)); a = step(e,z(d)/(r*.1)); O = l<r ? 1.-a+a*O :O;\n\nvoid mainImage( out vec4 O,vec2 U )\n{\n    O-=O;\n\tvec2 R=iResolution.xy,d;\n    float e=.6,s=60.,l = length(U = (U+U-R)/R.y), a = atan(U.y,U.x), t = iDate.w/s;\n    if (abs(l-.8)<.1 && cos(12.*a)>e) O += cos(48.*a);\n    N( t/s/12., e);\n    N( t/s,    .8);\n    N( t,       e);      \n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}