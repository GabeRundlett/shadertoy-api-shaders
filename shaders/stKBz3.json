{
    "Shader": {
        "info": {
            "date": "1665154431",
            "description": "trying in recreating https://youtu.be/Nv0aFaqjirg?t=872",
            "flags": 0,
            "hasliked": 0,
            "id": "stKBz3",
            "likes": 3,
            "name": "noise spectrometer",
            "published": 3,
            "tags": [
                "noise",
                "spectrmeter"
            ],
            "usePreview": 0,
            "username": "Artemis152",
            "viewed": 149
        },
        "renderpass": [
            {
                "code": "float rand(vec2 n)\n{\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n  float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n  vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat triangle(float x)\n{\n    return abs(fract(x) - .5) * 2.;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y = uv.y * 2. - 1.;\n\n    // Time varying pixel color\n    vec3 col = vec3(1.);\n    \n    float i = uv.x*180.;\n    \n    float t = texelFetch( iChannel0, ivec2(i,1), 0 ).x;\n    \n    float s = smoothstep(0., 1., triangle(i) + .3);\n    //s *= noise((floor(i+.5)));\n    s *= smoothstep(0.1, .8, noise(vec2(uv.y*20., floor(i+.5)) + rand(t) * 1200.));\n    s *= s;\n    //s *= s;\n    \n    s *= smoothstep(.3, .4, texelFetch( iChannel0, ivec2(i,0), 0 ).x - abs(uv.y));\n    \n    col = vec3(s);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 20,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}