{
    "Shader": {
        "info": {
            "date": "1709313539",
            "description": "Photo Slideshow",
            "flags": 0,
            "hasliked": 0,
            "id": "DtSXzW",
            "likes": 1,
            "name": "Photo Slideshow",
            "published": 3,
            "tags": [
                "photo",
                "slideshow"
            ],
            "usePreview": 0,
            "username": "1095",
            "viewed": 140
        },
        "renderpass": [
            {
                "code": "// SPDX-License-Identifier: Unlicense\n// This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// MODE:\n//     0 - Instant\n//     1 - Fade\n//     2 - Horizontal Slide (right)\n//     3 - Horizontal Slide (left)\n//     4 - Vertical Slide   (up)\n//     5 - Vertical Slide   (down)\n\n#define MODE       1\n#define IMG_NUMS   4\n#define SPEED      .5\n#define PI         3.141592653589793\n\nvec4 zero(vec2 uv, sampler2D tex) {\n    return uv.x < 0. || uv.y < 0. || 1. < uv.x || 1. < uv.y\n        ? vec4(0.)\n        : texture(tex, uv);\n}\n\nvec4 getPhoto(vec2 uv, float id) {\n    if (id == 0.) return zero(uv, iChannel0);\n    if (id == 1.) return zero(uv, iChannel1);\n    if (id == 2.) return zero(uv, iChannel2);\n    if (id == 3.) return zero(uv, iChannel3);\n}\n\nvec4 Instant(vec2 uv, float t) {\n    float it = floor(t);\n    float id = mod(it, float(IMG_NUMS));\n    return getPhoto(uv, id);\n}\n\nvec4 Fade(vec2 uv, float t) {\n    float it = floor(t);\n    float grad = .5+.5*sin((fract(t)-.5)*PI);\n\n    float currID = mod(   it, float(IMG_NUMS));\n    float nextID = mod(it+1., float(IMG_NUMS));\n    vec4 currImg = getPhoto(uv, currID);\n    vec4 nextImg = getPhoto(uv, nextID);\n\n    return mix(currImg, nextImg, grad);\n}\n\nvec4 HorSlide(vec2 uv, float t, float dir) {\n    float it = floor(t);\n    float grad = .5+.5*sin((fract(t)-.5)*PI);\n\n    float currID = mod(   it, float(IMG_NUMS));\n    float nextID = mod(it+1., float(IMG_NUMS));\n    vec4 currImg = getPhoto(uv+dir*vec2(   -grad, 0. ), currID);\n    vec4 nextImg = getPhoto(uv+dir*vec2( 1.-grad, 0. ), nextID);\n\n    return currImg+nextImg;\n}\n\nvec4 VerSlide(vec2 uv, float t, float dir) {\n    float it = floor(t);\n    float grad = .5+.5*sin((fract(t)-.5)*PI);\n\n    float currID = mod(   it, float(IMG_NUMS));\n    float nextID = mod(it+1., float(IMG_NUMS));\n    vec4 currImg = getPhoto(uv+dir*vec2( 0.,   -grad ), currID);\n    vec4 nextImg = getPhoto(uv+dir*vec2( 0., 1.-grad ), nextID);\n\n    return currImg+nextImg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime*SPEED;\n\n    switch (MODE) {\n        case 0: fragColor = Instant(uv, t);       break;\n        case 1: fragColor = Fade(uv, t);          break;\n        case 2: fragColor = HorSlide(uv, t,  1.); break;\n        case 3: fragColor = HorSlide(uv, t, -1.); break;\n        case 4: fragColor = VerSlide(uv, t,  1.); break;\n        case 5: fragColor = VerSlide(uv, t, -1.); break;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}