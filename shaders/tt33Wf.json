{
    "Shader": {
        "info": {
            "date": "1577732500",
            "description": "its psp waves",
            "flags": 0,
            "hasliked": 0,
            "id": "tt33Wf",
            "likes": 3,
            "name": "PSP Waves",
            "published": 3,
            "tags": [
                "waves",
                "psp",
                "sony",
                "gaming"
            ],
            "usePreview": 0,
            "username": "jackwitherell",
            "viewed": 662
        },
        "renderpass": [
            {
                "code": "float wave(vec2 uv, float inv_size, float period, float inv_amplitude, float x_offset, float y_offset, float flip, float speed){\n    float wv = ((uv.y-y_offset)*inv_size)-(sin(((x_offset+uv.x)/period)+(speed*iTime))/inv_amplitude);\n    if(abs(wv)>0.4){\n        wv=0.0;\n    }\n    return flip*wv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //background color\n    vec3 col = vec3(0.0,0.0,0.3+((uv.x+uv.y)/3.0));\n    //waves\n    //(uv, inverted size, period, inverted amplitude, x, y offset, flip, speed)\n\tcol+=clamp(wave(uv,4.0,1.0,3.0,0.0,0.4,1.0,-0.1),0.0,0.4);\n    col+=clamp(wave(uv,4.0,0.4,1.0,0.0,0.5,1.0,0.1),0.0,0.4);\n    \n\tcol+=clamp(wave(uv,4.0,0.2,6.0,3.0,0.3,-1.0,0.13),0.0,0.4);\n    col+=clamp(wave(uv,4.0,0.15,7.0,4.0,0.4,-1.0,-0.18),0.0,0.4);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}