{
    "Shader": {
        "info": {
            "date": "1618850045",
            "description": "yeet",
            "flags": 34,
            "hasliked": 0,
            "id": "fsfSzM",
            "likes": 2,
            "name": "Long-Exposure Camera",
            "published": 3,
            "tags": [
                "camera",
                "webcam"
            ],
            "usePreview": 0,
            "username": "Zi7ar21",
            "viewed": 619
        },
        "renderpass": [
            {
                "code": "// ####### Long-Exposure Camera #######\n// Made by Zi7ar21 on April 19th, 2021\n// Last Updated:\n// April 19th, 2021 at 10:10 Mountain Standard Time\n\n// If you found this anywhere except Shadertoy, the original and possibly updated version can be found at:\n// https://www.shadertoy.com/view/fsfSzM\n\n// Image Preview\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    // Get the Image\n    vec4 texel = texel0;\n\n    // Convert Linear to sRGB\n    vec3 color = pow(texel.rgb, vec3(1.0/gamma));\n\n    // Output the Image Preview\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// ##### CAMERA INPUT #####\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    // Get the Incoming Frame from the Camera\n    vec3 color = texture(iChannel0, gl_FragCoord.xy/resolution.xy).rgb;\n\n    // Convert sRGB to Linear\n    color = pow(color, vec3(gamma));\n\n    // Ensure the Frame is within Range\n    color = clamp(color, 0.0, 1.0);\n\n    // Output the New Frame\n    fragColor = vec4(color*cameraBrightness, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// ##### IMAGE PROCESSING #####\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    // Get the Previous Frame\n    fragColor = iFrame != 0 ? texel0 : vec4(0.0);\n\n    // Get the Frame from the Camera Buffer\n    vec4 texel = texel1;\n\n    // Output the New Frame\n    fragColor += vec4(texel.rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// ##### PARAMETERS #####\n#define gamma 2.2\n\n// Camera Adjustments\n// These are performed to the input, not the stack\n#define cameraBrightness 1.0\n\n// Processed Adjustments\n// These are performed to the stack, not the input\n#define postfxBrightness 1.0\n\n// ##### CONSTANTS #####\n#define resolution iResolution\n\n// Sample Channels\n#define texel0 texelFetch(iChannel0, ivec2(gl_FragCoord.xy), 0)\n#define texel1 texelFetch(iChannel1, ivec2(gl_FragCoord.xy), 0)\n#define texel2 texelFetch(iChannel2, ivec2(gl_FragCoord.xy), 0)\n#define texel3 texelFetch(iChannel3, ivec2(gl_FragCoord.xy), 0)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// ##### IMAGE EXPORT #####\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    // Get the Frame\n    vec4 texel = texel0;\n\n    // Compute the Final Image\n    vec3 color = texel.a != 0.0 ? texel.rgb/texel.a : texel.rgb;\n\n    // Output the Rendered Image\n    fragColor = vec4(color*postfxBrightness, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}