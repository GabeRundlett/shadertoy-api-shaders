{
    "Shader": {
        "info": {
            "date": "1596786210",
            "description": "yeah",
            "flags": 0,
            "hasliked": 0,
            "id": "tllBW4",
            "likes": 0,
            "name": "theyaremanycolors 3 - red deep",
            "published": 3,
            "tags": [
                "theyaremanycolors"
            ],
            "usePreview": 0,
            "username": "thefox231",
            "viewed": 192
        },
        "renderpass": [
            {
                "code": "#define alpha 0.0\n#define beta 10.0\n\n#define squareScale 3.0\n#define fisheye_amount -0.7\n\nvec2 rotateVec(vec2 v, float a){\n  float s = sin(a);\n  float c = cos(a);\n  mat2 m = mat2(c, -s, s, c);\n  return m * (v - .5) + .5;\n}\n\nfloat spiral(vec2 m, float t) {\n\tfloat r = length(m);\n\tfloat a = atan(m.y, m.x);\n\tfloat v = sin(50.*(sqrt(r)-0.02*a-.3*t));\n\treturn clamp(v,0.,1.);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // fisheye\n\n    uv -= 0.5;\n    uv *= 1.0 - fisheye_amount / 2.0;\n\n    float r = sqrt(dot(uv,uv));\n    uv *= 1.0 + r * fisheye_amount;\n    uv += 0.5;\n\n    vec2 res = iResolution.xy;\n    uv = clamp( uv, 1.0 / res, (res - 1.0) / res );\n\n    // fisheye end\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= 2.0;\n    uv += 0.5;\n    uv = abs(uv);\n    \n    vec2 uvOrig = uv;\n    \n    uv = rotateVec(uv, iTime * 3.0);\n    \n    vec3 col = vec3(0.3, 0.3, 0.3);\n    col = spiral(uv + .4 + sin(iTime * .5 + uv.y * 5.) * (.3 + sin(iTime) * .1), iTime * 30.0) * vec3(1.0, 0.0, 0.0);\n    \n    col.r += 0.1 * round(fract(rotateVec(uvOrig, iTime * 0.05) * squareScale + iTime * 45.5)).x - round(fract(rotateVec(uvOrig, iTime * 0.05) * squareScale + squareScale/2.0 + iTime * 13.5)).y;\n    col.r -= 0.1 * round(fract(rotateVec(uvOrig, iTime * 0.2 + 25.0) * squareScale + iTime * 13.5)).y - round(fract(rotateVec(uvOrig, iTime * 0.2 + 25.0) * squareScale + squareScale/2.0 + iTime * 33.5)).x;\n    col.r += 0.1 * round(fract(rotateVec(uvOrig, iTime * 0.2 + 13.0) * squareScale + iTime * 24.5)).y - round(fract(rotateVec(uvOrig, iTime * 0.2 + 25.0) * squareScale + squareScale/2.0 + iTime * 13.5)).x;\n    col.r -= 0.1 * round(fract(rotateVec(uvOrig, iTime * 0.2 + 18.0) * squareScale + iTime * 73.5)).y - round(fract(rotateVec(uvOrig, iTime * 0.2 + 25.0) * squareScale + squareScale/2.0 + iTime * 12.5)).x;\n    \n    fragColor = vec4(col + 0.1, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}