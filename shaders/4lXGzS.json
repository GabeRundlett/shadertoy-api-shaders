{
    "Shader": {
        "info": {
            "date": "1422738180",
            "description": "shadertoy version of pixelate shader from qt540 sample \"qmlvideofx\" integrated in my splitter effect framework\nMouse x => control divider\nMouse Y => control granularity",
            "flags": 0,
            "hasliked": 0,
            "id": "4lXGzS",
            "likes": 27,
            "name": "Video Pixelate",
            "published": 3,
            "tags": [
                "video",
                "pixelate"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 3972
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Splitter framework\n// put tranform effect in effect function\n// put source to tranform in bg function\n// getUV is the func for the define the coord system\n// global yVar is the var controled by y mouse axis from range 0. to 1.\n// s => iResolution.xy\n// g => fragCoord.xy\n// m => iMouse.xy\n/////VARS//////////////\nfloat yVar;\nvec2 s,g,m;\n///////////////////////\n\n//your funcs here if you want\n\n///////////////////////\n// source to transform\nvec3 bg(vec2 uv)\n{\n    return texture(iChannel0, uv).rgg;\n}\n\n///////////////////////\n// transform effect\nvec3 effect(vec2 uv, vec3 col)\n{\n    float granularity = yVar*20.+10.;\n    if (granularity > 0.0) \n    {\n        float dx = granularity / s.x;\n        float dy = granularity / s.y;\n        uv = vec2(dx*(floor(uv.x/dx) + 0.5),\n                  dy*(floor(uv.y/dy) + 0.5));\n        return bg(uv);\n    }\n    return col;\n}\n\n///////////////////////\n// screen coord system\nvec2 getUV()\n{\n    return g / s; \n}\n\n///////////////////////\n/////do not modify////\n///////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   \ts = iResolution.xy;\n    g = fragCoord.xy;\n    m = iMouse.x==0.?m = s/2.:iMouse.xy;\n    yVar = m.y/s.y;\n   \tvec2 uv = getUV(); \n    vec3 tex = bg(uv);\n    vec3 col = g.x<m.x?effect(uv,tex):tex;\n   \tcol = mix( col, vec3(0.), 1.-smoothstep( 1., 2., abs(m.x-g.x) ) );    \n\tfragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}