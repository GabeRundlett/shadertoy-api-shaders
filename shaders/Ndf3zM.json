{
    "Shader": {
        "info": {
            "date": "1615653143",
            "description": "Formula visualization; coordinates transformed such that 0..1 -> 0..1  and  1..inf -> 1..2",
            "flags": 0,
            "hasliked": 0,
            "id": "Ndf3zM",
            "likes": 2,
            "name": "x^y - y^x",
            "published": 3,
            "tags": [
                "math"
            ],
            "usePreview": 0,
            "username": "sig",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "float f(float x) {\n    return step(1., x) / abs(2. - x) + (1. - step(1., x)) * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float x = f(uv.x * 4.);\n    float y = f(uv.y * 4.);\n    \n    float z = pow(x, y) - pow(y, x);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + z*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}