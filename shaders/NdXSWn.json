{
    "Shader": {
        "info": {
            "date": "1618433488",
            "description": "I wish I'd seen the geometric intuition quicker.",
            "flags": 0,
            "hasliked": 0,
            "id": "NdXSWn",
            "likes": 6,
            "name": "Circle Tangents Through Point",
            "published": 3,
            "tags": [
                "math",
                "circle",
                "geometry",
                "tangents"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "// https://www.desmos.com/calculator/dx2vn81dpw\n\n// Drawing utilities\n#define drawSDF(dist, col) color = mix(color, col, smoothstep(unit, 0.0, dist))\n\n// SDFs\nfloat sdDisc(in vec2 p, in vec2 o, in float r) {\n    return length(p - o) - r;\n}\n\nfloat sdInfLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    return length(pa - ba * dot(pa, ba) / dot(ba, ba));\n}\n\nfloat sdLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    return length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = 0.5 * iResolution.xy;\n\n    vec4 mouse = (vec4(iMouse.xy, abs(iMouse.zw)) - center.xyxy) / iResolution.y * 4.0;\n    vec2 uv = (fragCoord - center) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    // Default before interaction\n    if (ivec2(iMouse.xy) == ivec2(0)) {\n        mouse.xy = vec2(sin(iTime), 1.0) * cos(iTime);\n        mouse.x += 2.0;\n    }\n\n    // Radius and angles\n    float r = 1.0;\n    vec2 a = atan(mouse.y, mouse.x) + vec2(1.0, -1.0) * acos(r / length(mouse.xy));\n\n    // For just the points, this can be simplified (likely no sin/cos, just 1 or 2 sqrts)\n    vec2 t1 = vec2(cos(a.x), sin(a.x)) * r;\n    vec2 t2 = vec2(cos(a.y), sin(a.y)) * r;\n\n    // Circle\n    drawSDF(abs(sdDisc(uv, vec2(0.0), r)), vec3(1.0, 0.0, 0.0));\n\n    // Right triangle 1\n    drawSDF(min(sdLine(uv, vec2(0.0), mouse.xy),\n            min(sdLine(uv, mouse.xy, t1),\n                sdLine(uv, t1, vec2(0.0)))), vec3(0.0, 0.0, 1.0));\n\n    // Right triangle 2\n    drawSDF(min(sdLine(uv, vec2(0.0), mouse.xy),\n            min(sdLine(uv, mouse.xy, t2),\n                sdLine(uv, t2, vec2(0.0)))), vec3(0.0, 0.0, 1.0));\n\n    // Tangents\n    drawSDF(sdInfLine(uv, mouse.xy, t1), vec3(1.0, 0.8, 0.0));\n    drawSDF(sdInfLine(uv, mouse.xy, t2), vec3(1.0, 0.8, 0.0));\n\n    // Point\n    drawSDF(sdDisc(uv, mouse.xy, 0.05), vec3(1.0));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}