{
    "Shader": {
        "info": {
            "date": "1660458033",
            "description": "More simple patterns",
            "flags": 8,
            "hasliked": 0,
            "id": "ftdyDS",
            "likes": 10,
            "name": "Iijtunnel music remix 3",
            "published": 3,
            "tags": [
                "music",
                "fireworks",
                "iij"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 464
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n  vec2 U =( 2.*fragCoord-iResolution.xy)/iResolution.y;\n\n  float b=sqrt(length(U)),num=128.;\n  \n  U=fract(vec2(b,abs(atan(U.x,U.y))));\n  num /=\n      1. + mod(U.x,2.)\n      \n      //WOW!\n      //1. + mod(U.x*4.,1.)\n  \n  ; //\"fireworks\" effect\n\n  U=floor(mod(vec2(U.x-iTime/4.,U.y)*num,vec2(num)));\n\n  float d=b*mod((U.x*U.y),U.x)/num;\n\n  fragColor=vec4(fract(d*U.x),fract(d*U.y),d,1.);\n    \n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//double spaced so it looks like more work\n\nfloat song(float t, float d){\n\n  return pow(2.,mod(t*t*(floor(t/(d))),d)/3.+6.);\n\n}\n\nvec2 mainSound(int samp, float time){\n\n  time += floor(time*2.)/2.;\n  \n  float t=(time+10.)*4.,a=sqrt(1.-sqrt(fract(t)))*.2,\n\n  m=64.,\n  \n  nb = 0.,\n  \n  z1=.125;\n  \n  for(int i = 0; i < 4;i++){\n  \n      z1 *= 2.;\n  \n      nb = max(nb/z1,song(floor(t*z1/floor(1.+mod(t*2.,2.))),m/4.));\n      \n      //this song is even weirder\n      //nb = (nb+max(nb/z1,song(floor(t*z1/floor(1.+mod(t*2.,2.))),m/4.)))/2.;\n\n  }\n  nb *= time;\n  return 64.*abs(.5-vec2(fract(nb*.998)\n\n   ,fract(nb)))*a;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}