{
    "Shader": {
        "info": {
            "date": "1520980458",
            "description": "just cos",
            "flags": 0,
            "hasliked": 0,
            "id": "lsGczh",
            "likes": 2,
            "name": "silly creative coding circles",
            "published": 3,
            "tags": [
                "shaderclub"
            ],
            "usePreview": 0,
            "username": "jrsa",
            "viewed": 577
        },
        "renderpass": [
            {
                "code": "float oval(vec2 center, vec2 p) {\n\treturn distance(center, p);\n}\n\nfloat channel(vec2 c, vec2 p, float s1, float s2) {\n\treturn smoothstep(  oval(c, p), s1, s2);\n}\n\n\n// from https://github.com/msfeldstein/glsl-map\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nvec2 path(float t, float phi) {\n    float bound = 0.333;\n    return vec2( map(sin(iTime + phi), -bound, bound, 0.1, 0.9)\n               , map(cos(iTime + phi), -bound, bound, 0.1, 0.9));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5* iResolution.xy ) / iResolution.y;\n\n    float q = distance(uv, vec2(0.5, 0.5));\n\n    vec3 col = (vec3( channel( path(iTime, 0.33) * cos(q * 5.0), uv, q, q + cos(iTime)), \n                     channel( path(iTime, 0.5) * cos(q * 4.0) + 0.5, uv, q, q + cos(iTime * 0.73)), \n                     channel( path(iTime, 0.6) * cos(q * 3.0)+ 0.7, uv, q, q + cos(iTime * 0.34))) / 2.0);\n    \n    col += (vec3( channel( path(iTime, 0.1) * cos(q * 1.1), uv, q, q + cos(iTime)), \n                 channel( path(iTime, 0.2) * cos(q * 1.8), uv, q, q + cos(iTime * 0.73)), \n                 channel( path(iTime, 0.9) * cos(q * 0.9), uv, q, q + cos(iTime * 0.34))) / 2.0);\n    \n    fragColor = sqrt(mix(texture(iChannel0, uv + ((col.rb - 0.5) / 5.0)), vec4(col, 1.0), (length(col + 0.5))));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}