{
    "Shader": {
        "info": {
            "date": "1717795507",
            "description": "Musical LED Cube...",
            "flags": 0,
            "hasliked": 0,
            "id": "lXy3Ry",
            "likes": 2,
            "name": "Musical LED Cube",
            "published": 3,
            "tags": [
                "3d",
                "glow",
                "tweet",
                "golf"
            ],
            "usePreview": 0,
            "username": "orblivius",
            "viewed": 191
        },
        "renderpass": [
            {
                "code": "\n/**\n **   Musical LED Cube by 0rblivius \n **   Been wanting to make this since the day I discovered\n **   the site, finally gotten to it... ;p\n **/\n \n const float side = 5.; // points per side\n \n void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(0,0,0,1);\n    vec4 O = vec4(0,0,0,1);\n    vec3 m = vec3(iMouse.xy/iResolution.xy,iMouse.z);\n   \n    float ss=0.,s=0.,st=1./side;\n    vec3 p, r=iResolution, t=iTime*.3+vec3(0,11,33);\n\n    for(float z=0.; z<1.; z+=st) {\n    for(float y=0.; y<1.; y+=st) {\n    for(float x=0.; x<1.; x+=st) {\n        vec3 xyz = vec3(x,y,z);\n        s = 8.*texture(iChannel0, vec2((x+0.01)*(y+0.01)*(z+0.01),.25)).r;\n        ss = (s * sin((x - .5) * (y - .5) * (z - .5)) * 0.001);\n        p = xyz + vec3(ss - 2./side);\n        p.yx*=mat2(cos(t.xyzx));\n        p.zy*=mat2(sin(t.xyzx+iTime*.5));\n        float d = length((2.*fragCoord-r.xy)/r.x+p.xy/(1.25+p.z));\n     \n        vec3 c = (xyz * s) / (350. * d);\n        c = c * pow(c,vec3(2.*side/s));\n        O.rgb+=c;\n        }\n      }\n    } \n    \n\tfragColor = O;\n  \n  \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}