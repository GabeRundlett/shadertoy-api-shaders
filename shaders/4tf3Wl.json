{
    "Shader": {
        "info": {
            "date": "1425969337",
            "description": "left to right: std-dev of the average of N random values,\nN going from 0 to 400 from left to right.\n-> remaining fluctuations of the estimator = 1/sqrt(N) of initial fluctuations.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tf3Wl",
            "likes": 1,
            "name": "Central Limit Theorem",
            "published": 3,
            "tags": [
                "stats"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1466
        },
        "renderpass": [
            {
                "code": "#define N 100\n#define PI 3.1415927\nfloat noise(vec2 p) {\n    float v = 1234.5*p.x-34.17*p.y+123.4;\n    return -1.+2.*fract(1000.*sin(v));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float s=0.;\n    float n = (uv.y<.8) ? uv.x*400. : 1.;\n    for(int i=0; i<N; i++)\n        if (float(i)<=n) s += noise(uv+float(i));\n\tfragColor = vec4(.5+1.*s/n);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}