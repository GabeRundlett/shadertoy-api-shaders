{
    "Shader": {
        "info": {
            "date": "1397088438",
            "description": "Radial meter",
            "flags": 0,
            "hasliked": 0,
            "id": "4dXSz4",
            "likes": 0,
            "name": "radial progress",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Impossible",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "#define STARTANGLE ( (radians( 0.0 ) ) )\n#define ENDANGLE\t( (radians( 360.0 ) ) )\n#define RADIUS\t\t( 200.0 )\n#define INNERRADIUS\t( 100.0 )\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n\t\n\tvec2 center = iResolution.xy / 2.0;\n\tvec2 pc = uv - center;\n\t\t\n\tfloat ln = length( pc );\n\tvec2 dir = pc / ln;\n\t\n\tfloat angleVal = atan( dir.y, dir.x );\n\t\n\tfloat progress = -mod( iTime * 50.0 ,360.0);\n\t\t\n\tfloat end = radians( 180.0);\n\tfloat start = radians(progress+180.0);\n\n\t\t\n\tif ( angleVal >= start && angleVal <= end && ln <= RADIUS && ln >= INNERRADIUS )\n\t{\n\t\tfloat aa = abs(ln - (( RADIUS - INNERRADIUS)*0.5 + INNERRADIUS))/(RADIUS-INNERRADIUS);\n\t\tfloat res = smoothstep(1.0,0.0,aa * 30.0 );\n\t\tfragColor = vec4(res);\n\t}\n\telse\n\t\tfragColor = vec4(0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}