{
    "Shader": {
        "info": {
            "date": "1665760635",
            "description": "Messing with shaders again, this time I made some simple edge detection.",
            "flags": 34,
            "hasliked": 0,
            "id": "cslGzN",
            "likes": 1,
            "name": "ez edge detection",
            "published": 3,
            "tags": [
                "edge"
            ],
            "usePreview": 0,
            "username": "Oman395",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    bool backgroundColor = false;\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    if(col[0] > 0.5) fragColor = vec4(1,1,1,1);\n    else if(!backgroundColor) fragColor = vec4(0,0,0,0);\n    else fragColor = texture(iChannel1, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    bool isEdge;\n    for(int x = -1; x < 2; x++) {\n        if(isEdge) break;\n        for(int y = -1; y < 2; y++) {\n            vec4 oCol = texture(iChannel0, (fragCoord + vec2(x,y)) / iResolution.xy);\n            vec4 deltaVec = col - oCol;\n            float delta = abs(deltaVec[0]) + abs(deltaVec[1]) + abs(deltaVec[2]) + abs(deltaVec[3]);\n            if(delta > 0.125) {\n                isEdge = true;\n                break;\n            }\n        }\n    }\n    if(isEdge) fragColor = vec4(1,1,1,1);\n    else fragColor = vec4(0,0,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    int cnt = 0;\n    for(int i = -2; i < 3; i++) {\n        for(int j = -2; j < 3; j++) {\n            vec4 col = texture(iChannel0, (fragCoord + vec2(i,j)) / iResolution.xy);\n            if(col[0] > 0.5) cnt++;\n        }\n    }\n    if(cnt > 15 && cnt < 25) fragColor = texture(iChannel0, uv);\n    else fragColor = vec4(0,0,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}