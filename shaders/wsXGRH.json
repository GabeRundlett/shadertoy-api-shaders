{
    "Shader": {
        "info": {
            "date": "1544891999",
            "description": "tj circle draw",
            "flags": 0,
            "hasliked": 0,
            "id": "wsXGRH",
            "likes": 0,
            "name": "tj circle draw",
            "published": 3,
            "tags": [
                "circledrw"
            ],
            "usePreview": 0,
            "username": "TownKing",
            "viewed": 435
        },
        "renderpass": [
            {
                "code": "#define HASHSCALE1 .1031\n\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n\tfloat mWidth = min(iResolution.x,iResolution.y);\n    float pixle = 1.0/mWidth;\n    vec2 uv=fragCoord*pixle;\n    vec2 center = vec2(0.5,0.65)*iResolution.xy*pixle;\n    vec2 moveP=uv - center;\n    float len = length(moveP);\n    float ang =(atan(uv.y/uv.x)/3.1416+1.0)/2.0;\n    float circle = 0.0;\n    float vR=0.0;\n    vec3 rgb=vec3(0.0);\n    for(int i = 0; i < 1000; i+=1){\n   \t\tfloat now = float(i)/100.0;\n        float  dotAng = now*3.1415*2.0;\n        float virRad = now*(1.0+vR);\n        \n         if (i > 800){\n            vR=0.0;\n\t\tbreak;\n        }\n        \n        if (i >=450){\n        \tdotAng = 4.50*3.1415*2.0;\n            vR+=0.025;\n        }\n        float x = center.x+pow(virRad,0.9)/13.0*sin(dotAng);\n        float y = center.y+pow(virRad,0.9)/13.0*cos(dotAng);\n        float dotLen = length(vec2(x,y)-uv);\n        circle=smoothstep(0.03,0.0375,dotLen)-smoothstep(0.0375,0.04,dotLen);\n         if(i>600){\n            rgb=vec3(sin(dotLen*dotAng*iTime),cos(dotLen*dotAng*iTime),max(sin(dotLen*dotAng*iTime),cos(dotLen*dotAng*iTime)));\n\t\t\tcircle=0.0;\n            break;\n            }\n        \n        if(circle!=0.0){\n         rgb=vec3(hash12(vec2(virRad,virRad)),hash12(vec2(x,y)),hash12(vec2(uv.x,uv.y)));\n        //rgb=vec3(fract(sin(len*dotAng)),fract(cos(len*dotAng)),fract(max(sin(len*dotAng),cos(len*dotAng))));\n            if(i>600){\n            rgb=vec3(sin(dotLen*dotAng*iTime),cos(dotLen*dotAng*iTime),max(sin(dotLen*dotAng*iTime),cos(dotLen*dotAng*iTime)));\n\n            }\n\t\tbreak;\n        }\n       \n        if(float(i)>iTime*10.0){\n           \n        break;\n        }\n       \n    }\n    \n    // Time varying pixel color\n    vec3 col =  rgb*circle;\n        //0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}