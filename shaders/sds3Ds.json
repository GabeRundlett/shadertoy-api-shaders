{
    "Shader": {
        "info": {
            "date": "1616777480",
            "description": "practice2020",
            "flags": 0,
            "hasliked": 0,
            "id": "sds3Ds",
            "likes": 0,
            "name": "p6 voronoy pattern",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "DEMERCY",
            "viewed": 243
        },
        "renderpass": [
            {
                "code": "vec2 N22(vec2 p ){\n    vec3 a = fract(p.xyx*vec3(123.34,234.34,345.65));\n    a+= dot(a,a+34.45);\n    return fract(vec2(a.x*a.y,a.y*a.z));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    float m = 0.;\n    float t = iTime*4.;\n    \n    float minDist =3.;\n    vec3 col = vec3(0);\n    \n    if(false){\n        for(float i = 0.;i<50.;i++){\n            vec2 n = N22(vec2(i));\n            vec2 p = sin(n*t);\n            \n            float d = length(uv - p);\n            m += smoothstep(.02,.01,d);\n            if(d < minDist){\n                minDist = d;\n            }\n        }\n    }else{\n       uv *= 5.;\n       vec2 gv = fract(uv) - .5;\n       vec2 id = floor(uv);\n       vec2 cid = vec2(0);\n       //col.rg = abs(id*.1);\n       \n       for(int y = -1;y<= 1;y++){\n            for(int x = -1;x<= 1;x++){\n               vec2 offs = vec2(x,y);\n               \n               vec2 n =  N22(id + offs);\n               vec2 p = offs + sin(n*t)*.5;\n               float d = length(gv-p);\n               \n               //p-= gv;                  //Manhattan Dist\n               //d = length(p);\n               //d = abs(p.x)+abs(p.y);\n               if(minDist > d){\n                   minDist = d;\n                   cid = abs(id+offs);\n                   //col   = vec3(cid,.5);\n               }\n            }\n            \n        }\n       //col   = vec3(cid*.1,minDist); \n       col = vec3(1.,minDist,minDist);\n    }\n    \n    \n    \n   \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}