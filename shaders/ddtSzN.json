{
    "Shader": {
        "info": {
            "date": "1679504958",
            "description": "some jiggly wiggly wobbly colorful blobs",
            "flags": 0,
            "hasliked": 0,
            "id": "ddtSzN",
            "likes": 5,
            "name": "JiggleWiggleWobbleBlobbls",
            "published": 3,
            "tags": [
                "blobs",
                "wobble",
                "wiggle",
                "jiggle"
            ],
            "usePreview": 0,
            "username": "pigloo",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "vec2 rotate(vec2 v, float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return vec2(v.x * c - v.y * s, v.x * s + v.y * c);\n}\n\nvec2 mirror(vec2 p) {\n  return mod(p, 2.0) - 1.0;\n}\n\nfloat sdCircle(vec2 p, float r) {\n  return length(p) - r;\n}\n\nvec3 palette(float t) {\n  return 0.5 + 0.5 * sin(t * vec3(1.0, 1.3, 1.5) + vec3(0.0, 2.0, 4.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = ((fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y) * 10.;\n  uv = rotate(uv, iTime * 0.1);\n  \n  uv.x += sin(uv.y * 4.0 + iTime) * 0.25;\n  uv.y += sin(uv.x * 4.0 + iTime) * 0.25;\n  \n  vec2 mirrored = mirror(uv);\n  float circleDist = sdCircle(mirrored, 0.6 + 0.1 * sin(iTime * 0.2));\n  \n  float col = smoothstep(0.03, -0.03, circleDist);\n  vec3 color = mix(vec3(0.2), palette(iTime * 0.5 + length(uv) * 2.0), col);\n  \n  fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}