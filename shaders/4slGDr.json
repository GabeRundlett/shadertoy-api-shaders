{
    "Shader": {
        "info": {
            "date": "1367639387",
            "description": "Just messing around and animating some parameters of IQ's Happy Bubbles! ^_^ Running it as a screensaver on my laptop so I thought I should add it here too, and yes, the colourscheme is atrocious on purpose -_-\nAdded: soft focus per bubble\n\n\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4slGDr",
            "likes": 51,
            "name": "Bubbles!",
            "published": 3,
            "tags": [
                "2d",
                "bokeh",
                "remix",
                "iq",
                "bubbles",
                "distance"
            ],
            "usePreview": 0,
            "username": "weyland",
            "viewed": 2436
        },
        "renderpass": [
            {
                "code": "// Created by inigo quilez - iq/2013 : https://www.shadertoy.com/view/4dl3zn\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Messed up by Weyland\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0*fragCoord.xy / iResolution.xy;\n\tuv.x *=  iResolution.x / iResolution.y;\n\n    // background\t \n\tvec3 color = vec3(1.0);\n\n    // bubbles\t\n\tfor( int i=0; i<64; i++ )\n\t{\n        // bubble seeds\n\t\tfloat pha =      sin(float(i)*546.13+1.0)*0.5 + 0.5;\n\t\tfloat siz = pow( sin(float(i)*651.74+5.0)*0.5 + 0.5, 4.0 );\n\t\tfloat pox =      sin(float(i)*321.55+4.1) * iResolution.x / iResolution.y;\n\n        // buble size, position and color\n\t\tfloat rad = 0.1 + 0.5*siz+sin(iTime/6.+pha*500.0+siz)/20.0;\n\t\tvec2  pos = vec2( pox+sin(iTime/10.+pha+siz), -1.0-rad + (2.0+2.0*rad)\n\t\t\t\t\t\t *mod(pha+0.1*(iTime/5.0)*(0.2+0.8*siz),1.0));\n\t\tfloat dis = length( uv - pos );\n\t\tvec3  col = mix( vec3(0.194*sin(iTime/6.0),0.3,0.0), \n\t\t\t\t\t\tvec3(1.1*sin(iTime/9.0),0.4,0.8), \n\t\t\t\t\t\t0.5+0.5*sin(float(i)*1.2+1.9));\n        // render\n\t\tfloat f = length(uv-pos)/rad;\n\t\tf = sqrt(clamp(1.0+(sin((iTime/7.0)+pha*500.0+siz)*0.5)-f*f,0.0,1.0));\n\t\tcolor -= col.zyx *(1.0-smoothstep( rad*0.95, rad, dis )) * f;\n\t}\n\tfragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}