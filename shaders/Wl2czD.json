{
    "Shader": {
        "info": {
            "date": "1593871994",
            "description": "CappedSegment - iso lines look better",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl2czD",
            "likes": 1,
            "name": "CappedSegment",
            "published": 3,
            "tags": [
                "cappedsegment"
            ],
            "usePreview": 0,
            "username": "jj99",
            "viewed": 365
        },
        "renderpass": [
            {
                "code": "// Capped line segment, should be ok now, Use at your own risk!! :)\n\nfloat sdSegmentCapped( in vec2 p, in vec2 a, in vec2 b, float thickness )\n{\n  vec2 sz = vec2(length(b-a)*0.5,thickness);\n  vec2 d = normalize(b-a);\n  vec2 pp = p - (a+d*sz.x);\n  float ang = radians(90.0)+atan(-d.x,d.y);\n  float c = cos(ang), s = sin(ang);\n  pp *= mat2(c, s, -s, c);\n  vec2 dd = abs(pp)-sz;\n  return length(max(dd,0.0)) + min(max(dd.x,dd.y),0.0);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    p *= 1.4;\n    \n    vec2 v1 = cos( iTime + vec2(0.0,2.00) + 0.0 );\n\tvec2 v2 = cos( iTime + vec2(0.0,1.50) + 1.5 );\n    float th = 0.1*(0.5+0.5*sin(iTime*1.1));\n    \n\tfloat d = sdSegmentCapped( p, v1, v2, th );\n    \n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-3.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.015,abs(d)) );\n    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}