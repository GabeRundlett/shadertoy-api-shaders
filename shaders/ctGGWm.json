{
    "Shader": {
        "info": {
            "date": "1684085064",
            "description": "kai time---Supremo kaioshama del tiempo--Super Dragon ball Heroes",
            "flags": 8,
            "hasliked": 0,
            "id": "ctGGWm",
            "likes": 6,
            "name": "kai time",
            "published": 3,
            "tags": [
                "draw",
                "anime",
                "dragonball",
                "kaitime",
                "lineto"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "//por jorgefloresP. jorge2017a1----\n//14-may-2023\n//kai time---Supremo kaioshama del tiempo--Super Dragon ball Heroes\n/// de nuevo falta el pelo ;(  :)\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(8.0*antialiasing(0.7),b,d)\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.001,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\nfloat sdCircle( vec2 p, float r )\n {return length(p) - r; }\nfloat sdBox( in vec2 p, in vec2 b )\n { vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\n///-----rostro\nfloat sdPoly12 POLY(12)\nvec2  pt12[12]=vec2[](\nvec2(3.19,2.28),vec2(2.58,2.58),vec2(2.54,2.63),vec2(2.23,3.16),vec2(2.05,4.23),\nvec2(4.4,4.21),vec2(4.18,3.08),vec2(4.11,2.97),vec2(3.95,2.68),vec2(3.91,2.65),\nvec2(3.28,2.28),vec2(3.19,2.28)  );\n\n\n///ojo izq\nfloat sdPoly5 POLY(5)\nvec2  pt5[5]=vec2[](\nvec2(2.43,3.39),vec2(2.93,3.35),vec2(2.76,3.61),vec2(2.22,3.72),vec2(2.43,3.39)  );\n\nfloat sdPoly6 POLY(6) //ojo der\nvec2  pt6[6]=vec2[](\nvec2(3.47,3.34),vec2(3.68,3.62),vec2(3.97,3.69),vec2(4.32,3.72),vec2(3.99,3.38),\nvec2(3.47,3.34)  );\n\nfloat sdPoly7 POLY(7)  //corona\nvec2  pt7[7]=vec2[](\nvec2(1.65,4.11),vec2(1.28,5.75),vec2(5.28,5.77),vec2(4.86,4),vec2(3.45,4.75),\nvec2(3.02,4.73),vec2(1.65,4.11)  );\n\nfloat sdPoly6N POLY(6) //nariz\nvec2  pt6N[6]=vec2[](\nvec2(3.19,3.23),vec2(3.12,3.11),vec2(3.05,3.05),vec2(3.05,3.03),vec2(3.19,2.93),\nvec2(3.19,3.23)  );\n\n\n//boca \nfloat sdPoly9 POLY(9)\nvec2  pt9[9]=vec2[](\nvec2(2.99,2.91),vec2(3.03,2.88),vec2(3.35,2.88),vec2(3.42,2.93),vec2(3.44,2.88),\nvec2(3.35,2.71),vec2(3.09,2.7),vec2(2.99,2.85),vec2(2.99,2.91)  );\n\nvec2 p0_; //punto uv\nvec2 pt0; //punto pos0\nfloat DistL;\nvec3 ColL;  //color linea\nvec3 ColO;  //color salida Out\n\nvoid L( vec2 p1)\n{   DistL=sdSegment(p0_, pt0, p1 );\n    ColO= DrawFigBorde(ColL, ColO,DistL); //cabeza\n    pt0 = p1;\n}\nvoid SZ(vec2 p ){pt0 = p;}\nvoid M(vec2 p1){pt0 = p1;}\nvoid C(vec3 pcol){ColL=pcol;}\n\nvec3 LineaPelo(vec2 p,vec3 col )\n{\n///puntos linea pelo 2\nvec2 p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21;\np1=vec2(1.95,2.79);p2=vec2(2.38,2.31);\np3=vec2(2.24,3);p4=vec2(2.18,3.89);\np5=vec2(2.33,4.07);p6=vec2(2.21,3.72);\np7=vec2(2.89,3.98);p8=vec2(2.64,3.74);\np9=vec2(3.35,3.79);p10=vec2(3.49,3.89);\np11=vec2(3.32,3.67);p12=vec2(3.83,3.74);\np13=vec2(4.13,3.99);p14=vec2(4.07,3.76);\np15=vec2(4.31,4);p16=vec2(4.2,3.89);\np17=vec2(4.19,3.03);p18=vec2(4.1,2.34);\np19=vec2(4.35,2.64);p20=vec2(4.44,2.83);\np21=vec2(4.42,2.47);\np0_=p;\nColO=col;\nSZ(p1);M(p1);C(vec3(0.0));\nL(p1);L(p2);L(p3);L(p4);L(p5);L(p6);L(p7);L(p8);L(p9);L(p10);L(p11);\nL(p12);L(p13);L(p14);L(p15);L(p16);L(p17);L(p18);L(p19);L(p20);L(p21);\n col=ColO; return col;\n}\n\nvec3 cabezaKaiTime(vec2 p, vec3 col)\n{   float sd12 = sdPoly12(p, pt12); //rostro\n    float sd5 = sdPoly5(p, pt5);//ojo izq\n    float sd6 = sdPoly6(p, pt6);//ojo der\n    float sd7 = sdPoly7(p, pt7); //corona\n    float sd6N = sdPoly6N(p, pt6N); //nariz\n   float sd9 = sdPoly9(p, pt9); //boca\n    //cornea izq\n    vec2 p1=vec2(2.71,3.64) ; float r1=0.24;\n    float d1=sdCircle(p-p1,r1);\n    //cornea der\n    vec2 p2=vec2(3.82,3.6); float r2=0.22;\n    float d2=sdCircle(p-p2,r2);\n    //iris izq\n    vec2 p3=vec2(2.715,3.595);float r3=0.085;\n    float d3=sdCircle(p-p3,r3);\n    //iris der\n    vec2 p4=vec2(3.805,3.595); float r4=0.085;\n    float d4=sdCircle(p-p4,r4);\n    //cabeza\n    vec2 p5=vec2(3.26,3.48) ; float r5=1.45;\n    float d5=sdCircle(p-p5,r5);\n    d1= intersectSDF(sd5, d1);\n    d3= intersectSDF(d3, d1); //cornea e iris izq\n    d2= intersectSDF(sd6, d2);\n    d4= intersectSDF(d4, d2);\n    //diente superior\n    float l1=3.19, t1=2.95;\n    float an1=0.32, al1=0.11;\n    vec2 pos=vec2(l1,t1);\n    vec2 med=vec2(an1, al1);\n\n    float d6a= sdBox(p-pos, med);\n    d6a= intersectSDF(d6a, sd9);\n    \n    //diente inferior\n    l1=3.19, t1=2.68;\n    an1=0.32, al1=0.11;\n     pos=vec2(l1,t1);\n     med=vec2(an1, al1);\n    float d6b= sdBox(p-pos, med);\n    d6b= intersectSDF(d6b, sd9);\n     ///cuello\nl1=3.22; t1=2.31;\nan1=0.62; al1=0.27;\npos=vec2(l1,t1);\nmed=vec2(an1, al1);\nfloat d7= sdBox(p-pos, med);\n\n    vec3 colr=vec3(0.95,0.97,1.); //blanco\n    vec3 colra=vec3(0.66,0.83,0.92);\n    col= DrawFigBorde(colr, col,d7); //cuello\n    col= DrawFigBorde(colr, col,sd12); //cabeza\n    col= DrawFigBorde(vec3(1.0), col,sd5 );\n    col= DrawFigBorde(vec3(1.0), col,sd6);\n    col= DrawFigBorde(vec3(1.0,0.75,0.3), col,sd7); //corona\n    col= DrawFigBorde(vec3(1.0), col,sd6N); //nariz\n    col= DrawFigBorde(vec3(1.0,0.0,0.0), col,sd9); //boca\n    col= DrawFigBorde(vec3(1.0), col,d6a); //diente\n    col= DrawFigBorde(vec3(1.0), col,d6b); ///diente\n    col= DrawFigBorde(vec3(0.0,0.7,1.0), col,d1);\n    col= DrawFigBorde(vec3(0.0,0.7,1.0), col,d2);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col,d3);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col,d4);\n    col= LineaPelo(p,col);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5); uv*=3.5;\n    vec3 col=mix(vec3(0.66,0.83,0.92),vec3(0.76,0.78,0.9),fract(iTime*0.5))  ;\n    float t=iTime;\n    col= cabezaKaiTime(uv-vec2(-3.5,-1.5),col);\n    uv.x=abs(uv.x)+(2.0+0.5*sin(t*2.0))-(1.0+0.5*sin(t));\n    col= cabezaKaiTime(uv*0.5-vec2(0.0,-2.0),col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI 3.14159265358979323846\n#define TAU PI*2.\n#define C  32.703\n/*#define CS 34.648\n#define D  36.708\n#define DS 38.891\n#define E  41.203\n#define F  43.654\n#define FS 46.249\n#define G  48.999\n#define GS 51.913\n#define A  55.0\n#define AS 58.270\n#define B  61.735\n*/\n//Basic waveforms with note and octave input\nfloat sn(float t, float note, float octave)\n {return sin(t*note*exp2(octave)*PI);}\nfloat saw(float t, float note, float octave)\n {return fract(t*note*exp2(octave-1.))-0.5;}\nfloat tri(float t, float note, float octave)\n {return (abs(fract(t*note*exp2(octave-1.))-0.5)*2.-0.5)*2.;}\nfloat sqr(float t, float note, float octave)\n {return step(fract(t*note*exp2(octave-1.)), 0.5)-0.5;}\nvec2 mainSound( int samp, float time )\n{ float t=time*0.5;\n  float s1=tri(t, C+sn(t, C, 3.0), 5.)*0.35;\n  return vec2(s1);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}