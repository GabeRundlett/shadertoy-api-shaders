{
    "Shader": {
        "info": {
            "date": "1533252012",
            "description": "Marching Ants , Click and drag to make a selection\nhttps://en.wikipedia.org/wiki/Marching_ants\n\n",
            "flags": 32,
            "hasliked": 0,
            "id": "XltcR2",
            "likes": 15,
            "name": "Marching Ants Marquee",
            "published": 3,
            "tags": [
                "marching",
                "ants",
                "selection",
                "selection",
                "marchingants",
                "marquee"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 1614
        },
        "renderpass": [
            {
                "code": "float scl = 50.0; // how many ants\nfloat speed = 5.0; // how fast they scroll\nfloat lineW = 0.01; // line thickness\nfloat smoothing = 0.2; // smoothing at the tips of each dash\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n\n    vec4 mouse = texture(iChannel0, uv);\n    mouse.xy = mouse.xy * 2.0 - 1.0;\n    mouse.x *= aspect;\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= aspect;\n\n    float x = mouse.x;\n    float y = mouse.y;\n    \n    float width = (mouse.z*aspect)*2.0;\n    float height = (mouse.w*2.0);\n    \n    vec2 dimensions = vec2(width, height);\n    vec2 center = vec2(x, y) + dimensions*0.5;\n\n    float c = sin(uv.x * scl + uv.y * scl + iTime*speed);\n    c = smoothstep(-smoothing,smoothing,c);\n    \n    uv = abs(uv - center);\n    uv -= abs(dimensions)*0.5;\n    \n    float m = max(uv.x, uv.y);\n    c = mix(1.0, c, step(m, 0.0)); // outside\n    c = mix(c, 1.0, step(m, -lineW)); // inside    \n    \n    fragColor = vec4(1.0 - c);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// this buffer stores the mouse positions and drag distances\n\n// r = initial x click\n// g = initial y click\n// b = x drag dist\n// a = y drag dist\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 c = texture(iChannel0, fragCoord / iResolution.xy);\n    \n    vec4 m = iMouse / vec4(iResolution.xy, iResolution.xy);\n    if( m.z > 0.0){\n     c.r = m.z;\n     c.b = m.x - m.z;   \n    }\n    \n    if(m.w > 0.0){\n     c.g = m.w;   \n     c.a = m.y - m.w;\n    }\n    \n    \n    if(iFrame < 120){\n     c.r = 0.25;\n     c.g = 0.25;\n     c.b = 0.5;\n     c.a = 0.5;\n    }\n    \n    fragColor = c;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}