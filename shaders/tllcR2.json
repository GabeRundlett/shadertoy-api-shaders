{
    "Shader": {
        "info": {
            "date": "1592547358",
            "description": "From left to right:\ntexture  white and blue noise,    procedural cheap  white and blue noise.\nbottom: zoom\nClick for for random changing at each frame.",
            "flags": 0,
            "hasliked": 0,
            "id": "tllcR2",
            "likes": 45,
            "name": "cheap bluenoise",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "banding",
                "antialiasing",
                "dithering",
                "bluenoise",
                "tuto",
                "short",
                "whitenoise"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 3241
        },
        "renderpass": [
            {
                "code": "#define T(ch)    texelFetch(ch,ivec2(U) % textureSize(ch,0),0).x\n#define hash(p)  fract(sin(dot(p, vec2(11.9898, 78.233))) * 43758.5453) // iq suggestion, for Windows\n// #define hash(p)  fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453) // classical verison\n\n// see power spectrum here: https://www.shadertoy.com/view/7dyfzW\n#if 1\nfloat B(vec2 U) {\n    float v = 0.;\n    for (int k=0; k<9; k++)\n        v += hash( U + vec2(k%3-1,k/3-1) ); \n  //return       1.125*hash(U)- v/8.  + .5; // some overbound, closer contrast\n    return .9 *( 1.125*hash(U)- v/8.) + .5; // \n  //return .75*( 1.125*hash(U)- v/8.) + .5; // very slight overbound\n  //return .65*( 1.125*hash(U)- v/8.) + .5; // dimmed, but histo just fit without clamp. flat up to .5 +- .23\n}\n#else\nfloat B(vec2 U) {                           // 5-tap version \n    float v =  hash( U + vec2(-1, 0) )\n             + hash( U + vec2( 1, 0) )\n             + hash( U + vec2( 0, 1) )\n             + hash( U + vec2( 0,-1) ); \n    return  hash(U) - v/4.  + .5;\n}\n#endif\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float T = iTime, t = iMouse.z<=0. ? 0. : float(77*iFrame);\n    vec3  R = iResolution,\n          D = vec3(.3*(U+U-R.xy)/R.y, -1),  // ray direction\n          p = 30./R, q;                     // marching point along ray \n    O-=O;\n    int x = int(4.*U.x/R.x);\n    U = mod(U-t,R.xy);\n    if (D.y<0.) U = floor(U/2.);\n    O +=   x == 0 ? T(iChannel0)            // white texture noise\n         : x == 1 ? T(iChannel1)            // blue texture noise\n         : x == 2 ? hash(U)                 // white  procedural noise\n         :          B(U);                   // blue procedural noise\n    \n  //O.x>1. ? O-=O,O.x++ : O.x<0. ? O-=O,O.y++ : t ;   // verify not out of bounds\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}