{
    "Shader": {
        "info": {
            "date": "1675288705",
            "description": "it does",
            "flags": 0,
            "hasliked": 0,
            "id": "dllSRX",
            "likes": 13,
            "name": "lens flare 35476",
            "published": 3,
            "tags": [
                "flare"
            ],
            "usePreview": 0,
            "username": "ArmandB",
            "viewed": 484
        },
        "renderpass": [
            {
                "code": "//https://www.shadertoy.com/view/Xd2GR3\nfloat sdHex(vec2 p){\n    p = abs(p);\n\tvec2 q = vec2(p.x*2.0*0.5773503, p.y + p.x*0.5773503);\n\treturn dot(step(q.xy,q.yx), 1.0-q.yx);\n}\n\n//fakes x^n for specular effects (k is 0-1)\nfloat fpow(float x, float k){\n    return x > k ? pow((x-k)/(1.0-k),2.0) : 0.0;\n}\n\nvec3 renderhex(vec2 uv, vec2 p, float s, vec3 col){\n    uv -= p;\n    if (abs(uv.x) < 0.2*s && abs(uv.y) < 0.2*s){\n        return mix(vec3(0),mix(vec3(0),col,0.1 + fpow(length(uv/s),0.1)*10.0),smoothstep(0.0,0.3,sdHex(uv*5.0/s)));\n    }\n    return vec3(0);\n}\n\nvec3 renderLensFlare(vec2 uv, vec2 light){\n    vec3 col = vec3(0);\n    //ghosts\n    col += renderhex(uv, -light*0.25, 1.4, vec3(0.25,0.75,0));\n    col += renderhex(uv, light*0.25, 0.5, vec3(1,0.5,0.5));\n    col += renderhex(uv, light*0.1, 1.6, vec3(1,1,1));\n    col += renderhex(uv, light*1.8, 2.0, vec3(0,0.5,0.75));\n    col += renderhex(uv, light*1.25, 0.8, vec3(1,1,0.5));\n    col += renderhex(uv, -light*1.25, 5.0, vec3(0.5,0.5,0.25));\n    //circular ghost\n    col += fpow(1.0 - abs(distance(light*0.8,uv) - 0.7),0.985)*vec3(0.1,0.05,0);\n    //flare\n    col += vec3(1.0,0.6,0.4)*fpow(textureLod(iChannel0,normalize(light-uv)*0.25,0.0).r,0.3)*0.04/distance(light,uv);\n    //bloom\n    col += vec3(1.0,0.6,0.4)*fpow(max(1.0 - distance(light,uv),0.0),0.5);\n    \n    return col/(1.0 + distance(uv,light));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy/2.0)/iResolution.y*2.0;\n    vec2 light = (iMouse.xy - iResolution.xy/2.0)/iResolution.y*2.0;\n\n    fragColor = vec4(vec3(0.6,0.7,0.8) + renderLensFlare(uv,light),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}