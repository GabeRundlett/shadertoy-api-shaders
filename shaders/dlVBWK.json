{
    "Shader": {
        "info": {
            "date": "1702516496",
            "description": "Click & Drag!\n[url=https://www.shadertoy.com/playlist/s3BcD1]FRACTAL PLAYLIST[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "dlVBWK",
            "likes": 8,
            "name": "Tower of Powers III",
            "published": 3,
            "tags": [
                "fractal",
                "orbit",
                "iteration",
                "trap",
                "exponential",
                "chaotic",
                "tetration",
                "hyperoperation"
            ],
            "usePreview": 0,
            "username": "domrally",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "/*\nby Dom Mandy in 2023\n*/\nvoid mainImage(out vec4 P, vec2 V) {\n    vec2 R = iResolution.xy,\n         C = V = 4. * (V + V - R) / R.x;\n    C = mix(C, 4. * (2. * iMouse.xy - R) / R.x, max(0., sign(iMouse.z)));\n\n    float c, k, s, r = s = 9.,\n          a = atan(C.y, C.x), \n          d = dot(C, C);\n\n    for (int k; k < 222; k++)\n        c = dot(V, vec2(a, log(d) / 2.)),\n        V = exp(-a * V.y) * pow(d, V.x / 2.) * vec2(cos(c), sin(c)),\n        s = min(s, abs(V.y)),\n        r > (c = abs(V.x)) ? r = c, R = V : R;\n\n    s = smoothstep(-27., 1., log(r * s)) * smoothstep(1., -17., log(r * s));\n    vec3 S = s + s * cos(atan(R.y, R.x) - vec3(0, 2.1, 4.2));\n    P.rgb = isnan(c) ? vec3(0) : sqrt(S);\n}\n\n\n/*\nPOWER TOWER vs TETRATION\nThis power tower fractal has gone from a minor interest to one of my favorites. \nI often saw it posted in forums discussing tetration. However, I did not really consider it a hyperoperation.\nThe tetration hyperoperation is n^n^n... however many times you want. Ex: n²₄ = nⁿ\nThe power tower is n^n^n... infinite times. This formula also has interesting convergence properties. Ex: nⁱⁿ₄ = W(-log n) / -log n\nHowever, I personally would not call it tetration since I would not call n*n*n... infinite times the power function.\n\nORBIT TRAP RENDERING\nI did not expect the real and imaginary orbit traps to have such interesting line patterns. \nThe same traps for the Mandelbrot are quite spiky and scary looking. But in this case they have become quite gentle and web-like.\nI chose the real trap for the domain coloring because the color gradients were much smoother than the imaginary angle.\nNormally for these renders I will use the complex magnitude trap since it gives nice voronoi like patterns.\nBut in this case the hues matching with the lines looks better to me so this is what I came up with.\nSimilar logic for blacking out the interior. There is lots of interesting fractal escape structure inside the crab but this way I'm trying to draw attention to the nice exterior orbits.\n*/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}