{
    "Shader": {
        "info": {
            "date": "1706211805",
            "description": "Complex error function.\nLeft (grayscale) - magnitude.\nRight (color) - argument.\nHold LMB to show isolines |erf(z)|=n.",
            "flags": 0,
            "hasliked": 0,
            "id": "4f2XWz",
            "likes": 2,
            "name": "Complex erf(z)",
            "published": 3,
            "tags": [
                "complex",
                "erf",
                "errorfunction",
                "cerf"
            ],
            "usePreview": 0,
            "username": "FordPerfect",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "// Public Domain under http://unlicense.org, see link for details.\n\n// Implementation of complex error function, erf(z),\n// for float32.\n\nconst float pi=3.14159265358979;\n\n// Approximation of erf() for real argument. Based on:\n//     Numerical Recipes in Fortran 77: The Art of Scientific Computing (ISBN 0-521-43064-X), 1992, page 214, Cambridge University Press.\n// See erf_nrf77() in https://www.shadertoy.com/view/ml3yWj\nfloat erf(float x)\n{\n    float t=1.0/(1.0+0.5*abs(x));\n    return sign(x)*(1.0-t*exp(\n        -x*x-1.26551223\n        +t*(+1.00002368\n        +t*(+0.37409196\n        +t*(+0.09678418\n        +t*(-0.18628806\n        +t*(+0.27886807\n        +t*(-1.13520398\n        +t*(+1.48851587\n        +t*(-0.82215223\n        +t*(+0.17087277)))))))))));\n}\n\n// Compute exp(-Im(z)^2)*erf(z).\n// Unlike, say, Dawson function, this one is not\n// complex-differentiable, but, hopefully, is nicer\n// numerically. Empirically, F(z) seems bounded on C,\n// specifically |Re(F(z))|<=1, |Im(F(z))|<=0.62 (no\n// formal bounds yet).\n// Method is adapted from\n//     Salzer, H. E. (1951). \"Formulas for Calculating the Error Function of a Complex Variable\". Mathematical Tables and Other Aids to Computation, 5(34), 67. doi:10.2307/2002163\n// equations (6) and (7).\n// Testing (on CPU) against\n//     http://ab-initio.mit.edu/wiki/index.php/Faddeeva_Package\n// on a few millions values in [-8;+8]x[-8;+8] range suggests\n// this implementation has absolute error less than 2e-7.\n// The number of iterations is large, but reducing it\n// does not seems expedient: the absolute error is about 1% at\n// 17 iterations, and rapidly improves to 2e-7 at 22 iterations.\n// The relative error (esp. around zeroes) is likely bad.\nvec2 F(vec2 z)\n{\n    float X=z.x,Y=z.y;\n    float XY=X*Y,C=cos(XY),S=sin(XY),T=(abs(XY)<1e-4?1.0:S/XY); // T=sinc(XY).\n    float C2=(C-S)*(C+S),S2=2.0*C*S;\n    float re=0.5*exp(-Y*Y)*X*Y*Y*T*T;\n    float im=0.5*exp(-Y*Y)*Y*T*C;\n    for(int i=1;i<=22;++i)\n    {\n        float n=float(i);\n        float L=exp(-(Y-0.5*n)*(Y-0.5*n));\n        float H=exp(-(Y+0.5*n)*(Y+0.5*n));\n        float D=1.0/(n*n+4.0*X*X);\n        re+=D*(2.0*X*exp(-Y*Y-0.25*n*n)-X*(L+H)*C2+0.5*n*(L-H)*S2);\n        im+=D*(                         X*(L+H)*S2+0.5*n*(L-H)*C2);\n    }\n    return vec2(\n        exp(-Y*Y)*erf(X)+(2.0*exp(-X*X)/pi)*re,\n                         (2.0*exp(-X*X)/pi)*im);\n}\n\n// Complex error function: erf(z).\nvec2 cerf(vec2 z)\n{\n    return exp(z.y*z.y)*F(z);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 z=4.0*(2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 v=cerf(z);\n    float mag=length(v),arg=atan(v.y,v.x);\n    vec3 col=vec3(0);\n    if(0.5+0.5*sin(0.5*iTime)<fragCoord.x/iResolution.x) col=0.5+0.5*cos(arg-vec3(0,2,4));\n    else col=vec3(0)+2.0*atan(0.5*mag)/pi;\n    if(iMouse.z>0.0) // Show isolines: |erf(z)|=integer.\n    {\n        float g=sin(pi*mag);\n        col*=0.5+0.5*smoothstep(0.0,fwidth(g),abs(g));\n    }\n    col=mix(12.92*col,1.055*pow(col,vec3(1.0/2.4))-0.055,step(0.0031308,col)); // sRGB\n    fragColor=vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}