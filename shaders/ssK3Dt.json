{
    "Shader": {
        "info": {
            "date": "1632427907",
            "description": "Modified version of https://www.shadertoy.com/view/3lsGW2",
            "flags": 0,
            "hasliked": 0,
            "id": "ssK3Dt",
            "likes": 4,
            "name": "Moving Star Constellations",
            "published": 3,
            "tags": [
                "stars"
            ],
            "usePreview": 0,
            "username": "Scintoth",
            "viewed": 449
        },
        "renderpass": [
            {
                "code": "float distLine( vec2 p, vec2 a, vec2 b){\n    vec2 pa = (p - a) / 2.0;\n    vec2 ba = (b - a) / 2.0;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0.0,1.0);\n    return length(pa - ba*t);\n}\n\nfloat noiseFloat(vec2 p){\n    p = fract(p * vec2(213.53, 970.19));\n    p = p + dot(p, p+548.23);\n    return fract(p.x * p.y);\n}\n\nvec2 noiseVector(vec2 p){\nfloat n = noiseFloat(p);\n    return vec2(n, noiseFloat(p+n) * 1.0);\n}\n\n\nvec2 GetPos(vec2 id, vec2 offsets){\nvec2 n = noiseVector(id + offsets) * 500.0 * ((iDate.w + 8000.0 + iTime) / 50000.0);\n    return (sin(n) * 0.9) + offsets;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b){\nfloat d = distLine(p, a, b);\n    float m = smoothstep(0.15, 0.01, d * 10.0);\n    m = m * smoothstep(0.9, 0.32, length(a-b));\n    return m;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord -1.0*iResolution.xy)/iResolution.y * 6.0;\n\t\n    float m = 0.0;\n    uv = uv * 10.0;\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    \n    vec2 p[9];\n    \n    int i = 0;\n    for(float y = -1.0; y<=1.0; y++){\n    \tfor(float x = -1.0; x<=1.0; x++){\n            p[i++] = GetPos(id, vec2(x, y));\n        }\n    }\n    \n    for(int i=0; i<9; i++){\n    \tm = m + Line(gv, p[4], p[i]);\n        \n        vec2 j = (p[i] - gv) * 2.0;\n        float sparkle = 0.1/dot(j, j) * (50.0 / (8000.0 + iTime));\n      \n        m = m + sparkle * (sin(((8000.0 + iTime)+p[i].x)* 0.5)*0.5 + 0.9);\n    }\n    \n    m = m + Line(gv, p[1], p[3]);\n    m = m + Line(gv, p[1], p[5]);\n    m = m + Line(gv, p[7], p[3]);\n    m = m + Line(gv, p[7], p[5]);\n    \n    vec3 col = vec3(m * 0.28, m * 0.28, m * 0.4);    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}