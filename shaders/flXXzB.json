{
    "Shader": {
        "info": {
            "date": "1625919095",
            "description": "from Chris Wellons [url]https://nullprogram.com/blog/2018/07/31/[/url] \n( thanks for this ref that was raised... I don't remember in which discussion ! :-) )\n\nNote that it might not be costlier than the infamous fract(big*sin(big*x)) ;-) ",
            "flags": 0,
            "hasliked": 0,
            "id": "flXXzB",
            "likes": 4,
            "name": "\"Best\" hash Int - wang, lowbias",
            "published": 3,
            "tags": [
                "hash"
            ],
            "usePreview": 0,
            "username": "tigrazone",
            "viewed": 274
        },
        "renderpass": [
            {
                "code": "// --- from Chris Wellons https://nullprogram.com/blog/2018/07/31/\n// Note that it might not be costlier than the infamous fract(big*sin(big*x)) ;-) \n\n        // --- choose one:\n#define hashi(x)   lowbias32(x)\n  //#define hashi(x)   triple32(x) \n//  #define hashi(x)   wang(x)\n\n  #define hash(x)  ( float( hashi(x) ) / float( 0xffffffffU ) )\n\n//bias: 0.17353355999581582 ( very probably the best of its kind )\nuint lowbias32(uint x)\n{\n    x ^= x >> 16;\n    x *= 0x7feb352dU;\n    x ^= x >> 15;\n    x *= 0x846ca68bU;\n    x ^= x >> 16;\n    return x;\n}\n\n// bias: 0.020888578919738908 = minimal theoretic limit\nuint triple32(uint x)\n{\n    x ^= x >> 17;\n    x *= 0xed5ad4bbU;\n    x ^= x >> 11;\n    x *= 0xac4c1b51U;\n    x ^= x >> 15;\n    x *= 0x31848babU;\n    x ^= x >> 14;\n    return x;\n}\n\nuint wang(uint v)\n{\n    v = (v ^ 61u) ^ (v >> 16u);\n    v *= 9u;\n    v ^= v >> 4u;\n    v *= 0x27d4eb2du;\n    v ^= v >> 15u;\n    return v;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    uvec2 V = uvec2(U);\n    float h = hash( V.x + hashi(V.y) ); // clean 2D hash\n  //float h = hash( V.x + (V.y<<16) );  // 2D hash (should be ok too )\n    O = vec4( h );\n  //O = vec4( pow( h, 1./2.2) );        // sRGB conversion\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}