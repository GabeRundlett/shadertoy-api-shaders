{
    "Shader": {
        "info": {
            "date": "1609358838",
            "description": "sort the balls !   ( variant of [url]https://shadertoy.com/view/ttdcD4[/url] ).\nclick to restart\n- up/down key to roll the balls in the current ring.\n- space to change current ring.\nPS: Still pretty trivial, though :-/",
            "flags": 48,
            "hasliked": 0,
            "id": "wl3cD7",
            "likes": 9,
            "name": "Rubik's 3-ring",
            "published": 3,
            "tags": [
                "game",
                "puzzle",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 355
        },
        "renderpass": [
            {
                "code": "// more challenging variant of https://shadertoy.com/view/ttdcD4\n\n#define S(v)         smoothstep( 15./R.y, 0., v )                    // antialiasing\n#define sR(U,w,h,r)  length(max( abs(U) - vec2(w,h)/2. +r , 0.)) - r // smooth rectangle\n#define ds(s,x)      U * mat2(cos(s 3.14/6. +vec4(0,-1.57,1.57,0))) + vec2( 3. s -x*.6, 0 )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = 12.* ( u - .5*R ) / R.y + vec2(0,.7), P;\n    float a = 3.*fract(atan(U.y,U.x)/6.28+.25),  v0,v1, m=1., M,M0;\n    int r0 = int(a), r1 = (r0+1)%3, r; \n/*\n    if (U.x>8.) { U = 17.*(u-vec2(R.x,0))/R.y; U.x+=3.;              // debug: show balls state\n                  P = T(int(U.y)+17*int(U.x)).yz;\n                  if(U.x>0.) r = int(P.x), U = fract(U)-.5,\n                             O[r%3] += S(length(U)-.3) * (r<3?.5:1.) * float(P.y==14.&&U.x<0. || P.y==17.&&U.x>0. || P.y!=14.&&P.y!=17.); \n                  return;}\n*/\n    U = length(U) * cos( (fract(a)-.5)*6.28/3. + vec2(0,33) );\n    M  = S(length(U)-6.6);                                           // main body\n    U.x -= 3.5;                                                      // --- draw board\n    P = ds(-,0.); v0 = S(sR(P,3.3,1, .1));                           // central hole\n    P = ds(+,0.); v1 = S(sR(P,3.3,1, .1));\n    M -= v0+v1;\n    if (v0+v1>.9)                                                    // central body\n      P = ds(-, T(r0).w), M  = S(sR(P,2,1, .1)), m  = M *S( .35 - abs(P.x) ), \n      P = ds(+, T(r1).w), M0 = S(sR(P,2,1, .1)), m += M0*S( .35 - abs(P.x) ), // m: central rail chunk \n      M+=M0;                            \n    else                                                             // ring rails\n      m = S( .3 - abs( length(U)-2.5)  ); \n    O = m * M * texture( iChannel1, U/12.);\n    \n    for( int i=0; i < 51; i++ )  {                                   // --- draw balls\n        vec4 B = T(i);\n        r = int(B.y);\n#define C(o,s)   2.* cos((B.z+o)/10.*6.28+vec2(0,33)) s vec2(0,2.5) \n        if ( r==r0  ||  r-3==r0   ||  r-3==r1 ) {                    // if current ring or gate  \n            a = r-3!=r0 ? B.z : 31.-B.z;\n            P = 2.5 * cos(a/18.*6.28 + 1.4+2.6 + vec2(0,33));\n            if(r-3==r0) v0 >.9 ? P += .53* (T(r0).w+1.)/1. *vec2(-.87,.5) : P-=P;// on gate: offset\n            if(r-3==r1) v1 >.9 ? P += .53* (T(r1).w-1.)/1. *vec2( .87,.5) : P-=P;\n            O[int(B.x)] += sqrt(max( 1.-length( P - U )/.3*.8 , 0.)) * (1.-m);   // draw sphere\n                      // * sqrt((3.+B.z)/18.);\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define T(i) texelFetch(iChannel0, ivec2(i,0), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "                                                            // autodemo before click\n#define K(a,c) ( iMouse.xy==vec2(0) ? fract(1e4*sin(1e4*(float(a)+iTime))) > .95 ? 1. : 0. \\\n                                    : texelFetch( iChannel3, ivec2(a,c), 0 ).x )\n#define keyDown(a)     K(a,1)                               // https://www.shadertoy.com/view/llySRh\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if ( U.y > 1. || U.x > 51. ) return;                    // use only 32 pixels for states\n    int i = int(U.x), c = int(T(3).w), r;\n    \n    if ( iFrame < 1 || iMouse.z>0.) {                       // --- init state\n        O = vec4( ( (i*7)^int(iTime*99.) )%3,               // color = 0, 1 or 2\n                  i/17,                                           // ring  = 0, 1 or 2\n                  i%17,                                           // rank in ring\n                  i==0 ? -1. : i ==1 ? 1. : i==2 ? 1./16. : 0. ); // gates\n        if (i==17+17+14) O = vec4(2,0,17,0);\n        if (i==17+14)    O = vec4(1,5,14,0);\n        return;\n     }\n     \n     O = T(i);                                              // previous state\n     bool k = abs( abs(T(0)).w+abs(T(1).w)+abs(T(2).w) - 2. ) < .1 && T(4).w==0. , // true if all still\n          g = keyDown(32)>0.;\n     if(i==5) O.w=float(k); k = k && T(5).w==1.;            // ... and still at previous frame (for autodemo)\n     if (i==3 && g && k ) O.w = mod( O.w + 1. , 3. );       // choose selector\n     if ( i<3 && c!=(i+1)%3 ) O.w = abs(O.w) < 1.           // selector anim ( start only if balls are not moving )\n                                      ? O.w + sign(O.w)/16. \n                                      : g && k ? c==i ? 1./16. : -1./16. : O.w;\n     if (i==4) O.w = abs(O.w) > .01                         // balls motion \n                     ? O.w - sign(O.w)/16.                  // selector anim ( start only if balls are not moving )\n                     : k && !g ? keyDown(38) - keyDown(40) : 0.;  // keypressed direction ( up down arrows )\n\n                                                            // --- rotate balls in the selected ring\n     float s = T(3).w, d = T(4).w;                          // balls direction\n     if ( O.y == s  ) O.y = s, O.z = mod( O.z + sign(d)/16., 18.);\n     \n     if ( O.z==14.||O.z==17. ) {                            // --- balls in gates\n         r = O.y < 3. ? ( int(O.y) + int(O.z==14.) ) % 3 : int(O.y)-3 ; // gate id\n         s = T(r).w;                                                    // gate side\n         if ( O.y < 3.) { if ( abs(s)< 1.) O.z = 31.-O.z, O.y = float(r+3); }   // not in gate while moving: set in gate + swap rank id\n         else           { if ( abs(s)>=1.) O.y = float( s>0. ? (r+2)%3 : r ); } // in gate while stopped: set in ring\n      // if ( O.y < 3.) { if ( abs(s)< 1.) O.y = float(r+3); }                  // not in gate while moving: set in gate\n      // else           { if ( abs(s)>=1.) O.yz = s>0. ? vec2((r+2)%3,14) : vec2(r,17); } // in gate while stopped: set in ring\n     }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}