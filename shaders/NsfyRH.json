{
    "Shader": {
        "info": {
            "date": "1641662494",
            "description": "The animation from https://www.shadertoy.com/view/flsXRM combined with the golfed USA flag.",
            "flags": 0,
            "hasliked": 0,
            "id": "NsfyRH",
            "likes": 1,
            "name": "Stars and Stripes animated",
            "published": 3,
            "tags": [
                "animated",
                "flags",
                "golf",
                "usa"
            ],
            "usePreview": 0,
            "username": "Krischan",
            "viewed": 281
        },
        "renderpass": [
            {
                "code": "vec3 Flag(vec2 U)\n{\n\tfloat r = 15. / iResolution.y;\n\tfloat q = mod(ceil((U *= r).x - .3), 2.);\n\tvec4 O = vec4(7, 1, 2, 4) * .1;\n\tO = (U.x < 11.7 && U.y > 7. ? O.zzwy : sin(2.69 * U.y) < 0. ? O/O : O)\n      + smoothstep(r,0.,length(U = vec2(fract(clamp(U.x + .7, 1., 12.)),\n        mod(clamp(U.y, 8. - q, 14. + q ) - q * .8, 1.62)) - .5)\n      * cos(abs(mod(atan(U.x, U.y) + .6, 1.26) - .6) - 1.26) - .1);\t\n\t\n\treturn O.rgb;\n}\n\nfloat vignette(vec2 U)\n{\n    return 16. * U.x * (1. - U.x) * U.y * (1. - U.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = uv.x*7.-6.*iTime+uv.y*6.;\n    uv.y += sin(t)*.0125;\n    \n    vec3 col = Flag(uv*iResolution.xy);\n    \n    col += sin(t)*0.25; // highlights\n    col *= .7+cos(t)*.3; // shadows\n\n    col *= 1.0 - .6 * exp2(-1.75 * vignette(uv)); // vignette\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}