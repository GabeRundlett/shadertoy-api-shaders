{
    "Shader": {
        "info": {
            "date": "1459618373",
            "description": "rosace",
            "flags": 0,
            "hasliked": 0,
            "id": "ls3XWM",
            "likes": 53,
            "name": "rosace 3 ( 215 chars)",
            "published": 3,
            "tags": [
                "pseudo3d",
                "2tweets",
                "short",
                "rosace"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1869
        },
        "renderpass": [
            {
                "code": "\n/**/ // 215 chars   - with tomkh's help\n\n#define d  O += .1*(1.+cos(A= 2.33*a + iTime)) / length(vec2( fract(a*8.)-.5, 16.*length(U)-3.2*sin(A)-8.)); a += 6.3;\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\n    U = (U+U-(O.xy=iResolution.xy)) / O.y;\n    float a = atan(U.y,U.x), A;\n    \n\tO -= O;  \n    d d d\n}\n/**/\n\n\n\n\n/**   // 230 chars - short B&W version of Shane's variant (see forum)\n#define d  O = max(O,O-O+.55*(1.+.5*cos(A= 1.667*a + iTime)) *smoothstep(1., 0.9, 8.*abs(r-.2*sin(A)-.5))); a += 6.28;\n\nvoid mainImage( out vec4 O, vec2 U ){\n\n\tvec2 R = iResolution.xy;\n    U = (U+U-R)/R.y;\n    float a = atan(U.y,U.x), r=length(U), A;   \n    O -= O;  \n    d d d \n  //O *= vec4(.8,1,.3,1); O.g = sqrt(O.g);\n}\n/**/\n\n\n\n/**  // 234 chars\n\n#define A  7./3.*a + iTime\n#define d  O += .1*(1.+cos(A)) / length(vec2( fract(a*50./6.283)-.5, 16.*(length(U)-.2*sin(A)-.5))); a += 6.283;\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\n    U = (U+U-(O.xy=iResolution.xy))/O.y;\n    float a = atan(U.y,U.x);\n    \n\tO -= O;  \n    d d d\n}\n/**/\n\n\n\n/**  // expanded version \n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tvec2 R = iResolution.xy;\n    U = (U+U-R)/R.y;\n    float a = atan(U.y,U.x), r=length(U), A, d;\n    \n\tO -= O;  \n   \n    for (int i=0; i<3; i++ ) { \n        A = 7./3.*a + iTime;       // param of 1 nested curve. Fractional -> 3*(7/3) to complete a loop\n        R = vec2( fract(a*50./6.283)-.5, 16.*(r-.2*sin(A)-.5)); // texture param along ribbon\n        d = smoothstep(.5,0.,length(R)); // small disks\n        O += (1.+cos(A)) * d;            // modulates and cumulates\n        a += 6.283;                      // next nested curve\n    }\n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}