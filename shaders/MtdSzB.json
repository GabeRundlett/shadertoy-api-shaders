{
    "Shader": {
        "info": {
            "date": "1480404186",
            "description": "Cosine gradient + line-art testing",
            "flags": 0,
            "hasliked": 0,
            "id": "MtdSzB",
            "likes": 3,
            "name": "EndlessGradientsMk1",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "lukexi",
            "viewed": 558
        },
        "renderpass": [
            {
                "code": "\n\n\nfloat smoothedge(float v) {\n    return smoothstep(0.0, 1.0 / iResolution.x, v);\n}\n\nfloat ring(vec2 p, float radius, float width) {\n  return abs(length(p) - radius * 0.5) - width;\n}\n\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) - \n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvec3 replace(vec3 color, float mask, vec3 maskColor) {\n    return (1.0-mask)*color+mask*maskColor;\n}\n\nfloat cos01(float phase) {\n    return cos(phase) * 0.5 + 0.5;\n}\nfloat rescale01(float low, float high, float value) {\n    return low + value*(high - low);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x*=iResolution.x/iResolution.y;\n    st.x-=0.4;\n    \n    float speed = 4.;\n\tfloat phase = st.x * 6.28*2. + iTime*speed;\n    \n    // Phase-shifted cosine gradients\n    float r = rescale01(0., 1., cos01(phase*0.9 + 0.5));\n    float g = rescale01(0., 1., cos01(phase*0.8 + 0.2));\n    float b = rescale01(0., 1., cos01(phase*0.7 + 4.0));\n    vec3 gradient = vec3(r,g,b);\n    \n    // Background color\n    vec3 outcol = vec3(0.050,0.038,0.055);\n    // Plot rgb values\n    outcol = replace(outcol, plot(st, r), vec3(1.0,0.0,0.0));\n    outcol = replace(outcol, plot(st, g), vec3(0.0,1.0,0.0));\n    outcol = replace(outcol, plot(st, b), vec3(0.0,0.0,1.0));\n\t\n    // Mask with distance field ring\n    float d = 1.0;\n    d = min(d, ring(st - vec2(0.5,0.5), 0.500, 0.036));\n    float shapemask = 1.-smoothedge(d);\n    \n    outcol = replace(outcol, shapemask, gradient);\n    \n    fragColor = vec4(outcol,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}