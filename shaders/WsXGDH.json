{
    "Shader": {
        "info": {
            "date": "1545957985",
            "description": "I replaced chessboard with the spirals.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsXGDH",
            "likes": 5,
            "name": "endless hypnotic spirals",
            "published": 3,
            "tags": [
                "spiral",
                "endless",
                "loop",
                "rotation",
                "perspective",
                "double"
            ],
            "usePreview": 0,
            "username": "morisil",
            "viewed": 599
        },
        "renderpass": [
            {
                "code": "#define SCALE 3.0\n\n#define SCENE_ROTATION_SPEED -0.1\n\n#define PLANE_ROTATION_SPEED 0.3\n\n#define EDGE_SHARPNESS 20000.0\n\n#define AIR_PERSPECTIVE 2.0\n\n#define SPIRAL_SPEED 5.0\n\nmat2 rotate2d(float angle){\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pixel = (fragCoord -.5 * iResolution.xy) / iResolution.y;\n    pixel *= rotate2d(iTime * SCENE_ROTATION_SPEED);\n    vec2 trans = vec2(pixel.x / pixel.y, 1.0 / pixel.y);\n    trans *= rotate2d(iTime * PLANE_ROTATION_SPEED);    \n    trans *= SCALE;\n    \n    vec2 inner = mod(trans, 2.0) - vec2(1);\n    float angle = atan(inner.x, inner.y);\n    float dist = length(inner);\n    float luminance = sin(dist * 16.0 + angle - (iTime * SPIRAL_SPEED));\n\n    // apply air perspective\n    luminance *= pow(abs(pixel.y * 2.0), AIR_PERSPECTIVE);\n    fragColor = vec4(vec3(luminance),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}