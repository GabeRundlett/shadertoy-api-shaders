{
    "Shader": {
        "info": {
            "date": "1622243078",
            "description": "Draw a conduction mask to the right and create an action potential on the left. This is the way neurons communicate and how muscles are controlled. I think that in order to make circuitry you need a 1 way conductor...?",
            "flags": 32,
            "hasliked": 0,
            "id": "7tsGW7",
            "likes": 15,
            "name": "Bio Circuit",
            "published": 3,
            "tags": [
                "reactiondiffusion"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 579
        },
        "renderpass": [
            {
                "code": "Main {\n    Q = get_Q(U);\n    if (U.x<.5*R.x)\n    Q = sin(Q.x*10.+Q.y+vec4(1,2,3,4));\n    vec4 M = get_M(U);\n    Q = mix(vec4(0),Q,M.x);\n        if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.||abs(U.x-R.x*.5)<4.) Q = vec4(1);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "Main {\n    Q = get_Q(U);\n    vec4 M = get_M(U);\n        vec4 \n            p = mouse,\n\t\t\tn = get_Q(U+vec2(0,1)),\n\t\t\te = get_Q(U+vec2(1,0)),\n\t\t\ts = get_Q(U-vec2(0,1)),\n\t\t\tw = get_Q(U-vec2(1,0)),\n\t\t\tl = 0.25*(n.x+e+s+w-4.*Q);\n\t\tfloat dt = M.x;\n\t\tfloat m = Q.x*Q.y*(1.-Q.x);\n\t\tQ.x += dt*(l.x+m-1e-3-.3*Q.x);\n\t\tQ.y += dt*(-m+2e-3*(1.-Q.y));\n\t\tQ.xy = max(Q.xy,0.);\n\t\tif (iFrame <1&&length(U.xy-0.5*R.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (U.x<.5*R.x&&iMouse.z>0.&&length(U.xy-iMouse.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (iFrame<1) {\n\t\t\tQ = vec4(0);\n\t\t}\n\t\tif (iMouse.z>0.) {\n\t\t\tfloat l = ln(U,p.xy,p.zw);\n\t\t\t\n\t\t\tvec2 u = U.xy-iMouse.xy;\n\t\t\tM = mix(M,vec4(1),.01*exp(-.01*dot(u,u)));\n       }\n\t\tif (iFrame < 1)\n\t\t\tM = vec4(0);\n        if (U.x>.5*R.x) Q = M;\n        \n        if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.||abs(U.x-R.x*.5)<4.) Q = vec4(0);\n        if (length(U-0.5*R)<1.) {\n            if (iMouse.z>0.) {\n                if (p.z>0.) Q =  vec4(iMouse.xy,p.xy);\n                else Q =  vec4(iMouse.xy,iMouse.xy);\n            }\n            else Q = vec4(-iResolution.xy,-iResolution.xy);\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define get_Q(U) A(U)\n#define get_M(U) A(mod((U),vec2(.5*R.x,R.y))+vec2(.5*R.x,0))\n#define mouse A(.5*R)\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n    Q = get_Q(U);\n    vec4 M = get_M(U);\n        vec4 \n            p = mouse,\n\t\t\tn = get_Q(U+vec2(0,1)),\n\t\t\te = get_Q(U+vec2(1,0)),\n\t\t\ts = get_Q(U-vec2(0,1)),\n\t\t\tw = get_Q(U-vec2(1,0)),\n\t\t\tl = 0.25*(n.x+e+s+w-4.*Q);\n\t\tfloat dt = M.x;\n\t\tfloat m = Q.x*Q.y*(1.-Q.x);\n\t\tQ.x += dt*(l.x+m-1e-3-.3*Q.x);\n\t\tQ.y += dt*(-m+2e-3*(1.-Q.y));\n\t\tQ.xy = max(Q.xy,0.);\n\t\tif (iFrame <1&&length(U.xy-0.5*R.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (U.x<.5*R.x&&iMouse.z>0.&&length(U.xy-iMouse.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (iFrame<1) {\n\t\t\tQ = vec4(0);\n\t\t}\n\t\tif (iMouse.z>0.) {\n\t\t\tfloat l = ln(U,p.xy,p.zw);\n\t\t\t\n\t\t\tvec2 u = U.xy-iMouse.xy;\n\t\t\tM = mix(M,vec4(1),.01*exp(-.01*dot(u,u)));\n       }\n\t\tif (iFrame < 1)\n\t\t\tM = vec4(0);\n        if (U.x>.5*R.x) Q = M;\n        \n        if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.||abs(U.x-R.x*.5)<4.) Q = vec4(0);\n        if (length(U-0.5*R)<1.) {\n            if (iMouse.z>0.) {\n                if (p.z>0.) Q =  vec4(iMouse.xy,p.xy);\n                else Q =  vec4(iMouse.xy,iMouse.xy);\n            }\n            else Q = vec4(-iResolution.xy,-iResolution.xy);\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    Q = get_Q(U);\n    vec4 M = get_M(U);\n        vec4 \n            p = mouse,\n\t\t\tn = get_Q(U+vec2(0,1)),\n\t\t\te = get_Q(U+vec2(1,0)),\n\t\t\ts = get_Q(U-vec2(0,1)),\n\t\t\tw = get_Q(U-vec2(1,0)),\n\t\t\tl = 0.25*(n.x+e+s+w-4.*Q);\n\t\tfloat dt = M.x;\n\t\tfloat m = Q.x*Q.y*(1.-Q.x);\n\t\tQ.x += dt*(l.x+m-1e-3-.3*Q.x);\n\t\tQ.y += dt*(-m+2e-3*(1.-Q.y));\n\t\tQ.xy = max(Q.xy,0.);\n\t\tif (iFrame <1&&length(U.xy-0.5*R.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (U.x<.5*R.x&&iMouse.z>0.&&length(U.xy-iMouse.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (iFrame<1) {\n\t\t\tQ = vec4(0);\n\t\t}\n\t\tif (iMouse.z>0.) {\n\t\t\tfloat l = ln(U,p.xy,p.zw);\n\t\t\t\n\t\t\tvec2 u = U.xy-iMouse.xy;\n\t\t\tM = mix(M,vec4(1),.01*exp(-.01*dot(u,u)));\n       }\n\t\tif (iFrame < 1)\n\t\t\tM = vec4(0);\n        if (U.x>.5*R.x) Q = M;\n        \n        if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.||abs(U.x-R.x*.5)<4.) Q = vec4(0);\n        if (length(U-0.5*R)<1.) {\n            if (iMouse.z>0.) {\n                if (p.z>0.) Q =  vec4(iMouse.xy,p.xy);\n                else Q =  vec4(iMouse.xy,iMouse.xy);\n            }\n            else Q = vec4(-iResolution.xy,-iResolution.xy);\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    Q = get_Q(U);\n    vec4 M = get_M(U);\n        vec4 \n            p = mouse,\n\t\t\tn = get_Q(U+vec2(0,1)),\n\t\t\te = get_Q(U+vec2(1,0)),\n\t\t\ts = get_Q(U-vec2(0,1)),\n\t\t\tw = get_Q(U-vec2(1,0)),\n\t\t\tl = 0.25*(n.x+e+s+w-4.*Q);\n\t\tfloat dt = M.x;\n\t\tfloat m = Q.x*Q.y*(1.-Q.x);\n\t\tQ.x += dt*(l.x+m-1e-3-.3*Q.x);\n\t\tQ.y += dt*(-m+2e-3*(1.-Q.y));\n\t\tQ.xy = max(Q.xy,0.);\n\t\tif (iFrame <1&&length(U.xy-0.5*R.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (U.x<.5*R.x&&iMouse.z>0.&&length(U.xy-iMouse.xy)<10.)\n\t\t\tQ.x = 1.;\n\t\tif (iFrame<1) {\n\t\t\tQ = vec4(0);\n\t\t}\n\t\tif (iMouse.z>0.) {\n\t\t\tfloat l = ln(U,p.xy,p.zw);\n\t\t\t\n\t\t\tvec2 u = U.xy-iMouse.xy;\n\t\t\tM = mix(M,vec4(1),.01*exp(-.01*dot(u,u)));\n       }\n\t\tif (iFrame < 1)\n\t\t\tM = vec4(0);\n        if (U.x>.5*R.x) Q = M;\n        \n        if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.||abs(U.x-R.x*.5)<4.) Q = vec4(0);\n        if (length(U-0.5*R)<1.) {\n            if (iMouse.z>0.) {\n                if (p.z>0.) Q =  vec4(iMouse.xy,p.xy);\n                else Q =  vec4(iMouse.xy,iMouse.xy);\n            }\n            else Q = vec4(-iResolution.xy,-iResolution.xy);\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}