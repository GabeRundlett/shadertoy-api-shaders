{
    "Shader": {
        "info": {
            "date": "1671959429",
            "description": "nothing here.",
            "flags": 0,
            "hasliked": 0,
            "id": "cllGRB",
            "likes": 1,
            "name": "My fifth Raytracer",
            "published": 3,
            "tags": [
                "raytracing",
                "ray",
                "cube",
                "texture",
                "shadow",
                "sphere",
                "fog",
                "red",
                "green",
                "ball",
                "orb",
                "blue",
                "box",
                "checkred"
            ],
            "usePreview": 0,
            "username": "SONENEIS",
            "viewed": 208
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a){return mat2(cos(a),-sin(a),sin(a),cos(a));}\n\nstruct Hit{\n\tfloat t;\n\tvec3 nor;\n\tfloat id;\n} ehit = Hit(-1.0,vec3(0.0),-1.0);\n\nHit iUn(Hit a,Hit b){\n  if(b.t > 0.0 && b.t < a.t) return b;\n  return a;\n}\n\nHit iSphere(float id,vec3 ro,vec3 rd,float r){\n\tfloat b = dot(ro,rd);\n\tfloat c = dot(ro,ro) - r*r;\n\tfloat h = b*b - c;\n\tif(h < 0.0) return ehit;\n\th = sqrt(h);\n\tfloat t = -b - h;\n\tvec3 nor = (ro + t*rd) / r;\n\treturn Hit(t,nor,id);\n}\nHit iPlane(float id,vec3 ro,vec3 rd,vec4 p){\n  float k1 = dot(ro,p.xyz);\n  float k2 = dot(rd,p.xyz);\n  float t = (p.w-k1)/k2;\n  vec2 ab = (k2>0.0) ? vec2(t,1e20) : vec2(-1e20,t);\n  return Hit(ab.x,-p.xyz,id);\n}\nHit iBox(float id,vec3 ro,vec3 rd,vec3 b){\n\tvec3 m = 1.0/rd;\n\tvec3 n = m*ro;\n\tvec3 k = abs(m)*b;\n\tvec3 t1 = -n - k;\n\tvec3 t2 = -n + k;\n\tfloat tN = max(max(t1.x,t1.y),t1.z);\n\tfloat tF = min(min(t2.x,t2.y),t2.z);\n\tif(tN > tF || tF < 0.0) return ehit;\n\tvec3 nor = (tN>0.0) ? step(vec3(tN),t1) : step(t2,vec3(tF));\n\tnor *= -sign(rd);\n\treturn Hit(tN,nor,id);\n}\n\nHit raytrace(vec3 ro,vec3 rd){\n\tHit h = Hit(9999.9,vec3(0.0),-1.0);\n\n  h = iUn(h,iPlane(0.0,ro,rd,vec4(0,1,0,1.1)));\n  h = iUn(h,iPlane(0.0,ro,rd,vec4(0,-1,0,0.5)));\n  h = iUn(h,iPlane(0.0,ro,rd,vec4(1,0,0,0.75)));\n  h = iUn(h,iPlane(0.0,ro,rd,vec4(-1,0,0,0.75)));\n  h = iUn(h,iPlane(0.0,ro,rd,vec4(0,0,-1,0.1)));\n  \n  {\n    vec3 roo = ro;\n  \tvec3 rdd = rd;\n  \troo -= vec3(0,0,1.0);\n  \troo.zx *= rot(iTime);\n  \trdd.zx *= rot(iTime);\n  \tHit box = iBox(1.0,roo,rdd,vec3(0.3));\n  \tbox.nor.zx *= rot(-iTime);\n    h = iUn(h,box);\n  }\n  \n  {\n  \tvec3 roo = ro;\n  \tvec3 rdd = rd;\n  \troo -= vec3(0,-0.6,2.0);\n  \troo.zx *= rot(0.5);\n  \trdd.zx *= rot(0.5);\n  \tHit box = iBox(0.0,roo,rdd,vec3(0.2));\n  \tbox.nor.zx *= rot(-0.5);\n    h = iUn(h,box);\n  }\n  \n  h = iUn(h,iSphere(4.0,ro-vec3(0.0,-0.3,2.1),rd,0.1));\n  \n  //h = iUn(h,iSphere(1.0,ro-vec3(0,0,0.5),rd,0.5));\n  h = iUn(h,iSphere(2.0,ro-vec3(0.5,-0.25,1.0),rd,0.25));\n  h = iUn(h,iSphere(3.0,ro-vec3(-0.4,-0.3,1.5),rd,0.15));\n\n\treturn h;\n}\n\nvec3 getMaterial(float id,vec3 p,vec3 n){\n\tvec3 mate = vec3(0.0);\n    \n    p = p+.001*(1.-abs(sign(p)));\n    \n\tif(id == 0.0){\n\t\tmate += mod(floor(p.x*5.001)+floor(p.y*5.001)+floor(p.z*5.0),2.0);\n\t\tmate = 0.5+0.5*mate;\n\t\tmate = pow(mate,vec3(1.5)) * 0.5;\n\t}else if(id == 1.0){\n\t\tmate += vec3(1,0,0);\n\t}else if(id == 2.0){\n\t\tmate += vec3(0,1,0);\n\t}else if(id == 3.0){\n\t\tmate += vec3(0,0,1);\n\t}else if(id == 4.0){\n\t\tmate += vec3(1,0,0.2)*0.5+0.5*clamp(sin(p.x*100.0)+sin(p.y*100.0)+sin(p.z*100.0),0.0,1.0);\n\t}\n\t\n\treturn mate;\n}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord){\n  vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n  vec3 col = vec3(0.0);\n\n  vec3 ro = vec3(0.0,0.0,3.0);\n  vec3 rd = normalize(vec3(uv,-2.0));\n\n  //ro.y += 1.5;\n  //rd.zy *= rot(0.5);\n\n  //ro.xz *= rot(iTime*0.5);\n  //rd.xz *= rot(iTime*0.5);\n\n  Hit h = raytrace(ro,rd);\n\n  {\n  \tvec3 pos = ro + h.t*rd;\n  \tvec3 nor = h.nor;\n  \tvec3 ref = reflect(rd,nor);\n  \tvec3 mate = getMaterial(h.id,pos,nor);\n\n    {\n      vec3 lig = normalize(vec3(0.0,0.5,3.0)-pos);\n      float dif = clamp(dot(nor,lig),0.0,1.0);\n      float sha = step(1.0,raytrace(pos,lig).t);\n      dif  *= sha;\n      float spe = clamp(dot(ref,lig),0.0,1.0);\n      spe = 0.5*pow(spe,25.0);\n\n    \tcol += mate * dif;\n    \tcol += spe * dif;\n\n      vec3 bg = mix(vec3(0.2,0.8,1),vec3(0,0,1),rd.y);\n      col = mix(col,bg,clamp(0.001*h.t*h.t,0.0,1.0));\n    }\n\n    {\n    \tfloat dif = clamp(nor.y*0.5+0.5,0.0,1.0);\n\n    \tcol += 0.05 * vec3(0.2,0.8,1) * mate * dif;\n    }\n    \n    col *= vec3(1,0.6,0.6);\n  }\n\n  col = clamp(pow(col,vec3(1.0/2.2)),0.0,1.0);\n\n  fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}