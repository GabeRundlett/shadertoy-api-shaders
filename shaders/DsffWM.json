{
    "Shader": {
        "info": {
            "date": "1688827700",
            "description": "Curvy and green.",
            "flags": 0,
            "hasliked": 0,
            "id": "DsffWM",
            "likes": 4,
            "name": "Spicy Plasma",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "plasma"
            ],
            "usePreview": 0,
            "username": "space928",
            "viewed": 205
        },
        "renderpass": [
            {
                "code": "const float motionBlur = 0.3;\nconst float aa = 0.6;\nconst vec3 col1 = vec3(13., 45., 140.)/100.;\nconst vec3 col2 = vec3(255., 20., 50.)/255.;\nconst vec3 col3 = vec3(21., 191., 112.)/600.;\nconst vec3 col4 = vec3(0.35, 1., 0.7)*0.65;\nconst float speed = 0.1;\n\n// AA = 0, 1, 2\n#define AA 1\n\nfloat sigmoid(float x)\n{\n    return 1.*x/(abs(x)+1.);\n}\nvec3 sigmoid(vec3 x)\n{\n    return x/(abs(x)+vec3(1.));\n}\nvec3 saturate(vec3 x)\n{\n    return clamp(x, 0., 1.);\n}\nvec3 blend(float x, vec3 c)\n{\n    c = pow(c, vec3(x+2.));\n    return mix(x*c, x*(1.-c), step(x, 0.));\n}\n\nfloat f(vec2 p, float t, vec4 o, vec4 o1, float s, vec4 scale)\n{\n    vec4 i0 = cos(t+o)*vec4(o.xw, o1.xw);\n    vec4 i1 = sin(t+o1)*vec4(o.xw, o1.xw);\n    vec4 x0 = i0*s*sin(scale*length(p*o.xy+4.*scale.zw)+o.z+t*o.w);\n    vec4 x1 = i1*s*sin(scale*length(p*o1.xy)+o1.z+t*o1.w);\n    return sigmoid(dot(x0+x1, vec4(1.)));\n}\n\nvec3 scene(float t, float emphasis, vec2 uv)\n{\n    // \"Beautiful\" randomness, tuned for aesthetics, not performance\n    vec2 p = uv * 3.;\n    t += 160.;\n    t *= speed;\n    vec4 scale = vec4(sin(t*vec3(0.25, .5, .75)), cos(t*.95))*.25+.5;\n    float s0 = f(p, t, vec4(6.,9.,2.,1.5), vec4(2.,9.,7.,3.), .25, scale);\n    float s1 = f(p, t, vec4(2.,6.5,1.5,4.0), vec4(3.,2.5,3.8,1.6), .5, scale);\n    float s2 = sigmoid(s0/s1)*0.5;\n    float s3 = f(p, t, vec4(2.,9.,7.,3.), vec4(6.,3.,2.,1.5), .125, scale);\n    float s6 = f(p*1.5, t, vec4(6.,4.,8.,2.5), vec4(3.2,1.6,9.7,7.9), .25, scale);\n    float s7 = f(p*1.3, t, vec4(2.,6.5,1.5,4.0), vec4(3.,2.5,3.8,1.6), .5, scale);\n    float s8 = sigmoid(s6/s7+s0)*0.7;\n    \n    vec3 c = vec3(sigmoid((blend(s8,col1)+blend(s2,col2)+blend(s1,col3)+s7*1.)*1.1)*.7+.5);\n    float grad = sigmoid(pow(length(uv*2.-1.)+s3*.3, 5.))*1.5;\n    float accent = 1.-sigmoid((pow(2.5, abs(sigmoid(s8+s0+s1))-1.)-.45-(emphasis*0.1))*1000./(1.+30.*grad+20.*emphasis));\n    c = mix(c, c.r*.3+col4*.8, accent);\n    return clamp(vec3(c), 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n    float aaScale = 1./iResolution.x;\n\n    vec2 mouse = uv-iMouse.xy/iResolution.xx;\n    float emp = sigmoid(1./pow(length(mouse*1.), 1.8)*.02);\n\n    // Time varying pixel color\n    vec3 col = scene(iTime, emp, uv);\n    #ifdef AA\n    #if AA >= 1\n    col     += scene(iTime + motionBlur*0.001, emp, uv + aaScale*aa*vec2(0.,1.))\n             + scene(iTime + motionBlur*0.002, emp, uv + aaScale*aa*vec2(1.,0.));\n    #endif\n    #if AA >= 2\n    col     += scene(iTime + motionBlur*0.003, emp, uv + aaScale*aa*vec2(0.,-1.))\n             + scene(iTime + motionBlur*0.004, emp, uv + aaScale*aa*vec2(-1.,0.))\n             + scene(iTime + motionBlur*0.005, emp, uv + aaScale*aa*vec2(1.,1.))\n             + scene(iTime + motionBlur*0.006, emp, uv + aaScale*aa*vec2(1.,-1.))\n             + scene(iTime + motionBlur*0.007, emp, uv + aaScale*aa*vec2(-1.,1.));\n    col /= 8.;\n    #elif AA >= 1\n    col /= 3.;\n    #endif\n    #endif\n\n    // Output to screen\n    fragColor = vec4(vec3(col), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}