{
    "Shader": {
        "info": {
            "date": "1528461783",
            "description": "lots of testing here",
            "flags": 0,
            "hasliked": 0,
            "id": "lsVfDz",
            "likes": 1,
            "name": "testing mandel",
            "published": 3,
            "tags": [
                "testing",
                "pretty"
            ],
            "usePreview": 0,
            "username": "tiggerbiggo",
            "viewed": 475
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 A = vec3(sin(iTime*0.416),cos(iTime*0.728),sin(cos(iTime)));\n\tvec3 B = vec3(1) - A;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n    \n    uv = uv * 4.5;\n    uv = uv - vec2(2);\n    \n    //uv = uv.yx;\n    \n    int n = 600;\n    \n    uv = mandel(uv, n, 0.1);\n    \n    float d = uv.x + uv.y;\n    d += iTime*0.1;\n    d = sin(mod(d, 1.0)*3.1415);\n\n    // Time varying pixel color\n    vec3 col = mix(A, B, d);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mandel(vec2 c, int iter, float multiplier){\n    vec2 z = vec2(0);\n\n    for (int i = 0; i < iter; i++) {\n        //set a and b from the current z value\n        float a = z.x;\n        float b = z.y;\n\n        //perform calculation for this iteration\n        z = vec2(\n            (a * a) - (b * b) + c.y,\n            (2.0 * a * b) + c.x\n        );\n\n        //check for out of bounds\n        if (length(z)*length(z) > float(1 << 16)) {\n            float smth = float(i + 1) - log(log(length(z))) / log(2.0);\n            return vec2(smth * multiplier);\n        }\n    }\n    //edge case to return zero if never escapes\n    return vec2(0);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}