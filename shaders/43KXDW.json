{
    "Shader": {
        "info": {
            "date": "1719955633",
            "description": "fractional brownian motion",
            "flags": 0,
            "hasliked": 0,
            "id": "43KXDW",
            "likes": 1,
            "name": "simple smoke with grid function",
            "published": 3,
            "tags": [
                "2d",
                "fbm",
                "iterative"
            ],
            "usePreview": 0,
            "username": "CuleGamer",
            "viewed": 109
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, in vec2 I)\n{\n    float val;\n    vec3 col;\n    vec2 uvNew;\n    vec2 uv = (2. * I - iResolution.xy)/iResolution.y;\n    for(float i; i < 8.; i++)\n    {\n        uvNew += exp2(-i) * vecGrid(mat2(hash41(i)) * ((uv + iTime * hash21(i)) * exp2(i)));\n    }\n    val = atan(uvNew.y, uvNew.x) * .31830988618;\n    col = vec3(val);\n    O = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return 2. * fract((p3.xx+p3.yz)*p3.zy) - 1.;\n\n}\n\nvec4 hash41(float p)\n{\n\tvec4 p4 = fract(vec4(p) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return 2. * fract((p4.xxyz+p4.yzzw)*p4.zywx) - 1.;\n}\n\nvec2 vecGrid(vec2 uv)\n{\n    return abs(fract(uv) - 0.5);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}