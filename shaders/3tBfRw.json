{
    "Shader": {
        "info": {
            "date": "1598535191",
            "description": "Difference between bilinear interpolation of color and the effect you get from vertex colors with a triangulated quad",
            "flags": 0,
            "hasliked": 0,
            "id": "3tBfRw",
            "likes": 0,
            "name": "vertex color interp vs bilinear",
            "published": 3,
            "tags": [
                "filtering"
            ],
            "usePreview": 0,
            "username": "danielsturk",
            "viewed": 206
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 x0y0 = vec3(1,0,0);\n    vec3 x1y0 = vec3(0,1,0);\n    vec3 x0y1 = vec3(0,0,1);\n    vec3 x1y1 = vec3(.5,.5,.5);\n    \n    vec3 x0 = mix(x0y0, x0y1, uv.y);\n    vec3 x1 = mix(x1y0, x1y1, uv.y);\n    vec3 bilinear = mix(x0, x1, uv.x);\n    \n    vec3 triangular;\n    if(uv.x + uv.y < 1.) {\n    \ttriangular = x0y1 * uv.y + x1y0 * uv.x + x0y0 * (1. - uv.x - uv.y);\n    } else {\n    \ttriangular = x1y0 * (1. - uv.y) + x0y1 * (1. - uv.x) + x1y1 * (uv.x + uv.y - 1.);\n    }\n\n    fragColor = vec4(fract(iTime) < .5 ? bilinear : triangular,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}