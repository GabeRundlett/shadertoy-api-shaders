{
    "Shader": {
        "info": {
            "date": "1701512317",
            "description": "5",
            "flags": 0,
            "hasliked": 0,
            "id": "ctcBWB",
            "likes": 1,
            "name": "ShaderToy_5_R/T/S",
            "published": 3,
            "tags": [
                "learning"
            ],
            "usePreview": 0,
            "username": "tbx",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\n#define COUNT 20.0\n\nfloat drawCoord(vec2 uv)\n{\n   float x = distance(vec2(uv.x, 0.0), vec2(0.0, 0.0));\n   float y = distance(vec2(0.0, uv.y), vec2(0.0, 0.0));\n   \n   return 1e-3 / x + 1e-3 / y;\n}\n\nfloat net(vec2 coord)\n{\n    float xline = cos(coord.x * PI * COUNT);\n    xline = step(1.0 - 1e-1, xline);\n    \n    float yline = cos(coord.y * PI * COUNT);\n    yline = step(1.0 - 1e-1, yline);\n    \n    return xline + yline;\n}\n\nmat2 toRotate(float angle)\n{\n    mat2 rotate = mat2(cos(angle), -sin(angle),\n                    sin(angle), cos(angle));\n    return rotate;\n}\n\nfloat start(vec2 uv, vec2 p, float rotate, float scale)\n{\n    mat2 rotateMat = toRotate(rotate);\n    \n    uv -= p;\n    uv = rotateMat * uv;\n    uv *= (1.0 + 1e-1/scale);\n    uv += p;\n\n    float dx = 1.0 - distance(vec2(uv.x, 0.0), vec2(p.x, 0.0));\n    float dy = 1.0 - distance(vec2(0.0, uv.y), vec2(0.0, p.y));\n    \n    dx = clamp(dx, 0.0, 1.0);\n    dy = clamp(dy, 0.0, 1.0);\n    \n    dx *= dx;\n    dy *= dy;\n    \n    dx *= dx;\n    dy *= dy;\n    \n    dx *= dx;\n    dy *= dy;\n    \n    return dx * dy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float asp = iResolution.x / iResolution.y;\n    \n    vec2 coord = uv * 2.0 - 1.0;\n    \n    vec2 aspCoord = vec2(coord.x * asp, coord.y);\n    \n    vec3 col = vec3(0.0);\n    \n    col += net(aspCoord) * 0.125;\n    \n    col += drawCoord(aspCoord);\n    \n    vec3 baseCol = vec3(0.1, 0.3, 0.6) * 4.0;\n    \n    col += start(aspCoord, vec2(0.5), iTime * 0.5, 1.0) * baseCol;\n    col += start(aspCoord, vec2(-0.5, 0.5), iTime * 1.0, 0.5) * baseCol;\n    col += start(aspCoord, vec2(-0.5), iTime * 1.5, 0.25) * baseCol;\n    col += start(aspCoord, vec2(0.5, -0.5), iTime * 2.0, 0.125) * baseCol;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}