{
    "Shader": {
        "info": {
            "date": "1517072185",
            "description": "other greek friezes here: [url]https://www.shadertoy.com/results?query=frieze[/url]\n\n option:  U.x -= .1*fract(U.y);  after U = ... ; \noption: float y = ceil(U.y), s = sign(mod(y,2.)-.5);  then *s in cos and/or smoothstep",
            "flags": 0,
            "hasliked": 0,
            "id": "ll2fWG",
            "likes": 23,
            "name": "wave greek frieze (156 chars)",
            "published": 3,
            "tags": [
                "waves",
                "patterns",
                "2tweets",
                "short",
                "greek",
                "frieze"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 958
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, vec2 u) {\n    vec2 U = 8.*u/iResolution.y;\n    U.y = dot( cos( 3.* ceil(U.y) * max(0.,.5-length(U = fract(U)-.5)) - vec2(33,0) ), U);\n    O += smoothstep(-1.,1.,U/fwidth(U)).y; }\n  \n        \n        \n        \n/** // 166 chars\n             \n#define mainImage(O,u)                         \\\n\tvec2 R = iResolution.xy,                   \\\n         U = 8.*u/R.y;                         \\\n    U.y = dot( cos( 3.* ceil(U.y) * max(0.,.5-length(U = fract(U)-.5)) - vec2(33,0) ), U); \\\n\tO += smoothstep(-1.,1.,U.y/fwidth(U.y))\n        \n/**/\n        \n        \n        \n/** // 168 chars\n\n#define mainImage(O,u)                         \\\n\tvec2 R = iResolution.xy,                   \\\n         U = 8.*u/R.y;                         \\\n    U *= mat2(cos( 3.* ceil(U.y) * max(0.,.5-length(U = fract(U)-.5)) + vec4(0,33,55,0) )); \\\n\tO += smoothstep(-1.,1.,U.y/fwidth(U.y))\n        \n/**/\n        \n        \n        \n/**  // 188 chars\n\n#define mainImage(O,u)                         \\\n\tvec2 R = iResolution.xy,                   \\\n         U = 8.*u/R.y;                         \\\n    float a = 1.5*ceil(U.y) * max(0.,1.-2.*length(U = fract(U)-.5)); \\\n    U *= mat2(cos(a),-sin(a),sin(a),cos(a));   \\\n\tO += smoothstep(-1.,1.,U.y/fwidth(U.y))\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}