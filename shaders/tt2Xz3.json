{
    "Shader": {
        "info": {
            "date": "1566662484",
            "description": "video filter experiment",
            "flags": 32,
            "hasliked": 0,
            "id": "tt2Xz3",
            "likes": 9,
            "name": "Pixel vandam",
            "published": 3,
            "tags": [
                "videofilter"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 423
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define GR vec3(39,139,29)/255.\n#define hue(h) clamp( abs( fract(h + vec4(3,2,1,0)/3.) * 6. - 3.) -1. , 0., 1.)\n\nfloat rand(vec2 co) { \n    return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ruv = (fragCoord - iResolution.xy*.5)/iResolution.y;     \n        \n    vec3 vcol = texture(iChannel0, uv).rgb;\n    vec3 bcol = texture(iChannel1, uv).rgb;\n           \n    vec3 vcs = abs(vcol - GR);\n    float vcm = (vcs.r+vcs.g+vcs.b);\n    float vw = clamp(vcm, 0., 1.);\n        \n    vec3 col = vw < .3 ? vec3(1.) : hue(iTime*.5 + rand(floor(ruv*100.))).rgb;\n    \n    col = mix(col, bcol, .9);\n    \n    fragColor = vec4(col,1.0);    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}