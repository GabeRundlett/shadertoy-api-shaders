{
    "Shader": {
        "info": {
            "date": "1677769101",
            "description": "A hexagon grid distorted to look like an orb",
            "flags": 0,
            "hasliked": 0,
            "id": "cst3zj",
            "likes": 20,
            "name": "Hexagonal grid orb",
            "published": 3,
            "tags": [
                "grid",
                "hexagon",
                "orb"
            ],
            "usePreview": 0,
            "username": "Larbagar",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "#define hexCount 3.\n#define rotSpeed 0.2\n#define moveSpeed vec2(0.5, 1.)\n\n\n#define palette 2\n\n#if(palette == 1)\n    #define hexCol vec3(0.25, 0.75, 0.5)\n    #define glowCol vec3(0., 0.25, 0.5)\n#elif(palette == 2)\n    #define hexCol vec3(0.25, 0.75, 0.5)\n    #define glowCol vec3(0., 0.15, 0.25)\n#elif(palette == 3)\n    #define hexCol vec3(0.5, 0.5, 0.)\n    #define glowCol vec3(0.25, 0.15, 0.)\n#elif(palette == 4)\n    #define hexCol vec3(0.5, 0.5, 0.)\n    #define glowCol vec3(0.5, 0.25, 0.)\n#elif(palette == 5)\n    #define hexCol vec3(0.5, 0.5, 0.5)\n    #define glowCol vec3(0., 0., 0.25)\n#else\n    #define hexCol vec3(1.)\n    #define glowCol vec3(1.)\n#endif\n\nvec2 gridDist(vec2 pos){\n    vec2 grid = vec2(2.*sqrt(3.), 2.);\n    return vec2(\n        abs(pos - round(pos/grid)*grid)\n    );\n}\n\nfloat hexDist(vec2 pos){\n    vec2 d1 = gridDist(pos);\n    vec2 d2 = gridDist(pos - vec2(sqrt(3.), 1.));\n    \n    vec2 apothem = vec2(sqrt(3.)/2., .5);\n    \n    return min(\n        max(d1.y, dot(d1, apothem)),\n        max(d2.y, dot(d2, apothem))\n    );\n}\nfloat zoomFunc(float len){\n\n    //return len;\n    //return len/sqrt(1.5 - len*len);\n    //return len/(1. + cos(len*3.1415/2.));\n    //return len/(1. + 2.*smoothstep(1., 0.75, len));\n    return asin(len);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (fragCoord*2. - iResolution.xy)/iResolution.y;\n\n    float len = length(pos);\n\n    vec2 hexCoord = pos/len*zoomFunc(len);\n    float angle = iTime*rotSpeed;\n    hexCoord *= mat2(\n        cos(angle), sin(angle),\n        -sin(angle), cos(angle)\n    );\n    hexCoord = hexCoord*hexCount + moveSpeed*iTime;\n    \n    float hexDist = hexDist(hexCoord);\n\n    float hexAmt = 0.;\n    hexAmt += smoothstep(0.9, 0.95, hexDist);\n    hexAmt += pow(hexDist, 5.);\n    hexAmt *= smoothstep(1., 0.9, len);\n    \n    float glowAmt = sqrt(1. - len*len);\n    \n    vec3 col = hexCol*hexAmt + glowCol*glowAmt;\n\n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}