{
    "Shader": {
        "info": {
            "date": "1583282282",
            "description": "Simple feedback example",
            "flags": 32,
            "hasliked": 0,
            "id": "wtVXz3",
            "likes": 3,
            "name": "simple feedback example",
            "published": 3,
            "tags": [
                "texcoords",
                "feedback",
                "offset"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 402
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Scale of the noise determines the density of flow\n    vec4 noise = texture(iChannel1, uv * 0.25 + sin(iTime * 3.0 ) * 0.01);\n    \n    // The distortino amount is just the red and green channels of the noise multiplied by some value\n    vec2 distortion = noise.rg * vec2(0.005, 0.01);\n    \n    // Add the distortion to the uv's\n    vec4 lastFrame = texture(iChannel2, uv + distortion);\n    \n    // Output color\n    fragColor = lastFrame;\n        \n    // In the beginning, seed the feedback with an image\n    // Also reset every now and then\n    if(iTime < 0.1 || mod(iTime, 5.0) < 0.5){\n\n\t\tfragColor = texture(iChannel1, uv);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}