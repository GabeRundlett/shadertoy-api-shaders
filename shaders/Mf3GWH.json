{
    "Shader": {
        "info": {
            "date": "1711615351",
            "description": "a cool funky static texture. remove iTime in line 25 to see GPU errors.",
            "flags": 0,
            "hasliked": 0,
            "id": "Mf3GWH",
            "likes": 1,
            "name": "funky static",
            "published": 3,
            "tags": [
                "noise",
                "color",
                "static",
                "pixels",
                "band"
            ],
            "usePreview": 0,
            "username": "Falafel",
            "viewed": 185
        },
        "renderpass": [
            {
                "code": "\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n//https://www.shadertoy.com/view/mtyGWy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i=831.0; i< 2049.0; i+= 1000.) {\n    \n    uv = uv * 10000.0 + iTime;\n    int x = int(uv.x);\n    int y = int(uv.y);\n    \n    uv = vec2(int(uv.x - mod(uv.x, i)), int(uv.y - mod(uv.y, i)));\n    \n    finalColor = (finalColor + palette( mod((uv.x + uv.y * iResolution.x) * (uv.x + uv.y * iResolution.x + 1.0) * 7919.0, 200.0) / 1000.0 + iTime)) / 1.7;\n    \n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}