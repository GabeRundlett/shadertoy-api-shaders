{
    "Shader": {
        "info": {
            "date": "1649878949",
            "description": "right side is buggy + could use fract instead of mod\n\njust got this from messing around, I quite like the left side",
            "flags": 0,
            "hasliked": 0,
            "id": "sljcRG",
            "likes": 5,
            "name": "Little patterns 2423425",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 206
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float si = 54.;\n    vec2 ipos = floor(si * (vec2(1,5) + uv));\n   \n    float sc = pi * floor(2.5 + 0.25 * (ipos.x - ipos.y)/si + 0.5 * iTime);\n    \n    // sc2 = 1. gives noise pattern\n    // sc2 = pi gives repeated pattern\n    float sc2 = mix(1., pi, step(0., uv.x)); // gives a noise-like pattern\n    \n    float m = 0.5 * mod(sc * (ipos.y * cos(sc2 * ipos.x) \n                            + ipos.x * cos(sc2 * ipos.y)), 2.);\n                           \n    // do 0.5 * cos(...) for a cool effect\n    m = 0.5 + 0.5 * step(0.5 + 0. * cos(ipos.x/si + iTime), m);\n\n    vec3 e = vec3(0.5);\n    vec3 col = vec3(m);\n    col *= pal(0.25 * (uv.y + uv.x), e, e, e, 0.5 * vec3(0,1,2)/3.); \n    col *= 1. - pow(4. * uv.y * uv.y, 4.);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n#define ths(a,b) tanh(a*sin(b))/tanh(a)\n#define sabs(x) sqrt(x*x)\n//#define sabs(x, k) sqrt(x*x+k)-0.1\n\n#define Rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n\nfloat cc(float a, float b) {\n    float f = thc(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nfloat cs(float a, float b) {\n    float f = ths(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21(vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nfloat mlength(vec3 uv) {\n    return max(max(abs(uv.x), abs(uv.y)), abs(uv.z));\n}\n\nfloat smin(float a, float b) {\n    float k = 0.12;\n    float h = clamp(0.5 + 0.5 * (b-a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}