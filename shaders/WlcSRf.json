{
    "Shader": {
        "info": {
            "date": "1581390667",
            "description": "This is the golfed version of archee's amazing \"press play on tape\" shader:\n[url]https://www.shadertoy.com/view/XtGXzW[/url]\n\nPlease help me make this smaller.\nThank you",
            "flags": 96,
            "hasliked": 0,
            "id": "WlcSRf",
            "likes": 6,
            "name": "Small Image Loader - 146 chars",
            "published": 3,
            "tags": [
                "2d",
                "image"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 581
        },
        "renderpass": [
            {
                "code": "// Greg's old code\n// #define mainImage(o,u) o = texture(iChannel0, u / iResolution.xy)\n\nvoid mainImage(out vec4 o, vec2 u) {mi(o,u);}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Greg's old code:\n/*\n#define mainImage(O,u)                    \\\n    vec2 U=u, R = iResolution.xy;         \\\n    U.y -= fract(iTime*20. * R.x/512.);   \\\n    O += U.y<1. ? texture(iChannel1, vec2((ceil( (1.- U.x/R.x) *512.)+.5)/512.,0 ) ).r * 2.  \\\n                : texture(iChannel0, U/R).r\n*/\n\nvoid mainImage(out vec4 o, vec2 u) {mi(o,u);}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 21147,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/user-318202294/out-9"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// 146 chars - iq kills another character for the shortest version:\n#define mi(O,u)                              \\\n    vec2 R = iResolution.xy, U=u;                   \\\n    O += ( U.y -= fract(iTime*R.x*.04) ) < 1.       \\\n        ? U.x=R.x-U.x,texture(iChannel1, U/R ).r*2. \\\n        :             texture(iChannel0, U/R ).r /*\n\n// Thanks to ttg, iq, and Fabrice the whole shader is now 147 chars!!\n          \n#define mainImage(O,u)                         \\\n    vec2 R = iResolution.xy, U=u,              \\\n         V = R-U; V.y = 0.;                    \\\n    O += ( U.y -= fract(iTime*R.x*.04) ) < 1.  \\\n        ? texture(iChannel1, V/R ).r * 2.      \\\n        : texture(iChannel0, U/R ).r\n*/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}