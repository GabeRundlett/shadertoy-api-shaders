{
    "Shader": {
        "info": {
            "date": "1609295577",
            "description": "test heat map",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl3cRS",
            "likes": 6,
            "name": "test heat map",
            "published": 3,
            "tags": [
                "map",
                "heat",
                "heatmap",
                "heatmap"
            ],
            "usePreview": 1,
            "username": "jcyuan",
            "viewed": 1198
        },
        "renderpass": [
            {
                "code": "const float HEAT_MAX = 10.;\nconst float PointRadius = .42;\n\n// test data\nconst int PointCount = 18;\nconst vec3 Points[] = vec3[](\n    vec3(0., 0., 10.),\n    vec3(.2, .6, 5.),\n    vec3(.25, .7, 8.),\n    vec3(.33, .9, 5.),\n    vec3(.35, .8, 6.),\n    vec3(.1, .1, 6.),\n    vec3(-.45, .8, 4.),\n    vec3(-.2, -.6, 5.),\n    vec3(-.25, -.7, 8.),\n    vec3(-.33, -.9, 8.),\n    vec3(.35, -.45, 10.),\n    vec3(-.1, -.8, 10.),\n    vec3(.33, -.3, 5.),\n    vec3(-.35, .75, 6.),\n    vec3(.6, .4, 10.),\n    vec3(-.4, -.8, 4.),\n    vec3(.7, -.3, 6.),\n    vec3(.3, -.8, 8.)\n);\n\nvec3 gradient(float w, vec2 uv) {\n    w = pow(clamp(w, 0., 1.) * 3.14159 * .5, .9);\n    vec3 c = vec3(sin(w), sin(w * 2.), cos(w)) * 1.1;\n    return mix(texture(iChannel0, uv).rgb, c, w);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    float d = 0.;\n    for (int i = 0; i < PointCount; i++) {\n        vec3 v = Points[i];\n        float intensity = v.z / HEAT_MAX;\n        float pd = (1. - length(uv - v.xy) / PointRadius) * intensity;\n        d += pow(max(0., pd), 2.);\n    }\n\n    fragColor = vec4(gradient(d, uv), 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}