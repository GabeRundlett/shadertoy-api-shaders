{
    "Shader": {
        "info": {
            "date": "1532107959",
            "description": "Lots of dots and squares",
            "flags": 0,
            "hasliked": 0,
            "id": "4t3cWn",
            "likes": 5,
            "name": "Zooming Dice ",
            "published": 3,
            "tags": [
                "bookofshaders"
            ],
            "usePreview": 0,
            "username": "momoro",
            "viewed": 481
        },
        "renderpass": [
            {
                "code": "vec3 rect(vec2 st) {\n    float f = length(max(abs(st) - .3, 0.));\n    f = smoothstep(.05, .04, f);\n    return vec3(f);\n} \n\nvec3 circle(vec2 st) {\n    float f = length(st);\n    \n    f = smoothstep(.203, .2, f);\n    return vec3(f);\n}\n\nvec3 circleRect(vec2 st, float pct) {\n//    pct = .01;\n    float minSize = .0;\n    float maxSize = 10.;\n    float currentSize = mix(minSize, maxSize, pct);\n        \n    st *= .2 * currentSize + 1.;\n    float f = length(max(abs(st) - .1, 0.));\n    f = smoothstep(currentSize, currentSize + currentSize/10., f);\n    return vec3(f);\n}\n\nmat2 rotate2d(float _angle) {\n    return mat2(cos(_angle), -sin(_angle),\n        \t\tsin(_angle), cos(_angle));\n}\n\nmat2 scale(vec2 _scale) {\n    return mat2(_scale.x, 0.,\n               \t0., _scale.y);\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat u_time = iTime;\n    \n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= .4;\n\n\tvec2 st = uv;\n\n\n\tst-=.5;\n\n    st *= sin(u_time)/2. + 1.;\n    st *= length(st) * sin(u_time/2.)/2.+1.;\n    \n    vec2 tt = st * 12.;\n    float time = u_time/10. * ceil(tt.x) / ceil(tt.y);\n    vec3 color = vec3(0.);\n\n    \n\n    float n = abs(cos(time /50.)+6. * min(st.x, st.y));\n    \n    if(n < 0.) {// unused\n        st*= 24.;\n        st = mod(st, 1.);\n        vec2 rectTransform = rotate2d(-u_time*.3) * ((scale(vec2(3.)) * rotate2d(-u_time) * (st - .5)) + .4);\n        color += rect(rectTransform);\n        vec2 circleTransform = rotate2d(-u_time*.3) * ((scale(vec2(2.)) * rotate2d(-u_time) * (st - .5)) - .4);\n        color += circle(circleTransform);\n    } else { \n        st *= 48.;\n        st = mod(st, 1.);\n        color += circleRect(st-.5, min(sin(time), cos(time))/2. + .5);\n    }    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}