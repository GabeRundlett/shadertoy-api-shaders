{
    "Shader": {
        "info": {
            "date": "1571764062",
            "description": "make a simple rect",
            "flags": 0,
            "hasliked": 0,
            "id": "3s3XRn",
            "likes": 0,
            "name": "RectanglePractise",
            "published": 3,
            "tags": [
                "rect"
            ],
            "usePreview": 0,
            "username": "zrcoy",
            "viewed": 233
        },
        "renderpass": [
            {
                "code": "float makeBand(float d, float start, float end, float blur)\n{\n    float band1 = smoothstep(start - blur, start + blur, d);\n    float band2 = smoothstep(end + blur, end - blur, d);\n    return band1*band2;\n}\n\nfloat makeRect(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float verticalBand = makeBand(uv.x ,left,right,blur );\n    float horizontalBand = makeBand(uv.y, bottom, top, blur);\n    return verticalBand * horizontalBand;\n}\n\nfloat makeDiamond(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float verticalBand = makeBand(uv.x +uv.y ,left,right,blur );\n    float horizontalBand = makeBand(uv.y - uv.x, bottom, top, blur);\n    return verticalBand * horizontalBand;\n}\n\nfloat remap1(float a, float b, float t) //remap t to a - b in a range of 0-1 \n{\n \treturn ((t-a) / (b - a));\n}\n\nfloat remap2(float a , float b, float c, float d , float t)\n{\n    return remap1(a,b,t) * (d-c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv-=0.5f;\n    uv.x *= iResolution.x / iResolution.y;\n    uv*=3.0f;\n    \n    float x = uv.x;\n    float y = uv.y;\n    float m = -(x-.5f)*(x+.5f);\n    m = 0.4f*sin(x*8.0f + iTime);\n    y -= m;\n    float blur;\n    blur += remap2(-.9f,.9f, 0.02f,0.2f,x);\n    float normalRect = makeRect(vec2(x,y),-.9f,.9f,.2f,-.2f,blur);\n    float rectMask = makeRect(vec2(x,y), -.2f * abs(sin(iTime)) , .2f* abs(sin(iTime)) ,.2f * abs(sin(iTime)),-.2f* abs(sin(iTime)), .002f);\n    \n    vec3 col =vec3( .0f);\n    \n    \n    col += normalRect;\n    \n    fragColor = vec4(col,1.f); \n\t\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}