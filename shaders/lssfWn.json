{
    "Shader": {
        "info": {
            "date": "1495769495",
            "description": "raymach tunnel",
            "flags": 0,
            "hasliked": 0,
            "id": "lssfWn",
            "likes": 5,
            "name": "superstar",
            "published": 3,
            "tags": [
                "tunnel",
                "raymarch",
                "star"
            ],
            "usePreview": 0,
            "username": "nshelton",
            "viewed": 866
        },
        "renderpass": [
            {
                "code": "\nfloat time = 0.1;\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat opS( float d1, float d2 )\n{\n    return max(-d1,d2);\n}\n\nfloat sdCylinder( vec3 p, vec3 c )\n{\n  return length(p.xz-c.xy)-c.z;\n}\n\n mat3 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat3(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c);\n}\n\nfloat map(vec3 p)\n{\n\n    vec3 q = p;\n\n    float rep = 0.1;\n    vec3 c = vec3(rep);\n    p.z = mod(p.z,c.z)-0.5*c.z;\n\n    \n    vec3 p_s;\n    p = p * rotationMatrix(vec3(0.0, 0.0, 1.0), sin(q.z  +iTime) + sin(iTime/10.0));\n\n    float inner = 1000.0;\n    float outer = 1000.0;\n    \n    \n    int sides = 5;\n    float angle = 3.1415 * 2.0 / float(sides);\n    \n    for ( int i = 0; i < sides; i ++)\n    {\n        \n        p_s = p * rotationMatrix(vec3(0.0, 0.0, 1.0), angle * float(i));\n        \n       \tp_s += vec3(\n            cos(q.z)* 2.0,\n            sin(q.z)* 2.0,\n            -0.0);\n            \n       // p_s = p_s * rotationMatrix(vec3(0.0, 0.0, 1.0), 4.0 * angle * float(i));\n        \n        float rad = cos(q.z* 1.0 - iTime) * 0.5 + 0.6;\n        \n        outer = min(outer, length(p_s) - rad);  \n        \n        vec3 p_fac = p_s.yxz;\n        \n        p_fac += vec3(\n            sin(iTime + q.z)* 0.4 , \n            cos(q.z)* 0.9 , \n            0.1 * sin(q.z));\n        \n        float tt = 0.01 * sin(q.z * 10.0 + time * 10.0) + 0.01;\n        float facet = sdCylinder(p_fac, vec3(sin(q.z), tt, tt));\n            \n\n        inner = min(inner, facet);  \n\t\n        \n    }\n    \n    float result = min(outer, inner);   \n    return result;\n}\n\nvoid getCamPos(inout vec3 ro, inout vec3 rd)\n{\n    ro.z = time;\n\n}\n\n vec3 gradient(vec3 p, float t) {\n\t\t\tvec2 e = vec2(0., t);\n\n\t\t\treturn normalize( \n\t\t\t\tvec3(\n\t\t\t\t\tmap(p+e.yxx) - map(p-e.yxx),\n\t\t\t\t\tmap(p+e.xyx) - map(p-e.xyx),\n\t\t\t\t\tmap(p+e.xxy) - map(p-e.xxy)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\ttime = iTime * 0.5;\n    vec2 _p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n    vec3 ray = normalize(vec3(_p, 1.0));\n    vec3 cam = vec3(0.0, 0.0, 0.0);\n    bool hit = false;\n    getCamPos(cam, ray);\n    \n    float depth = 0.0, d = 0.0, iter = 0.0;\n    vec3 p;\n    \n    for( int i = 0; i < 80; i ++)\n    {\n    \tp = depth * ray + cam;\n        d = map(p);\n                  \n        if (d < 0.001) {\n\t\t\thit = true;\n            break;\n        }\n                   \n\t\tdepth += d * 0.5 ;\n\t\titer++;\n                   \n    }\n    \n    vec3 col = vec3(1.0 - iter / 80.0);\n\n    if(hit)\n    col = pow(col, vec3(\n        0.2 + 0.5 * sin(p.z * 33.0),\n        0.7 + 0.5 * sin(p.z * 10.0),\n        0.6)).bgr;\n    \n    fragColor = vec4(sqrt(col), hit? length(p.xy) : 0.0 );\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}