{
    "Shader": {
        "info": {
            "date": "1608139784",
            "description": "bannentaum",
            "flags": 0,
            "hasliked": 0,
            "id": "3dKfzh",
            "likes": 0,
            "name": "tannenbaum",
            "published": 3,
            "tags": [
                "christmas",
                "tannenbaum"
            ],
            "usePreview": 0,
            "username": "aldroid",
            "viewed": 288
        },
        "renderpass": [
            {
                "code": "/*\n █████   █████                                                                              \n░░███   ░░███                                                                               \n ░███    ░███   ██████   ████████  ████████  █████ ████                                     \n ░███████████  ░░░░░███ ░░███░░███░░███░░███░░███ ░███                                      \n ░███░░░░░███   ███████  ░███ ░███ ░███ ░███ ░███ ░███                                      \n ░███    ░███  ███░░███  ░███ ░███ ░███ ░███ ░███ ░███                                      \n █████   █████░░████████ ░███████  ░███████  ░░███████                                      \n░░░░░   ░░░░░  ░░░░░░░░  ░███░░░   ░███░░░    ░░░░░███                                      \n                         ░███      ░███       ███ ░███                                      \n                         █████     █████     ░░██████                                       \n                        ░░░░░     ░░░░░       ░░░░░░                                        \n   █████████  █████                 ███           █████                                     \n  ███░░░░░███░░███                 ░░░           ░░███                                      \n ███     ░░░  ░███████   ████████  ████   █████  ███████   █████████████    ██████    █████ \n░███          ░███░░███ ░░███░░███░░███  ███░░  ░░░███░   ░░███░░███░░███  ░░░░░███  ███░░  \n░███          ░███ ░███  ░███ ░░░  ░███ ░░█████   ░███     ░███ ░███ ░███   ███████ ░░█████ \n░░███     ███ ░███ ░███  ░███      ░███  ░░░░███  ░███ ███ ░███ ░███ ░███  ███░░███  ░░░░███\n ░░█████████  ████ █████ █████     █████ ██████   ░░█████  █████░███ █████░░████████ ██████ \n  ░░░░░░░░░  ░░░░ ░░░░░ ░░░░░     ░░░░░ ░░░░░░     ░░░░░  ░░░░░ ░░░ ░░░░░  ░░░░░░░░ ░░░░░░  \n  \n  LOVE FROM ALEX\n                                                                                            \n*/\n\n#define FOREST_DEPTH 150.\n\nfloat tri( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat sdHexagram( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.58,0.9660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n\nfloat tre( in vec2 p)\n{\n    return tri(vec2(p.x/p.y, p.y - clamp(round(p.y),-5.,-1.)));\n}\n\nfloat tres (in vec2 p)\n{\n    return tre(p*vec2(18.,7.)-vec2(0.,2.));\n}\n\nfloat treePos(in vec2 p, in float i) {\n    return abs(sin(round(p.x+1.5)))*1./i-0.04*i+0.9;\n}\n\nfloat trees (in vec2 p, in float i)\n{\n    return tres(\n        vec2(fract(p.x)-0.5,p.y +treePos(p,i)));\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 colour(in float t) {\n    return palette(t, vec3(0.3,0.7,0.5),vec3(2.0,1.0,0.0),  vec3(0.4,0.5,0.5), vec3(0.50,0.20,0.25));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2. -1.;\n\n    vec3 col = vec3(0.,-uv.y,.3)/2.;\n    \n    float s = sdHexagram(uv*vec2(48.,22.)-vec2(0.,16.),1.);\n\n    col = vec3(max(col,1. - pow(max(s/4.,0.),0.3)));\n\n    \n    for (float i = 1.; i < FOREST_DEPTH ; ++i) {\n        \n        float d = trees((uv+vec2(sin(i*2.),0.))*(i+15.)/16.,i);\n        \n        if (d < 0.) {\n            col = colour(i/90.)*(0.2+vec3(10.,10.,5.)/i) + 1. - 1.1*length(uv-vec2(0.,0.4));\n            break;\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}