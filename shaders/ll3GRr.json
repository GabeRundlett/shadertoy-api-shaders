{
    "Shader": {
        "info": {
            "date": "1467632909",
            "description": "discovered the green fire",
            "flags": 0,
            "hasliked": 0,
            "id": "ll3GRr",
            "likes": 4,
            "name": "greefirefork",
            "published": 3,
            "tags": [
                "fire",
                "green",
                "forked"
            ],
            "usePreview": 0,
            "username": "jobjb",
            "viewed": 789
        },
        "renderpass": [
            {
                "code": "//////////////////////\n// Fire Flame shader\n\n// procedural noise from IQ\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n\tconst float K1 = 0.366025404; // (sqrt(3)-1)/2;\n\tconst float K2 = 0.211324865; // (3-sqrt(3))/6;\n\t\n\tvec2 i = floor( p + (p.x+p.y)*K1 );\n\t\n\tvec2 a = p - i + (i.x+i.y)*K2;\n\tvec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\n\tvec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 1.8*K2;\n\t\n\tvec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.18 );\n\t\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\t\n\treturn dot( n, vec3(18.1) );\n}\n\nfloat fbm(vec2 uv)\n{\n\tfloat f;\n\tmat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tf  = 0.5000*noise( uv ); uv = m*uv;\n\t//f += 0.2500*noise( uv ); uv = m*uv;\n\t//f += 0.1250*noise( uv ); uv = m*uv;\n\tf += 0.0625*noise( uv ); uv = m*uv;\n\tf = 0.5 + 0.5*f;\n\treturn f;\n}\n\n// no defines, standard redish flames\n//#define BLUE_FLAME\n//#define GREEN_FLAME\nconst float ar_real_size = 1.0;\nconst vec2 ar_scale = vec2(2.,5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 q = uv.yx;\n\t\n\tfloat strength = floor(q.x-0.3);\n\tfloat T3 = max(3.,1.25*strength)*iTime;\n\t//q.x = mod(q.x,1.)-0.5;\n\t//q.y -= 0.25;\n    \n    vec2 size = ar_scale * ar_real_size;\n    q*=size;\n    q.y -= 1.55;\n    //q.x = mod(q.x,1.)-0.5;\n    q.x -=.94;\n    \n\tfloat n = fbm(strength*q.xy - vec2(T3,0));\n\tfloat c = 1. - 16. * pow( max( 0., length(q*vec2(1.8+q.y*1.5,.75) ) - n * max( 0., q.y+.25 ) ),1.2 );\n\tfloat c1 = n * c * (1.5-pow(0.05*uv.y,4.));\n\t//float c1 = n * c * (1.5-pow(2.50*uv.y,4.));\n    \n   \n\tc1=clamp(0.68,0.18,0.9);\n\n\tvec3 col = vec3(0.4*c1, 1.9*c1*c1*c1, c1*c1*c1*c1*c1*c1);\n\t\n    \n    col = col.xzy*2.9;\n\n    vec3 rot = vec3(0.);\n\t\n\tfloat a = c * (1.-pow(uv.y,2.));\n    \n    vec4 fire = vec4(mix(vec3(0.),col.zyx,a), 1.0);\n    \n    float ta = step(dot(fire.rgb,vec3(.3,.59,.21)),.9);\n\n\tfloat aa = exp(ta)-1.;\n\tfloat mixer = clamp(aa,0.,1.);\n    \n    vec4 tex = texture(iChannel0, uv);\n    fire.rgb = mix(tex,fire,mixer).rgb;\n    \n\tfragColor = mix(texture(iChannel0, uv),vec4(1),fire);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}