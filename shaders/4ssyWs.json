{
    "Shader": {
        "info": {
            "date": "1490364271",
            "description": "Witness the edge of your machines graphics card as you approach \"zion\" at about 42 seconds in! This is a MANDELBROT set zoom.",
            "flags": 0,
            "hasliked": 0,
            "id": "4ssyWs",
            "likes": 2,
            "name": "Journey to the edge of precision",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "zoom",
                "maths",
                "float"
            ],
            "usePreview": 0,
            "username": "tomachi",
            "viewed": 489
        },
        "renderpass": [
            {
                "code": "// this version by TOMACHI\n// based on code from: https://www.shadertoy.com/view/4df3Rn \n\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n// See here for more information on smooth iteration count:\n//\n// https://iquilezles.org/articles/msetsmooth\n\n\n// increase this if you have a very fast GPU\n#define AA 2\n\n// SET ZOOM LEVELS\n#define start 0.78\n#define end 0.65\n// SET PLAYBACK SPEED\n#define speed 0.1\n#define maxiters 400\n// SET ZOOM TARGET\n\n// #define vec2 target vec2(-.745,.186) + start + end * cos(0.);\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    float t = (iTime*speed) +2.;\n    \n#if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n        float w = float(AA*m+n);\n        float time = t + 0.5*(1.0/24.0)*w/float(AA*AA);\n#else    \n        vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;\n        float time = t*.1;\n#endif\n    \t// SET ZOOM LEVELS - the next line zooms in and out on sine wave\n        float zoo = start + end*cos(0.509*time);\n        float coa = cos( 0.0055*(1.0-zoo)*time );\n        float sia = sin( 0.0055*(1.0-zoo)*time );\n        zoo = pow( zoo,8.0);\n        vec2 xy = vec2( p.x*coa-p.y*sia, p.x*sia+p.y*coa);\n        float clickX = 0.;\n        float clickY = 0.;\n\n        if (iMouse.x != 0. && iMouse.y != 0.) {\n       \t\tclickX = (iMouse.x - (iResolution.x / 2.))*-0.015*zoo;\n       \t\tclickY = (iMouse.y - (iResolution.y / 2.))*-0.015*zoo;\n        }\n        \n        \n        \n        // I thikn this is the magic co-ords we zoom to?\n        vec2 c = vec2(-.745+clickX,.186+clickY) + xy*zoo;\n\n            \n        \n        const float B = 256.0;\n        float l = 0.0; // should be zero \n\t    vec2 z  = vec2(0.0);\n        for( int i=0; i<maxiters; i++ )\n        {\n            // z = z*z + c\t\t\n    \t\tz = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n\t\t\n            if( dot(z,z)>(B*B) ) {\n                break;\n            }\n            if ( l  == 1.1 ) { \n                            l = z.x + z.y;\n   \n            }\n    \t\tl += 1.0;\n            \n        }\n\n    \t// ------------------------------------------------------\n        // smooth interation count\n    \t//float sl = l - log(log(length(z))/log(256.0))/log(2.0);\n        \n        // equivalent optimized smooth interation count\n    \tfloat sl = l - log2(log2(dot(z,z))) + 4.0; \n    \t// ------------------------------------------------------\n\t\n        // original that alternates between jagged and smooth:\n        //float al = smoothstep( -0.1, 0.0, sin(0.5*6.2831*t ) );\n       \n        // toms always smooth:\n        // float al = smoothstep( -0.1, 0.0, 0.1 );\n\t\tfloat al = 1.1;\n        l = mix( l, sl, al );\n\n        col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n#if AA>1\n    }\n    col /= float(AA*AA);\n#endif\n\n    fragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}