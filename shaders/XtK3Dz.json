{
    "Shader": {
        "info": {
            "date": "1474215684",
            "description": " ",
            "flags": 0,
            "hasliked": 0,
            "id": "XtK3Dz",
            "likes": 11,
            "name": "Noise function",
            "published": 3,
            "tags": [
                "2d",
                "3d",
                "noise",
                "domain",
                "random",
                "4d",
                "hash",
                "cc0",
                "public"
            ],
            "usePreview": 0,
            "username": "ChuckNorris",
            "viewed": 1410
        },
        "renderpass": [
            {
                "code": "// Noise functions without cancer license.\n// Dedicated to the public domain.\n// If you want a real license, you may consider this MIT/BSD/CC0/WTFPL-licensed (take your pick).\n\nvec4 noise(vec4 v){\n    // ensure reasonable range\n    v = fract(v) + fract(v*1e4) + fract(v*1e-4);\n    // seed\n    v += vec4(0.12345, 0.6789, 0.314159, 0.271828);\n    // more iterations => more random\n    v = fract(v*dot(v, v)*123.456);\n    v = fract(v*dot(v, v)*123.456);\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = noise(vec4(fragCoord.xy, iTime, 0.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}