{
    "Shader": {
        "info": {
            "date": "1469494477",
            "description": "Just playing with space",
            "flags": 0,
            "hasliked": 0,
            "id": "Xt33DM",
            "likes": 5,
            "name": "sift",
            "published": 3,
            "tags": [
                "procedural",
                "rings",
                "blackandwhite",
                "dots"
            ],
            "usePreview": 0,
            "username": "mahalis",
            "viewed": 941
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(0.5) - fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    float dist = length(uv);\n    const float pi = 3.14159;\n    const float ringIndexMultiplier = 11.0;\n    float ang = atan(uv.y, uv.x) / pi + 1.0;\n    float ringIndex = ceil(dist * ringIndexMultiplier);\n    float direction = (mod(ringIndex, 2.0) * 2.0 - 1.0);\n    float v = mod(floor(ang * 10.0 + pow(ringIndex, 1.1) + iTime * direction), 2.0);\n    \n    //uv = vec2(pow(abs(uv.x), 1.1), pow(abs(uv.y), 1.1));\n    uv = abs(uv);\n    vec2 dotUV = fract((uv + iTime * 0.05) * 15.0) - 0.5;\n    float dotRadius = 0.25 + 0.1 * sin(iTime * 0.5 + v * pi * 0.6);\n    float dotValue = smoothstep(0.03, 0.05, length(dotUV) - dotRadius);\n    \n    v = mix(1.0 - dotValue, dotValue, v);\n    v *= smoothstep(0.9, 1.0, dist * ringIndexMultiplier);\n    v += 1.0 - smoothstep(0.2, 0.21, abs(1.0 - fract(dist * ringIndexMultiplier)));\n    \n    \n    fragColor = vec4(v, v, v, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}