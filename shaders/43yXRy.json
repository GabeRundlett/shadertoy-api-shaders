{
    "Shader": {
        "info": {
            "date": "1720081395",
            "description": "original source https://www.shadertoy.com/view/4XGXRG",
            "flags": 0,
            "hasliked": 0,
            "id": "43yXRy",
            "likes": 2,
            "name": "other matrix",
            "published": 3,
            "tags": [
                "matrix"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 111
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\n#define PI 3.1415926535\n\n#define PI 3.1415926535\n\nfloat sdCircle( in vec2 p, in float r){\n    return length(p) -r;\n}\n\nvec2 rotate ( in vec2 p, in float theta ){\n    vec2 pos;\n    pos.x = cos(theta) * p.x - sin(theta) * p.y;\n    pos.y = sin(theta) * p.x + cos(theta) * p.y;\n    return pos;\n}\n\nfloat text(vec2 fragCoord){\n    vec2 uv = mod(fragCoord.xy, 16.)*.0625;\n    vec2 block = fragCoord*.0625 - uv;\n    uv = (uv*.65 + floor(texture(iChannel1, block/iChannelResolution[1].xy + iTime*.0001).xy * 16.))*-.9;\n    uv *= -.0625;\n    \n    return texture(iChannel0, uv).r;\n}\nfloat text2(vec2 fragCoord){\n    vec2 uv = mod(fragCoord.xy, 16.)*.0625;\n    vec2 block = fragCoord*.0625 - uv;\n    uv = (uv*.65 + floor(texture(iChannel1, block/iChannelResolution[1].xy + iTime*.0001).xy * 16.))*-.9;\n    uv *= -.0625;\n    \n    return texture(iChannel0, uv).r;\n}\n\nvec3 rain(vec2 fragCoord){\n    fragCoord.x -= mod(fragCoord.x, 10.);\n    \n    float offset=sin(fragCoord.x*15.);\n    float speed=cos(fragCoord.x*3.)*.3+.4;\n   \n    float x = fract(fragCoord.x/iResolution.x + iTime*speed);\n    return vec3(1.1,2.,.7) / x*.2;\n}\n\nvec3 rain2(vec2 fragCoord){\n    fragCoord.y -= mod(fragCoord.y, 30.);\n    \n    float offset=sin(fragCoord.y*15.);\n    float speed=cos(fragCoord.y*3.)*.3+.4;\n   \n    float x = fract(fragCoord.x/iResolution.x + iTime*1.1*speed);\n     float y = fract(fragCoord.y/iResolution.y + iTime*1.1*speed);\n    return vec3(1.1,2.,.7) / x*.2;\n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec4 fragColor=O;\n    vec2 fragCoord = C;\n    \n    vec4 base = vec4(text(fragCoord)*rain(fragCoord),1.0);\n    vec4 base1 = vec4(text(fragCoord + 200.)*rain(fragCoord + 200.),1.0);\n      vec4 base3 = vec4(text2(fragCoord)*rain2(fragCoord),1.0);\n    fragColor = mix(base, base1+base3, 1.5);\n    //fragColor = base;\n    \n    vec2 lightPos = rotate(vec2(800.,0.),PI/20.);\n    vec4 lightCol = fragColor;\n       fragColor = mix(fragColor, lightCol,.5);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n   \n    O+=fragColor;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}