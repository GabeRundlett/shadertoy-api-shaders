{
    "Shader": {
        "info": {
            "date": "1726616981",
            "description": "Bunch of dancing rings",
            "flags": 0,
            "hasliked": 0,
            "id": "4XsyDB",
            "likes": 1,
            "name": "Fancy Rings",
            "published": 3,
            "tags": [
                "fft",
                "music",
                "star",
                "visualizer",
                "dance",
                "microphone",
                "soundcloud",
                "rythm",
                "virtualdj"
            ],
            "usePreview": 0,
            "username": "DarkReaper231",
            "viewed": 50
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n#define RINGS 80\n\nfloat getFFT(float f) {\n    return texture(iChannel0, vec2(f, 0.0)).r;\n}\n\n// credits: https://github.com/hughsk/glsl-hsv2rgb/blob/master/index.glsl\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat sdRing(vec2 p, float i, float o) {\n    float d = length(p);\n    return step(i, d) * (1.0 - step(o, d));\n}\n\nvec2 getRing(float t, float i) {\n    int r = 8;\n    int c = RINGS / r;\n    float sx = 0.2;\n    float sy = 0.2;\n\n    float x = (mod(i, float(c)) - float(c) / 2.0 + 0.5) * sx;\n    float y = (floor(i / float(c)) - float(r) / 2.0 + 0.5) * sy;\n\n    x += sin(t + i) * 0.01;\n    y += cos(t + i) * 0.01;\n\n    return vec2(x, y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(1.0);\n\n    for (int i = 0; i < RINGS; i++) {\n        float t = float(i) / float(RINGS);\n        vec2 r = getRing(iTime, float(i));\n        vec2 rUV = uv - r;\n\n        float bF = getFFT(t * 0.2);\n        float mF = getFFT(0.3 + t * 0.4);\n        float hF = getFFT(0.6 + t * 0.3);\n\n        float ri = 0.05 + 0.03 * bF;\n        float ro = ri + 0.03 + 0.02 * mF;\n\n        float ring = sdRing(rUV, ri, ro);\n        vec3 c = hsv2rgb(vec3(\n            fract(iTime * 0.05 + t + hF),\n            0.7 + 0.3 * mF,\n            0.6 + 0.4 * bF\n        ));\n\n        col = mix(col, c, ring);\n    }\n\n    fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}