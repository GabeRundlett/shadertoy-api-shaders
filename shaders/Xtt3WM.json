{
    "Shader": {
        "info": {
            "date": "1469627345",
            "description": "Hot And Cold",
            "flags": 0,
            "hasliked": 0,
            "id": "Xtt3WM",
            "likes": 2,
            "name": "Hod ANd COld",
            "published": 3,
            "tags": [
                "hotandcold"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 580
        },
        "renderpass": [
            {
                "code": "float wave( vec2 s, vec3 color, vec3 shad, float k, float rdef )\n{\n    vec4 p = vec4(s.x / s.y, shad/color);\n    vec4 eyeX = normalize(vec4(rdef, (p.x / p.y - k) * color.x, rdef*(shad.r/shad.g/shad.b), 100.0));\n    vec3 compared = dot(shad,color)/eyeX.stp;\n    vec4 x = vec4(float(shad),float(color),k/rdef,float(vec2(dot(s,eyeX.xy))));\n    return float(x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 x = normalize(vec2(wave(uv, normalize(vec3(uv, 1.0)), normalize(vec3(uv, -1.0)), 1.0, sin(iTime)),1.0));\n\tfragColor = mix(smoothstep(0.0,-0.3,vec4(sin(iTimeDelta * 3.0)*1.0)*tan(vec4(x.y/x.x,0.5+0.5*sin(iTime),x.x/x.y, 1.0))),\n                    vec4(0.9,0.5,0.1,1.0),sin(iTime)*(uv.x/uv.y)*4.0*tan(sin(iTime)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}