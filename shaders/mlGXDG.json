{
    "Shader": {
        "info": {
            "date": "1686319908",
            "description": "A pattern of squares dancing",
            "flags": 0,
            "hasliked": 0,
            "id": "mlGXDG",
            "likes": 1,
            "name": "09-06-2023 - 2 - Squares",
            "published": 3,
            "tags": [
                "pattern",
                "squares"
            ],
            "usePreview": 0,
            "username": "Eise",
            "viewed": 127
        },
        "renderpass": [
            {
                "code": "vec3 palette(in float t)\n{\n    vec3 a = vec3(0.500, 0.500, 0.500); \n    vec3 b = vec3(0.468, 0.378, -0.202);\n    vec3 c = vec3(2.000, 1.000, 1.500);\n    vec3 d = vec3(0.000, 0.468, 0.158);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nfloat sdBox(in vec2 p, in vec2 b)\n{\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Res, preserve aspact rat\n    vec2 uv0 = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv0.x *= iResolution.x / iResolution.y;\n    \n    float gd = length(uv0);\n    vec3 finCol = vec3(0.0);\n    \n    // First rev\n    vec2 uv1 = uv0;\n    for (float i = 1.0; i < 3.0; i++) {\n        uv1 = fract(uv1 * 1.5);\n        uv1 -= 0.5;\n        \n        // Create moving box\n        float boxSize = abs(sin(iTime * 3.0 * i)/2.0);\n        float ld = sdBox(uv1, vec2(boxSize));\n        ld = abs(ld) * exp(-ld);\n        ld = smoothstep(0.0, 0.2, abs(ld));\n        ld = 0.02 / ld;\n\n        // Add color to finCol if in square\n        finCol += ld * palette(fract(gd * i + iTime));\n    }\n    \n    // Second rev\n    vec2 uv2 = uv0;\n    for (float i = 1.0; i < 2.0; i++) {\n        uv2 = fract((uv0) * 1.5);\n        uv2 -= 0.5;\n        \n        float boxSize = abs(sin(iTime * 2.0 * i)/2.0);\n        float ld = sdBox(uv2, vec2(boxSize));\n        ld = abs(ld) * exp(-ld);\n        ld = smoothstep(0.0, 0.2, abs(ld));\n        ld = 0.02 / ld;\n\n        finCol += ld * palette(fract(gd * i + iTime));\n    }\n\n    fragColor = vec4(finCol, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}