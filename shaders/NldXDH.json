{
    "Shader": {
        "info": {
            "date": "1639055405",
            "description": "one more gamma tuning,  squeeze your eyes and try to fit the grey ramps, or the color ramps.\nusing blue noise for dither, + separating RGB vs grey.\nNB: on my screens, the gamma is not the same on the 4 corners of the screen :-(\n\nMouse.y tune the gamma.",
            "flags": 0,
            "hasliked": 0,
            "id": "NldXDH",
            "likes": 10,
            "name": "gamma grey+RGB vs blue dither",
            "published": 3,
            "tags": [
                "gamma",
                "bluenoise"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 333
        },
        "renderpass": [
            {
                "code": "\nvec4 char(vec2 p, int c) { // from https://www.shadertoy.com/view/llySRh\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy );\n}\nvec4 pF11(vec2 p, float n) {\n    vec4 v = char(p, 48+ int(n) );\n         p.x -= .3;\n         v += char(p, 46);\n         p.x -= .3;\n         v += char(p, 48+ int(fract(n)*10.) );\n    return v;\n}\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, U = u/R;\n    int   x = int( 8. * U.x );\n    float g = length(iMouse.xy)<10. ? 2.2 : 1. + 2.*iMouse.y/R.y,\n          y = pow(U.y,1./g);\n    float n = step(texelFetch(iChannel0, ivec2(u)%1024, 0 ).r,U.y);\n    O-=O;\n    if (x<2) O = vec4( x==0 ? n : y) ;\n    else     O[x/2-1] = x%2==0 ? n : y;\n    \n    O = mix(O, vec4(1), pF11(3.*(2.*u-R)/R.y,g).r );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}