{
    "Shader": {
        "info": {
            "date": "1469106443",
            "description": "This Is A Diagonalistical Shader Which Is Loaded By \"Binary lines.\" A Blue One Means 1 And A Black One Means 0.",
            "flags": 8,
            "hasliked": 0,
            "id": "4lt3DH",
            "likes": 4,
            "name": "Weird Shader",
            "published": 3,
            "tags": [
                "raytracing",
                "linemarching",
                "opticalblur"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 753
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n\tfloat growingUv = sin(time) / 2.0 * (fragCoord.x / fragCoord.y);\n    vec2 p;\n    float time2 = sin(time) * 2.0;\n        p = vec2( sin(time2) );\n    vec2 sound1 = vec2(p.x / p.y, sin(growingUv));\n    float growingUv2 = sin(time) * 2.0 * (fragCoord.x / fragCoord.y);\n    vec2 sound2 = vec2(p.y / p.x, sin(growingUv2));\n    vec2 norsou = vec2(mix(mix(sound1,sound2,0.01), mix(sound2, sound1, 0.01), 1.12));\n    float rp = fract(float(float(normalize(sound2))*2.0*asin(time)/1.6+tan((length(sound1)))));\n    float rs = float(normalize(sound1))*asin(time)*asin(cos(mod(1.0, growingUv))/growingUv2);\n    float ru = rp / rs * ((iResolution.x / iResolution.y) * time) / cos((length(time2/time)/time));\n    vec3 norsha = normalize(vec3(norsou,float(vec2(time2 * time * sin(mod(vec3(sound2,1.1),vec3(time2)))))*ru));\n    vec4 norfrg = vec4(norsha, norsha.x / norsha.y);\n    fragColor = norfrg.xyzz;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound( in int samp, float time )\n{\n    float growingUv = sin(time) / 2.0 * (gl_FragCoord.x / gl_FragCoord.y);\n    vec2 p;\n    float time2 = sin(time) * 2.0;\n        p = vec2( sin(time2) );\n    vec2 sound1 = vec2(p.x / p.y, sin(growingUv));\n    float growingUv2 = sin(time) * 2.0 * (gl_FragCoord.x / gl_FragCoord.y);\n    vec2 sound2 = vec2(p.y / p.x, sin(growingUv2));\n    return vec2(mix(mix(sound1,sound2,0.01), mix(sound2, sound1, 0.01), 1.12));\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}