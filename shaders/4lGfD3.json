{
    "Shader": {
        "info": {
            "date": "1544194596",
            "description": "reference: \n[url]https://www.facebook.com/groups/procgenart/permalink/1475222319275259[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "4lGfD3",
            "likes": 17,
            "name": "five rolling triangles (241 ch)",
            "published": 3,
            "tags": [
                "2d",
                "geometry",
                "2tweets",
                "short",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 584
        },
        "renderpass": [
            {
                "code": "// golfing of https://shadertoy.com/view/4tVfDV\n\n#define W(a)   2.* cos( ( mod( a + iTime ,2.) - 1. ) *1.05 )   // 1.05 = pi/3  .955 = 3/pi\n#define T(X,Y) max(0., 1.- length(vec2(Y U.y, X U)) * W( -.955*atan(Y U.y,X U.x) ) ) *R.y/20.//\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  R = iResolution.xy,\n          U = 3.*(u+u - R) / R.y;\n    O += T(          ,           )\n      +  T(  W(1.) - ,           )\n      +  T( -W(  ) - ,           )\n      +  T(          ,  W(-.5) - )\n      +  T(          , -W( .5) - );}    /*\n\n\n\n\n\n\n// --- 252 chars\n\n#define W(a)   2.* cos( ( fract( a+.5 + .5*iTime ) - .5 ) *2.1 ) *R.y\n#define T(X,Y) max(0., R.y- length(vec2(X U.x,Y U.y)) * W( -.477*atan(Y U.y,X U.x) )/R.y ) /7.\n\n#define mainImage(O,u)                  \\\n    vec2  R = iResolution.xy,           \\\n          U = u+u - R;                  \\\n    R /= 3.;                            \\\n    O += T(             , )             \\\n      +  T(  W(.5) -    , )             \\\n      +  T( -W(  ) -    , )             \\\n      +  T( ,  W(-.25) -  )             \\\n      +  T( , -W( .25) -  )            /*\n\n\n\n\n\n\n// --- 263 chars \n\n#define W(a)   2.* cos( ( fract( .477*a + .5 ) - .5 ) *2.1 ) *h\n#define T(X,Y) max(0., h- length(vec2(X U.x,Y U.y)) * W( (t-atan(Y U.y,X U.x)) )/h ) /7.\n\n#define mainImage(O,u)                  \\\n    vec2  R = iResolution.xy,           \\\n          U = u+u - R;                  \\\n    float t = iTime, h = R.y/3.;  \\\n    O += T(              , )            \\\n      +  T(  W(t+.5) -   , )            \\\n      +  T( -W(t)    -   , )            \\\n      +  T( ,  W(t-.25) -  )            \\\n      +  T( , -W(t+.25) -  )           /*\n\n\n\n\n\n\n// --- 269 chars \n\n#define W(a)   2.* cos( ( fract( .477*a + .5 ) - .5 ) *2.1 ) *h\n#define T(x,y) max(0., h- length(vec2(x,y)) * W((t-atan(y,x)))/h )/7.\n\n#define mainImage(O,u)                  \\\n    vec2  R = iResolution.xy,           \\\n          U = u+u - R;                  \\\n    float t = iTime, h = R.y/3., x = U.x, y = U.y;  \\\n    O += T(  x          , y  )          \\\n      +  T(  W(t+.5) -x , y  )          \\\n      +  T( -W(t)    -x , y  )          \\\n      +  T(  x ,  W(t-.25) -y  )        \\\n      +  T(  x , -W(t+.25) -y  )       /*\n\n\n\n\n\n\n// --- 285 chars\n\n#define W(a)   2.* cos( ( fract( .477*a + .5 ) - .5 ) *2.1 )\n#define T(x,y) R.g/20.* max(0., 1.- length(vec2(x,y)) * W((t-atan(y,x))) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = 3.* ( u+u - R ) / R.y;\n    float t = iTime, x = U.x, y = U.y;\n    \n    O += T(  x          , y  )\n      +  T(  W(t+.5) -x , y  )\n      +  T( -W(t)    -x , y  ) \n      +  T(  x ,  W(t-.25) -y  )\n      +  T(  x , -W(t+.25) -y  );\n}\n\n\n\n\n\n\n// --- 306 chars\n\n#define W(a) 2.* cos( ( mod( 3.*a +PI, 2.*PI ) - PI ) /3. )\n#define T(x,y) max(0., R.g/20.*( 1. -length(vec2(x,y)) * W((t-atan(y,x))) ))\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    float t = iTime, PI=3.14;\n\n    U = 3.* ( U+U - R ) / R.y;\n    float x = U.x, y = U.y;\n    \n    O += T(  x          , y  )\n      +  T(  W(t+PI) -x , y  )\n      +  T( -W(t)    -x , y  ) \n      +  T(  x ,  W(t-PI/2.) -y  )\n      +  T(  x , -W(t+PI/2.) -y  );\n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}