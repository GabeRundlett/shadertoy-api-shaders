{
    "Shader": {
        "info": {
            "date": "1523350521",
            "description": "long term goal: imitating some  Ã‰tienne Jacob's effects [url]https://goo.gl/vBGWwj[/url]\n\nfollowing his tuto (based of Processing) [url]https://necessarydisorder.wordpress.com/[/url]\nIdea#4:  interpolated points delayed, 1 point Perlin-noise displaced.",
            "flags": 0,
            "hasliked": 0,
            "id": "MsycWK",
            "likes": 37,
            "name": "necessary-disorder tuto \"gif1\"",
            "published": 3,
            "tags": [
                "2d",
                "curves",
                "interpolation",
                "art",
                "reproduction",
                "etiennejacob"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1164
        },
        "renderpass": [
            {
                "code": "// #4b: https://shadertoy.com/view/MsGcWK\n// #4: https://shadertoy.com/view/lsGcWK\n// #3: https://shadertoy.com/view/MdGcWK\n// shaking grid: https://www.shadertoy.com/view/MdyyWK\n// #2: https://shadertoy.com/view/lsGyWK\n// #1: https://shadertoy.com/view/MdGyWK\n\n// http://www.thisiscolossal.com/2018/04/animation-of-sinusoidal-waves-in-gifs-by-etienne-jacob\n// EJ's tutos: https://necessarydisorder.wordpress.com/\n\n// --- pseudo perlin noise 3D\n\nint MOD = 1;  // type of Perlin noise\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n#define hash31(p) fract(sin(dot(p,vec3(127.1,311.7, 74.7)))*43758.5453123)\nfloat noise3(vec3 p) {\n    vec3 i = floor(p);\n    vec3 f = fract(p); f = f*f*(3.-2.*f); // smoothstep\n\n    float v= mix( mix( mix(hash31(i+vec3(0,0,0)),hash31(i+vec3(1,0,0)),f.x),\n                       mix(hash31(i+vec3(0,1,0)),hash31(i+vec3(1,1,0)),f.x), f.y), \n                  mix( mix(hash31(i+vec3(0,0,1)),hash31(i+vec3(1,0,1)),f.x),\n                       mix(hash31(i+vec3(0,1,1)),hash31(i+vec3(1,1,1)),f.x), f.y), f.z);\n\treturn   MOD==0 ? v\n\t       : MOD==1 ? 2.*v-1.\n           : MOD==2 ? abs(2.*v-1.)\n                    : 1.-abs(2.*v-1.);\n}\n\nfloat fbm3(vec3 p) {\n    float v = 0.,  a = .5;\n    mat2 R = rot(.37);\n\n    for (int i = 0; i < 1; i++, p*=2.,a/=2.) \n        p.xy *= R, p.yz *= R,\n        v += a * noise3(p);\n\n    return v/.5;\n}\n// -------------------------------------\n\n\n#define S(D,e)     smoothstep( 3., 0. ,  length(D)*R.y -e )\nvec2 A,B,R; float l;\n#define line(p,a,b) ( l = dot(B=b-a, A=p-a)/dot(B,B), clamp(l, 0., 1.) == l ? S( A - B * l ,0.) : 0.)\n//float line(vec2 p, vec2 a, vec2 b) {      // draw a segment without round ends\n//    b -= a; p -= a;\n//    float l = dot(b,p)/dot(b,b);\n//    return clamp(l, 0., 1.) == l ? S( p - b * l ,0.) : 0.;\n//}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    R = iResolution.xy;\n    U = ( U+U - R ) / R.y;\n    O -= O;\n    if ( abs(U.x)-(U.y+1.)/1.2 > 0. ) return;    // optim\n    \n    float t = 2.*iTime, T = 10., S=1., K = .2, i=0.;\n    \n#define  P0(t) vec2(0,.5) + K* vec2( fbm3(vec3(i,0, t)), fbm3(vec3(i,2, t)) ) / S\n\n    vec2 P1 = vec2(0,-.9), _P, P, X;\n    for ( i = 0.; i < 15.; i++ ) {\n        X = vec2((i/7.5-1.),.3*sin(1e4*i));\n        _P = P0(t)-X;\n        for (float s=0.; s<1.03; s+=.04) {       // draw curve\n            P = mix( P0(t-T*s)-X, P1, s ); \n            O += line(U,_P,P) *.03/ (.01+length(P-_P));\n            _P = P;\n       }\n       O += S(P0(t)-X -U, 3.);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}