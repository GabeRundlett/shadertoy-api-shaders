{
    "Shader": {
        "info": {
            "date": "1626438441",
            "description": "3 channel waveform scope",
            "flags": 32,
            "hasliked": 0,
            "id": "flsSWS",
            "likes": 6,
            "name": "Waveform MultiChannel",
            "published": 3,
            "tags": [
                "waveform",
                "scope"
            ],
            "usePreview": 0,
            "username": "kaihagseth",
            "viewed": 446
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iChannelResolution[0].xy;\n    uv /=  vec2(iChannelResolution[0].x/ iChannelResolution[1].x, iResolution.y/ float(NBUCKETS-1));\n    fragColor = texture(iChannel0, uv);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x > iChannelResolution[0].x ||fragCoord.y > float(NBUCKETS)) \n    {\n        return;\n    }\n        \n    float begin = (fragCoord.y/iChannelResolution[0].y) /  (float(NBUCKETS-1) /  iChannelResolution[0].y);\n    float end = ((fragCoord.y+1.0)/iChannelResolution[0].y) /  (float(NBUCKETS-1) /  iChannelResolution[0].y);\n    fragColor.rgb = vec3(0.0);\n    for (int i = 0; i < int(iChannelResolution[0].y); ++i)\n    {\n        vec4 v = texelFetch(iChannel0, ivec2(fragCoord.x,i), 0);\n        fragColor.r += step(v.r, end) * (1.0 - step(v.r, begin));\n        fragColor.g += step(v.g, end) * (1.0 - step(v.g, begin));\n        fragColor.b += step(v.b, end) * (1.0 - step(v.b, begin));\n    }\n    fragColor *= GAIN;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Number of buckets must be lower than the y-size of view. Lower to improve performance and reduce precision.\n#define NBUCKETS 256\n#define GAIN 0.1",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}