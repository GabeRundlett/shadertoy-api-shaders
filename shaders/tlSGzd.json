{
    "Shader": {
        "info": {
            "date": "1560710377",
            "description": "Playing with a thing I made the the other day",
            "flags": 0,
            "hasliked": 0,
            "id": "tlSGzd",
            "likes": 5,
            "name": "Fun Fractal",
            "published": 3,
            "tags": [
                "fractal",
                "complexnumbers"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 490
        },
        "renderpass": [
            {
                "code": "vec2 mul(vec2 a, vec2 b) {\n\treturn  mat2(a,-a.y,a.x) * b;\n}\nvec2 e (vec2 a) {\n\treturn exp(a.x)*vec2(cos(a.y),sin(a.y));\n}\nvec2 ln (vec2 a) {\n\treturn vec2(log(length(a)),atan(a.y,a.x));\n}\nvec2 pw (vec2 a, vec2 b) {\n\treturn e(mul(ln(a),b));\n}\nvec2 pw (vec2 a, float n) {\n\tfloat f = n * atan(a.y,a.x);\n    return pow(length(a),n) * vec2(cos(f),sin(f));\n}\nvec4 col (vec2 U) {\n\t#define R iResolution.xy\n    float t = iTime*sqrt(iTime)/50.;\n    U = (U-0.5*R)/R.y;\n    U *= 1.+4./(1.-U.y);\n    float c = cos(.3*iTime), s = sin(.3*iTime);\n    U *= (.5+.25*sin(.11*iTime))*mat2(c,-s,s,c);\n    U.x += .367878;\n    vec2 z = U;\n    float o = mod(floor(t),5.);\n    float n = 20.*sin(.1*iTime);\n    float a = 0.;\n    for (float i = 0.; i < 15.; i++) {\n        if (length(z)>1e4) z *= -1.;\n        if (length(z)<1e-3) z *=2.;\n        z = ln(z);\n        z = pw(z,2.+sin(.09*iTime));\n        z = mix(e(z),z,0.1+0.1*sin(.1*iTime));\n        \n        a += exp(-dot(z,z));\n    }\n   \treturn .5+.5*(sin(2.*a*(1.+.1*vec4(1,2,3,4))));\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    vec4 \n    \te=col(U+vec2(.5,0)),\n        n=col(U+vec2(0,.5)),\n        w=col(U-vec2(.5,0)),\n        s=col(U-vec2(0,.5));\n    vec3 g = normalize(vec3(length(e)-length(w),length(n)-length(s),.1));\n    Q = g.z*((0.5+g.x+g.y)+length(g.xy))*0.25*(n+e+s+w)*exp(-.5*length(U-0.5*R)/R.y);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}