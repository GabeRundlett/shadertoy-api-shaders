{
    "Shader": {
        "info": {
            "date": "1518008730",
            "description": "Some pleasing sci-fi inspired polygon shapes.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xs3yzN",
            "likes": 26,
            "name": "Octagonal Abstract",
            "published": 3,
            "tags": [
                "abstract",
                "polygons"
            ],
            "usePreview": 0,
            "username": "TekF",
            "viewed": 928
        },
        "renderpass": [
            {
                "code": "uint seed = 31713U;\n\nfloat rand( void )\n{\n    // integer hash from Hugo Elias\n\tseed = (seed << 13U) ^ seed;\n    seed = seed * (seed * seed * 15731U + 789221U) + 1376312589U;\n    uint seed2 = seed * seed;\n    return float(seed2&0x7fffffffU)/float(0x7fffffffU);\n}\n\n// returns a signed distance field\nfloat Polygon( vec2 uv )\n{\n    float f = abs(uv.y-rand()+.5)-rand()-1.;\n    f = max(f,abs(uv.x-rand()+.5)-rand()-.5);\n    f = max(f,abs(dot(uv,vec2(1,1)/sqrt(2.))-rand()+.5)-rand()-1.);\n    f = max(f,abs(dot(uv,vec2(1,-1)/sqrt(2.))-rand()+.5)-rand()-1.);\n    return f;\n}\n\nvoid mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    vec2 uv = 4.*(fragCoord-iResolution.xy*.5)/iResolution.y;\n\n    seed += uint(iFrame/20);\n    fragColour.r = Polygon(uv);\n    fragColour.g = Polygon(uv);\n    fragColour.b = Polygon(uv);\n\n    // map signed distance field to [0,1] range nicely:\n    float bloom = .01;\n    fragColour.rgb = .5+.5*fragColour.rgb/(bloom+abs(fragColour.rgb));\n\n\t// signature   \n\t#define L(m,n,u,v,l,f) min(f,max(abs(dot(fragCoord-vec2(m,n),vec2(u,v)))-l,abs(dot(fragCoord-vec2(m,n),vec2(-v,u)))-1.))\n\tfloat sig=L(3,7,0,1,3.5,L(7,7,0,1,3.5,L(5,7,1,0,2.,L(14.5,5,.7071,-.7071,2.5,abs(length(fragCoord-vec2(12.7,7))-3.)-1.))));\n    fragColour.rgb *= .5+.5*sig/(.1+abs(sig));\n    \n    fragColour.rgb = pow(fragColour.rgb,vec3(1./2.2)); // gamma correction\n    fragColour.a = 1.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}