{
    "Shader": {
        "info": {
            "date": "1461595309",
            "description": "Make it look like you're a ghost over the background.",
            "flags": 2,
            "hasliked": 0,
            "id": "ld3SDS",
            "likes": 7,
            "name": "Invisibility cloak",
            "published": 3,
            "tags": [
                "webcam"
            ],
            "usePreview": 0,
            "username": "smwhr",
            "viewed": 3445
        },
        "renderpass": [
            {
                "code": "float brightness(in float R, in float G, in float B){\n   return sqrt(\n      R * R * .241 + \n      G * G * .691 + \n      B * B * .068);\n}\n\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture(image, uv) * 0.2270270270;\n  color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture(image, uv) * 0.1964825501511404;\n  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;   \n    \n    vec3 fg = texture(iChannel0,uv).xyz;\n    vec3 bg = texture(iChannel1,uv).xyz;\n\n    float b = brightness( bg.r, bg.g, bg.b );\n    \n    if(b > 0.42){\n        //fragColor = texture(iChannel0,uv);//vec4 (1.0,1.0,1.0, 1.0);\n        fragColor =blur13(iChannel0, uv, iResolution.xy, vec2(1,1));\n       \n    }else{\n\n    \tfragColor = vec4( fg, 1.0 );\n    }\n    \n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}