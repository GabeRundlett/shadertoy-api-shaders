{
    "Shader": {
        "info": {
            "date": "1476157014",
            "description": "plasma volume, modification of my dacing light orbs shader",
            "flags": 0,
            "hasliked": 0,
            "id": "lt2XWd",
            "likes": 40,
            "name": "plasma volume",
            "published": 3,
            "tags": [
                "volume",
                "plasma"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 1721
        },
        "renderpass": [
            {
                "code": "//Ethan Alexander Shulman 2016\n\n\nfloat len(vec3 p) {\n    return max(abs(p.x)*0.5+abs(p.z)*0.5,max(abs(p.y)*0.5+abs(p.x)*0.5,abs(p.z)*0.5+abs(p.y)*0.5));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy,\n        uv = (fragCoord - .5*R) / iResolution.y;\n    \n    vec3 rp = vec3(0.,iMouse.y/50.,iTime+iMouse.x/50.);\n    vec3 rd = normalize(vec3(uv,1.));\n    \n    vec3 c = vec3(0.);\n    float s = 0.;\n    \n    float viewVary = cos(iTime*0.05)*.15;\n    \n    for (int i = 0; i < 74; i++) {\n        vec3 hp = rp+rd*s;\n        float d = len(cos(hp*.6+\n                             cos(hp*.3+iTime*.5)))-.75;\n        float cc = min(1.,pow(max(0., 1.-abs(d)*10.25),1.))/(float(i)*1.+10.);//clamp(1.-(d*.5+(d*5.)/s),-1.,1.);\n        \n        c += (cos(vec3(hp.xy,s))*.5+.5 + cos(vec3(s+iTime,hp.yx)*.1)*.5+.5 + 1.)/3.\n              *cc;\n        \n        s += max(abs(d),0.35+viewVary);\n        rd = normalize(rd+vec3(sin(s*0.5),cos(s*0.5),0.)*d*0.05*clamp(s-1.,0.,1.));\n    }\n    \n    fragColor = vec4(pow(c,vec3(1.7)),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}