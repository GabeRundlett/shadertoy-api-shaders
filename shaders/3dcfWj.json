{
    "Shader": {
        "info": {
            "date": "1605956635",
            "description": "Explosion example with 2 circles",
            "flags": 0,
            "hasliked": 0,
            "id": "3dcfWj",
            "likes": 3,
            "name": "Cartoon style explosion0",
            "published": 3,
            "tags": [
                "kagtag"
            ],
            "usePreview": 0,
            "username": "kagtag",
            "viewed": 359
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n   // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float minDim = min(iResolution.x, iResolution.y);\n    float rFinal =  minDim * 0.3;\n    float rTime = mod(iTime * 0.9, 1.0);\n    float r = rTime * rFinal;\n\t\n    //float r2StartTime = step(0.5, rTime);\n    \n    float r2 = smoothstep(0.2, 1.0, rTime) * rFinal;\n    \n    vec2 xy = fragCoord - iResolution.xy * 0.5;\n    \n    float dist = xy.x * xy.x + xy.y * xy.y;\n    float greaterThanR = step(r*r, dist);\n    float greaterThanR2 = step(r2* r2, dist);\n    \n    vec3 col = vec3(1.0,1.0,1.0);\n    \n    col = col * (1.0- greaterThanR) * greaterThanR2;\n    \n\t//col = vec3(uv, 0.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}