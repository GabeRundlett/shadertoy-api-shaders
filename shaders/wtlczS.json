{
    "Shader": {
        "info": {
            "date": "1592404900",
            "description": "box blur",
            "flags": 32,
            "hasliked": 0,
            "id": "wtlczS",
            "likes": 4,
            "name": "fast box blur",
            "published": 3,
            "tags": [
                "boxblur"
            ],
            "usePreview": 0,
            "username": "indere",
            "viewed": 1045
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tif(uv.x <= iMouse.x / iResolution.x)\n    \tfragColor = texture(iChannel1, uv);\n    else\n    \tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float R = 12.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord / iResolution.xy;\n\tvec3 sum_c = texture(iChannel0, uv).rgb;\n   \tvec2 offset = vec2(1.0 / iResolution.x, 0.0);\n    for(float i = 1.5; i <= R; i+=2.0){\n    \tsum_c += texture(iChannel0, uv + offset * i).rgb * 2.0;\n        sum_c += texture(iChannel0, uv - offset * i).rgb * 2.0;\n    }\n    fragColor = vec4(sum_c / (2.0 * R + 1.0), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "const float R = 12.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord / iResolution.xy;\n\tvec3 sum_c = texture(iChannel0, uv).rgb;\n   \tvec2 offset = vec2(0.0,1.0 / iResolution.y);\n    for(float i = 1.5; i <= R; i+=2.0){\n    \tsum_c += texture(iChannel0, uv + offset * i).rgb * 2.0;\n        sum_c += texture(iChannel0, uv - offset * i).rgb * 2.0;\n    }\n    fragColor = vec4(sum_c / (2.0 * R + 1.0), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}