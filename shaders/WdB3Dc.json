{
    "Shader": {
        "info": {
            "date": "1550095981",
            "description": "Is it blue noise? I don't know, but it looks like it's approaching it at some scales. Gets the hash of a point and subtracts the average of the hashes of 4 nearby points, determined by dist.",
            "flags": 0,
            "hasliked": 0,
            "id": "WdB3Dc",
            "likes": 3,
            "name": "Semi-Blue Noise?",
            "published": 3,
            "tags": [
                "noise",
                "hash",
                "bluenoise",
                "mystery"
            ],
            "usePreview": 0,
            "username": "TEttinger",
            "viewed": 506
        },
        "renderpass": [
            {
                "code": "// Uses hash and noise functions from https://www.shadertoy.com/view/4sGSDd , thanks to Fabrice Neyret\n// I don't really know why this appears close to blue noise, at least to my eyes.\n\n// change dist to 2.0 and it gets closer to red noise.\n#define dist 1.0\n\nfloat hash( uint n ) { // from https://www.shadertoy.com/view/llGSzw  Base: Hugo Elias. ToFloat: https://iquilezles.org/articles/sfrand\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return uintBitsToFloat( (n>>9U) | 0x3f800000U ) - 1.;\n}\nfloat noise(vec2 U) {\n    return hash(uint(U.x+iResolution.x*U.y));\n}\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    float next = noise(U) * 4. -(noise(U+vec2(dist,0.))+noise(U+vec2(0.,dist))+noise(U-vec2(0.,dist))+noise(U-vec2(dist,0.))) + 0.5;\n    O = vec4(next, next, next, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}