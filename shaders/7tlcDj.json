{
    "Shader": {
        "info": {
            "date": "1648748241",
            "description": "A fractal with knot-like patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "7tlcDj",
            "likes": 2,
            "name": "Fractal knots 16",
            "published": 3,
            "tags": [
                "fractal",
                "knot"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 298
        },
        "renderpass": [
            {
                "code": "#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n    //return abs(fract((a+c1.xy)*scale)-.5)-ceil(a.y/2.)/4.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;  \n    float t1 = 36.*4.*4.*1.5;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n        uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    float p1 = 1.;\n    for(int i=0;i<6;i++)\n    {\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 3; k++){\n            uv += (t2.yx);\n            uv /= scale;\n            //uv += ceil(t2*2.)/2.; //lace pattern\n\n            uv += vec2(1.);\n            //if(uv.y>uv.x) uv = -uv.yx; else uv *= -sign(uv-uv.yx);\n            t2 = p1*triangle_wave(uv.yx-.5,1.5);\n            t3 = -p1*triangle_wave(uv,1.5);\n            uv.yx = (t2+t3);\n            p1 *= -1.;\n            //p1 *= -sign(t2.x-.25);\n        }\n        \n        //col.x = abs(col.x-.5);\n        col.x = 1.-min(uv.y+uv.x+col.x,col.x)*2.;\n        //col.x = min(uv.y-uv.x+col.x,col.x*2.);\n        \n        //uv.x *= -1.;\n        col = abs(col.yzx-vec3(1.5-col.x))/2.;\n        //col = abs(col.yzx+vec3(col.x)*2.)/3.;\n\n        uv.y *= -1.;\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}