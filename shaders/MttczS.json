{
    "Shader": {
        "info": {
            "date": "1533074488",
            "description": "from top to bottom:  ( see bufA )   with , F = FFFF0000, S = 80000000\nF 0 F 0    << ok\nF S 0 0   << miss-stored\n0 S 0 0   << miss-stored\nS 0 F 0   << miss-stored\nS .  0  .   << miss-stored\nlast line (bottom): same directly, without storage",
            "flags": 32,
            "hasliked": 0,
            "id": "MttczS",
            "likes": 1,
            "name": "GLSL bug uintBitsToFloat",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 966
        },
        "renderpass": [
            {
                "code": "// variants: https://www.shadertoy.com/view/3sBGz1\n//           https://www.shadertoy.com/view/WdB3zh\n\n// --- load decode and display bit i / 4x32 from buffA\n\n#define N(P,i) vec4( ( UVEC4(T(P))[i/32] >> (31-(i%32)) ) & 1U )\n\n#define T(U)   texelFetch(iChannel0,ivec2(U),0)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = floor(U/4.); U.y -= 2.;\n    int i = int(U.x);             // bit position\n    O -= O; \n    if (i>=32*4) return;\n    \n    O.b = float(i%2==1) * .5;     // dislplay guides\n    O.g = float(i%8==7) * .5;\n    O.r = float(i%32==31);\n    if (mod(U.y,10.)==0. && U.y<=50.) O.b = .5;\n\n    \n    if (U.y==50.) O += N(4,i);    // display bits 4x32\n    if (U.y==40.) O += N(3,i); \n    if (U.y==30.) O += N(2,i);\n    if (U.y==20.) O += N(1,i);\n    if (U.y==10.) O += N(0,i);  \n    \n    uvec4 S = uvec4(0x80000000U,0,0,0); // bottom line:  directly, without storage\n    if (U.y==0.) O += vec4( ( UVEC4(VEC4(S))[i/32] >> (31-(i%32)) ) & 1U );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// store 4x32bits in buffer RGBA\n\n#define F   uintBitsToFloat(0xFFFF0000U)\n#define S   uintBitsToFloat(0x80000000U)\n\nvoid mainImage( out vec4 O, vec2 U )\n{ \n    U -= .5;\n    O = vec4(0);\n    if (U==vec2(4)) O = vec4( F, 0, F, 0 );\n    \n    if (U==vec2(3)) O = vec4( F, S, 0, 0 );\n    if (U==vec2(2)) O = vec4( 0, S, 0, 0 );\n    if (U==vec2(1)) O = vec4( S, 0, F, 0 );\n    if (U==vec2(0)) { O.x = S; O.z=0.; }\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define VEC4(a)   vec4( uintBitsToFloat((a).x),   \\\n                        uintBitsToFloat((a).y),   \\\n                        uintBitsToFloat((a).z),   \\\n                        uintBitsToFloat((a).w) )\n\n#define UVEC4(a) uvec4( floatBitsToUint((a).x),   \\\n                        floatBitsToUint((a).y),   \\\n                        floatBitsToUint((a).z),   \\\n                        floatBitsToUint((a).w) )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}