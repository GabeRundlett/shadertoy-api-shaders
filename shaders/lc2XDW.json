{
    "Shader": {
        "info": {
            "date": "1706365955",
            "description": "Played around with this Formula: https://www.youtube.com/watch?v=Fvkw3IKJ8SU&t=224s\nKinda looks like some eyes.",
            "flags": 32,
            "hasliked": 0,
            "id": "lc2XDW",
            "likes": 0,
            "name": "The Eyes",
            "published": 3,
            "tags": [
                "eyes",
                "chladniplates"
            ],
            "usePreview": 0,
            "username": "Bronas",
            "viewed": 110
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv).rgba;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float PI = 3.1415926536;\n    \n    float a = sqrt(sin(iTime / 5.0)+ 10.0);\n    float b = sin(tan(sign(iTime / 5.0)));\n    float n = cos(iTime / 5.0) * 7.0 - 10.0;\n    float m = sin(iTime / 5.0) * 7.0 - 10.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float val = a * sin(PI * uv.x * n) * sin(PI * uv.y * m)\n    + b * sin(PI * uv.x * m) * sin(PI * uv.y * n);\n    \n    vec3 col = vec3(sin(tan(val) / 10.0), cos(tan(val) / .5), sign(val));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}