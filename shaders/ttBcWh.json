{
    "Shader": {
        "info": {
            "date": "1594211842",
            "description": "Don't ",
            "flags": 0,
            "hasliked": 0,
            "id": "ttBcWh",
            "likes": 27,
            "name": "Intricate circles",
            "published": 3,
            "tags": [
                "2d",
                "circles",
                "abstract"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 589
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nconst float PI = 3.141592653;\n\nfloat lenny(vec2 v)\n{\n  return abs(v.x)+abs(v.y);\n}\nfloat sat(float a)\n{\n  return clamp(a,0.,1.);\n}\n\nfloat sub(float a, float b)\n{\n  return max(a,-b);\n}\n\nfloat cir(vec2 p, float r)\n{\n  float a = atan(p.y,p.x)+r*sin(2.*r+iTime*.1);\n  return (length(p)-r)-sin(a*7.-iTime)*.15\n  +sin(a*3.-iTime)*.2\n  +sin(a*5.+sin(a))*.02;\n}\n\nfloat border(vec2 p, float th, float r)\n{\n  return sub(cir(p,r),cir(p,r-th));\n}\nvec3 rdr(vec2 uv)\n{\n  vec3 col;\n  int i = 0;\n  while (i<32)\n  {\n    float fi = float(i);\n      col += vec3(sat(pow(abs(uv.y),4.))*2.,.8,sat(abs(uv.x)+.5))*(1.-sat(border(uv,0.0005, .8+.02*fi)*80.));\n    col += .005*vec3(sat(pow(abs(uv.y),4.))*2.,.8,sat(abs(uv.x)+.5)).yxx*(1.-sat(border(uv*.5*vec2(-1.,1.)*(sin(iTime*.2)*.5+1.),0.0005, .8+.02*fi)*40.));\n    \n      ++i;\n  }\n\n  return col;\n}\n\nvec3 tone(vec3 col, vec2 uv)\n{\n  vec3 col2 = .7*mix(vec3(.76,.37,.18).zyx,vec3(.54,.85,.23).yzx,sat(.2*length(uv)));\n  col *= col2;\n  col += col2*.0008;\n  col = pow(col,vec3(1./1.8*(sin(iTime)*.1+.5)));\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy / iResolution.xx;\n  uv -= vec2(.5)*iResolution.xy/iResolution.xx;\n  uv*=8.;\n\n  vec3 col = rdr(uv);\n  col = tone(col,uv);\n  vec3 colMult = mix(vec3(.37,.25,.56).zxy, vec3(.37,.25,.56), sin(iTime*.5)*.5+.5);\n  fragColor = vec4(col*colMult*3., 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}