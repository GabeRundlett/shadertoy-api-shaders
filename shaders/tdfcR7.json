{
    "Shader": {
        "info": {
            "date": "1584391458",
            "description": "Pixel art sheep, bouncing around all day long.\nWould like to hear about optimizations and more tips and tricks",
            "flags": 0,
            "hasliked": 0,
            "id": "tdfcR7",
            "likes": 8,
            "name": "Dancing Sheep",
            "published": 3,
            "tags": [
                "simple",
                "pixelart"
            ],
            "usePreview": 0,
            "username": "fisheep",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "vec2 rotate(vec2 uv, float a)\n{\n    float cosa = cos(a), sina = sin(a);\n    return vec2(uv.x*cosa-sina*uv.y,uv.x*sina+uv.y*cosa);\n}\n\nbool rect(vec2 p, vec4 dim, vec3 inCol, out vec3 outCol)\n{\n    bool res = false;\n    if(abs(p.x-dim.x)<0.5*dim.z && abs(p.y-dim.y)<0.5*dim.w)\n    {\n        outCol = inCol;\n        res = true;\n    }\n    return res;\n}\n\n\nbool circle(vec2 p, vec3 circ, vec3 inCol,bool outline, out vec3 outCol)\n{\n    float c = length(floor(p-circ.xy));\n    bool res = false;\n    if(c < circ.z)\n    {\n        res = true;\n        if(outline)\n        {\n            float outline = circ.z-0.8;\n            outCol= step(c,outline)*inCol+step(outline, c)*vec3(0);\n        }\n        else\n        {\n            outCol = inCol;\n        }\n    }\n    return res;\n}\n\nbool hornsAndEyes(vec2 p, vec2 c, out vec3 col)\n{\n    bool res = abs(abs(p.x-c.x-0.5)-1.0)<0.5 && abs(abs(p.y-c.y-3.5)-1.0)<0.5;\n    if(res)\n    {\n        col = vec3(0);\n    }\n    return res;\n}\n\nbool face(vec2 p, vec2 c, out vec3 col)\n{\n    bool hit = hornsAndEyes(p,c, col);\n    hit = hit || rect(p,vec4(c.x+0.5,c.y+1.0,4.5,6), vec3(0.5),col);\n    hit = hit || rect(p, vec4(c.x+0.5,c.y+2.5,8.5,1), vec3(0.5), col);\n    hit = hit || rect(p,vec4(c.x+0.5,c.y-2.25,3.5,1.25), vec3(0.5), col);\n    return hit;\n}\n\nbool legs(vec2 p, vec2 c, vec3 inCol, out vec3 col)\n{\n    bool hit = rect(p, vec4(c.x+1.5,c.y-6.0,1,2), inCol, col) || rect(p, vec4(c.x-0.5,c.y-6.0,1,2), inCol, col);\n    hit = hit || rect(p, vec4(c.x+1.5,c.y-6.5,3,3), vec3(0), col) || rect(p, vec4(c.x-0.5,c.y-6.5,3,3), vec3(0), col);\n    return hit;\n}\n\nbool body(vec2 p, vec2 c, vec3 inCol, out vec3 col)\n{\n    bool hit = legs(p, c, inCol, col);\n    hit = hit || circle(p, vec3(c.xy,7.5), inCol, true, col);\n    return hit;\n}\n\nbool sheep(vec2 p, vec2 c, vec3 bodyCol, out vec3 col)\n{\n    bool hit = face(p, c, col);\n    hit = hit || body(p, c, bodyCol, col);\n    return hit;\n}\n\nbool moon(vec2 p, vec3 circ, vec3 inCol, out vec3 col)\n{\n    vec3 crecentO = vec3(3,-2,0.2*circ.z);\n    bool hit = circle(p, circ,vec3(1.0,0.9,0.0),true, col);\n    hit = hit && !circle(p, circ-crecentO,vec3(1.0,0.9,0.0),false, col);\n    return hit;\n}\n\nvec3 bg(vec2 p, float dayV)\n{\n    vec3 col;\n    vec2 baseP = vec2(40,35);\n    vec2 sunP = baseP + vec2(-20,10) + vec2(0,40)*(1.0-dayV);\n    vec2 moonP = baseP + vec2(20,-2) + vec2(0,40)*dayV;\n    bool hit = circle(p, vec3(sunP,12.75),vec3(1.0,0.9,0.0),false, col);\n    hit = hit || moon(p, vec3(moonP, 10.5), vec3(1.0,0.9,0.0), col);\n    if(!hit)\n    {\n    \tcol = step(p.y,9.0)*mix(vec3(0.06,0.45,0.01),vec3(0.12,0.9,0.2),dayV-0.5)+\n        \tstep(9.0,p.y)*mix(vec3(0.1,0.06,0.45),vec3(0.2,0.12,0.9),dayV);\n    }\n    return col;\n}\n\nvec3 scene(vec2 p)\n{\n    vec3 col = vec3(0);\n    float dayV = 2.0*abs(fract(0.5+0.125*iTime)-0.5);\n    dayV = dayV*dayV*(3.0-2.0*dayV);\n    bool hit = false;\n    for(float i = 0.0;i<5.0;i++)\n    {\n        vec2 c = vec2(20.0*i +10.0*sin(2.0*iTime), 15.0+2.0*abs(cos(2.0*i+10.0*iTime)));\n        vec3 scol = mix(vec3(0.9,0.8,0.7),vec3(1),0.833*fract(0.6*i))*dayV;\n        hit = hit || sheep(p, c, scol, col);\n    }\n    return hit? col : bg(p, dayV);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv*= vec2(80,45);\n    vec3 col = scene(uv);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}