{
    "Shader": {
        "info": {
            "date": "1548658981",
            "description": "hahhahaah",
            "flags": 0,
            "hasliked": 0,
            "id": "wdjGDz",
            "likes": 2,
            "name": "Kendall Jenner Hot",
            "published": 3,
            "tags": [
                "spinny",
                "muter",
                "toeng"
            ],
            "usePreview": 0,
            "username": "sanddroo",
            "viewed": 373
        },
        "renderpass": [
            {
                "code": "#define  PI 3.142857142\n#define DPI 6.285714285\n\nfloat pol(in vec2 uv, float n, float tam){\n    \n    float a = atan(uv.x, uv.y) - 3.14;\n    float r = DPI/n;\n    float d = cos(floor(0.5+a/r)*r-a)*length(uv);\n    d = 1.0-step(tam,d); \n    return d;\n}\n\nfloat Circle (vec2 uv, float blur, float r) {\n    float d = length(uv);\n    float c = smoothstep(r,r-blur,d);\n    return c;\n}\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,0.0,_scale.y);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; \n    vec2 uv1 = fragCoord/iResolution.xy; \n    vec2 uv2= fragCoord/iResolution.xy; \n    vec2 uv3 = fragCoord/iResolution.xy;\n    vec2 uv4 = fragCoord/iResolution.xy; \n    vec2 pos= vec2(-1.,0.);\n    vec2 pos1= vec2(-1.,0.);\n    \n    vec3 col;\n    uv -= .5;\n    uv1 -= .5;\n    uv2 -= .5;\n    uv3 += pos;\n    uv4 += pos1;\n    \n   \tuv.x *= iResolution.x/iResolution.y;\n\tuv1.x *= iResolution.x/iResolution.y;\n\tuv2.x *= iResolution.x/iResolution.y;\n    uv3.x *= iResolution.x/iResolution.y;\n    uv4.x *= iResolution.x/iResolution.y;\n\n   \tuv = scale( vec2(sin(iTime)/1.5+1.) ) *uv;\n    float p1 = pol(uv, 6.0, 0.1);\n    \n    uv1 = rotate2d( sin(iTime)*PI) * uv1;\n    float t1= pol(uv1,3.0,0.1);\n\n    vec2 translate = vec2(cos(iTime),sin(iTime));\n    uv2 += translate*0.4;\n    float r1= pol(uv2,4.0,0.1);\n    \n    pos = vec2(-1.+sin(iTime)/2.,0.5);\n    float c0 = Circle(uv3-pos ,.001,.08);\n    \n    pos1 = vec2(-.9,0.5+sin(iTime)/2.);\n    float c1 = Circle(uv4 -pos1,.001,.08);\n\n    col += vec3(p1)*vec3(0,0.5,1);\n\tcol += vec3(t1)*vec3(1.,0.,0.);\n    col += vec3(r1)*vec3(0.,1.,0.);\n    col += vec3(c0)*vec3(.5,.5,0.);\n    col += vec3(c1)*vec3(0.,.5,.5);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}