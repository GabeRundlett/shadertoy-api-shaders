{
    "Shader": {
        "info": {
            "date": "1644562391",
            "description": "Truchet Tiles v2 with more types",
            "flags": 0,
            "hasliked": 0,
            "id": "Nssfz4",
            "likes": 9,
            "name": "odos|Truchet Tiles v2",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "ErinZ",
            "viewed": 383
        },
        "renderpass": [
            {
                "code": "#define S(v,r) smoothstep( r, r+ 5./iResolution.y, v )\n#define s(v,r,sc) smoothstep(r+sc*3./iResolution.y,r-sc*3./iResolution.y, v)  \n\n\nvec2 hash(vec2 p){\n    p = vec2( dot(p,vec2(137.1,373.7)), dot(p,vec2(269.5,183.7)) ); \n    return fract(sin(p)*43758.37); \n}\nfloat logo(vec2 uv);\n\nvec2 rotate(vec2 uv, float a){\n    vec2 q;\n    q.x = cos(a)*uv.x + sin(a)*uv.y;\n    q.y = -sin(a)*uv.x + cos(a)*uv.y; \n    return q;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    float scale = 5.+3.*iMouse.x/iResolution.y;\n    vec2 uv1 = uv*scale+vec2(iTime,0);//scale and tile\n    vec2 gv = fract(uv1)-.5;//grid uv\n    \n    vec3 col;\n    //if(gv.x>.48 ||gv.y>.48) col = vec3(1,0,.6);//grid line\n\n    vec2 n = hash(floor(uv1));\n    gv = rotate(gv,floor(n.x*4.)*1.5708);//n.x - random dirction\n    int ty = int(floor(n.y*6.));//n.y - random tile\n    \n    float w = 0.16666667;\n    \n    float m;\n    switch(ty){\n    case 0://2 arc\n    m = s(abs(length(gv-0.5)-0.5),w,scale)+s(abs(length(gv+0.5)-0.5),w,scale);break;\n    case 1://1 arc\n    m = s(abs(length(gv-0.5)-0.5),w,scale)+s(length(gv+vec2(0,.5)),w,scale)+s(length(gv+vec2(.5,0)),w,scale);break;\n    case 2://1 line\n    m = s(abs(gv.x),w,scale)+s(length(abs(gv)-vec2(.5,0)),w,scale);break;\n    case 3://t line\n    m = s(gv.x,w,scale)-s(length(abs(gv)-vec2(.5)),2.*w,scale)+s(length(gv+vec2(-.5,0)),w,scale);break;\n    case 4://+ line\n    m = 1.-s(length(abs(gv)-vec2(.5)),2.*w,scale);break;\n    case 5:\n    default:\n    //4pt\n    m = s(length(abs(gv)-vec2(0,.5)),w,scale)+s(length(abs(gv)-vec2(.5,0)),w,scale);break;\n    }\n    m = clamp(m,0.,1.);\n    \n    col += m*.6;\n    col =mix(col,vec3(1),logo(uv));\n    fragColor = vec4(col,1.0);\n}\n\n \nfloat logo(vec2 uv){\n    float n = S(.05,abs(length(uv-vec2(-1.23,0))-.12));\n    n *= 1.-S(-1.25,uv.x);\n    n =max(n, S(.17,abs(uv.y))*S(.05,abs(uv.x+1.29)));\n    n += S(.05,abs(length(uv-vec2(-1.5,0))-.12));\n    n += S(.05,abs(length(uv-vec2(-0.9,0))-.12));\n    n += clamp((1.+S(-.6,uv.x)-S(.05,uv.y)),0.,1.)*S(.05,abs(length(uv-vec2(-0.6,.03))-.09));\n    n += clamp((1.-S(-.6,uv.x)+S(-.05,uv.y)),0.,1.)*S(.05,abs(length(uv-vec2(-0.6,-.04))-.09));\n    return n;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}