{
    "Shader": {
        "info": {
            "date": "1722423564",
            "description": "golfing 775 chars https://shadertoy.com/view/MlBSRy\nfrom my \"crowded\" series https://www.shadertoy.com/results?query=crowded",
            "flags": 0,
            "hasliked": 0,
            "id": "XcjcWw",
            "likes": 23,
            "name": "crowded cubes 4b (587ch)",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "short",
                "spheremarching"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 209
        },
        "renderpass": [
            {
                "code": "// golfing 775 chars https://shadertoy.com/view/MlBSRy\n// -6 SnoopethDuckDuck, -2 Elsio, -21 Fab\n\n#define r mat2( cos( vec4(0,11,33,0) + T // *a))         // rotation\n\nvoid mainImage( out vec4 O, vec2 U ) {\n\n    float T = iTime, i, k=1.2, t,s, d=++i, o;\n    vec4 u,F,A,M,\n         P = vec4(U,0,1) / iResolution.y -.5, D; P.x-=.4; // init ray \n    P.xz *= r*.13)); P.yz *= r*.2)); P.xy *= r*.1));      // camera rotations\n    D = P;                                                // ray dir = ray0 - vec3(0)\n   \n    for ( P.z += 5.*T; i>0. && d>.01; i-=.01 )  \n        u = ceil(P/8.),                                   // u: objects id\n        M = max( A = abs( F = P-8.*u+4.), A.yzxw ),       // F: local frame in cell      \n        u = fract(1234.*sin(78.*(u+u.yzxw))),             // randomize ids\n        t = k* cos( 3.*T + u.y/.1 + 23.*u.z ),\n        s = k*.5 + .4*t,\n        o = fract(u.x+u.y+u.z),\n        d = min( max( max(A.x,M.y) - k, 1.1 - min(M.x,min(M.y,M.z)) ),     // cube frame\n                   o>.75 ? F.xy *= r*3.)),   // ( doing A=abs(F) would compile wrong )\n#define M(t,f)             max( abs(t-F.x) - k*.1,  max(abs(f.y),A.z) - k )\n                           M(  , F )                                       // rotating plate\n                 : o>.5  ? M( t, A )                                       // moving plate\n                 : o>.25 ? max( A.x - k, M.y - s )                         // growing bar\n                 :         max( A.x - s, M.y - k )                         // growing plate\n               ),\n        P -= D*d;                                  // march ray\n     \n     O = i*i + i*i*.2*F;                           // color texture + black fog \n }\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}