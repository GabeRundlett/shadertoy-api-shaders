{
    "Shader": {
        "info": {
            "date": "1509936455",
            "description": "radar raid",
            "flags": 0,
            "hasliked": 0,
            "id": "MtSyRy",
            "likes": 2,
            "name": "Z1 10/26/17 POOR ATTEMPT",
            "published": 3,
            "tags": [
                "graprog"
            ],
            "usePreview": 0,
            "username": "L1tang",
            "viewed": 112
        },
        "renderpass": [
            {
                "code": "float parabola( float x, float k )\n{\n    return pow( 4.0*x*(1.0-x), k );\n}\nfloat gain(float x, float k) \n{\n    float a = 0.5*pow(2.0*((x<0.5)?x:1.0-x), k);\n    return (x<0.5)?a:1.0-a;\n}\nfloat impulse( float k, float x )\n{\n    float h = k*x;\n    return h*exp(1.0-h);\n}\n\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nmat2 scale2d(vec2 value)\n{\n    return mat2(value.x, 0, 0, value.y);\n}\n\nvec3 circle(float radius, float ratio, float edge, vec2 pos, vec2 uv, vec3 color)\n{\n    \n    vec2 shapePos = pos;\n    float dist = distance(shapePos, uv);\n    \n    //offset to 0,0\n    uv -=shapePos;\n    /*eclipse replace if the second value is a constant it will fill the circle and the background\n\tsmoothstep(dist, aConstant, radius);*/\n    float value = smoothstep(dist, dist + edge, radius);\n    \n    vec3 finalColor = vec3(value);\n    finalColor = mix(finalColor, color, value);\n    \n    \n    return finalColor;\n}\nvec3 box(vec2 uv, vec2 pos, vec2 dimension, vec3 fill, \n         vec3 bColor, vec2 bThicc, bool bSmooth, bool borderOnly)\n{\n    if (borderOnly == true)\n    {\n        float border = step(uv.x, pos.x) - step(uv.x, pos.x + dimension.x);\n        border *= step(uv.y, pos.y) - step(uv.y, pos.y + dimension.y);\n        \n        float box = step(uv.x, pos.x + bThicc.x) - step(uv.x, (pos.x - bThicc.y) + dimension.x);\n        box *= step(uv.y, pos.y + bThicc.y) - step(uv.y, (pos.y - bThicc.y) + dimension.y);\n        \n        vec3 finalBox = mix(vec3(0.), bColor, border);\n        finalBox = mix(finalBox, vec3(0.), box);\n        return finalBox;\n    }\n    \n    else\n    {\n        float border = step(uv.x, pos.x) - step(uv.x, pos.x + dimension.x);\n        border *= step(uv.y, pos.y) - step(uv.y, pos.y + dimension.y);\n        \n        float box = step(uv.x, pos.x + bThicc.x) - step(uv.x, (pos.x - bThicc.y) + dimension.x);\n        box *= step(uv.y, pos.y + bThicc.y) - step(uv.y, (pos.y - bThicc.y) + dimension.y);\n        \n        vec3 finalBox = mix(vec3(0.), bColor, border);\n        finalBox = mix(finalBox, fill, box);\n        return finalBox;\n    }\n}\n\n\nvec3 sun(float radius, float ratio, float edge, vec2 pos, vec2 uv, vec3 color)\n{\n    \n    vec2 shapePos = pos;\n    float dist = distance(shapePos, uv);\n    \n    //offset to 0,0\n    uv -=shapePos;\n    float angle = atan(uv.y, uv.x);\n    /*eclipse replace if the second value is a constant it will fill the circle and the background\n\tsmoothstep(dist, aConstant, radius);*/\n    radius += parabola(radius, -angle);\n    float value = smoothstep(dist, edge, radius);\n    \n    vec3 finalColor = vec3(value);\n    finalColor = mix(finalColor, color, value);\n    \n    \n    return finalColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    vec2 pos = vec2(0.5*ratio, 0.0);\n    vec2 gPos = vec2(0.5*ratio, .8);\n    vec2 lPos = vec2(gPos.x, .6);\n   \n    uv.x *= ratio;\n    vec2 uv2 = uv;\n    vec2 uv3 = uv;\n    uv2 -= gPos;\n    uv3 -= pos;\n    uv -= pos;\n    \n    uv2 *=  rotate2d(iTime)* scale2d(vec2(abs(2.+sin(iTime*2.))));\n    uv3 *=  rotate2d(iTime*2.)* scale2d(vec2(abs(2.+sin(iTime*2.))));\n    uv *=  rotate2d(iTime);\n    \n    uv2 += gPos;\n    uv3 += pos;\n    uv += pos;\n    \n    vec3 rect = box(uv, vec2(-.5, 0), vec2(1.4, .01), vec3(1,1,1), \n                    vec3(1,1,1), vec2(.05,.05), false, false);\n    vec3 gaia = circle(.2, ratio, 0.01, gPos,uv2, vec3(1,1,1));\n    vec3 gaia2 = circle(.15, ratio, 0.01, gPos,uv2, vec3(1,1,1));\n    vec3 gaia3 = circle(.05, ratio, 0.01, gPos,uv2, vec3(1,1,1));\n    vec3 sol = sun(.2, ratio, 0.01, pos,uv, vec3(1,1,1));\n    vec3 luna  = circle(.1, ratio, 0.01, lPos,uv2, vec3(1,1,1));\n    vec3 luna2  = circle(.05, ratio, 0.01, lPos,uv2, vec3(1,1,1));\n    vec3 luna3  = circle(.03, ratio, 0.01, lPos,uv2, vec3(1,1,1));\n    vec3 final = mix(vec3(0,0,0), vec3(1,.9,0), sol);\n        \n    final = mix(final, vec3(0,1,1), gaia); // mask\n    final = mix(final, vec3(0,.5,.5), gaia2);\n    final = mix(final, vec3(0,1,1), gaia3);\n    final = mix(final, vec3(.5,1,.5), luna);\n    final = mix(final, vec3(.5,.5,.5), luna2);\n    final = mix(final, vec3(.5,1,.5), luna3);\n    final = mix(final, vec3(1,.9,0), rect);\n\tfragColor = vec4(final,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}