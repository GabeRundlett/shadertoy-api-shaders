{
    "Shader": {
        "info": {
            "date": "1591623629",
            "description": "An experiment with four layers of Truchets.",
            "flags": 0,
            "hasliked": 0,
            "id": "wlfyzN",
            "likes": 4,
            "name": "Curly",
            "published": 3,
            "tags": [
                "truchet"
            ],
            "usePreview": 0,
            "username": "Oggbog",
            "viewed": 371
        },
        "renderpass": [
            {
                "code": "float hash21(vec2 p) {\n    p = fract(p * vec2(233.34, 851.74));\n    p += dot(p, p + 23.45);\n    return fract(p.x * p.y);\n}\n\nfloat qCircle(vec2 uv){\n    float p;\n    float d = length(uv);\n    \n    p = smoothstep(0.2,0.19,d);\n    p -= smoothstep(0.1,0.09,d);\n    \n    return p;\n    \n}\n\nvec3 layer(vec2 uv, float size, vec2 scroll, vec3 color,vec3 canvas){\n    uv *= size;\n    uv += scroll;\n    \n    vec2 gv = fract(uv);\n    vec2 id = floor(uv);\n    float n = hash21(id);\n    n = floor(n*2.0);\n    \n    float d1,d2;\n    float off = 1.0;\n    \n    if (n==0.0){\n        d1 = length(gv-vec2(0.0,0.0));\n    \td2 = length(gv-vec2(off,off));  \n    } else {\n        d1 = length(gv-vec2(off,0.0));\n    \td2 = length(gv-vec2(0.0,off));\n    }\n    \n    // truchet\n    float p = smoothstep(0.65,0.64,d1);\n    p -= smoothstep(0.35,0.34,d1);\n    p += smoothstep(0.65,0.64,d2);\n    p -= smoothstep(0.35,0.34,d2);\n    \n    // inner circle\n    p += qCircle(gv-vec2(0.0));\n    p += qCircle(gv-vec2(0.0,off));\n    p += qCircle(gv-vec2(off,0.0));\n    p += qCircle(gv-vec2(off,off));\n    \n    // add color\n    if (p==1.0){\n    \tcanvas = color;\n    }\n    \n    return canvas;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 canvas = mix(vec3(1.0,1.0,0.0),vec3(1.0,0.0,0.0),uv.x);\n    fragColor = vec4(canvas,1.0);\n    \n    float a = iTime/4.0;\n    uv = uv * mat2(cos(a),-sin(a),sin(a),cos(a));\n    \n    vec3 l = layer(uv,50.0,vec2(iTime/8.0,0.0),vec3(0.2),canvas);\n    l = layer(uv,20.0,vec2(0.0,sin(iTime/4.0)),vec3(0.5),l);\n    l = layer(uv,8.0,vec2(iTime/2.0,sin(-iTime/2.0)),vec3(0.7),l);\n    l = layer(uv,6.0,vec2(cos(-iTime/1.5),iTime/1.5),vec3(0.98),l);\n    fragColor = vec4(l,1.0);\n    \n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}