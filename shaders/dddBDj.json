{
    "Shader": {
        "info": {
            "date": "1697661191",
            "description": "Simulating a damaged VCR playing a video",
            "flags": 0,
            "hasliked": 0,
            "id": "dddBDj",
            "likes": 1,
            "name": "Fork Damaged VC milana 082",
            "published": 3,
            "tags": [
                "chromaticaberration"
            ],
            "usePreview": 0,
            "username": "milana",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "float sawtooth_wave(float x, float freq, float amp) {\n    return (x * freq - floor(x * freq)) * amp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n\n    float stripeBottom = 5.f + sawtooth_wave(iTime, 0.1, iResolution.y);\n    float stripeTop = 80.f + sawtooth_wave(iTime, 0.1, iResolution.y);\n    \n    float dist = abs(fragCoord.y - stripeTop);\n    \n    if (fragCoord.y > stripeBottom && fragCoord.y < stripeTop) {\n        warpedUv += 0.01 * dist * tan(fragCoord.y);\n    }\n    \n    vec2 offset1 = vec2(0.03);\n    vec2 offset2 = vec2(0.015);\n    vec2 offset3 = vec2(0.0);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}