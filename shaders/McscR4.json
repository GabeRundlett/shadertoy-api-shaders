{
    "Shader": {
        "info": {
            "date": "1720881922",
            "description": "originals https://www.shadertoy.com/view/MXK3WG",
            "flags": 0,
            "hasliked": 0,
            "id": "McscR4",
            "likes": 3,
            "name": "2D SDF Dance remake",
            "published": 3,
            "tags": [
                "particles",
                "neon"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 142
        },
        "renderpass": [
            {
                "code": "#define PI (3.14159265)\n#define TAU (2.*PI)\n\n#define sum3(V) (V.x+V.y+V.z)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // scaled so (0,0) is in center of screen, adjusted for aspect ratio\n    vec2 uv = (2.*fragCoord - iResolution.xy ) / iResolution.y;\n    uv*=2.5;\nfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .57)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n    uv*=ma;\n    vec3 col = vec3(0.);\n\n    for (float i = 5.; i < 70.; i ++)\n        col += (.5+.5*sin(vec3(TAU/1.,TAU/2.,TAU*1./3.)+i*2.47) )// color\n          *.05/distance(uv+0.01*cos(i)*1.*trunc(iTime*1.1+i),\n            vec2(sin(iTime*i/13.-i)+cos(i),cos(iTime*i/13.+i))*0.8)+sin(i);\n\n    col = clamp(col,0.,3.5);\n\n   \n    col = sqrt(col)*2.-1.;\n\n    fragColor = vec4(col, 1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}