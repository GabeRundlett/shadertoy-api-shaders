{
    "Shader": {
        "info": {
            "date": "1613173251",
            "description": "glitch",
            "flags": 0,
            "hasliked": 0,
            "id": "3ttfzf",
            "likes": 6,
            "name": "Treemap",
            "published": 3,
            "tags": [
                "glitch"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 388
        },
        "renderpass": [
            {
                "code": "#define rnd(x) (sin(9e4*x)*.5+.5)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float split, edgeX1=0., edgeX2=1., edgeY1=0., edgeY2=1., spanX, spanY;\n    split = rnd(iMouse.x/10000.);\n    for(float i = 0.; i < 10.; i++) {\n        spanX = edgeX2 - edgeX1;\n        if (spanX < 0.04) break;\n        if((uv.x-edgeX1)/spanX < split) {\n            edgeX2 = edgeX1 + split*spanX;\n            split = rnd(split+10.);\n        }\n        else {\n            edgeX1 = edgeX1 + split*spanX;\n            split = rnd(split+20.);\n        }\n        \n        spanY = edgeY2 - edgeY1;\n        if (spanY < 0.02) break;\n        if((uv.y-edgeY1)/spanY < split) {\n            edgeY2 = edgeY1 + split*spanY;\n            split = rnd(split+10.);\n        }\n        else {\n            edgeY1 = edgeY1 + split*spanY;\n            split = rnd(split+20.);\n        }   \n    }\n    spanY = edgeY2 - edgeY1;\n    spanX = edgeX2 - edgeX1;\n    uv.x = (uv.x-edgeX1)/spanX;\n    uv.y = (uv.y-edgeY1)/spanY;\n    fragColor = vec4(1.5-length(uv*2.-1.))*vec4(\n        rnd(split),\n        rnd(split+1.),\n        rnd(split+2.),\n        1.\n    );\n    fragColor *= step(.5,rnd(floor(length(uv-.5)*50.*split)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}