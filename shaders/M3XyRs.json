{
    "Shader": {
        "info": {
            "date": "1726550140",
            "description": "source fractal 62",
            "flags": 0,
            "hasliked": 0,
            "id": "M3XyRs",
            "likes": 0,
            "name": "hole 2",
            "published": 3,
            "tags": [
                "fractal",
                "hole"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 63
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n#define resolution iResolution.xy\n#define time iTime\nconst vec3 bgColor=vec3(0.5, 0.3, 1.15);\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec2 p2 = C.xy/resolution.xy -0.5; // why -0.5? To center pixels?\np2.x *= resolution.x/resolution.y;   //Correct for aspect ratio\n \n// deformation of radius\nfloat time = time+length(p2*18.); // time + length of coordinate scaled... hmmm...  \nfloat r2= 0.01*(1.+sin(time))*pow(cos(time-(p2.x * cos(time*p2.y),-p2.y)*2.), 2.);\n\n\n// p distance - radius\nfloat s = length(p2/5.0) - r2;\n\n// step\nvec3 col = bgColor / smoothstep(0.1, 1.0, pow(s,0.3));\ncol = col * 2.0 ;\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(1),H(g*.1),.8)*1./e/8e3\n    )\n    {\n        p=g*d+col;\n     p.z+=iTime*10.;\n        a=50.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            s*=e=1.2+sin(iTime*.001)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.*3.,\n                    120,\n                    8.*5.\n                 );\n         }\n         g+=e=length(p.yz)/s;\n    }\n   \nO*= vec4( col, 255.0 );\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}