{
    "Shader": {
        "info": {
            "date": "1686842613",
            "description": "I need public api for my blog.my article about this effect:https://martinrgb.github.io/blog/#/Namedrop_Animation",
            "flags": 0,
            "hasliked": 0,
            "id": "dlyXRK",
            "likes": 4,
            "name": "Fork Shock Wave MartinRGB 199",
            "published": 3,
            "tags": [
                "wave",
                "water",
                "saturation",
                "shockwave",
                "ripple",
                "shock"
            ],
            "usePreview": 1,
            "username": "MartinRGB",
            "viewed": 1057
        },
        "renderpass": [
            {
                "code": "//Use as you will.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Sawtooth function to pulse from centre.\n    float offset = (iTime- floor(iTime))/iTime;\n\tfloat CurrentTime = (iTime)*(offset);    \n    \n\tvec3 WaveParams = vec3(10.0, 0.8, 0.1 ); \n    \n    float ratio = iResolution.y/iResolution.x;\n    \n    //Use this if you want to place the centre with the mouse instead\n\t//vec2 WaveCentre = vec2( iMouse.xy / iResolution.xy );\n       \n    vec2 WaveCentre = vec2(0.5, 0.5);\n    WaveCentre.y *= ratio; \n   \n\tvec2 texCoord = fragCoord.xy / iResolution.xy;      \n    texCoord.y *= ratio;    \n\tfloat Dist = distance(texCoord, WaveCentre);\n    \n\t\n\tvec4 Color = texture(iChannel0, texCoord);\n    \n//Only distort the pixels within the parameter distance from the centre\nif ((Dist <= ((CurrentTime) + (WaveParams.z))) && \n\t(Dist >= ((CurrentTime) - (WaveParams.z)))) \n\t{\n        //The pixel offset distance based on the input parameters\n\t\tfloat Diff = (Dist - CurrentTime); \n\t\tfloat ScaleDiff = (1.0 - pow(abs(Diff * WaveParams.x), WaveParams.y)); \n\t\tfloat DiffTime = (Diff  * ScaleDiff);\n        \n        //The direction of the distortion\n\t\tvec2 DiffTexCoord = normalize(texCoord - WaveCentre);         \n        \n        //Perform the distortion and reduce the effect over time\n\t\ttexCoord += ((DiffTexCoord * DiffTime) / (CurrentTime * Dist * 40.0));\n\t\tColor = texture(iChannel0, texCoord);\n        \n        //Blow out the color and reduce the effect over time\n\t\tColor += (Color * ScaleDiff) / (CurrentTime * Dist * 40.0);\n\t} \n    \n\tfragColor = Color; \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}