{
    "Shader": {
        "info": {
            "date": "1614724579",
            "description": "Uncomment one of lines 25-27 and compile.  Is there a change?  The red output channel (the only one visible) doesn't depend on p1i or p2i, so forcing those to be evaluated is not expected to change the output, however it can have a large effect anyway.",
            "flags": 0,
            "hasliked": 0,
            "id": "WlyBR3",
            "likes": 7,
            "name": "GLSL bug: side effects",
            "published": 3,
            "tags": [
                "bug"
            ],
            "usePreview": 0,
            "username": "ttg",
            "viewed": 840
        },
        "renderpass": [
            {
                "code": "\nprecision highp float;\nprecision highp int;\n\nvoid mainImage( out vec4 fd, in vec2 fc )\n{\n    const float ishift = 100.;\n    const float shift = 1./ishift;\n    ivec2 c = ivec2(fc);\n    \n    float a = float(c.x)*shift;\n    float b = float(c.y)*shift;\n    \n    float p1 = (1.+a)*(1.+b)-(1.+a+b);\n    float p2 = a*b;\n    \n    int p1i = int(round(p1*(ishift*ishift)));\n    int p2i = int(round(p2*(ishift*ishift)));\n    \n    fd = vec4(0.);\n    \n    fd.r = float(abs(p1-p2)<1e-10);\n    \n    //uncomment one of these:\n    //fd.g = -float(p1i==p2i);\n    //fd.g = -float(p1i);\n    //fd.g = -float(p2i);\n    \n    fd.b=0.;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}