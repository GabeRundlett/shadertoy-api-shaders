{
    "Shader": {
        "info": {
            "date": "1635558760",
            "description": "Mira Zeus",
            "flags": 8,
            "hasliked": 0,
            "id": "fl33Rr",
            "likes": 4,
            "name": "Mira Zeus",
            "published": 3,
            "tags": [
                "font",
                "mira",
                "zeus"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "//por jogre2017a2\n//Mira Zeus\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define SM(d,b) smoothstep(antialiasing(1.0),b,d)\n#define SM2(d,b) smoothstep(antialiasing(0.05),b,d)\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{   vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n///---------------------------\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,SM2( distObj,0.0));\n  //colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  colOut = mix(colOut,vec3(0.0) ,SM2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{colOut = mix(colOut,pColObj ,SM2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,SM2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,SM2( distObj,0.0));\n    return colOut;\n}\n\n\nvec3 colorplaneta( vec2 fragCoord )\n{\n    vec2 uv;\n    uv=fragCoord;\n    uv *= 5.0;\n    //Add distortion\n    for(float i = 1.0; i < 4.0; i+=1.0){ \n    \tuv.x += sin(iTime + uv.y * i);\n    \tuv.y += cos(iTime + uv.x * i);\n    }\n\n    //Time varying pixel colour\n    //vec3 col = 0.5 + 0.5*cos(4.0*iTime + uv.xyx + vec3(0,2,4));\n    \n    vec3 col = 0.5 + 0.5*cos(4.0*iTime + uv.xyx );\n//Fragment colour\n    return col;\n}\n\nfloat GetTexZeus(vec2 uv)\n{\n\tfloat t = iTime;\n\tuv*=3.;\n\t\n\tuv.x += 0.18;\n\tuv.y -= 3.5;\n\tuv.y *= 0.8;\n\tuv *=1.5;\n\tfloat d=1.5;\n\td = Z(uv,1.5);uv.x -= 1.2;\n\td = E(uv,d);uv.x -= 1.2;\n\td = U(uv,d);uv.x -= 1.2;\n\td = S(uv,d);uv.x -= 1.2;\n\treturn d-0.55*CHS;\n}\n\nfloat GetTextMira(vec2 uv)\n{\tfloat t = iTime;\n\tuv*=3.;\n\t\n\tuv.x += 0.18;\n\tuv.y -= 3.5;\n\tuv.y *= 0.8;\n\tuv *=1.5;\n\tfloat d=1.5;\n\td = M(uv,1.5);uv.x -= 1.2;\n\td = I(uv,d);uv.x -= 1.2;\n\td = R(uv,d);uv.x -= 1.2;\n\td = A(uv,d);uv.x -= 1.2;\n\treturn d-0.55*CHS;\n}\n\nfloat cuadro(vec2 uv)\n{\n    float d1= sdBox( uv, vec2(2.0,2.0) );\n    float d2= sdBox( uv, vec2(0.45,0.45) );\n    float dif= differenceSDF(d1, d2);\n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tuv-=0.5;\n    vec2 uv0=uv;\t\n\tfloat e1 = sin(uv.y*5.0+iTime)*0.1;\n\tfloat e2 = sin(uv.x*14.0+iTime*0.7)*0.1;\n\te1 = 2.0+e1+e2;\n\tuv*= e1;\n\tuv+=0.5;\n\tuv.x += sin(uv.y*0.32+iTime*0.67)*0.2;\n    vec3 col;\n    \n    \n    vec3 colBg0= colorplaneta(uv);\n    vec3 colBg1= colorplaneta(uv-vec2(0.5,-0.5));\n    col=colBg0;\n    \n    uv.x-=0.5;\n    uv.y+=0.1;\n    float xd1 = GetTexZeus(uv*1.0);\n    float xd2 = GetTexZeus(uv*2.0);\n    float xd3 = GetTexZeus(uv*3.0-vec2(0.0,-1.0));\n    float xd4 = GetTextMira(uv*3.0-vec2(-1.5,2.0));\n    \n    vec3 colletras=vec3(1.6+sin(iTime+uv.x*22.5)*0.2,0.9+sin(uv.x*5.0+uv.y*10.0+iTime*3.1)*0.3,0.5+sin(iTime*10.0+uv.x*32.0)*0.3);\n    col= DrawFigBorde(colletras, col, xd1 );\n    col= DrawFigBorde(colletras, col, xd2 );\n    col= DrawFigBorde(colletras, col, xd3 );\n    col= DrawFigBorde(vec3(1.0,0.0,0.0), col, xd4 );\n  \n    float c1= cuadro(uv0);\n    col= DrawFig(colBg1*vec3(0.3,0.5,0.6), col, c1 );\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//letras ==fuente\n//referencia de letras\n//https://www.glslsandbox.com/e#76408.0\n#define CHS 0.21\n\nfloat sdBox2(in vec2 p,in vec2 b) {vec2 d=abs(p)-b;return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);}\nfloat line2(float d,vec2 p,vec4 l){vec2 pa=p-l.xy;vec2 ba=l.zw-l.xy;float h=clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0);return min(d,length(pa-ba*h));}\n\nfloat LR(vec2 p, float d){p.x=abs(p.x);return line2(d,p,vec4(2,-3.25,2,3.25)*CHS);}\nfloat TB(vec2 p, float d){p.y=abs(p.y);return line2(d,p,vec4(2,3.25,-2,3.25)*CHS);}\nfloat TBLR(vec2 p, float d){return min(d,abs(sdBox2(p,vec2(2,3.25)*CHS)));}\nfloat A(vec2 p,float d){d=LR(p,d);p.y=abs(p.y-1.5*CHS);return line2(d,p,vec4(2,1.75,-2,1.75)*CHS);}\nfloat B(vec2 p,float d){p.y+=1.75*CHS;d=min(d,abs(sdBox2(p,vec2(2.0,1.5)*CHS)));p+=vec2(0.5,-3.25)*CHS;return min(d,abs(sdBox2(p,vec2(1.5,1.75)*CHS)));}\nfloat C(vec2 p,float d){d=TB(p,d);return line2(d,p,vec4(-2,3.25,-2,-3.25)*CHS);}\nfloat D(vec2 p,float d){d=line2(d,p,vec4(-2,-3.25,-2,3.25)*CHS);d=line2(d,p,vec4(2,-1,2,1)*CHS);p.y=abs(p.y);d=line2(d,p,vec4(2,1,1.5,2.75)*CHS);d=line2(d,p,vec4(1.5,2.75,1,3.25)*CHS);return line2(d,p,vec4(1,3.25,-2,3.25)*CHS);} // SUCK MY ARSEHOLE\nfloat E(vec2 p,float d){d=TB(p,d);d=line2(d,p,vec4(-2,3.25,-2,-3.25)*CHS);return line2(d,p,vec4(0,-0.25,-2,-0.25)*CHS);}\nfloat F(vec2 p,float d){d=line2(d,p,vec4(2,3.25,-2,3.25)*CHS);d=line2(d,p,vec4(-2,3.25,-2,-3.25)*CHS);return line2(d,p,vec4(0,-0.25,-2,-0.25)*CHS);}\nfloat G(vec2 p,float d){d=TB(p,d);d=line2(d,p,vec4(-2,-3.25,-2,3.25)*CHS);d=line2(d,p,vec4(2,2.25,2,3.25)*CHS);d=line2(d,p,vec4(2,-3.25,2,-0.25)*CHS);return line2(d,p,vec4(2,-0.25,0.5,-0.25)*CHS);}\nfloat H(vec2 p,float d){d=LR(p,d);return line2(d,p,vec4(-2,-0.25,2,-0.25)*CHS);}\nfloat I(vec2 p,float d){d=line2(d,p,vec4(0,-3.25,0,3.25)*CHS);p.y=abs(p.y);return line2(d,p,vec4(1.5,3.25,-1.5,3.25)*CHS);}\nfloat J(vec2 p,float d){d=line2(d,p,vec4(-1.5,-3.25,0,-3.25)*CHS);d=line2(d,p,vec4(0,-3.25,1,-2.25)*CHS);d=line2(d,p,vec4(1,-2.25,1,3.25)*CHS);return line2(d,p,vec4(1,3.25,-1.5,3.25)*CHS);}\nfloat K(vec2 p,float d){d=line2(d,p,vec4(-2,-3.25,-2,3.25)*CHS);d=line2(d,p,vec4(-2,-0.25,-0.5,-0.25)*CHS);d=line2(d,p,vec4(2,3.25,-0.5,-0.25)*CHS);return line2(d,p,vec4(-0.5,-0.25,2,-3.25)*CHS);}\nfloat L(vec2 p,float d){d=line2(d,p,vec4(2,-3.25,-2,-3.25)*CHS);return line2(d,p,vec4(-2,3.25,-2,-3.25)*CHS);}\nfloat M(vec2 p,float d){p.x=abs(p.x);d=line2(d,p,vec4(2,-3.25,2,3.25)*CHS);return line2(d,p,vec4(0,0.75,2,3.25)*CHS);}\nfloat N(vec2 p,float d){d=LR(p,d);return line2(d,p,vec4(-2,3.25,2,-3.25)*CHS);}\nfloat O(vec2 p,float d){return TBLR(p,d);}\nfloat P(vec2 p,float d){d=line2(d,p,vec4(-2,-3.25,-2,0.0)*CHS);p.y-=1.5*CHS;return min(d,abs(sdBox2(p,vec2(2.0,1.75)*CHS)));}\nfloat Q(vec2 p,float d){d=TBLR(p,d);return line2(d,p,vec4(2,-3.25,0.5,-1.75)*CHS);}\nfloat R(vec2 p,float d){d=line2(d,p,vec4(0.5,-0.25,2.,-3.25)*CHS);d=line2(d,p,vec4(-2.0,-3.25,-2,0.0)*CHS);p.y-=1.5*CHS;return min(d, abs(sdBox2(p,vec2(2.0,1.75)*CHS)));}\nfloat S(vec2 p,float d) { d=TB(p,d);d=line2(d,p,vec4(-2.,3.25,-2.,-0.25)*CHS);d=line2(d,p,vec4(-2.,-0.25,2,-0.25)*CHS); return line2(d,p,vec4(2.0,-0.25,2.0,-3.25)*CHS);}\nfloat T(vec2 p,float d){d=line2(d,p,vec4(0,-3.25,0,3.25)*CHS);return line2(d,p,vec4(2,3.25,-2,3.25)*CHS);}\nfloat U(vec2 p,float d){d=LR(p,d);return line2(d,p,vec4(2,-3.25,-2,-3.25)*CHS);}\nfloat V(vec2 p,float d){p.x=abs(p.x);return line2(d,p,vec4(0,-3.25,2,3.25)*CHS);}\nfloat W(vec2 p,float d){p.x=abs(p.x);d=line2(d,p,vec4(2,-3.25,2,3.25)*CHS);return line2(d,p,vec4(0,-1.25,2,-3.25)*CHS);}\nfloat X(vec2 p,float d){d = line2(d,p,vec4(-2,3.25,2,-3.25)*CHS);return line2(d,p,vec4(-2,-3.25,2,3.25)*CHS);}\nfloat Y(vec2 p,float d){d=line2(d,p,vec4(0,-0.25,0,-3.25)*CHS);p.x=abs(p.x);return line2(d,p,vec4(0,-0.25,2,3.25)*CHS);}\nfloat Z(vec2 p,float d){d=TB(p,d);return line2(d,p,vec4(-2,-3.25,2,3.25)*CHS);}\nfloat i_(vec2 p,float d){d=line2(d,p,vec4(0.,-0.0,0.,3.25)*CHS);p.y=abs(p.y);return line2(d,p,vec4(.0,3.25,-0.0,3.25)*CHS);}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "///modificado por jorge2017a1\n//fork gaziya5\n///https://qiita.com/gaziya5/items/e58f8c1fce3f3f227ca7\n#define A 0.125\n#define PI 3.141592654\n\nfloat noise(float time)\n{\n    return  (fract(sin(time*99.)*50000.0)*2.0-1.0);\n}\n\nfloat kick(float time) \n{\n    return sin(6.283 * 50.0 * time - 10.0 * exp( -70.0 * time ))*exp(-time*1.6); \n}\n\n///modificado por jorge fp\nfloat bass(float time) \n{\n    return sin(6.283 * 60.0 * time - 10.0 * exp( -70.0 * time ))*exp(-time*0.56); \n}\n\n\n\nfloat snare(float time) {\n  return noise(time)*max(0.0,1.0-min(0.85,time*4.25)-(time-0.25)*0.3);\n}\n\nfloat hihat(float time) {\n  return noise(time)*exp(-time*150.0);\n}\n\nfloat saw(float phase) \n{\n    float s = 0.0;\n    for (int k = 1; k <= 8; k++) {\n    s += (sin(2.0*PI*float(k)*phase) / float(k));\n    }\n    return (1.0/2.0) - (1.0/PI)*s - 0.5;\n}\n\nfloat sawNota(float time,  float freq )\n{\n    /// Fm\n    return  saw(time*freq) *exp(-3.*time);\n}   \n\n\nfloat sequence(int s,float time)\n{\n  float n =mod(time,A);\n  for(int i=0;i<16;i++){\n    if((s>>(int(time/A)-i)%16&1)==1)break;\n    n+=A;\n  }\n  return n;\n}\n\n\nvec2 mainSound( in int samp, float time )\n{\n    \n    float t1=mod(time,3.0);\n    float t2=mod(time,6.0);\n    \n    float t1a=mod(time,6.0);\n    float t2a=mod(time,12.0);\n    \n    float s3=0.0;\n    float s1,s2;\n    \n    \n    if (time<3.0)\n    {\n        s3=sawNota(sequence(0x7815,time),200.0 )*0.2;\n        s3+=sawNota(sequence(0x7812,time),150.0 )*0.2;\n        s3+=sawNota(sequence(0x7615,time),550.0 )*0.2;\n    }\n    else    \n    {    \n    \n    if(t1a<t2a)\n    {\n        s1=0.2 * sawNota(sequence(0x1505,time+t1a),440.0);\n        s1+=0.2 * sawNota(sequence(0x8505,time),600.0);\n        s1+=0.2 * sawNota(sequence(0x0225,time),750.0);\n        s1/=2.0;\n    }\n    else\n    {   s1+=0.2 * sawNota(sequence(0x3895,time),40.0 );\n        s1+=0.2 * sawNota(sequence(0x5465,time),140.0 );\n        s1/=2.0;\n    }\n    \n    if(t1<t2)\n        s2=0.2 * bass(sequence(0x1505,time));\n    else\n        s2=0.2 * bass(sequence(0x4895,time));   \n    }\n    \n    return vec2(\n                 s1 + s2+s3+\n                 0.2 * snare(sequence(0x1010,time))+\n                 0.4 * kick(sequence(0x4082,time))+\n                 0.2 * hihat(sequence(0x5555,time))\n                 );\n                 \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}