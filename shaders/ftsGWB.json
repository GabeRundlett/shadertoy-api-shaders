{
    "Shader": {
        "info": {
            "date": "1622746890",
            "description": "Found a post talking about generating patterns with simple mathematical functions, and thought it would be perfect to make a shader out of. Crazy how maths works...",
            "flags": 0,
            "hasliked": 0,
            "id": "ftsGWB",
            "likes": 7,
            "name": "Simple Bitfield test",
            "published": 3,
            "tags": [
                "bitfield"
            ],
            "usePreview": 0,
            "username": "grufkork",
            "viewed": 311
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float divisor = 9.; // Try different values here!\n    \n    int x = int(fragCoord.x / 3. + iTime * 10.);\n    int y = int(fragCoord.y / 3. + iTime * 5.);\n            \n    float a = mod(float(x ^ y), divisor);\n\n    // Output to screen\n    fragColor = vec4(vec3(a),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}