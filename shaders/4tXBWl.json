{
    "Shader": {
        "info": {
            "date": "1513768063",
            "description": "Tunnel Beauty 9",
            "flags": 0,
            "hasliked": 0,
            "id": "4tXBWl",
            "likes": 6,
            "name": "Tunnel Beauty 9",
            "published": 3,
            "tags": [
                "tunnel",
                "rainbow",
                "beauty"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 754
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2017 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via XShade (http://www.funparadigm.com/xshade/)\n\n#define path(t) vec2(cos(t * .2), sin(t * .2)) * 3.\n\nfloat df(vec3 p)\n{\n    p.xy -= path(p.z);\n\treturn 2. - length(p.xy) - cos(p.x) * sin(p.y) * sin(p.z);\n}\n\nvec3 nor( vec3 p, float prec )\n{\n    vec3 e = vec3( prec, 0, 0);\n    vec3 n = vec3(\n    df(p+e.xyz) - df(p-e.xyz),\n    df(p+e.yxz) - df(p-e.yxz),\n    df(p+e.yzx) - df(p-e.yzx) );\n    return normalize(n);\n}\n\nvec3 cam(vec2 uv, vec3 ro, vec3 cu, vec3 cv)\n{\n\tvec3 rov = normalize(cv-ro);\n    vec3 u =  normalize(cross(cu, rov));\n    vec3 v =  normalize(cross(rov, u));\n    return normalize(rov + u*uv.x + v*uv.y);\n}\n\n// https://www.shadertoy.com/view/XlsfDf\t\nvec3 GetRainBow(float r)\n{\n    int i = int(3.*fract(r)); \n\tvec4 C = vec4(.25);   \n    C[(i+1)%3] += r = fract(3.*r);\n    C[i]       += 1.-r;\n\treturn C.rgb;\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n    g = (g+g-iResolution.xy)/iResolution.y;\n\tvec3 ro = vec3(path(iTime),iTime);\n    vec3 rd = cam(g, ro, vec3(0,1,0), ro + vec3(0,0,.1));\n\n    float d = 0.;\n    for(int i=0;i<60;i++)  \n\t\td += df(ro+rd*d);\n\n\tvec3 p = ro + rd * d;\n\tvec3 n = nor(p, .01);\n\tfloat ayz = atan(n.y,n.z)/3.14159;\n\tfloat axy = atan(n.x,n.y)/3.14159;\n\tfloat b = dot(n,normalize(ro-p)*1.5)*.8;\n\tvec3 col = mix(GetRainBow(axy),GetRainBow(ayz),n.z); // 1.-n.z is cool also\n    \n\tf = mix( \n        (b*vec4(col,1)+pow(b,0.2))*(1.0-d*.01), \n        vec4(0,0,.1,1), \n        1.0 - exp( -d*0.2) ); \n    \n    /*if (g.x>0.)*/ f = sqrt(f*f*f*1.2);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}