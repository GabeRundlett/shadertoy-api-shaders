{
    "Shader": {
        "info": {
            "date": "1669689824",
            "description": "repro of those cooool motion: [url]https://twitter.com/RavenKwok/status/1117347303105294337[/url] [url]https://twitter.com/RavenKwok/status/1120716979302592513[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "DdfSDl",
            "likes": 35,
            "name": "Fork alternativ timrolls 805",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "timrolls",
            "viewed": 476
        },
        "renderpass": [
            {
                "code": "float eb(float x) {\n    x = 1. - x;\n    float y = x*x*(3.*x-2.);\n    return 1. - y;\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat getBound(vec2 seed, float i) {\n    float p = rand(seed.xy + 1.);\n    if(i < 1.) {\n    \treturn rand(seed) * 0.1 + 0.4;\n    }\n    if(i > 1.0) {\n\t    if(p < 0.07) return 0.;\n    \tif(p > 0.93) return 1.;\n    }\n    return rand(seed) * 0.4 + 0.3;\n}\nfloat getBound(vec2 seed1, vec2 seed2, float intv, float i) {\n    float v1 = getBound(seed1, i);\n    float v2 = getBound(seed2, i);\n    return mix(v1,v2,eb(clamp(intv*2.0-i*0.3-rand(seed1)*0.2,0.,1.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.y*2.1;\n    vec2 ouv = uv;\n    vec3 col = vec3(1);\n    float ti = iTime * 2.0;\n    vec2 seed1 = vec2(floor(ti),1);\n    vec2 seed2 = vec2(floor(ti)+1.,1);\n    vec2 le1 = vec2(floor(rand(seed1.yx)*16.),floor(rand(seed1.xx)*16.))/16.;\n    vec2 le2 = vec2(floor(rand(seed2.yx)*16.),floor(rand(seed2.xx)*16.))/16.;\n\n    float intv = fract(ti);\n    float ttv = intv;\n    if(abs(uv.x) > 2.0 || abs(uv.y) > 1.0) {\n    } else {\n        float dif = 1.0;\n        uv = uv * vec2(0.25,0.5) + 0.5;\n        vec2 center1 = vec2(0.5,0.5);\n        vec2 size1 = vec2(1,1);\n        vec2 center2 = vec2(0.5,0.5);\n        vec2 size2 = vec2(1,1);\n        for(int i=0;i<8;i++) {\n            float boundX = getBound(seed1,seed2,intv,float(i));\n            float boundX1 = getBound(seed1, float(i));\n            float boundX2 = getBound(seed2, float(i));\n            center1.x -= (0.5 - boundX1) * size1.x;\n            center2.x -= (0.5 - boundX2) * size2.x;\n            if(uv.x < boundX) {\n                uv.x /= boundX;\n                seed1.x += dif, seed2.x += dif;\n                size1.x *= boundX1, size2.x *= boundX2;\n                center1.x -= size1.x * 0.5, center2.x -= size2.x * 0.5;\n            } else {\n                uv.x = (uv.x - boundX) / (1. - boundX);\n                seed1.x -= dif, seed2.x -= dif;\n                size1.x *= 1. - boundX1, size2.x *= 1. - boundX2;\n                center1.x += size1.x * 0.5, center2.x += size2.x * 0.5;\n                intv += 0.15 * dif;\n            }\n\t        seed1 = seed1.yx;\n\t        seed2 = seed2.yx;\n            dif /= 2.0;\n            \n            if(i > 0) {\n                float boundY = getBound(seed1, seed2, intv, float(i));\n                float boundY1 = getBound(seed1, float(i));\n                float boundY2 = getBound(seed2, float(i));\n                center1.y -= (0.5 - boundY1) * size1.y;\n                center2.y -= (0.5 - boundY2) * size2.y;\n                if(uv.y < boundY) {\n                    uv.y /= boundY;\n                    seed1.y += dif, seed2.y += dif;\n                    size1.y *= boundY1, size2.y *= boundY2;\n                    center1.y -= size1.y * 0.5, center2.y -= size2.y * 0.5;\n                } else {\n                    uv.y = (uv.y - boundY) / (1. - boundY);\n                    seed1.y -= dif, seed2.y -= dif;\n                    size1.y *= 1. - boundY1, size2.y *= 1. - boundY2;\n                    center1.y += size1.y * 0.5, center2.y += size2.y * 0.5;\n                    intv += 0.15 * dif;\n                }\n            }\n            seed1 = seed1.yx;\n            seed2 = seed2.yx;\n            dif /= 2.0;\n        }\n        vec2 coord0 = (center1-vec2(0.25,0))/vec2(8.0,16.0);\n        vec2 coord1 = (center2-vec2(0.25,0))/vec2(8.0,16.0);\n        coord0 = clamp(coord0, 0., 1./16.);\n        coord1 = clamp(coord1, 0., 1./16.);\n        vec4 c0 = texture(iChannel0, coord0+le1).xyzw;\n        vec4 c1 = texture(iChannel0, coord1+le2).xyzw;\n        ttv = smoothstep(0.,1.,-0.7 + ttv*4.0 - rand(center1)*2.0);\n        float ld = rand(seed1+seed2) < 0.5 ? 1. : 0.;\n        float ldu = rand(seed1-seed2) < 0.5 ? 1. : 0.;\n        float lb = mix(1.,-1.,ldu);\n        float mixParam = ld < 0.5\n            ? step(uv.x, lb*ttv+ldu)\n            : step(uv.y, lb*ttv+ldu);\n        col *= 1. - mix(c1.x,c0.x,mixParam);\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}