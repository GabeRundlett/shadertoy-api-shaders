{
    "Shader": {
        "info": {
            "date": "1474032348",
            "description": "Driopodathron Round 1\n\nDropping Rain I.e. OPposite Of Defined Art\nD             R      I   OP            O  D           A\nDRIOPODA\n",
            "flags": 0,
            "hasliked": 0,
            "id": "XlG3DR",
            "likes": 0,
            "name": "Driopodathron r.2",
            "published": 3,
            "tags": [
                "driopodathon"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 469
        },
        "renderpass": [
            {
                "code": "float mxt(vec2 col)\n{\n    return length(sqrt(col));\n}\nfloat trace(float shape)\n{\n    float sabs = abs(shape);\n    sabs *= distance(shape/iResolution.x, shape*iResolution.x);\n    float q = sqrt(sabs) / length(shape);\n    return clamp(q, 0.0, 1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 x = normalize(vec3(uv, fragColor.w)) - uv.y + uv.x;\n    float circle = length(vec2(uv.x*2.0-1.0*(iResolution.x/iResolution.y),uv.y*2.0-1.0));\n    circle -= sin(uv.y)+fract(iTime+tan(circle/2.0));\n    \n    float re = sqrt(circle);\n    vec3 qw = x + trace(circle);\n    vec4 ar = vec4(mxt(qw.xy - uv));\n\tfragColor = vec4(sqrt(x)-re, 1.0)-vec4(qw,1.0)+ar;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}