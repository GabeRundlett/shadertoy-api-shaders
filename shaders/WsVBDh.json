{
    "Shader": {
        "info": {
            "date": "1607019620",
            "description": "Quick demonstration of a shader that gives client more control over how their selection ring looks",
            "flags": 0,
            "hasliked": 0,
            "id": "WsVBDh",
            "likes": 2,
            "name": "Glow Gradient with Wave",
            "published": 3,
            "tags": [
                "glowgradientwavesimple"
            ],
            "usePreview": 0,
            "username": "Codax",
            "viewed": 458
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //Create basic glow mask\n    float glowMask = pow(1.0-uv.y, 6.0);\n    \n    //create a wave along y\n    float waveHeight = 0.05;\n    float waveFrequency = 0.3;\n    \n    //make wave frequency more intuitive by multiplying by 2*Pi (not strictly necessary)\n    waveFrequency *= 6.28318530718;\n    \n    float waveSpeed = 1.5;\n    uv.y += waveHeight * sin((uv.x * waveFrequency) + (iTime * waveSpeed));\n   \n    //Create gradient mask\n    float waveMask = pow(1.0-uv.y, 4.0);\n    \n    \n    // Pixel color\n    vec3 col = vec3(1.0, 0.0, 0.0);\n    \n    //More Fun Color\n    //col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    //Apply the wave mask to the color\n    col *= waveMask;\n    \n    //create a glow color and apply a mask\n\tvec3 glow = vec3(1.0, 1.0-uv.y, 1.0-uv.y) * glowMask;\n    \n    \n    // Output to screen\n    fragColor = vec4(col + glow,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}