{
    "Shader": {
        "info": {
            "date": "1614799836",
            "description": "A test based on this shader technique https://www.shadertoy.com/view/tlVBWz",
            "flags": 0,
            "hasliked": 0,
            "id": "tlKBRc",
            "likes": 6,
            "name": "Test dithering smoothing",
            "published": 3,
            "tags": [
                "dithering"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 193
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n// A small test of dithering based on time\n// Left side is using dithering\n// Right side is not\n\n#define sat(a) clamp(a, 0., 1.)\n\nfloat time;\n\nfloat _cir(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nvec3 rdr(vec2 uv)\n{\n    float t = time*10.;\n    vec2 p = uv+vec2(sin(t*.25), cos(t))*.25;\n    float c = _cir(p, .05);\n    float shp = iResolution.x*.5;\n    vec3 col = vec3(1.)*sat(c*shp);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-vec2(.5)*iResolution.xy)/iResolution.xx;\n    float t = iTime;\n    \n     // stepping the refresh rate to 20/s\n    float stp = 1./20.;\n    \n    t = floor(t/stp)*stp;\n    \n    time = t;\n    \n    // dithering here thx https://www.shadertoy.com/view/tlVBWz\n    if (uv.x < 0.)\n        time = t-sat(texture(iChannel0, fragCoord/8.).x)*stp; \n\n    vec3 col = rdr(uv);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}