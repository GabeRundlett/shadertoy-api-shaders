{
    "Shader": {
        "info": {
            "date": "1394112472",
            "description": "the noise color is interpreted as a vector.\nF: toggle flow or gradient field\nC: toggle curves or stick vectors\nA: iterated offset along the field",
            "flags": 16,
            "hasliked": 0,
            "id": "XsSGDc",
            "likes": 55,
            "name": "vector field",
            "published": 3,
            "tags": [
                "noise",
                "vectorfield"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 4852
        },
        "renderpass": [
            {
                "code": "#define SIZE (iResolution.x/12.) // cell size in texture coordinates\n#define ZOOM (2. *256./iResolution.x)\nfloat STRIP  = 1.;    // nbr of parallel lines per cell\nfloat V_ADV  = 1.;    // velocity\nfloat V_BOIL = .5;    // change speed\nfloat t;\n\nbool key_toggle(int ascii) \n{ return (texture(iChannel1,vec2((.5+float(ascii))/256.,0.75)).x > 0.);}\n\nbool CONT , FLOW ,ATTRAC; // A: draw field or attractor ?\n\nvec3 flow( vec2 uv) {\n   \tvec2 iuv = floor(SIZE*(uv)+.5)/SIZE;\n\tvec2 fuv = 2.*SIZE*(uv-iuv);\n\t\n\tvec2 pos = .01*V_ADV*vec2(cos(t)+sin(.356*t)+2.*cos(.124*t),sin(.854*t)+cos(.441*t)+2.*cos(.174*t));\tif (CONT) iuv=uv;\n\tvec3 tex = 2.*texture(iChannel0,iuv/(ZOOM*SIZE)-pos).rgb-1.;\n\tfloat ft = fract(t*V_BOIL)*3.;\n\tif      (ft<1.) tex = mix(tex.rgb,tex.gbr,ft);\n\telse if (ft<2.) tex = mix(tex.gbr,tex.brg,ft-1.);\n\telse            tex = mix(tex.brg,tex.rgb,ft-2.);\n\treturn (FLOW) ? vec3(tex.y,-tex.x,tex.z): tex;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    t = iTime;\n \tCONT   = key_toggle(67); // C: is field interpolated in cells ?\n \tFLOW   = key_toggle(70); // F: flow or gradient ?\n \tATTRAC = key_toggle(65); // A: draw field or attractor ?\n\n    vec2 uv = fragCoord / iResolution.y;\n\tvec3 col;\n    \n    if (ATTRAC) {\n    \tvec2 tex = uv;\n    \tfor(int i=0; i<15; i++) \n        \ttex = tex+.03*flow(tex).xy;\n    \t\tcol = texture(iChannel2,tex).rgb;\n    } else {    \n   \t\tvec2 iuv = floor(SIZE*(uv)+.5)/SIZE;\n\t\tvec2 fuv = 2.*SIZE*(uv-iuv);\n    \tvec3 tex = flow(uv);\n   \t\tfloat v = fuv.x*tex.x+fuv.y*tex.y;     \n\t\t// v = length(fuv);\n\t\tv = sin(STRIP*v);\n\t\tcol = vec3(1.-v*v*SIZE) * mix(tex,vec3(1.),.5);\n    }\n\n\t// col = tex;\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 2,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}