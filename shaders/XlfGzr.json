{
    "Shader": {
        "info": {
            "date": "1427495948",
            "description": "Noise 2D Generator",
            "flags": 0,
            "hasliked": 0,
            "id": "XlfGzr",
            "likes": 7,
            "name": "Noise 2D Generator",
            "published": 3,
            "tags": [
                "noise2dgenerator"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 1475
        },
        "renderpass": [
            {
                "code": "float random(float p) {\n  \treturn fract(sin(p)*1e5);\n}\n\nfloat noise(vec2 p) {\n  \treturn random(p.x + p.y*1e5);\n}\n\nvec2 sw(vec2 p) {return floor(p);}\nvec2 se(vec2 p) {return vec2( ceil(p.x)  , floor(p.y) );}\nvec2 nw(vec2 p) {return vec2( floor(p.x) , ceil(p.y)  );}\nvec2 ne(vec2 p) {return vec2( ceil(p.x)  , ceil(p.y)  );}\n\nfloat sNoise(vec2 p) {\n  \tvec2 inter = smoothstep(0., 2., fract(p));\n    \n  \tfloat s = mix(noise(sw(p)), noise(se(p)), inter.x);\n    \n  \tfloat n = mix(noise(nw(p)), noise(ne(p)), inter.x);\n    \n  \treturn mix(s, n, inter.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n    float zoom = 25.;\n    \n  \tvec2 p = (zoom*fragCoord.xy)/iResolution.y;\n    \n\tfragColor.rgb = vec3(sNoise(p));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}