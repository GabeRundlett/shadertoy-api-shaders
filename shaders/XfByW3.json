{
    "Shader": {
        "info": {
            "date": "1723075074",
            "description": "Generated by AI\n\nDistance calculation is wrong because of the coord scaling. Leaving it as is.",
            "flags": 0,
            "hasliked": 0,
            "id": "XfByW3",
            "likes": 0,
            "name": "[AI] first",
            "published": 3,
            "tags": [
                "ai"
            ],
            "usePreview": 0,
            "username": "hvaara",
            "viewed": 69
        },
        "renderpass": [
            {
                "code": "vec3 hsvToRgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float x = uv.x * 10.0;\n    float y = uv.y * 10.0;\n    \n    float freqY = sin(iTime * 0.5 + y * 0.05 + sin(x * 0.1 + iTime * 0.1));\n\n    float color = sin(iTime * 0.1 + (x + y) * 0.1);\n\n    float hue = color * 0.1;\n    float saturation = 0.9;\n    float value = 1.0;\n\n    // Calculate the distance from the center of the screen\n    float distance = length(vec2(x - 0.5, y - 0.5));\n\n    // Create a shape that dances in time\n    float shape = step(sin(iTime * 0.5 + distance * 5.0), 0.5);\n\n    // Mix the color with black to create a sense of depth\n    vec3 rgb = mix(vec3(0.0), hsvToRgb(vec3(hue, saturation, value)), shape);\n\n    // Add some noise to the shape\n    rgb += 0.1 * vec3(sin(iTime * 0.1 + distance * 2.0), cos(iTime * 0.1 + distance * 2.0), sin(iTime * 0.1 + distance * 2.0 + (x + y) * 0.1));\n\n    // Create a subtle background dance effect\n    vec3 background = 0.1 * vec3(sin(iTime * 0.01 + x * 0.05), cos(iTime * 0.01 + y * 0.05), sin(iTime * 0.01 + (x + y) * 0.05));\n\n    // Combine the shape and background effects\n    fragColor = vec4(rgb + background, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}