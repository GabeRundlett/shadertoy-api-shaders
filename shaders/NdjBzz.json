{
    "Shader": {
        "info": {
            "date": "1645654061",
            "description": "Chromatic Aberration",
            "flags": 0,
            "hasliked": 0,
            "id": "NdjBzz",
            "likes": 6,
            "name": "Chromatic Aberration - Spi3lot",
            "published": 3,
            "tags": [
                "chromaticaberration",
                "chromatic",
                "aberration",
                "spi3lot"
            ],
            "usePreview": 0,
            "username": "Spi3lot",
            "viewed": 287
        },
        "renderpass": [
            {
                "code": "// To reverse direction so that red is further away from the center and blue\n// is closer, just subtract your LEVEL from 2.0\n\n// BLUE_EDGE if false (green will always stay at the original position)\n#define RED_EDGE (false)\n\n// Level Of chromatic Aberration\n#define LEVEL (1.02)\n\n\n// LEAVE AS IS FOR BEST EXPERIENCE\n#define LOA (RED_EDGE ? 2.0 - (LEVEL) : (LEVEL))\n#define LINEAR 0\n\n\nvec2 aberrate(vec2 v, float level) {\n    return (v - 0.5) / level + 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float r, g, b;\n\n#if LINEAR == 1\n    r = texture(iChannel0, uv - (LOA - 1.01)).r;\n    g = texture(iChannel0, uv).g;\n    b = texture(iChannel0, uv + (LOA - 1.01)).b;\n#else\n    r = texture(iChannel0, aberrate(uv, 1.0 / LOA)).r;\n    g = texture(iChannel0, uv).g;\n    b = texture(iChannel0, aberrate(uv, LOA)).b;\n#endif\n    \n    /*\n    float r = texture(iChannel0, aberrate(uv, 1.0 / LOA)).r;\n    float g = texture(iChannel0, aberrate(uv, 1.0)).g;\n    float b = texture(iChannel0, aberrate(uv, LOA)).b;\n    */\n\n    // Output to screen\n    fragColor = vec4(r, g, b, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}