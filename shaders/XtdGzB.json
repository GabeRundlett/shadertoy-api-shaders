{
    "Shader": {
        "info": {
            "date": "1470108041",
            "description": "maybe it's like a floating bubble.",
            "flags": 0,
            "hasliked": 0,
            "id": "XtdGzB",
            "likes": 6,
            "name": "little bubble",
            "published": 3,
            "tags": [
                "2d",
                "ellipse"
            ],
            "usePreview": 0,
            "username": "w450468524",
            "viewed": 834
        },
        "renderpass": [
            {
                "code": "const float size = 0.2;\nconst float a = 1.5*size;\nconst float b = 1.5*size;\nconst float PI = 3.1415926;\nconst float bold = 0.3;\n\n// copy from https://www.shadertoy.com/view/4sc3z2\n#define MOD3 vec3(.1031,.11369,.13787)\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\nfloat perlin_noise(vec3 p)\n{\n    vec3 pi = floor(p);\n    vec3 pf = p - pi;\n    \n    vec3 w = pf * pf * (3.0 - 2.0 * pf);\n    \n    return \tmix(\n        \t\tmix(\n                \tmix(dot(pf - vec3(0, 0, 0), hash33(pi + vec3(0, 0, 0))), \n                        dot(pf - vec3(1, 0, 0), hash33(pi + vec3(1, 0, 0))),\n                       \tw.x),\n                \tmix(dot(pf - vec3(0, 0, 1), hash33(pi + vec3(0, 0, 1))), \n                        dot(pf - vec3(1, 0, 1), hash33(pi + vec3(1, 0, 1))),\n                       \tw.x),\n                \tw.z),\n        \t\tmix(\n                    mix(dot(pf - vec3(0, 1, 0), hash33(pi + vec3(0, 1, 0))), \n                        dot(pf - vec3(1, 1, 0), hash33(pi + vec3(1, 1, 0))),\n                       \tw.x),\n                   \tmix(dot(pf - vec3(0, 1, 1), hash33(pi + vec3(0, 1, 1))), \n                        dot(pf - vec3(1, 1, 1), hash33(pi + vec3(1, 1, 1))),\n                       \tw.x),\n                \tw.z),\n    \t\t\tw.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 fColor = vec4(1.0, 0.5,0.5, 1.0);\n    vec4 bColor = vec4(0.0, 0.0, 0.0, 1.0);\n    vec2 volocity = vec2(0.0, 0.1);\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 center = vec2(0.5, 0.5);\n    \n\tvec2 pos = uv.xy - center.xy;\n    float angle = atan(uv.x, uv.y)*1.5;\n\t//angle = (angle + PI)/2.0*PI;\n    pos/= vec2(a, b);\n    fragColor = mix(fColor, bColor, smoothstep(-bold, bold, abs(dot(pos, pos) - 1.0 - perlin_noise(vec3(angle,angle, iTime))*0.5)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}