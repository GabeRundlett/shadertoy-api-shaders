{
    "Shader": {
        "info": {
            "date": "1550106907",
            "description": "Left is gamma corrected, right is not. Move the mouse to compare. Note the black transition between green and red.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsS3D3",
            "likes": 4,
            "name": "Gamma Correct Blending",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 584
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // move mouse to compare\n    float delt = iResolution.x*0.5;\n    if (iMouse.z > 0.5) {\n        delt = iMouse.x;\n    }\n    \n    // black line in the center\n    if (abs(fragCoord.x-delt) < 1.0) {\n        fragColor = vec4(0);\n        return;\n    }\n    \n    vec2 uv = (fragCoord*2.0 - iResolution.xy) / iResolution.y;\n    \n    vec3 col = vec3(1);\n    \n    for (int i = 0 ; i < 3 ; i++) {\n        float theta = float(i) / 3.0 * 2.0 * acos(-1.0) + iTime*0.2;\n        vec2 center = vec2(cos(theta), sin(theta))*0.5;\n        \n        vec3 c = vec3(0);\n        c[i] = 1.0;\n        \n        col = mix(col, c, smoothstep(0.8, 0.7, length(uv-center)));\n    }\n    \n    fragColor = vec4(col, 1);\n    \n    // apply gamma correction\n    if (fragCoord.x < delt) {\n        fragColor.rgb = pow(fragColor.rgb, vec3(1.0/2.2));\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}