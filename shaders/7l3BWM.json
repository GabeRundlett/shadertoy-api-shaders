{
    "Shader": {
        "info": {
            "date": "1663164249",
            "description": "Comparing the effect of Bokeh ( disc vs Gaussian vs ring ) on a net pattern.\nDepth of Fied = either X or Mouse.x \n\nNote: you can go faster by lowering dens.  Or just stop the shader and mouse tune ;-)",
            "flags": 32,
            "hasliked": 0,
            "id": "7l3BWM",
            "likes": 10,
            "name": "Bokeh filter of net pattern",
            "published": 3,
            "tags": [
                "dof",
                "bokeh"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 501
        },
        "renderpass": [
            {
                "code": "// variant from https://shadertoy.com/view/ft3fDM\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    int T = int(iTime)%3;\n    float w, t=0., d2,  \n         dof = 38.*( iMouse.z > 0. ? iMouse.x : U.x ) / R.x, // depth of field → current radius\n         dens = 8.,                                          // sampling density\n         N = clamp( dens*dof*dof , 8., 1e4 );                // sampling ~ disk area\n    O-=O;\n    for( float i=0.; i < N; i++ ) {\n        vec2 dP = vec2(cos(i*2.4),sin(i*2.4)) * sqrt(i/N);   // Vogel disc sampling ( 2.39996 )\n        vec4 C = texture(iChannel0,(U+dof * dP) / R );       // Bokeh sampling of the image\n        d2 = dot(dP,dP);\n        t += w =   T==0 ? 1.                                 // disc profile\n                 : T==1 ? exp( -.5*d2 *6.)                   // Gaussian profile ( cut at 2.5 sigma )\n                 :        step( abs( d2 - .5 ) , .1 );       // ring\n        O += w * C;\n    }\n    \n    O = pow( O/t, vec4(1./2.2));                             // to sRGB\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    if ( U.y/H < .1 ) { O = 1e2*vec4( mod(U-.5,32.)==vec2(16) ); return; } // impulse ( to show filter as impulse response )\n    \n    // net pattern\n    U = (U+vec2(-U.y,U.x))/1.4; U.x*=2.;  U = (U-vec2(-U.y,U.x))/1.4;\n    U = abs( fract(S*U/H)-.5 );\n    O = vec4( smoothstep( 1.5*S/H, 0., min(U.x,U.y)-.1 ) );\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define H 360.  // R.y\n#define S 10.",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}