{
    "Shader": {
        "info": {
            "date": "1607890272",
            "description": "Shader combines noise generated movable and loopless movable star layers.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsVfDy",
            "likes": 10,
            "name": "A night sky with movable noise",
            "published": 3,
            "tags": [
                "noise",
                "sky",
                "stars",
                "night"
            ],
            "usePreview": 0,
            "username": "rrrr",
            "viewed": 500
        },
        "renderpass": [
            {
                "code": "float random(vec2 fv, float d1, float d2, float r) {\n    return fract(sin(dot(fv, vec2(d1, d2))) * r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 sv = uv + iTime * .0005;\n    \n    vec2 iv = floor(sv * 500.0);\n    vec2 iv2 = floor(sv * 300.0);\n    vec2 iv3 = floor(sv * 400.0);\n    \n    vec3 cell_noise1 = vec3(random(iv, 12.0, 80.0, 4000.0));\n    vec3 cell_noise2 = vec3(random(iv2, 12.333, 13.0, 5000.0));\n    vec3 cell_noise3 = vec3(random(iv3, 90.4325, 12.0, 2000.0));\n    vec3 cell_noise = ((cell_noise1 + cell_noise2 + cell_noise3) * .3333 - .9) * 10.0;\n    \n    vec2 fv_s = uv * 20.0;\n    vec2 fv = fract(vec2(fv_s.x + sin(iTime * .005) * 10.0, fv_s.y + cos(iTime * .005) * 10.0) * .5);\n    vec3 circle = vec3(1.0 - smoothstep(length(fv - .25), .0, (sin(uv.x * 40.0) * cos(uv.y * 50.0)) * .015));\n    \n\n    fragColor = vec4(circle + clamp(cell_noise, .0, 1.0),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}