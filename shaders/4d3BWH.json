{
    "Shader": {
        "info": {
            "date": "1524826649",
            "description": "Simple doodle",
            "flags": 0,
            "hasliked": 0,
            "id": "4d3BWH",
            "likes": 40,
            "name": "Colourful Bubbles",
            "published": 3,
            "tags": [
                "background",
                "bubbles"
            ],
            "usePreview": 0,
            "username": "JuliaPoo",
            "viewed": 7712
        },
        "renderpass": [
            {
                "code": "//Noice function [0,1]\nvec2 T = vec2(0.);\nfloat No(float x){\nreturn fract(9667.5*sin(7983.75*(x + T.x) + 297. + T.y));\n}\n\nvec4 Rancol(vec2 x){\nreturn vec4(No(x.x + x.y), No(x.x*x.x+ x.y), No(x.x*x.x + x.y*x.y),1.);\n}\n\n//bubbles!!\nvec4 grid(vec2 uv, float t){\nvec4 C1,C2;\nuv *= 20.;\nvec2 id = vec2(int(uv.x),int(uv.y));\nuv.y += (5.*No(id.x*id.x) + 1.)*t*.4\t;\nuv.y += No(id.x);\n  id = vec2(int(uv.x), int(uv.y));\nuv = fract(uv) - .5;\n\n//if (id == vec2(1,10)){C1 = vec4(1.);}\n\nfloat d = length(uv);\nt *= 10.*No(id.x + id.y);\n//uv.x += No(id.x);\n//if (uv.x > .46 || uv.y > .46){C1 = vec4(1.);}\n\nfloat r = .1*sin(t + sin(t)*.5)+.3;\nfloat r1 = .07*sin(2.*t + sin(2.*t)*.5) +.1*No(id.x + id.y);\n  if (d<r && d>r-.1){\n  C2 = .5*Rancol(id + vec2(1.)) + vec4(.5);\n  C2 *= smoothstep(r-.12,r,d);\n  C2 *= 1. - smoothstep(r-.05, r+.12,d);\n  }\n\n  if (d<r1){\n  C2 = .5*Rancol(id + vec2(1.)) + vec4(.5);\n  }\n\n  return C2 + C1;\n}\nvoid mainImage( out vec4 C, in vec2 U ){\nvec2 uv = U / iResolution.xy;\nuv.y *= iResolution.y/iResolution.x;\nfloat t = iTime;\nT = iMouse.xy;\nC = vec4(grid(uv, t));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}