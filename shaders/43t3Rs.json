{
    "Shader": {
        "info": {
            "date": "1716897570",
            "description": "Feeding distance to time variable and reiterating a few times.",
            "flags": 0,
            "hasliked": 0,
            "id": "43t3Rs",
            "likes": 4,
            "name": "Rainbow Superstar",
            "published": 3,
            "tags": [
                "2d",
                "deformation",
                "abstract",
                "feedback"
            ],
            "usePreview": 0,
            "username": "ruojake",
            "viewed": 101
        },
        "renderpass": [
            {
                "code": "// Rainbow Superstar by Kristian Sivonen (ruojake)\n// CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)\n\nmat2 rot(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    \n    return mat2(c, -s, s, c);\n}\n\n// https://iquilezles.org/articles/distfunctions2d/\n// https://www.shadertoy.com/view/3tSGDy\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nfloat img(vec2 p, float t)\n{\n    p += sin(vec2(.5 * t, t)) * .5;\n    p *= rot(t * 4.);\n    return 1. - sdStar5(p, .25, .5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n\n    float t = iTime;\n    vec2 p = uv;\n    \n    for(int i = 0; i < 8; ++i)\n    {\n        t += 5. * img(p, t) / float(i+7);\n    }\n\n    fragColor = vec4(cos((t - iTime) * vec3(3.11, 2., -.412)) * .5 + .5,1.0) + clamp(exp((iTime - t)), 0., 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}