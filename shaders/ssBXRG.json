{
    "Shader": {
        "info": {
            "date": "1620458887",
            "description": "A ring of circles with an 'early out' shell around them.\nWhat problems would I run into extending this to a similar 3D raymarched scene such as [url=https://www.shadertoy.com/view/ssjXWm]a bunch of spheres arranged in a sphere[/url] ?",
            "flags": 0,
            "hasliked": 0,
            "id": "ssBXRG",
            "likes": 3,
            "name": "sdf early out test",
            "published": 3,
            "tags": [
                "boundingvolume",
                "bvh",
                "earlyout"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 408
        },
        "renderpass": [
            {
                "code": "float sdDisk(in vec2 p, in float rad) {\n    return length(p) - rad;\n}\n\nfloat sdCircle(in vec2 p, in float rad) {\n    return abs(sdDisk(p, rad));\n}\n\nfloat sdAnnulus(in vec2 p, in float rad1, in float rad2) {\n    return sdCircle(p, rad1) - rad2;\n}\n\n\nfloat map(in vec2 p) {\n    float d = 1e9;\n    \n    float num  = 7.0;\n    float rad1 = 1.0;\n    float rad2 = (sin(iTime * 0.1) * 0.12 + 0.13) * 10.0 / num;\n    \n    float dEarlyOut = sdAnnulus(p, rad1, rad2) - 0.1 ;\n    if (dEarlyOut > 0.0) {\n        return dEarlyOut + 0.1;\n    }\n    \n    for (float n = 0.0; n < num; ++n) {\n        float theta = 3.14159265359 * 2.0 * n / num;\n        d = min(d, sdDisk(p - vec2(cos(theta), sin(theta)) * rad1, rad2));\n    }\n    \n    return d;\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY) {\n    vec2 uv = (XY - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y);\n    uv *= 3.0;\n\n    float d = map(uv);\n\n    // colorize, thank-you iq.\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-9.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(80.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.015,abs(d)) );\n    \n    RGBA = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}