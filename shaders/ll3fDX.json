{
    "Shader": {
        "info": {
            "date": "1541272168",
            "description": "Pressurized container with a hole in it. Do it in full screen. It would be cool to record the pressure at a single point and speed it up and play it through some speakers. I think it would make nice water drop sounds? ",
            "flags": 32,
            "hasliked": 0,
            "id": "ll3fDX",
            "likes": 24,
            "name": "Pressure Waves",
            "published": 3,
            "tags": [
                "fluid",
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1060
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    R = iResolution.xy;\n    C = T(U);\n    C = 0.5+0.5*sin(5.*C.w+8.*C.z*vec4(1.1,1.5,1.8,1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U1, vec2 U, inout vec4 Q, in vec2 r) {\n    vec2 V1 = U1 + r, V  = V1 - T(V1).xy;\n    float P = T (V).z, rr = length(r);\n    Q.xy -= r*(P-Q.z)/rr/N;\n    return (length(V-U)-rr+P)/N;\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 U1 = U; U -= T(U).xy;\n \tfloat P = 0.; Q = T(U);\n \tN = 4.;\n \tP += X (U1,U,Q, vec2( 1, 0) );\n \tP += X (U1,U,Q, vec2( 0,-1) );\n \tP += X (U1,U,Q, vec2(-1, 0) );\n \tP += X (U1,U,Q, vec2( 0, 1) );\n \tQ.z = P;\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n   \n \tvec2 b = abs(U-0.5*R.xy);\n    float l = max(b.x,b.y);\n \tif (l > 40. && l < 50. && !(iFrame>50&&U.x>0.5*R.x&&abs(U.y-0.5*R.y)<2.)) Q = Q*0.9+0.1*vec4(0,0,vec2(1)*(50.-l)/10.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U1, vec2 U, inout vec4 Q, in vec2 r) {\n    vec2 V1 = U1 + r, V  = V1 - T(V1).xy;\n    float P = T (V).z, rr = length(r);\n    Q.xy -= r*(P-Q.z)/rr/N;\n    return (length(V-U)-rr+P)/N;\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 U1 = U; U -= T(U).xy;\n \tfloat P = 0.; Q = T(U);\n \tN = 4.;\n \tP += X (U1,U,Q, vec2( 1, 0) );\n \tP += X (U1,U,Q, vec2( 0,-1) );\n \tP += X (U1,U,Q, vec2(-1, 0) );\n \tP += X (U1,U,Q, vec2( 0, 1) );\n \tQ.z = P;\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n   \n \tvec2 b = abs(U-0.5*R.xy);\n    float l = max(b.x,b.y);\n \tif (l > 40. && l < 50. && !(iFrame>50&&U.x>0.5*R.x&&abs(U.y-0.5*R.y)<2.)) Q = Q*0.9+0.1*vec4(0,0,vec2(1)*(50.-l)/10.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U1, vec2 U, inout vec4 Q, in vec2 r) {\n    vec2 V1 = U1 + r, V  = V1 - T(V1).xy;\n    float P = T (V).z, rr = length(r);\n    Q.xy -= r*(P-Q.z)/rr/N;\n    return (length(V-U)-rr+P)/N;\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 U1 = U; U -= T(U).xy;\n \tfloat P = 0.; Q = T(U);\n \tN = 4.;\n \tP += X (U1,U,Q, vec2( 1, 0) );\n \tP += X (U1,U,Q, vec2( 0,-1) );\n \tP += X (U1,U,Q, vec2(-1, 0) );\n \tP += X (U1,U,Q, vec2( 0, 1) );\n \tQ.z = P;\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n   \n \tvec2 b = abs(U-0.5*R.xy);\n    float l = max(b.x,b.y);\n \tif (l > 40. && l < 50. && !(iFrame>50&&U.x>0.5*R.x&&abs(U.y-0.5*R.y)<2.)) Q = Q*0.9+0.1*vec4(0,0,vec2(1)*(50.-l)/10.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U1, vec2 U, inout vec4 Q, in vec2 r) {\n    vec2 V1 = U1 + r, V  = V1 - T(V1).xy;\n    float P = T (V).z, rr = length(r);\n    Q.xy -= r*(P-Q.z)/rr/N;\n    return (length(V-U)-rr+P)/N;\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 U1 = U; U -= T(U).xy;\n \tfloat P = 0.; Q = T(U);\n \tN = 4.;\n \tP += X (U1,U,Q, vec2( 1, 0) );\n \tP += X (U1,U,Q, vec2( 0,-1) );\n \tP += X (U1,U,Q, vec2(-1, 0) );\n \tP += X (U1,U,Q, vec2( 0, 1) );\n \tQ.z = P;\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n   \n \tvec2 b = abs(U-0.5*R.xy);\n    float l = max(b.x,b.y);\n \tif (l > 40. && l < 50. && !(iFrame>50&&U.x>0.5*R.x&&abs(U.y-0.5*R.y)<2.)) Q = Q*0.9+0.1*vec4(0,0,vec2(1)*(50.-l)/10.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}