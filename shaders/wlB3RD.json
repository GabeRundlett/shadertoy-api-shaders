{
    "Shader": {
        "info": {
            "date": "1558636355",
            "description": "3d perlin",
            "flags": 0,
            "hasliked": 0,
            "id": "wlB3RD",
            "likes": 4,
            "name": "3d Perlin",
            "published": 3,
            "tags": [
                "3dperlin"
            ],
            "usePreview": 0,
            "username": "littlebird",
            "viewed": 1095
        },
        "renderpass": [
            {
                "code": "//实现3d perlin noise\n//光追部分的代码\n//从 https://www.shadertoy.com/view/4sfGzS copy 过来\nvec3 rand(vec3 p){\n \tconst vec3 k = vec3( 3.1415926, 2.71828,6.62607015);\n \tp = p*k + p.yzx;\n \treturn -1.0 + 2.0*fract( 2.0 * k * fract( p.x*p.y*(p.x+p.y)) );\n}\n\nfloat noise(vec3 p){\n    vec3 i = floor(p);\n    vec3 f = fract(p);\n    vec3 u = f*f*f*(f*(f*6.0-15.0)+10.0);\n    \n    //随机梯度\n    vec3 g1 = rand(i+vec3(0.0,0.0,0.0));\n    vec3 g2 = rand(i+vec3(1.0,0.0,0.0));\n    vec3 g3 = rand(i+vec3(0.0,1.0,0.0));\n    vec3 g4 = rand(i+vec3(1.0,1.0,0.0));\n    vec3 g5 = rand(i+vec3(0.0,0.0,1.0));\n    vec3 g6 = rand(i+vec3(1.0,0.0,1.0));\n    vec3 g7 = rand(i+vec3(0.0,1.0,1.0));\n    vec3 g8 = rand(i+vec3(1.0,1.0,1.0));\n    \n    //方向向量\n    vec3 d1 = f - vec3(0.0,0.0,0.0);\n    vec3 d2 = f - vec3(1.0,0.0,0.0);\n    vec3 d3 = f - vec3(0.0,1.0,0.0);\n    vec3 d4 = f - vec3(1.0,1.0,0.0);\n    vec3 d5 = f - vec3(0.0,0.0,1.0);\n    vec3 d6 = f - vec3(1.0,0.0,1.0);\n    vec3 d7 = f - vec3(0.0,1.0,1.0);\n    vec3 d8 = f - vec3(1.0,1.0,1.0);\n    \n    //点积求权重\n    float n1 = dot(g1, d1);\n    float n2 = dot(g2, d2);\n    float n3 = dot(g3, d3);\n    float n4 = dot(g4, d4);\n    float n5 = dot(g5, d5);\n    float n6 = dot(g6, d6);\n    float n7 = dot(g7, d7);\n    float n8 = dot(g8, d8);\n    \n    //加权求和\n    float a = mix(n1,n2,u.x);\n    float b = mix(n3,n4,u.x);\n    float c1 = mix(a,b,u.y);\n    a = mix(n5,n6,u.x);\n    b = mix(n7,n8,u.x);\n    float c2 = mix(a,b,u.y);\n    float c = mix(c1,c2,u.z);\n    \n    \n    return c;\n}\n\nfloat fbm(vec3 p){\n p *= 2.0; //这里调整频率\n float f = 0.;\n f += 1.0 * abs(noise(p)); p=2.*p;\n f += 0.5 * abs(noise(p)); p=2.*p;\n f += 0.25 * abs(noise(p)); p=2.*p;\n f += 0.125 * abs(noise(p)); p=2.*p;\n f += 0.0625 * noise(p); p=2.*p;\n return f;\n}\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n                    -0.80,  0.36, -0.48,\n                    -0.60, -0.48,  0.64 );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n\tfloat an = 0.5;\n\tvec3 ro = vec3( 2.5*cos(an), 1.0, 2.5*sin(an) );\n    vec3 ta = vec3( 0.0, 1.0, 0.0 );\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n\tvec3 rd = normalize( p.x*uu + p.y*vv + 1.5*ww );\n\tvec3 sc = vec3(0.0,1.0,0.0);\n\tfloat tmin = 10000.0;\n\tvec3  nor = vec3(0.0);\n\tfloat occ = 1.0;\n\tvec3  pos = vec3(0.0);\n\t\n\tfloat h = (0.0-ro.y)/rd.y;\n\tif( h>0.0 ) \n\t{ \n\t\ttmin = h; \n\t\tnor = vec3(0.0,1.0,0.0); \n\t\tpos = ro + h*rd;\n\t\tvec3 di = sc - pos;\n\t\tfloat l = length(di);\n\t\tocc = 1.0 - dot(nor,di/l)*1.0*1.0/(l*l); \n\t}\n\n\tvec3  ce = ro - sc;\n\tfloat b = dot( rd, ce );\n\tfloat c = dot( ce, ce ) - 1.0;\n\th = b*b - c;\n\tif( h>0.0 )\n\t{\n\t\th = -b - sqrt(h);\n\t\tif( h<tmin ) \n\t\t{ \n\t\t\ttmin=h; \n\t\t\tnor = normalize(ro+h*rd-sc); \n\t\t\tocc = 0.5 + 0.5*nor.y;\n\t\t}\n\t}\n\n\tvec3 col = vec3(0.8);\n\tif( tmin<100.0 )\n\t{\n\t    pos = ro + tmin*rd;\n\t    float f = 0.0;\n\t\t\n\t\tif( p.x<0.0 )\n\t\t{\n\t\t\tf = noise( 5.0*pos );\n\t\t}\n\t\telse\n\t\t{\n            f = fbm(pos);\n\t\t}\n\t\t\n        col = vec3(f);\n\t}\n\n\tfragColor = vec4( sqrt( col ), 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}