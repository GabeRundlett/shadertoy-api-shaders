{
    "Shader": {
        "info": {
            "date": "1487629585",
            "description": " can it be reduced more ? :-)",
            "flags": 0,
            "hasliked": 0,
            "id": "4dfyDr",
            "likes": 4,
            "name": "shortest smiley (140 chars)",
            "published": 3,
            "tags": [
                "short",
                "onetweet",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 803
        },
        "renderpass": [
            {
                "code": "// inspired by https://www.shadertoy.com/view/MtKSz3\n\n/**/ // 140 chars    (with slight changes of look, indeed improving :-) )\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U.x = abs( U+=U-(O.xy=iResolution.xy)).x;    // centered symmetric coordinates\n    O = vec4(    abs( O.a= dot(U/=O.y,U)-.2 ) > -U.y*.1  // mouth\n              && length(U-.3) > .1                       // eyes\n              && O.a < .3                                // head\n            );\n}\n/**/\n\n\n\n/** // 143 chars, by coyote\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U.x = abs( U+=U-(O.xy=iResolution.xy) ).x;    // centered symmetric coordinates\n    O = vec4(   ( O.a= length(U/=O.y) ) < .8            // head\n              && length(U-.3) > .1                      // eyes\n              && abs(O.a-.5) > -U.y*.1                  // mouth\n            );\n}\n/**/\n\n\n\n/** // 147 chars, by iapafoto     (with slight changes of look)\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(   ( O.a= length( U= ((O.xy=iResolution.xy)-U-U) /O.y) ) < .8 \n              && length(vec2(-U.y, abs(U))-.3) > .1      // eyes\n              && abs(O.a-.5) > .1*U.y                    // mouth\n            );\n}\n/**/\n\n\n\n/** // 151 by Fabrice\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(   ( O.a= length( U= ((O.xy=iResolution.xy)-U-U) /O.y) ) < .8 \n              && length(vec2(abs(U.x)-.3, U.y+.4)) > .1      // eyes\n              && abs(O.a-.5) > .1*U.y                        // mouth\n            );\n}\n/**/\n\n\n\n/**   // 158\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(   ( O.a= length( U= (U+U-(O.xy=iResolution.xy)) /O.y) ) < .8 \n              && length(vec2(abs(U.x)-.3, U.y-.4)) > .2      // eyes\n              && (abs(O.a-.5)>.05 || U.y>0.)                 // mouth\n            );\n}\n/**/\n\n\n\n/**   // 162\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = (U+U-(O.xy=iResolution.xy)) /O.y;\n\n    float l = length(U);\n    \n    O = vec4(    l < .8 \n              && length(vec2(abs(U.x)-.3, U.y-.4)) > .2\n              && (abs(l-.5)>.05 || U.y>0.) \n            );\n\n}\n/**/\n  \n\n\n/**   // 191  (variant design)\n#define S(x) smoothstep(0.,.01,x)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float l = length( U= (U+U-(O.xy=iResolution.xy)) /O.y);\n    O += S(.9-l) \n        -S(.2-length(vec2(abs(U.x)-.3, U.y-.4)))\n        - S(-U.y*.1-abs(l-.5))\n        -O; \n\n}\n/**/\n\n\n\n/**   // 244\n#define S smoothstep\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = (U+U-(O.xy=iResolution.xy)) /O.y;\n\n    float l = length(U),\n          a = atan(U.y,U.x),\n          d = S(.9,.8,l) ;\n\tO = cos(3.14*(1.\n                   +d\n                   +S(.1,.0,abs(l-.5)) *step(a,0.) \n                   +S(.3,.2,length(vec2(abs(U.x)-.3,U.y-.4)))\n             )) - vec4(0,0,1,0) * d;\n\n}\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}