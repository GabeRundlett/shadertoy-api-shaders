{
    "Shader": {
        "info": {
            "date": "1642177965",
            "description": "bytebeats applied to pixel coords",
            "flags": 8,
            "hasliked": 0,
            "id": "fdfcW8",
            "likes": 9,
            "name": "PixelBytes",
            "published": 3,
            "tags": [
                "bytebeats",
                "pixelbytes"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 397
        },
        "renderpass": [
            {
                "code": "#define rez iResolution\nvoid mainImage( out vec4 O, in vec2 U )\n{//an idea from https://fractalforums.org/index.php?topic=4561.0\n    vec2 u=(2.*U-iResolution.xy)/rez.x;\n    ivec2 v=ivec2(atan(u.x,u.y)/3.14159*512.,dot(u,u)*256.-pow(iTime,1.5)*16.);\n    int t=int(iTime*8.);\n    O=vec4(1)-vec4(abs(v.x&v.y)%t,(v.x^v.y)&t,(v.x&v.y)&t,0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound( int samp, float time )\n{//bytebeats\n    float tym=time+sin(time*3.14*4.41*time)*.0005;\n    int t=int(tym*44100.+.5);\n    int t1=t*(t>>7 & t>>12);\n    t*=(t>>9 & t>>14);\n    return vec2( ivec2(t,t1)%256)/256. -.5;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}