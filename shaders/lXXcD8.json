{
    "Shader": {
        "info": {
            "date": "1726078179",
            "description": "This shader computes and visualizes line segments between keypoints on a texture by generating capsule-shaped distance fields around the lines. It uses pre-defined keypoint coordinates and connection indices to render lines with a specified thickness.",
            "flags": 0,
            "hasliked": 0,
            "id": "lXXcD8",
            "likes": 0,
            "name": "Draw Line Effect",
            "published": 3,
            "tags": [
                "drawline"
            ],
            "usePreview": 0,
            "username": "anthonyliot",
            "viewed": 89
        },
        "renderpass": [
            {
                "code": "// Implementation of the code from https://github.com/miloyip/line/tree/master\n\n\nconst int INDICES_SIZE = 8;\n//                                            |--|  |--|  |--|  |--|\nint indices[INDICES_SIZE] = int[INDICES_SIZE](0, 1, 2, 3, 4, 5, 6, 7);\n\nconst int COORDS_SIZE = 32;\nfloat coordinates[COORDS_SIZE] = float[COORDS_SIZE](\n//   | - - - - - - -| Padding Size 4\n//   x0,  y0,   p,   p,   x1,  y1,  p,   p,\n    0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0,\n//   x2,  y2,   p,   p,   x3,  y3,  p,   p,\n    0.0, 0.5, 0.0, 0.0, 1.0, 0.5, 0.0, 0.0,\n//   x4,  y4,   p,   p,   x5,  y5,  p,   p,\n    0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0,\n//   x6,  y6,   p,   p,   x7,  y7,  p,   p,\n    0.5, 1.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0\n);\n    \n    \nfloat capsule(vec2 p, vec2 a, vec2 b, float r)\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    vec2 d = pa - ba * h;\n    return length(d) - r;\n}\n\n\nconst float thickness = 0.5f;\nconst int coordPadding = 4;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float value = 0.0;\n\n    for (int i = 0; i < INDICES_SIZE; i += 2)\n    {\n        int l0 = indices[i];\n        int l1 = indices[i+1];\n\n        float x0 = coordinates[l0 * coordPadding];\n        float y0 = coordinates[l0 * coordPadding + 1];\n        \n        float x1 = coordinates[l1 * coordPadding];\n        float y1 = coordinates[l1 * coordPadding + 1];\n        \n        vec2 a = vec2(x0, y0) * iResolution.xy;\n        vec2 b = vec2(x1, y1) * iResolution.xy;\n\n        float alpha = max(min(0.5 - capsule(uv * iResolution.xy, a, b, thickness), 1.0), -1.0);\n        float lineValue = ((1.0f - alpha) * 0.5f + alpha);\n        value = max(value, lineValue);\n    }\n\n    fragColor = vec4(value, value, value, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}