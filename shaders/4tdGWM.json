{
    "Shader": {
        "info": {
            "date": "1469623191",
            "description": "color and intensity of blackbody emitter with temperature (in x, from 0 to 16K).\nBottom: chrominance.\nTop: total color with intensity, scaled by Mouse.y (to tune saturation).",
            "flags": 0,
            "hasliked": 0,
            "id": "4tdGWM",
            "likes": 29,
            "name": "black body spectrum / Planck law",
            "published": 3,
            "tags": [
                "color",
                "blackbody",
                "planck"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 2392
        },
        "renderpass": [
            {
                "code": "// color of stars, hot metal, fire (from carbonized material, i.e. soot) \n// = blackbody spectrum: https://en.wikipedia.org/wiki/Black-body_radiation\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U /= iResolution.xy;\n    float y = 2.*U.y,\n          m = .01+5.*iMouse.y/iResolution.y,\n        T = U.x*16000.; // absolute temperature (K)\n    \n    O -= O;\n    \n/*  // --- with physical units: (but math conditionning can be an issue)\n    float h = 6.6e-34, k=1.4e-23, c=3e8; // Planck, Boltzmann, light speed  constants\n\n    for (float i=0.; i<3.; i++) {  // +=.1 if you want to better sample the spectrum.\n        float f = 4e14 * (1.+.5*i); \n        O[int(i)] += 1e7/m* 2.*(h*f*f*f)/(c*c) / (exp((h*f)/(k*T)) - 1.);  // Planck law\n    }\n*/\n    // --- with normalized units:  f = 1 (red) to 2 (violet). \n    // const 19E3 also disappears if you normalized temperatures with 1 = 19000 K\n     for (float i=0.; i<3.; i++) {  // +=.1 if you want to better sample the spectrum.\n        float f = 1.+.5*i; \n        O[int(i)] += 10./m* (f*f*f) / (exp((19E3*f/T)) - 1.);  // Planck law\n    }\n   \n    if (y<1.) O /= max(O.r,max(O.g,O.b));  // chrominance\n    \n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}