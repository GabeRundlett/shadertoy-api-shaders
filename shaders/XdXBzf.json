{
    "Shader": {
        "info": {
            "date": "1497141136",
            "description": "Colorize a texture with optional posterize effect",
            "flags": 0,
            "hasliked": 0,
            "id": "XdXBzf",
            "likes": 4,
            "name": "Colorize Posterize",
            "published": 3,
            "tags": [
                "colorize"
            ],
            "usePreview": 0,
            "username": "cacheflowe",
            "viewed": 834
        },
        "renderpass": [
            {
                "code": "float posterSteps = 16.0;\nvec3 color1 = vec3(1.0, 1., 0.);\nvec3 color2 = vec3(1., 0., 1.);\n\nfloat rgbToGray(vec4 rgba) {\n\tconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgba.xyz, W);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // current location\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // sample color to grayscale\n    vec4 color = texture(iChannel0, uv);\n    float luma = rgbToGray(color);\n    luma = floor(luma * posterSteps) / posterSteps;\t// posterize    \n    \n    // fade from black at 0.5 to full color at 0 & 1\n    if(luma < 0.5) {\n        fragColor = vec4(color2 * (1. - luma * 2.), 1.);\n    } else {\n        fragColor = vec4(color1 * (-0.5 + luma * 2.), 1.0);\n    }\n}\n\n/*\n#define targetR 1.0\n#define targetG 0.0\n#define targetB 1.0\n#define posterSteps 6.0\n\nfloat rgbToGray(vec4 rgba) {\n\tconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgba.xyz, W);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // current location\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // sample color color\n    vec4 color = texture(iChannel0, uv);\n    float luma = rgbToGray(color);\n    \n    #ifdef posterSteps\n    \tluma = floor(luma * posterSteps) / posterSteps;\n    #endif\n    \n    // draw input color mapped to luma\n\tfragColor = vec4(vec3(luma * targetR, luma * targetG, luma * targetB), 1.0);\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}