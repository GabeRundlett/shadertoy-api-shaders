{
    "Shader": {
        "info": {
            "date": "1564906155",
            "description": "based on https://www.youtube.com/watch?v=0ifChJ0nJfM",
            "flags": 0,
            "hasliked": 0,
            "id": "wt2XRz",
            "likes": 1,
            "name": "undulating palm tree",
            "published": 3,
            "tags": [
                "tutorial",
                "palm"
            ],
            "usePreview": 0,
            "username": "raphaelrk",
            "viewed": 441
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized coord\n    vec2 p = fragCoord.xy / iResolution.xy;\n    \n    // normalized vector from center of palm leaves\n    vec2 q = p - vec2(0.33,0.7);\n\n    // night + day colors\n    vec3 dayBottom = vec3(1.0, 0.4, 0.5);\n    vec3 dayTop = vec3(1.0, 0.8, 0.3);\n    vec3 nightBottom = vec3(0.0, 0.1, 0.5);\n    vec3 nightTop = vec3(0.0, 0.2, 0.3);\n    \n    // mix colors to get background color\n    float timeOfDay = iTime*0.5;\n    vec3 bottom = mix(dayBottom, nightBottom, cos(timeOfDay));\n    vec3 top = mix(dayTop, nightTop, cos(timeOfDay));\n    vec3 col = mix(bottom, top, sqrt(p.y));\n    \n    // create palm leaves\n    float r = 0.2 + 0.1*cos(atan(q.y,q.x)*10.0 + iTime*3.0 + 20.0*q.x + 1.0);\n    col *= smoothstep(r, r+0.01, length(q));\n    \n    // create trunk and floor\n    r = 0.015;\n    r += 0.002*cos(1000.0*q.y + 20.0*sin(iTime));\n    r += exp(-40.0*p.y);\n    float trunkX = (1.0 - smoothstep(r, r + 0.002, abs(q.x - 0.25*sin(2.0*q.y))));\n    float trunkY = (1.0 - smoothstep(0.0, 0.01, q.y));\n    col *= 1.0 - trunkX*trunkY;\n    \n    // create lines\n    float stripedLines = 0.5+0.5*sin(1.2*(p.x*iResolution.x*.1+p.y*iResolution.y)+iTime*20.);\n    col *= stripedLines;\n    \n    // flash with the music\n    float val0 = texture(iChannel0, vec2(0.0, 0.0)).x;\n    float val1 = texture(iChannel0, vec2(1.0, 0.0)).x;\n    col *= vec3(val1)*length(q)*1.3+vec3(val0)*(1.5-length(q));\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}