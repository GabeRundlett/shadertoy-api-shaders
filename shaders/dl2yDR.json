{
    "Shader": {
        "info": {
            "date": "1691678617",
            "description": "asd",
            "flags": 64,
            "hasliked": 0,
            "id": "dl2yDR",
            "likes": 2,
            "name": " iyfdbbbbbghg",
            "published": 3,
            "tags": [
                "te"
            ],
            "usePreview": 0,
            "username": "nilok",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "/* \"Audio Visualizer #5 - Wipeout\" by @kishimisu (2023) - https://www.shadertoy.com/view/ddXfzf\n\n   Playing with both linear and radial repetition around the z-axis in\n   a raymarched 3D scene\n   \n  \n*/\n\n#define rot(a) mat2(cos(a + vec4(0,33,11,0)))\n#define rep(p, r) mod(p+r, r+r) - r\n\nfloat b(vec3 q, vec3 b) { // box sdf\n    return length(max(q = abs(q) - b,0.)) + min(max(q.x,max(q.y,q.z)),0.);\n}\n\nfloat h(vec2 p) { // 2->1 noise\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n/* Audio-related functions */\n#define level(x) (texelFetch(iChannel0, ivec2(int(x*512.), 0), 0).r)\n#define pitch(f) logisticAmp(level(pow(2., f) * .02175))\n#define logX(x,a,c) (1./(exp(-a*(x-c))+1.))\nfloat logisticAmp(float amp){\n   float c = 1.-smoothstep(6.,0.,iTime)*.3, a = 15.;  \n   return (logX(amp, a, c) - logX(0., a, c)) / (logX(1., a, c) - logX(0., a, c));\n}\nfloat getVol(float samples) {\n    float avg = 0.;\n    for (float i = 0.; i < samples; i++) avg += level(i/samples);\n    return avg / samples;\n}\n\nvoid mainImage(out vec4 O, vec2 F) {\n    vec2  R = iResolution.xy,\n          u = (F+F-R)/R.y * rot(-iTime*.15);\n    vec3  p, q, id;\n    float i = 0., t = 0., d, f, v = getVol(8.);\n    \n    for (O *= i; max(i,t) < 60.; i++) {\n    \n        q = p = t * normalize(vec3(u*rot(t*sin(iTime*.15)*.04),1));\n        p.z += iTime*3. + v;\n        \n        id.z = floor(p.z+.5);\n        p.z  = rep(p.z, .5);\n        \n        p.yx *= rot(round(atan(p.y, p.x) / .393) * .393);\n        \n        id.x = floor((p.x+.2)/.2);\n        p.x  = rep(p.x+.1, .1);\n                \n        t += d = max(b(p, vec3(.02 + length(q.xy)*.02)), 1.-length(q.xy));\n        \n        f = pitch(h(vec2(id.x + id.z*.05))*2.-1.);\n        O += pow(f,1.5) * abs(v-id.x*.004) * .04 / (.8 + abs(d)) \n             * (1. + cos(f*1. + t*.25 + iTime + vec4(0,1,2,0)));\n    }     \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 34406,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/ejorrr/shpongle-divine-moments-of-truth?in=gangsterd-2/sets/sphongle-1"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}