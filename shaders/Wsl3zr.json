{
    "Shader": {
        "info": {
            "date": "1544759464",
            "description": "glow line",
            "flags": 0,
            "hasliked": 0,
            "id": "Wsl3zr",
            "likes": 4,
            "name": "glow line by tj",
            "published": 3,
            "tags": [
                "glow"
            ],
            "usePreview": 0,
            "username": "TownKing",
            "viewed": 530
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float hArray[4];\n    hArray[0] = 0.25;\n    hArray[1] = 0.35;\n    hArray[2] = 0.55;\n    hArray[3] = 0.85;\n    vec3 sum = vec3(0.0);\n    for(int i =0;i<5; i++){\n    float dotwidth =(sin(iTime) + 1.0)/2.0;\n    float targetHeight = hArray[i];\n    float f = smoothstep(dotwidth-0.035,dotwidth,pow(uv.x,1.0+sin(iTime)*targetHeight/4.0))-smoothstep(dotwidth,dotwidth+0.035,pow(uv.x,1.0+sin(iTime)*targetHeight/4.0)) + 0.5;\n    float height = uv.y;\n        //+fract(sin(iTime));\n    float width = 0.05;\n    float line = f*(smoothstep(targetHeight-width, targetHeight, height) - smoothstep(targetHeight, targetHeight+width, height));\n\tfloat s = (sin(100.0*targetHeight)+1.0)/2.0;\n    vec3 color = vec3(line*(1.0-s),(s)*line,(1.0+s)*line);\n    sum += color;\n    }\n    // Output to screen\n    fragColor = vec4(sum,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}