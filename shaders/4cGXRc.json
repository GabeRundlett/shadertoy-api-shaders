{
    "Shader": {
        "info": {
            "date": "1715517681",
            "description": "i originally wanted to just make the notes static, but i got too into it and animated the notes, added a scanline and added some sound\nafter 8 seconds, you can click your mouse on the canvas to move the scanline yourself",
            "flags": 8,
            "hasliked": 0,
            "id": "4cGXRc",
            "likes": 4,
            "name": "diamboy's simple cytus note anim",
            "published": 3,
            "tags": [
                "rhythmgame"
            ],
            "usePreview": 0,
            "username": "Diamboy",
            "viewed": 98
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 mv = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    float t = iTime * 0.25 - 1.0;\n    mv.y = mix(t, mv.y, step(1.0, t));\n    uv *= 12.0;\n    vec2 uv2 = uv;\n    mv *= 12.0;\n    mat2 m = mat2(1,0.25,0.125,1);\n    uv *= inverse(m);\n    vec2 mv2 = mv * inverse(m);\n    uv -= 1.0;\n    mv2 -= 1.0;\n    vec2 c = uv;\n    vec2 d = round(uv*0.5)*2.0;\n    uv -= d;\n    uv *= m;\n    d *= m;\n    mv2 *= m;\n    float h1 = clamp((mv2.y - d.y) * 0.125 + 1.0, 0.0, 1.0);\n    float h2 = clamp(1.0 - (mv2.y - d.y) * 4.0, 0.0, 1.0) * step(0.999, h1);\n    float ph = h1 * 3.1415926535;\n    mat2 r = mat2(-cos(ph),-sin(ph),sin(ph),-cos(ph));\n    vec3 col = vec3(smoothstep(0.9,0.85,length(uv)));\n    col *= smoothstep(0.75,0.85,length(uv));\n    col += vec3(smoothstep(0.7,0.65,length(uv))) * vec3(1.0,vec2(smoothstep(-0.02,0.02,mix((uv*r).x,uv.x,smoothstep(0.5,0.55,length(uv))))));\n    col *= h1;\n    col *= smoothstep(mv2.y - 0.02, mv2.y, d.y);\n    col += vec3(0,vec2(smoothstep(0.9, 0.85*h2, length(uv)) * sqrt(h2)));\n    col *= smoothstep(-9.01,-8.99,c.x);\n    col *= smoothstep(7.01,6.99,c.x);\n    col *= smoothstep(3.01,2.99,c.y);\n    col *= smoothstep(-5.01,-4.99,c.y);\n    col = max(col, smoothstep(0.01, 0.0, (uv2.y - mv.y) * (uv2.y - mv.y)));\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound( int samp, float time )\n{\n    float o = 0.0;\n    for (int i = 0; i < 4; i++)\n        for (int j = 0; j < 8; j++)\n        {\n            float s = float(i*8+j+32) / 12.0;\n            float x = max(0.0, time - s);\n            float f = 440.0 * pow(2.0, float(-i - j) / 12.0);\n            float _e = log(x) * 0.4 + 2.0;\n            float e = exp(-_e*_e) * 0.5;\n            o += sin(x*f*6.2831853) * e;\n        }\n    o *= step(time, 8.0);\n    return vec2(o);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}