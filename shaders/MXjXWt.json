{
    "Shader": {
        "info": {
            "date": "1711248736",
            "description": "Shader is slowed down for seizure safety. every pixel only displays red, green, or blue. No individual pixel can show more than one colour channel at a time, and the pixel can only be fully on or fully off. No discrete values. See shader for instructions\n",
            "flags": 0,
            "hasliked": 0,
            "id": "MXjXWt",
            "likes": 1,
            "name": "pwm͏ (STROBE WARNING)",
            "published": 3,
            "tags": [
                "experiment",
                "thing"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 119
        },
        "renderpass": [
            {
                "code": "// Try setting this to a number like 50, and then taking a long exposure photo of the shader for the duration of one or more complete cycles.\n// Setting to 10, you may be able\n\nconst int d = 500;\n// Set this lower. 10 is decent. 50 is good for timelapse demo\n\n\nbool jitter = false;\n// STROBE WARNING - This greatly increases quality of the image if you enable it by flashing random frames.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    int s = (int(U.x + U.y) + iFrame)%3;\n    vec2 r = iResolution.xy;\n    vec4 tex = texture(iChannel0, U/r);\n    \n    // 87 should be a prime number. Any prime works.\n    int t = d - (iFrame*(jitter?87:1))%d - 1;\n    int x = int(tex.x * float(d));\n    int y = int(tex.y * float(d));\n    int z = int(tex.z * float(d));\n    \n    \n    O = vec4(0);\n\n    switch(s){\n        case 0:\n            O.x = float(x>t);\n            break;\n        case 1:\n            O.y = float(y>t);\n            break;\n        case 2:\n            O.z = float(z>t);\n            break;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}