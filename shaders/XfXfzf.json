{
    "Shader": {
        "info": {
            "date": "1724100340",
            "description": "the worst readable clock of all time ",
            "flags": 0,
            "hasliked": 0,
            "id": "XfXfzf",
            "likes": 0,
            "name": "daily shader clock 9",
            "published": 3,
            "tags": [
                "daily",
                "shaderclockdenodev"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 73
        },
        "renderpass": [
            {
                "code": "\n// Fork of \"daily shader clock 6\" by jonasfrey. https://shadertoy.com/view/MfScDD\n// 2024-07-30 22:37:25\n\n// Fork of \"daily shader clock 5\" by jonasfrey. https://shadertoy.com/view/XcjyD1\n// 2024-07-30 10:01:15\n\n// Fork of \"daily shader clock 4\" by jonasfrey. https://shadertoy.com/view/MfjcWz\n// 2024-07-29 14:27:30\n\n// Fork of \"daily shader clock 3 \" by jonasfrey. https://shadertoy.com/view/Xc2yzD\n// 2024-07-28 17:27:46\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trn = (fragCoord.xy-iResolution.xy*.5)/min(iResolution.y, iResolution.x);\n    o_trn*=1.5;\n    vec2 o2 = clamp(o_trn+.5, 0., 1.);\n\n    vec4 o_col_blue = vec4(\n        38./255., 98./255., 132./255., 1.\n    );\n    vec4 o_col_blue_light = vec4(\n        233./255., 239./255., 243./255., 1.\n    );\n    vec4 o_col_blue_light_dark = vec4(\n        60./255., 114./255., 145./255., 1.\n    );\n    vec4 o_col_white = vec4(1.,1.,1.,1.);// just in case if we want to adjust the white tone i keep it as variable\n    \n    vec4 o_col_yellow = vec4(.98, .8, .2,1.); \n\n    float n_tau = 6.2831;\n    \n    float n_ang_nor = fract(atan(o_trn.x, o_trn.y)/n_tau);\n    float n_sec = iDate.w;\n    float n_sec_mod = mod(n_sec , 60.);\n    float n_sec_mod_nor = n_sec_mod / 60.;\n    float n_sec_mod_nor_snp = floor(n_sec_mod) / 60.;\n    float n_min_mod = floor(mod(n_sec, 60.*60.));\n    float n_min_mod_nor = n_min_mod / (60.*60.);\n    float n_min_mod_nor_snp = (floor(n_min_mod_nor*12.))/12.;\n    float n_hou_mod = floor(mod(n_sec, 60.*60.*12.));\n    float n_hou_mod_nor = n_hou_mod / (60.*60.*12.);\n    float n_hou_mod_nor_snp = (floor(n_hou_mod_nor*12.))/12.;\n    \n    float n_aa = (1./(iResolution.x+iResolution.y)/2.)*8.;\n    float n_aa2 = n_aa*4.;\n    float n_its = 3.;\n    float n_it_nor_one = 1./n_its;\n    vec4 o_col = vec4(0.);\n\n    fragColor = vec4(\n        n_hou_mod_nor_snp, \n        n_min_mod_nor_snp, \n        n_sec_mod_nor_snp,\n        1.\n    );\n\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}