{
    "Shader": {
        "info": {
            "date": "1686058785",
            "description": "benchart slogan",
            "flags": 0,
            "hasliked": 0,
            "id": "clVSDR",
            "likes": 6,
            "name": "benchart slogan",
            "published": 3,
            "tags": [
                "raymarching",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "chenxianming",
            "viewed": 1423
        },
        "renderpass": [
            {
                "code": "#define showPlasma 1\n#define PI 3.1415926\n\nfloat getPath(vec2[3] path, in vec2 uv) {\n  return path[0].x * pow(uv.x, 2.) + path[0].y * pow(uv.y, 2.) + path[1].x * uv.x * uv.y + path[1].y * uv.x + path[2].x * uv.y + path[2].y;\n}\n\nfloat mExp(vec2 p1, vec2 p2, in vec2 uv) {\n  return (uv.y - p2.y) * (p1.x - p2.x) - ((uv.x - p2.x) * (p1.y - p2.y));\n}\n\nfloat getOpenPathToPx(vec2[3] path, vec2[3] pathOpt, vec2 uv) {\n  float g = 0.;\n\n  g = getPath(path, uv);\n  g = smoothstep(0., g, pathOpt[0].y);\n\n  if (pathOpt[0].x == 0.) {\n    // normal\n    g *= step(mExp(vec2(pathOpt[1].x, pathOpt[2].x), vec2(pathOpt[1].y, pathOpt[2].y), uv), 0.);\n  }\n\n  if (pathOpt[0].x == 1.) {\n    // hor\n    float rhmax = max(pathOpt[1].x, pathOpt[1].y);\n    float rhmin = min(pathOpt[1].x, pathOpt[1].y);\n\n    g *= step(uv.x, rhmax);\n    g *= step(rhmin, uv.x);\n  }\n\n  if (pathOpt[0].x == 2.) {\n    // ver\n    float rvmax = max(pathOpt[2].x, pathOpt[2].y);\n    float rvmin = min(pathOpt[2].x, pathOpt[2].y);\n    g *= step(uv.y, rvmax);\n    g *= step(rvmin, uv.y);\n  }\n\n  if (pathOpt[0].x == 3.) {\n    // spec\n    g *= 1. - step(mExp(vec2(pathOpt[1].x, pathOpt[2].x), vec2(pathOpt[1].y, pathOpt[2].y), uv), 0.);\n  }\n\n  return g;\n}\n\nfloat T(float s) {\n  return fract(iTime * s) * 3.1415926 * 2.;\n}\n\nconst mat2 m = mat2(-1.1, 1.2, -1.3, -.1);\n\nfloat noise(in vec2 p) {\n  return sin(p.x) * sin(p.y);\n}\n\nfloat fbm4(vec2 p) {\n  float f = 0.0;\n  for (float i = 0.; i < 5.; i++) {\n    f += 1.5 * .1 * noise(p * i);\n    p = m * p * abs(i - 2.) * (2.3 + abs(i - 5.) * .25);\n  }\n\n  return f / 0.99999990;\n}\n\nvec2 fbm4_2(vec2 p) {\n  return vec2(fbm4(p), fbm4(p + vec2(1.8)));\n}\n\nvec2 path1[3] = vec2[](vec2(0.000099999999999994, -1.6653345369377348e-16), vec2(1.3877787807814457e-17, 0.00013199999999999844), vec2(0., 0.00004355999999999891));\nvec2 path1Opt[3] = vec2[](vec2(2., 1e-10), vec2(-0.66, -0.66), vec2(0.07, -0.08));\nvec2 path2[3] = vec2[](vec2(0.014400000000000007, 0.05289999999999989), vec2(-0.05519999999999997, 0.022160000000000013), vec2(-0.03415200000000005, 0.007832000000000004));\nvec2 path2Opt[3] = vec2[](vec2(0., 1e-5), vec2(-0.66, -0.55), vec2(0.08, 0));\nvec2 path3[3] = vec2[](vec2(0.009999999999999998, 0.07290000000000013), vec2(0.054000000000000006, 0.016868), vec2(0.03491600000000006, 0.006252400000000001));\nvec2 path3Opt[3] = vec2[](vec2(0., 1e-5), vec2(-0.55, -0.66), vec2(0, -0.08));\nvec2 path4[3] = vec2[](vec2(0., 0.0001000000000000445), vec2(0., 0.), vec2(0., 0.));\nvec2 path4Opt[3] = vec2[](vec2(1., 1e-9), vec2(-0.55, -0.66), vec2(0, 0));\n\nvec2 path5[3] = vec2[](vec2(0.0000010000000000001327, -5.551115123125783e-17), vec2(-1.3877787807814457e-17, 7.20000000002663e-7), vec2(-0.000014400000000018565, 0.0000012815999999992323));\nvec2 path5Opt[3] = vec2[](vec2(1., 3e-8), vec2(-0.36, -0.48), vec2(0.08, 0.081));\nvec2 path6[3] = vec2[](vec2(0., 0.00040000000000001146), vec2(0., 0.), vec2(0., 0.));\nvec2 path6Opt[3] = vec2[](vec2(1., 1e-9), vec2(-0.38, -0.48), vec2(0, 0));\nvec2 path7[3] = vec2[](vec2(0.0000010000000000001327, -5.551115123125783e-17), vec2(0., 7.199999999991935e-7), vec2(0.000014399999999990809, 0.0000011375999999993502));\nvec2 path7Opt[3] = vec2[](vec2(1., 5e-8), vec2(-0.36, -0.48), vec2(-0.07, -0.071));\nvec2 path8[3] = vec2[](vec2(0.0000999999999999994, -5.551115123125783e-17), vec2(1.3877787807814457e-17, 0.00009599999999999973), vec2(-6.938893903907228e-18, 0.000023040000000000213));\nvec2 path8Opt[3] = vec2[](vec2(2., 1e-9), vec2(-0.48, -0.48), vec2(-0.07, 0.08));\n\nvec2 path9[3] = vec2[](vec2(0., 9.999999999871223e-7), vec2(0., 0.000025599999999998888), vec2(1.6000000000251924e-7, 0.000008198399999999762));\nvec2 path9Opt[3] = vec2[](vec2(2., 6e-8), vec2(-0.32, -0.321), vec2(-0.08, 0.08));\nvec2 path10[3] = vec2[](vec2(0., 0.000001000000000001), vec2(0., 0.000025599999999999755), vec2(1.5999999999818243e-7, 0.000005126399999999965));\nvec2 path10Opt[3] = vec2[](vec2(2., 6e-8), vec2(-0.2, -0.201), vec2(-0.08, 0.08));\nvec2 path11[3] = vec2[](vec2(9.999999999940612e-9, 1.000000000861423e-8), vec2(-2.0000000010289565e-8, 0.000004488000000000408), vec2(0.0000033519999999981342, 0.0000011663999999999555));\nvec2 path11Opt[3] = vec2[](vec2(1., 1e-8), vec2(-0.2001, -0.32), vec2(-0.0801, 0.08));\n\nvec2 path12[3] = vec2[](vec2(0.032400000000000005, -1.5585406229479126e-18), vec2(-2.927345865710862e-18, 0.005184000000000004), vec2(0.0035280000000000003, -0.00009252000000000004));\nvec2 path12Opt[3] = vec2[](vec2(1., 1e-5), vec2(-0.15, -0.01), vec2(0.04, 0.04));\nvec2 path13[3] = vec2[](vec2(0.0024999999999999996, 0.007225000000000002), vec2(-0.008499999999999997, -0.0006060000000000001), vec2(-0.001217000000000001, -0.00016103));\nvec2 path13Opt[3] = vec2[](vec2(0., 2e-6), vec2(-0.125, -0.15), vec2(-0.07, 0.04));\nvec2 path14[3] = vec2[](vec2(0.008100000000000007, 0.0036000000000000003), vec2(0.010800000000000004, 0.002106000000000001), vec2(-0.0003600000000000001, -0.0000042299999999999985));\nvec2 path14Opt[3] = vec2[](vec2(3., 3e-6), vec2(-0.13, -0.01), vec2(-0.07, -0.04));\n\nvec2 path15[3] = vec2[](vec2(1e-8, 1.0408340855860843e-17), vec2(-6.776263578034403e-21, -6e-10), vec2(-0.0000019600000000000003, 9e-12));\nvec2 path15Opt[3] = vec2[](vec2(1., 3e-9), vec2(0.03, 0.17), vec2(0, 0.0001));\nvec2 path16[3] = vec2[](vec2(0.0008999999999999989, -2.168404344971009e-19), vec2(0., -0.000054000000000000154), vec2(8.131516293641283e-20, 8.100000000000016e-7));\nvec2 path16Opt[3] = vec2[](vec2(2., 3e-9), vec2(0.03, 0.03), vec2(0.08, -0.09));\nvec2 path17[3] = vec2[](vec2(0.0000999999999999994, 1.0408340855860843e-17), vec2(0., -0.000034000000000000176), vec2(0., 0.00000288999999999994));\nvec2 path17Opt[3] = vec2[](vec2(2., 3e-10), vec2(0.17, 0.17), vec2(0.08, -0.09));\n\nvec2 path18[3] = vec2[](vec2(9.999999999992654e-7, -2.7755575615628914e-17), vec2(-1.0408340855860843e-17, 0.000008000000000001062), vec2(-0.0000035999999999977023, -0.0000018919999999999473));\nvec2 path18Opt[3] = vec2[](vec2(2., 1e-8), vec2(0.26, 0.2), vec2(0.071, -0.07));\nvec2 path19[3] = vec2[](vec2(9.999999999992654e-7, 0.00010000000000003062), vec2(-0.000020000000000006124, 0.00026985999999999677), vec2(0.00012379999999999336, -0.00008304709999999965));\nvec2 path19Opt[3] = vec2[](vec2(2., 1e-7), vec2(0.27, 0.34), vec2(0.08, -0.081));\nvec2 path20[3] = vec2[](vec2(0.000003999999999999935, -4.163336342344337e-17), vec2(0., -0.000002160000000000074), vec2(-0.000012800000000001178, 2.9199999999982712e-8));\nvec2 path20Opt[3] = vec2[](vec2(1., 2e-8), vec2(0.23, 0.31), vec2(-0.02, -0.02));\n\nvec2 path21[3] = vec2[](vec2(0.00010000000000000026, 2.7755575615628914e-17), vec2(0., -0.00007400000000000115), vec2(0., 0.00001369000000000023));\nvec2 path21Opt[3] = vec2[](vec2(2., 1e-10), vec2(0.37, 0.37), vec2(0.09, -0.08));\nvec2 path22[3] = vec2[](vec2(0.01210000000000001, 0.0676000000000001), vec2(-0.057200000000000084, -0.004494000000000003), vec2(0.021380000000000017, -0.000560709999999999));\nvec2 path22Opt[3] = vec2[](vec2(0., 1e-5), vec2(0.37, 0.47), vec2(0.09, 0));\nvec2 path23[3] = vec2[](vec2(0., 0.00009999999999998899), vec2(0., 0.), vec2(0., 0.));\nvec2 path23Opt[3] = vec2[](vec2(1., 2e-10), vec2(0.38, 0.47), vec2(0, 0));\nvec2 path24[3] = vec2[](vec2(0.0009000000000000006, 0.0009000000000000119), vec2(-0.001799999999999996, -0.0006300000000000004), vec2(0.0010619999999999935, 0.00009728999999999988));\nvec2 path24Opt[3] = vec2[](vec2(3., 2e-7), vec2(0.5, 0.47), vec2(-0.09, 0));\n\nvec2 path25[3] = vec2[](vec2(3.999999999976245e-8, -1.6653345369377348e-16), vec2(0., -4.719999999874824e-8), vec2(0.000003920000000046109, -3.39072000004291e-7));\nvec2 path25Opt[3] = vec2[](vec2(1., 1e-8), vec2(0.52, 0.66), vec2(0.09, 0.09));\nvec2 path26[3] = vec2[](vec2(0., 0.0000010000000000287557), vec2(0., -0.000025599999999999755), vec2(-1.6000000001986647e-7, 0.000015366399999999));\nvec2 path26Opt[3] = vec2[](vec2(2., 3e-8), vec2(0.6, 0.601), vec2(0.08, -0.08));\n\nfloat calcSlogan(in vec2 uv) {\n  // b\n  float g = 0.;\n  g += getOpenPathToPx(path1, path1Opt, uv);\n  g += getOpenPathToPx(path2, path2Opt, uv);\n  g += getOpenPathToPx(path3, path3Opt, uv);\n  g += getOpenPathToPx(path4, path4Opt, uv);\n\n  // e\n  g += getOpenPathToPx(path5, path5Opt, uv);\n  g += getOpenPathToPx(path6, path6Opt, uv);\n  g += getOpenPathToPx(path7, path7Opt, uv);\n  g += getOpenPathToPx(path8, path8Opt, uv);\n\n  // n\n  g += getOpenPathToPx(path9, path9Opt, uv);\n  g += getOpenPathToPx(path10, path10Opt, uv);\n  g += getOpenPathToPx(path11, path11Opt, uv);\n\n  // c\n  g += getOpenPathToPx(path12, path12Opt, uv);\n  g += getOpenPathToPx(path13, path13Opt, uv);\n  g += getOpenPathToPx(path14, path14Opt, uv);\n\n  // h\n  g += getOpenPathToPx(path15, path15Opt, uv);\n  g += getOpenPathToPx(path16, path16Opt, uv);\n  g += getOpenPathToPx(path17, path17Opt, uv);\n\n  // a\n  g += getOpenPathToPx(path18, path18Opt, uv);\n  g += getOpenPathToPx(path19, path19Opt, uv);\n  g += getOpenPathToPx(path20, path20Opt, uv);\n\n  // r\n  g += getOpenPathToPx(path21, path21Opt, uv);\n  g += getOpenPathToPx(path22, path22Opt, uv);\n  g += getOpenPathToPx(path23, path23Opt, uv);\n  g += getOpenPathToPx(path24, path24Opt, uv);\n\n  // t\n  g += getOpenPathToPx(path25, path25Opt, uv);\n  g += getOpenPathToPx(path26, path26Opt, uv);\n\n  g *= 10.;\n  g = sqrt(g);\n  g = dot(g, g);\n  g = dot(g, g);\n  g = dot(g, g);\n  return g;\n}\n\nmat2 A(float a) { float b = sin(a), c = cos(a); return mat2(c, b, -b, c); }\nfloat o(vec3 a) {\n  vec3 d = floor(a); a -= d; vec3 b = vec3(7, 157, 113);\n  vec4 c = vec4(0, b.yz, b.y + b.z) + dot(d, b); a = a * a * (3. - 2. * a), c = mix(fract(sin(c) * 43758.5), fract(sin(c + b.x) * 43758.5), a.x), c.xy = mix(c.xz, c.yw, a.y); return mix(c.x, c.y, a.z);\n}\nfloat B(in float a) { return fract(a * 412.531 + .513) - .5 + sin(a); }\n\nfloat C(vec3 a, float c) {\n  int vv = int(c) % 2;\n  vec2 b = vv == 0 ? a.xz : a.xy;\n  b *= A(B(c + 2.) * 3.141593);\n  b.x += cos(vv == 0 ? a.y : a.z) * B(c + 5.);\n  b.y += sin(vv == 0 ? a.y : a.z) * B(c + 7.);\n  float d = length(b) * o(8. * a + 1.5);\n\n  if (showPlasma == 0) {\n    d = length(b) - .005;\n  }\n\n  return max(d, abs(vv == 0 ? a.y : a.z) - 40.);\n}\n\nfloat p(vec3 c) {\n  float a = 5.;\n  vec3 d = c;\n  d.z += fract(iTime * -.05) * 40.;\n  d.z = d.z - 40. * clamp(round(d.z / 40.), -1., 1.);\n  for (float b = 0.; b < 10.; b++) a = min(a, C(d, b)); return a;\n}\n\nfloat e(vec3 b) { float a = 5.; a = p(b); return a; }\nvec3 q(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * e(b + a.xyy * 5e-4) + a.yyx * e(b + a.yyx * 5e-4) + a.yxy * e(b + a.yxy * 5e-4) + a.xxx * e(b + a.xxx * 5e-4));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 a = fragCoord.xy / iResolution.xy;\n  a = (a - .5) * 2., a.x *= iResolution.x / iResolution.y;\n  vec3 r = vec3(0, 0, 0), c = vec3(0, 0, 1), d = normalize(r - c), k = normalize(cross(d, vec3(0, 1, 0))), s = normalize(cross(k, d)), t = vec3(0), f = normalize(a.x * k + a.y * s + 1.5 * d); float g = 0., h = 0.; for (int u = 0; u < 128; ++u) { vec3 m = c + f * g; float v = e(m); g += v * .44445, h += v * ((m.z + .5) / 2.); } vec3 i = vec3(0), n = normalize(vec3(.57703)), w = normalize(n - f); if (g < 5.) { vec3 l = c + g * f, b = q(l); float E = 1. - exp(-6.25e-6 * h * h), x = clamp(dot(b, vec3(.4, 1, -.5)), 0., 1.), y = pow(clamp(dot(b, w), 0., 1.), 50.) * .6; y *= x; float D = dot(b, vec3(0, 1, 0)); if (e(l) == p(l)) i = y * vec3(.76, .1, .2) + vec3(.1, 0, 0) * D + vec3(0) * x + vec3(.7, .15, .05), i += vec3(max(dot(n, b), 0.)) * .3, i *= h; } i *= .4, t += i, fragColor = vec4(t, 1);\n\n  a *= .7;\n  a.y -= .05;\n  vec3 tot = fragColor.rgb;\n  tot = mix(\n    tot,\n    vec3(.7),\n    min(1., calcSlogan(\n        a + vec2(cos(T(0.5) + PI * .25) * .01, sin(T(0.5) + PI * .25) * .01)\n      ))\n  );\n\n  tot = mix(\n    tot,\n    vec3(.9, .2, .1) * 2.2,\n    min(1., calcSlogan(\n        a + (fbm4_2(a.yx - T(.1) * .2).y * 1.6 * fbm4_2(a.xy - T(.1) * .2).x * 1. * cos(a).y * 1.) * .5\n      ))\n  );\n  \n  tot = mix(\n    tot,\n    vec3(.8, .1, .2) * 1.2,\n    min(1., calcSlogan(\n        a + (fbm4_2(a.yx - T(.1) * .2).y * 1.2 * fbm4_2(a.xy - T(.1) * .2).x * .8 * cos(a).y * 1.) * .5\n      ))\n  );\n\n  tot = mix(\n    tot,\n    vec3( .6, .2, .1 ) * .1,\n    min(1., calcSlogan(\n        a + vec2(cos(T(0.25)) * .01, sin(T(0.25)) * .01) + (fbm4_2(a.yx - T(.1) * .2).y * .5 * fbm4_2(a.xy - T(.1) * .7).x * 1. * cos(a).y * 1.2) * .5\n      ))\n  );\n\n  fragColor.rgb = tot;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}