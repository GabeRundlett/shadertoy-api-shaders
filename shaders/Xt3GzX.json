{
    "Shader": {
        "info": {
            "date": "1470416434",
            "description": "#shaderaday #2",
            "flags": 0,
            "hasliked": 0,
            "id": "Xt3GzX",
            "likes": 8,
            "name": "Quotidian",
            "published": 3,
            "tags": [
                "sun",
                "moon",
                "shaderaday"
            ],
            "usePreview": 0,
            "username": "ivansafrin",
            "viewed": 840
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359 \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float reflectVal = 0.0;\n    if(uv. y < 0.35) {\n        reflectVal = 0.35-(0.35-uv.y);\n        uv.y = 0.35 + (0.35-uv.y);\n        uv.x += sin(iTime+(uv.y* 130.0)) * 0.01;\n    }\n    vec2 sunC = vec2((0.5 * iResolution.x/iResolution.y) + cos(iTime)*0.5\n                         , 0.5 + sin(iTime)*0.4);\n    vec2 moonC = vec2((0.5 * iResolution.x/iResolution.y) + cos(iTime+PI)*0.5\n                      , 0.5 + sin(iTime+PI)*0.4);  \n\tfragColor = vec4(0.05, 0.1, sunC.y, 1.0) +\n        (vec4(1.0, 0.2, 0.0, 1.0) * ((distance(uv, sunC) < 0.06)  ? 1.0 : 0.0))+\n        (vec4(1.0, 0.2+ (abs(sin(iTime)) * 0.8), 0.0, 1.0) * (1.0-distance(uv, sunC) * abs(sin(iTime-PI)) * 3.0) * 1.5\n        *(0.5 + sin(iTime)*0.5))+\n        (vec4(0.8, 0.6, 0.8, 1.0) * ((distance(uv, moonC) < 0.04)  ? 1.0 : 0.0))\n        + (vec4(1.0, 0.3, 0.0, 1.0) * reflectVal);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}