{
    "Shader": {
        "info": {
            "date": "1489530452",
            "description": "A funky and colorful effect done by taking some parts from other shaders and tweaking a bit",
            "flags": 0,
            "hasliked": 0,
            "id": "XsXcWS",
            "likes": 5,
            "name": "Funcky Triangle",
            "published": 3,
            "tags": [
                "2d",
                "triangle",
                "colors",
                "aimation"
            ],
            "usePreview": 0,
            "username": "Ahmidou",
            "viewed": 616
        },
        "renderpass": [
            {
                "code": "// note that your triangle was drawn for 2*h\nbool isInTriangle(vec2 U, float h, float a)\n{\n    float s = sin(a), c = cos(a);\n  \tU *= mat2(c,-s,s,c);\n    \n    return     U.y > - h/3.  // distance from center to each sides\n         && .5*U.y - 1.73/2. * U.x < h/3.\n         && .5*U.y + 1.73/2. * U.x < h/3.;\n}\nvec3 hsv2rgb(float h, float s, float v)\n{\n    h = fract(h);\n    vec3 c = smoothstep(2./6., 1./6., abs(h - vec3(0.5, 2./6., 4./6.)));\n    c.r = 1.-c.r;\n\n    return mix(vec3(s), vec3(1.0), c) * v;\n}\n\nvec3 getRandomColor(float f, float t)\n{\n    return hsv2rgb(f+t, 0.2+cos(sin(f))*0.3, 0.9);\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float step = 15.0;\n\tvec2  R = iResolution.xy;\n    float t = iTime;\n    O =  vec4(1.0, 1.0, 1.0, 1.0);\n    for(int i = 0; i < int(step); i++) {\n        float m = 1.0/(step+1.0)*float(i);\n        vec3 color = getRandomColor(float(i) *0.05 + 0.01, t);\n\n        bool test = isInTriangle((U-.5*R)/R.y+(float(i)*0.01), mod(1000.0 - t, 1000.0/R.y) * 3.0 - m*15.0, (3.1415 * t)+(float(i)*5.0));\n        if( test )   \n    \t\tO =  vec4(color, 1);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}