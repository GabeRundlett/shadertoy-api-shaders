{
    "Shader": {
        "info": {
            "date": "1570548582",
            "description": "interpolating or averaging or doing stats on angles (white) or phases is an issue because they warp on [0, 2.Pi].\nBlue: angle average.\nGreen: angle % 2Pi average.\nRed:  complex  (or vector) average: best.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsG3RV",
            "likes": 7,
            "name": "interpolating angles / phases",
            "published": 3,
            "tags": [
                "rotation",
                "angle",
                "interpolation",
                "complexes"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 464
        },
        "renderpass": [
            {
                "code": "#define CS(a)       vec2( cos(a), sin(a) )           // complex operators\n#define Arg(z)      atan( (z).y,(z).x )\n#define expZ(z)   ( length(z) * CS(z) )\n#define logZ(z)     vec2( length(z), Arg(z) )\n#define mulZ(a,b) ( mat2(a, -(a).y,(a).x) * (b) )\n\nvec2 R;\n\n#define S(d,r,pix) smoothstep( .75, -.75, (d)/(pix)-(r))   // antialiased draw. r >= 1.\n#define F(p,f)     S( abs(f-3.*(p).y-2.), 1., fwidth(f-3.*(p).y) ) // draw curve\n\n// segment with disc ends: seamless distance to segment\nfloat line(vec2 p, vec2 a,vec2 b, float pix, float d) {  // draw line\n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);      // proj coord on line\n    if ( d >= 0. && mod(h*10.-d, 3.) < 2.) return 0.;    // dashs\n    d = length(p - b * h);                               // dist to segment \n    return S( d ,1., 2.*pix/R.y );                       // draw line\n}\n\n#define blend0(a0,a1) ( a0 + a1 ) / 2.\n#define blend1(a0,a1) ( mod(a0,TAU) + mod(a1,TAU) ) / 2.\n#define blend2(a0,a1)   Arg( CS(a0) + CS(a1) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n          R = iResolution.xy;      \n    vec2  U = ( 2.*u - R ) / R.y,\n         C0 = vec2(0);\n\n    float r = .8,\n         TAU = 6.2831853,\n          w0 = -1., w1 = 2.713,\n          a0 = w0* iTime, a1 = w1* iTime,\n          x0 = 2.*w0*U.x, x1 = 2.*w1*U.x;\n    \n#define draw(a,e,d) line(U, C0, r* CS(a), e, d)\n    O.b  = draw( blend0(a0,a1), 1., 0. );//  +  F( U, sin( blend0(x0,x1)) );\n    O.g  = draw( blend1(a0,a1), 1., 1. );//  +  F( U, sin( blend1(x0,x1)) );\n    O.r  = draw( blend2(a0,a1), 1., 2. );//  +  F( U, sin( blend2(x0,x1)) );\n    O   += draw(        a0    , 2.,-1. );//  +  F( U, sin( x0 ) );\n    O   += draw(           a1 , 2.,-1. );//  +  F( U, sin( x1 ) )*.5;\n    O   += draw(       0.     , 1.,-1. ) * .3;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}