{
    "Shader": {
        "info": {
            "date": "1700285727",
            "description": "https://www.shadertoy.com/view/4llSDn\n with a small fix to get it to compile again",
            "flags": 0,
            "hasliked": 0,
            "id": "DtKyDw",
            "likes": 3,
            "name": "Basic 2D Perlin Noise (Fixed)",
            "published": 3,
            "tags": [
                "perlinnoise"
            ],
            "usePreview": 0,
            "username": "pokeystick",
            "viewed": 171
        },
        "renderpass": [
            {
                "code": "// HASH AND NOISE FUNCTIONS TAKEN FROM IQ ----------------\nfloat hash( vec2 p )\n{\n\tfloat h = dot(p,vec2(48.7,342.7)+sin(iTime));\n\t\n    return -1.0 + 2.0*fract(sin(h)*54611.5655123);\n}\n\nfloat Noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// ------------------------------------------------------\n\nfloat Smooth(in vec2 p){\n    float corners = (Noise(vec2(p.x-1.0,p.y-1.0))+Noise(vec2(p.x+1.0,p.y-1.0))+Noise(vec2(p.x-1.0,p.y+1.0))+Noise(vec2(p.x+1.0,p.y+1.0)))/16.0;\n    float sides = (Noise(vec2(p.x+1.0,p.y))+Noise(vec2(p.x-1.0,p.y))+Noise(vec2(p.x,p.y+1.0))+Noise(vec2(p.x,p.y-1.0)))/8.0;\n    float center = Noise(vec2(p.x,p.y))/4.0;\n    return corners + sides + center;                                                           \n}\n\nfloat interpolate(float a, float b, float x){\n    float ft = x*3.141592;\n    float f = (1.0-cos(ft))*0.5;\n    return a*(1.0-f) + b*f;\n}\n\nfloat smoothinterp(vec2 p){\n    float inx = floor(p.x);\n    float frx = p.x - inx;\n    float iny = floor(p.y);\n    float fry = p.y - iny;\n    float v1 = Smooth(vec2(inx,iny));\n    float v2 = Smooth(vec2(inx+1.0,iny));\n    float v3 = Smooth(vec2(inx,iny+1.0));\n    float v4 = Smooth(vec2(inx+1.0,iny+1.0));\n    float i1 = interpolate(v1,v2,frx);\n    float i2 = interpolate(v3,v4,frx);\n    return interpolate(i1,i2,fry);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat uv = smoothinterp(fragCoord);\n\tfragColor = vec4(uv,uv,uv,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}