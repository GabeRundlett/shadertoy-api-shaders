{
    "Shader": {
        "info": {
            "date": "1717959270",
            "description": "/*originals \ncopy-paste from many sources I’m just learning myself,pls dont delete my account='(\n\nLet each employee's time be valued. Those who use violent methods to obtain benefits from people will be condemned by a human rights court, God himself will ",
            "flags": 0,
            "hasliked": 0,
            "id": "4XGGR3",
            "likes": 1,
            "name": "fractalic space",
            "published": 3,
            "tags": [
                "rotate",
                "hyperbolic",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "/*originals \ncopy-paste from many sources I’m just learning myself,pls dont delete my account='(\n\nLet each employee's time be valued. Those who use violent methods to obtain benefits from people will be condemned by a human rights court, God himself will reward you for your labors! thx\n\nMIT LICENSE\n*/\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n\n\n\n//vec2 surpos = surfaceSize.xy;\n#define time iTime\n#define resolution iResolution.xy\nconst int MAX_ITER = 20; // Try 30 for extra flames\n\nvec2 rotate(in vec2 v, in float a) {\n\t\n\treturn vec2(cos(a)*v.x + sin(a)*v.y, -sin(a)*v.x + cos(a)*v.y);\n}\n\nfloat torus(in vec3 p, in vec2 t)\n{\n\tvec2 q = abs(vec2(max(abs(p.x), abs(p.z))-t.x, p.y));\n\treturn max(q.x, q.y)-t.y;\n}\n\n// These are all equally interesting, but I could only pick one :(\nfloat trap(in vec3 p)\n{\n\t\n\t#define var2 length(max(abs(p) - 0.35, 0.0))\n\t#define var3 abs(length(p.xz)-0.2)-0.01\n\t#define var1 sin(abs(min(torus(vec3(p.x, mod(p.y, sin(time*0.4))-0.2, p.z), vec2(0.1, 0.05)), max(abs(p.z)-0.05, abs(p.x)-0.05)))-0.005)\n\t#define var5 abs(min(torus(p, vec2(0.3, 0.05)), max(abs(p.z)-0.05, abs(p.x)-0.05)))-0.005\n\t#define var4 min(length(p.xz), min(length(p.yz), length(p.xy))) - 0.05\n\treturn mix(mix(var2+var5, var5, sin(time*0.8)), mix(var1+var2, var3+var4, sin(time*0.7)), sin(0.987*time));\n\n}\n\nfloat map(in vec3 p)\n{\n\tfloat cutout = dot(abs(p.yz),vec2(0.5))-0.035;\n\tfloat road = max(abs(p.y-0.025), abs(p.z)-0.035);\n\t\n\tvec3 z = abs(3.0-mod(p, 6.0));\n\n\n\tfloat d = 9.0;\n\tfloat s = 1.0;\n\tfor (float i = 0.0; i < 5.0; i++) {\n\t\t\n\t\tz = abs(1.0-mod(z+i/3.0,2.0));\n\t\t\n\t\tz = z*2.0 - 0.3;\n\t\ts *= .42;\n\t\td = min(d, trap(z) * s);\n\t}\n\treturn min(max(d, -cutout), 23.);\n}\n\nvec3 hsv(in float h, in float s, in float v) {\n\nfloat tit = sin(0.8512*time);\nfloat titi = sin(0.28428*time);\n\treturn mix(vec3(.666), clamp(sin(6.66*atan(tit*time/time)*abs(fract(h + vec3(3, 2, 1) / 2.0) * 4.0 - 2.0) - .50), 0.0 , 1.0), /*sin(time+s)-cos(0.6*time)*/2.0) * v;\n}\n\nvec3 intersect(in vec3 rayOrigin, in vec3 rayDir)\n{\n\tfloat total_dist = 0.0;\n\tvec3 p = rayOrigin;\n   \n\tfloat d = 0.618;\n\tfloat iter = 0.0;\n\tfloat mind = 3.14159;//+sin((time*0.061)*23.2)*2.3; // Move road from side to side slowly\n\t\n\tfor (int i = 0; i < MAX_ITER; i++)\n\t{\t\t\n\t\tif (d < 0.001) continue;\n\t\t\n\t\td = map(p);\n        \n\t\t// This rotation causes the occasional distortion - like you would see from heat waves\n\t\tp += d*rayDir;\n        \n\t\tmind = min(mind, d);\n\t\ttotal_dist += d;\n\t\titer++;\n\t}\n\nfloat tit = sin(0.8512*time);\nfloat titi = sin(0.28428*time);\n\tvec3 color = vec3(0.0);\n\tif (d < 0.001) {\n\t\tfloat x = (iter/float(MAX_ITER));\n\t\tfloat y = (d-0.01)/0.01/(float(MAX_ITER));\n\t\tfloat z = (0.01-d)/0.01/float(MAX_ITER);\n\t\tif (max(abs(p.y-0.025), abs(p.z)-0.035)<0.002) { // Road\n\t\t\tfloat w = smoothstep(mod(p.x*69.0, 4.0), 2.0, 2.01);\n\t\t\n\t\t\t\n\t\t\tfloat a = fract(smoothstep(abs(mod(p.z, time*0.666 )), 0.000665, 0.00666));\n\t\t\tcolor = vec3((1.0-x-y*2.)*mix(vec3(0.3, 0.8, 0), vec3(0.1), 1.0-(1.0-w)*(1.0-a)));\n\t\t} else {\n\t\t\tfloat q = 0.5;\n\t\t\tcolor = vec3(0.5, 0.5, 5.5);\n\t\t}\n\t} else\n\t\tcolor = hsv(d, 0.673*tit, 0.4238*titi)*mind*45.0; // Background\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 upDirection = vec3(0, -1, 0);\n\tvec3 cameraDir = vec3(1,0.,0);\n\tvec3 cameraOrigin = vec3(1., 0, 0);\n\t cameraDir.xz=rotate(cameraDir.xz,iTime*0.55);\n       cameraDir.yz=rotate(cameraDir.xz,iTime*0.55);\n       \n\tvec3 u = normalize(cross(upDirection, cameraOrigin));\n     u.xz=rotate(u.xz,iTime*0.55);\n       u.yz=rotate(u.xz,iTime*0.55);\n\tvec3 v = normalize(cross(cameraDir, u));\n\tvec2 screenPos = -6.0 + 12.0 * gl_FragCoord.xy / resolution.xy;\n\n\tvec3 rayDir = normalize(u * screenPos.x + v * screenPos.y + cameraDir*(1.0-length(screenPos)*0.5));\n\n       \n\tfragColor = vec4(intersect(cameraOrigin, rayDir), 1.0);\n} \n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}