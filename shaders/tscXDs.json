{
    "Shader": {
        "info": {
            "date": "1679904988",
            "description": "Simple caustics",
            "flags": 0,
            "hasliked": 0,
            "id": "tscXDs",
            "likes": 3,
            "name": "Pseudo Caustics",
            "published": 3,
            "tags": [
                "caustics"
            ],
            "usePreview": 0,
            "username": "ikm",
            "viewed": 177
        },
        "renderpass": [
            {
                "code": "\nfloat calc(vec2 uv, mat2 m, vec2 off)\n{\n    uv *= 8.0;\n    uv += off;\n    \n    uv *= m;\n\n    vec2 a = round(uv);\n    return smoothstep(0.2, 0.9, length(uv - a));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    \n    mat2 mIdent = mat2(1, 0, 0, 1);\n    mat2 mRot1 = mat2(0.85, 0.52,  -0.52, 0.85);\n    mat2 mRot2 = mat2(0.45, 0.88,  -0.88, 0.45);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float col1 = calc(uv, mIdent, 0.3 * vec2(iTime * -3.0, iTime * 4.0));\n    float col2 = calc(uv, mRot1, 0.3 * vec2(iTime * 2.0, iTime * -3.0));\n    float col3 = calc(uv, mRot2, 0.3 * vec2(iTime * -1.0, iTime * 2.0));\n    \n    float col = min(min(col1, col2), col3);\n    \n    // Output to screen\n    fragColor.rgb = vec3(0.2, 0.7, 0.7) + vec3(col) * 0.5;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}