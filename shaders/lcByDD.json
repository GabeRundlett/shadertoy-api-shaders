{
    "Shader": {
        "info": {
            "date": "1722329625",
            "description": "source  https://www.shadertoy.com/view/DtGyWh https://glslsandbox.com/e#98620.3",
            "flags": 0,
            "hasliked": 0,
            "id": "lcByDD",
            "likes": 0,
            "name": "color rotator3",
            "published": 3,
            "tags": [
                "color",
                "rotate",
                "neon"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 65
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(1.,23,21))*1.5+.5)\n#define zoOM         1./2.\n#define spEED        2./1.\n#define Arms         3\n#define colorOffset  tau/4.\n\n/// stuff\n#define tau 6.28318530718\n#define res iResolution.xy\n#define inv( x ) ( 1. / ( x ) )\n#define rot( a ) mat2( cos( a ), -sin( a), sin( a), cos( a ) )\nprecision highp float;\n\n#define time iTime\nuniform vec2 mouse;\n\nfloat z = inv( zoOM );\nvec2 p = vec2( 0. );\nvec3 c = vec3( 0. );\nfloat circle( vec2 p, float r ) { return step( length( p ), r ); }\n//vec3 hsv2rgb( float h, float s, float v ) { vec4 k = vec4( 1., 2./3., 1./3., 3. ); vec3 p = abs( fract( vec3( h ) + k.xyz )*6. - k.www ); return v*mix( vec3( 1. ), clamp( p - vec3( 1. ), 0., 1. ), s ); }\nvec3 hueShift( float h ) { vec4 k = vec4( 1., 2./3., 1./3., 3. ); vec3 p = abs( fract( vec3( h ) + k.xyz )*6. - k.www ); return mix( vec3( 1. ), clamp( p - vec3( 1. ), 0., 1. ), 1. ); }\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n    \n    p = z*( gl_FragCoord.xy - res/2. )/min( res.x, res.y );\n    vec2 cPos = -1.0 + 2.0 * C.xy / iResolution.xy;\n    \n    // distance of current pixel from center\n\tfloat cLength = length(cPos);\n\n\tp = (cPos/cLength)*cos(cLength*12.0+iTime*4.0) * 0.03;\n\t\n\tfloat lp = length( p*7. );\n\tp *= rot( lp + time );\n\tfloat theta = atan( p.y, p.x );\n        c += step(           sin( theta*float( Arms ) + ( colorOffset ) ), 0. );\n\tc *= circle( p, 1. );\n        c *= hueShift( sin( theta*float( Arms ) ) + 0.59 )*vec3( 1. );\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p=g*d*c;\n       \n        a=10.;\n        p=mod(p-a,a*2.)-a;\n        s=6.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            p.y<p.x?p=p.zyx:p;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n       //  g+=e=length(p.yz)/s;\n         g+=e=length(p.yx)/s;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}