{
    "Shader": {
        "info": {
            "date": "1670800054",
            "description": "squircle\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ddBXWy",
            "likes": 3,
            "name": "squircle ?",
            "published": 3,
            "tags": [
                "squircle"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "float f_n_inoutexp(float n, float n_sharpness){\n    n_sharpness = floor(n_sharpness) + mod(floor(n_sharpness),2.); // must be dividable by 2.\n    n = max(0.,min(1., n));\n    return min(pow(n, n_sharpness),pow( n-1., n_sharpness))*pow(2., n_sharpness);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 o_trpino = (fragCoord.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono = (iMouse.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono_nooffset = (iMouse.xy )/ iResolution.y;\n    //float n = floor((sin(iTime)*0.5+0.5)*5.+3.);\n    //float n = 2. + floor(fract(iTime*.5)*3.);\n    float n = (sin(iTime)*0.5+0.5)*6.;\n    //float n_dist = length(pow(o_trpino,vec2(n))*pow(n, n));\n    float n_dist = pow((pow(abs(o_trpino.x), n))+(pow(abs(o_trpino.y), n)), 1./n);\n    //n_dist *= 10.-(floor(abs(o_trpino.x)*10.));\n    n_dist *=2.;\n    //n_dist = length(o_trpino);\n    n_dist = f_n_inoutexp(n_dist, 2.);\n    fragColor = vec4(n_dist);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}