{
    "Shader": {
        "info": {
            "date": "1712967915",
            "description": "far away pixels",
            "flags": 0,
            "hasliked": 0,
            "id": "lcyGzK",
            "likes": 38,
            "name": "Cosmos Diving",
            "published": 3,
            "tags": [
                "short"
            ],
            "usePreview": 0,
            "username": "leon",
            "viewed": 409
        },
        "renderpass": [
            {
                "code": "\n// alternative of Hell Diving\n// https://shadertoy.com/view/lcGGzK\n\n\nfloat smin( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat gyroid (vec3 p) { return dot(cos(p),sin(p.yzx)); }\n\nfloat fbm(vec3 p)\n{\n    float result = 100.;\n    float a = .5;\n    for (float i = 0.; i < 34.; ++i)\n    {\n        p.z += (result)*.6;\n        p.z += iTime*.1;\n        result = smin(result, abs(gyroid(p/a)*a), 1.5*a);\n        a /= 1.6;\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 ray = normalize(vec3(uv,.1));\n    vec3 color = 0.5 + 1. * cos(vec3(0,2,4)*6. + 3.5 + fbm(ray) * 20.);\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}