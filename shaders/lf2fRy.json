{
    "Shader": {
        "info": {
            "date": "1725142104",
            "description": "Fun little spiral shader. ",
            "flags": 0,
            "hasliked": 0,
            "id": "lf2fRy",
            "likes": 2,
            "name": "Zebra spiral",
            "published": 3,
            "tags": [
                "spiral"
            ],
            "usePreview": 0,
            "username": "triggthediscovery",
            "viewed": 59
        },
        "renderpass": [
            {
                "code": "// Short spiral shader.\n//\n// Provided under CC0.\n\n// Controls density of the spirals.\nconst float density = 20.0;\n\n// Controls how harsh the spiral angle is,\n// higher numbers spiral less tightly.\nconst int spiral_winding = 1;\n\n// Size of arm at the center of the spiral.\nconst float arm_size = 0.25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord-(iResolution.xy/2.0);\n\n    uv /= iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    float ang = atan(uv.y/uv.x);\n    if (uv.x<0.0) ang += 3.1416;\n    \n    ang *= float(spiral_winding);\n    ang = mod(ang+iTime*6.0, 6.28);\n\n    float dist_m = log(length(uv))*density;\n    while (dist_m-ang < -3.1416) dist_m += 6.28;\n    while (dist_m-ang > 3.1416) dist_m -= 6.28;\n    \n    if (abs(dist_m-ang) > arm_size && abs(dist_m-ang) < (6.28-arm_size)) {\n        col = vec3(((dist_m-ang)/6.0)+0.4);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}