{
    "Shader": {
        "info": {
            "date": "1683391715",
            "description": "CC0: Rotating box\n Saw a tweet by @XorDev where he showed the neat trick of time-sin(time)\n Tried it, tinkered with it and published it\n https://twitter.com/XorDev/status/1654553771001749504\n",
            "flags": 0,
            "hasliked": 0,
            "id": "cly3RR",
            "likes": 25,
            "name": "Rotating box",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 509
        },
        "renderpass": [
            {
                "code": "// CC0: Rotating box\n//  Saw a tweet by @XorDev where he showed the neat trick of time-sin(time)\n//  Tried it, tinkered with it and published it\n//  https://twitter.com/XorDev/status/1654553771001749504\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat box(vec2 p, vec2 b) {\n  vec2 d = abs(p)-b;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  const float per = 4.0;\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  float aa = 4.0/RESOLUTION.y;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec2 p0 = p;\n  float a0 = TAU*TIME/per;\n  p0 *= ROT(a0-sin(a0));\n  vec3 col = vec3(1.0);\n  float d0 = box(p0, vec2(0.25));\n  float a1 = a0 - TAU*d0/20.0;\n  vec2 p1 = p;\n  p1 *= ROT(a1-sin(a1));\n  float d1 = box(p1, vec2(0.5));\n  col = mix(col, vec3(0.0), smoothstep(0.0, -aa, d0));\n  float m = TAU*10.0;\n  col = mix(col, vec3(0.0), smoothstep(0.0, -aa*m, sin(m*d1-TAU*TIME/per)));\n  col = sqrt(col);\n  \n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}