{
    "Shader": {
        "info": {
            "date": "1558750529",
            "description": "testing a not-quite correct voronoi distance function that makes nice looking rocky surface.",
            "flags": 0,
            "hasliked": 0,
            "id": "3t23z1",
            "likes": 6,
            "name": "very noi",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "ShnitzelKiller",
            "viewed": 495
        },
        "renderpass": [
            {
                "code": "\nvec2 hash(vec2 uv) {\n    mat2 m = mat2(2114.2,1241.6,-9818.559,-33.8);\n    return fract(m*sin(m*uv));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv  = fragCoord/iResolution.y*10.;\n    vec2 fuv = fract(uv);\n    vec2 iuv = floor(uv);\n        \n    vec2 mp1,mp2;\n    vec2 d = vec2(900.);\n    for (int i=-1;i<=1;i++) {\n        for (int j=-1;j<=1;j++) {\n            vec2 disp = vec2(i,j);\n            vec2 center = disp+hash(iuv+disp)*(cos(iTime)*.5+.5);\n            vec2 r = fuv - center;\n            float lr = length(r);\n            if (lr < d.x) {\n                d.y = d.x;\n                mp2 = mp1;\n                d.x = lr;\n                mp1 = center;\n            } else if (lr < d.y) {\n                d.y = lr;\n                mp2 = center;\n            }\n        }\n    }\n    \n    vec2 edge = (mp2-mp1);\n    vec2 p = fuv - 0.5*(mp1+mp2);\n    vec2 orth = dot(p,edge)/dot(edge,edge)*edge;\n    \n    fragColor =vec4(vec3(length(orth)),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}