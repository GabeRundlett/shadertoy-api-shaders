{
    "Shader": {
        "info": {
            "date": "1573736624",
            "description": "This is a good shader",
            "flags": 0,
            "hasliked": 0,
            "id": "WsyXDR",
            "likes": 2,
            "name": "Why did I do this with shaders?",
            "published": 3,
            "tags": [
                "test",
                "shader",
                "good"
            ],
            "usePreview": 0,
            "username": "cdilga",
            "viewed": 366
        },
        "renderpass": [
            {
                "code": "float map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 map(vec2 value, vec2 min1, vec2 max1, vec2 min2, vec2 max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 clamp2(vec2 value, float minv, float maxv) {\n  return vec2(clamp(value.x, minv, maxv), clamp(value.y, minv, maxv));   \n}\n\nvec2 mapclamp(vec2 value, vec2 min1, vec2 max1, float min2, float max2) {\n  return clamp2(map(value, min1, max1, vec2(min2), vec2(max2)), min2, max2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    vec2 mouseuv = iMouse.xy/iResolution.xy;\n\tvec3 col = vec3(uv.x, uv.y, mouseuv.x);\n    float aa = 1.0;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\t\n    //col *= float(fragCoord.x > 50.0 || fragCoord.x < 49.0);\n    \n    //col *= float((length(d) > 0.2)) * length(d);\n    \n    // Circle\n    vec2 d = uv.xy - 0.5;\n    d.x *= aspect;\n    aa *= smoothstep(0.0, 1.0, clamp(0.0, 1.0, map(length(d), 0.2, 0.3, 0.0, 1.0)));\n    \n    //Square\n    d = uv.xy - vec2(0.8, 0.8);\n    d.x *= aspect;\n    aa *= smoothstep(0.0, 1.0, clamp(0.0, 1.0, map(abs(d.x) + abs(d.y), 0.2, 0.3, 0.0, 1.0)));\n    \n    \n    \n    vec2 bottomLeft = mapclamp(uv.xy, vec2(0.15, 0.15), vec2(0.1, 0.1), 0.0, 1.0);\n    //col *= clamp(0.0, 1.1, length(bottomLeft));\n    \n    \n    vec2 topRight = mapclamp(uv.xy, mouseuv, mouseuv + vec2(0.05), 0.0, 1.0);\n    vec2 c1 = vec2(1.0);//clamp2(0.0, 1.0, topRight);\n    vec2 rect = max(topRight, bottomLeft);\n    //c1 = bottomLeft;\n    aa *= smoothstep(0.0, 1.0, length(rect));\n    //c1 *= max(rect.x, rect.y);\n    //c1 *= clamp2(0.0, 1.0, bottomLeft), 0.0);\n    \n    col *= aa;\n    col += texture(iChannel0, uv).xyz * (1.0 - aa);\n    \n    //col = vec3(clamp2(0.0 ,1.0, bottomLeft), 0.0);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}