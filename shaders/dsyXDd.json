{
    "Shader": {
        "info": {
            "date": "1681792026",
            "description": "converted from SVG with https://gist.github.com/Ninja-Koala/74fa7652fb4de248949ce1e27b989c14",
            "flags": 0,
            "hasliked": 0,
            "id": "dsyXDd",
            "likes": 3,
            "name": "touchid-icon",
            "published": 3,
            "tags": [
                "icon"
            ],
            "usePreview": 0,
            "username": "dreness",
            "viewed": 181
        },
        "renderpass": [
            {
                "code": "#define ZERO min(0,iFrame)\n\nfloat border;\n\n// Modified from http://tog.acm.org/resources/GraphicsGems/gems/Roots3And4.c\n// Credits to Doublefresh for hinting there\nint solve_quadric(vec2 coeffs, inout vec2 roots){\n\n\t// normal form: x^2 + px + q = 0\n\tfloat p = coeffs[1] / 2.;\n\tfloat q = coeffs[0];\n\n\tfloat D = p * p - q;\n\n\tif (D < 0.){\n\t\treturn 0;\n\t}\n\telse{\n\t\troots[0] = -sqrt(D) - p;\n\t\troots[1] = sqrt(D) - p;\n\n\t\treturn 2;\n\t}\n}\n\n//From Trisomie21\n//But instead of his cancellation fix i'm using a newton iteration\nint solve_cubic(vec3 coeffs, inout vec3 r){\n\n\tfloat a = coeffs[2];\n\tfloat b = coeffs[1];\n\tfloat c = coeffs[0];\n\n\tfloat p = b - a*a / 3.0;\n\tfloat q = a * (2.0*a*a - 9.0*b) / 27.0 + c;\n\tfloat p3 = p*p*p;\n\tfloat d = q*q + 4.0*p3 / 27.0;\n\tfloat offset = -a / 3.0;\n\tif(d >= 0.0) { // Single solution\n\t\tfloat z = sqrt(d);\n\t\tfloat u = (-q + z) / 2.0;\n\t\tfloat v = (-q - z) / 2.0;\n\t\tu = sign(u)*pow(abs(u),1.0/3.0);\n\t\tv = sign(v)*pow(abs(v),1.0/3.0);\n\t\tr[0] = offset + u + v;\t\n\n\t\t//Single newton iteration to account for cancellation\n\t\tfloat f = ((r[0] + a) * r[0] + b) * r[0] + c;\n\t\tfloat f1 = (3. * r[0] + 2. * a) * r[0] + b;\n\n\t\tr[0] -= f / f1;\n\n\t\treturn 1;\n\t}\n\tfloat u = sqrt(-p / 3.0);\n\tfloat v = acos(-sqrt( -27.0 / p3) * q / 2.0) / 3.0;\n\tfloat m = cos(v), n = sin(v)*1.732050808;\n\n\t//Single newton iteration to account for cancellation\n\t//(once for every root)\n\tr[0] = offset + u * (m + m);\n\tr[1] = offset - u * (n + m);\n\tr[2] = offset + u * (n - m);\n\n\tvec3 f = ((r + a) * r + b) * r + c;\n\tvec3 f1 = (3. * r + 2. * a) * r + b;\n\n\tr -= f / f1;\n\t\n\treturn 3;\n}\n\nfloat quadratic_bezier_normal_iteration(float t, vec2 a0, vec2 a1, vec2 a2){\n\t//horner's method\n\tvec2 a_1=a1+t*a2;\n\n\tvec2 uv_to_p=a0+t*a_1;\n\tvec2 tang=a_1+t*a2;\n\n\tfloat l_tang=dot(tang,tang);\n\treturn t-dot(tang,uv_to_p)/l_tang;\n}\n\nfloat quadratic_bezier_dis_approx_sq(vec2 uv, vec2 p0, vec2 p1, vec2 p2){\n\tvec2 a2 = p0 - 2. * p1 + p2;\n\tvec2 a1 = -2. * p0 + 2. * p1;\n\tvec2 a0 = p0 - uv;\n\n\tfloat d0 = 1e38;\n\n\tfloat t;\n\tvec3 params=vec3(0,.5,1);\n\t\n\tif(all(lessThan(uv,max(max(p0,p1),p2)+border)) && all(greaterThan(uv,min(min(p0,p1),p2)-border))){\n\t\tfor(int i=ZERO;i<3;i++){\n\t\t\tt=params[i];\n\t\t\tfor(int j=ZERO;j<3;j++){\n\t\t\t\tt=quadratic_bezier_normal_iteration(t,a0,a1,a2);\n\t\t\t}\n\t\t\tt=clamp(t,0.,1.);\n\t\t\tvec2 uv_to_p=(a2*t+a1)*t+a0;\n\t\t\td0=min(d0,dot(uv_to_p,uv_to_p));\n\t\t}\n\t}\n\n\treturn d0;\n}\n\nfloat cubic_bezier_normal_iteration(float t, vec2 a0, vec2 a1, vec2 a2, vec2 a3){\n\t//horner's method\n\tvec2 a_2=a2+t*a3;\n\tvec2 a_1=a1+t*a_2;\n\tvec2 b_2=a_2+t*a3;\n\n\tvec2 uv_to_p=a0+t*a_1;\n\tvec2 tang=a_1+t*b_2;\n\n\tfloat l_tang=dot(tang,tang);\n\treturn t-dot(tang,uv_to_p)/l_tang;\n}\n\nfloat cubic_bezier_dis_approx_sq(vec2 uv, vec2 p0, vec2 p1, vec2 p2, vec2 p3){\n\tvec2 a3 = (-p0 + 3. * p1 - 3. * p2 + p3);\n\tvec2 a2 = (3. * p0 - 6. * p1 + 3. * p2);\n\tvec2 a1 = (-3. * p0 + 3. * p1);\n\tvec2 a0 = p0 - uv;\n\n\tfloat d0 = 1e38;\n\n\tfloat t;\n\tvec3 params=vec3(0,.5,1);\n\n\tif(all(lessThan(uv,max(max(p0,p1),max(p2,p3))+border)) && all(greaterThan(uv,min(min(p0,p1),min(p2,p3))-border))){\n\t\tfor(int i=ZERO;i<3;i++){\n\t\t\tt=params[i];\n\t\t\tfor(int j=ZERO;j<3;j++){\n\t\t\t\tt=cubic_bezier_normal_iteration(t,a0,a1,a2,a3);\n\t\t\t}\n\t\t\tt=clamp(t,0.,1.);\n\t\t\tvec2 uv_to_p=((a3*t+a2)*t+a1)*t+a0;\n\t\t\td0=min(d0,dot(uv_to_p,uv_to_p));\n\t\t}\n\t}\n\n\treturn d0;\n}\n\n//segment_dis_sq by iq\nfloat length2( vec2 v ) { return dot(v,v); }\n\nfloat segment_dis_sq( vec2 p, vec2 a, vec2 b ){\n\tvec2 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length2( pa - ba*h );\n}\n\nint segment_int_test(vec2 uv, vec2 p0, vec2 p1){\n\tp0-=uv;\n\tp1-=uv;\n\n\tint ret;\n\t\n\tif(p0.y*p1.y<0.){\n\t\tvec2 nor=p0-p1;\n\t\tnor=vec2(nor.y,-nor.x);\n\t\t\n\t\tfloat sgn;\n\t\t\n\t\tif(p0.y>p1.y){\n\t\t\tsgn=1.;\n\t\t}\n\t\telse{\n\t\t\tsgn=-1.;\n\t\t}\n\n\t\tif(dot(nor,p0)*sgn<0.){\n\t\t\tret=0;\n\t\t}\n\t\telse{\n\t\t\tret=1;\n\t\t}\n\t}\n\telse{\n\t\tret=0;\n\t}\n\n\treturn ret;\n}\n\nint quadratic_bezier_int_test(vec2 uv, vec2 p0, vec2 p1, vec2 p2){\n\n\tfloat qu = (p0.y - 2. * p1.y + p2.y);\n\tfloat li = (-2. * p0.y + 2. * p1.y);\n\tfloat co = p0.y - uv.y;\n\n\tvec2 roots = vec2(1e38);\n\tint n_roots = solve_quadric(vec2(co/qu,li/qu),roots);\n\n\tint n_ints = 0;\n\n\tfor(int i=ZERO;i<n_roots;i++){\n\t\tif(roots[i] >= 0. && roots[i] <= 1.){\n\t\t\tfloat x_pos = p0.x - 2. * p1.x + p2.x;\n\t\t\tx_pos = x_pos * roots[i] + -2. * p0.x + 2. * p1.x;\n\t\t\tx_pos = x_pos * roots[i] + p0.x;\n\n\t\t\tif(x_pos > uv.x){\n\t\t\t\tn_ints++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn n_ints;\n}\n\nint cubic_bezier_int_test(vec2 uv, vec2 p0, vec2 p1, vec2 p2, vec2 p3){\n\n\tfloat cu = (-p0.y + 3. * p1.y - 3. * p2.y + p3.y);\n\tfloat qu = (3. * p0.y - 6. * p1.y + 3. * p2.y);\n\tfloat li = (-3. * p0.y + 3. * p1.y);\n\tfloat co = p0.y - uv.y;\n\n\tvec3 roots = vec3(1e38);\n\tint n_roots;\n\t\n\tint n_ints=0;\n\n\tif(uv.x<min(min(p0.x,p1.x),min(p2.x,p3.x))){\n\t\tif(uv.y>=min(p0.y,p3.y) && uv.y<=max(p0.y,p3.y)){\n\t\t\tn_ints=1;\n\t\t}\n\t}\n    \telse{\n\t\tif(abs(cu) < .0001){\n\t\t\tn_roots = solve_quadric(vec2(co/qu,li/qu),roots.xy);\n\t\t}\n\t\telse{\n\t\t\tn_roots = solve_cubic(vec3(co/cu,li/cu,qu/cu),roots);\n\t\t}\n\n\t\tfor(int i=ZERO;i<n_roots;i++){\n\t\t\tif(roots[i] >= 0. && roots[i] <= 1.){\n\t\t\t\tfloat x_pos = -p0.x + 3. * p1.x - 3. * p2.x + p3.x;\n\t\t\t\tx_pos = x_pos * roots[i] + 3. * p0.x - 6. * p1.x + 3. * p2.x;\n\t\t\t\tx_pos = x_pos * roots[i] + -3. * p0.x + 3. * p1.x;\n\t\t\t\tx_pos = x_pos * roots[i] + p0.x;\n\n\t\t\t\tif(x_pos > uv.x){\n\t\t\t\t\tn_ints++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn n_ints;\n}\n\nfloat path0_dis_sq(vec2 uv){\n\tfloat dis_sq=1e38;\n\n\tint num_its=0;\n\n\tvec2[60] p=vec2[](vec2(-0.187406,-0.0602592),\n\t                  vec2(-0.18401,-0.0592106),\n\t                  vec2(-0.18213,-0.0563202),\n\t                  vec2(-0.183684,-0.0511147),\n\t                  vec2(-0.18854,-0.0333147),\n\t                  vec2(-0.190474,-0.0058193),\n\t                  vec2(-0.190342,0.0182969),\n\t                  vec2(-0.190288,0.0221276),\n\t                  vec2(-0.192634,0.0247534),\n\t                  vec2(-0.196504,0.0248624),\n\t                  vec2(-0.200583,0.0248855),\n\t                  vec2(-0.202983,0.0220421),\n\t                  vec2(-0.203147,0.0185379),\n\t                  vec2(-0.203496,-0.00438964),\n\t                  vec2(-0.201329,-0.0338275),\n\t                  vec2(-0.195851,-0.054813),\n\t                  vec2(-0.194748,-0.0593192),\n\t                  vec2(-0.191049,-0.0612226),\n\t                  vec2(-0.193155,0.0504699),\n\t                  vec2(-0.190039,0.0490327),\n\t                  vec2(-0.18565,0.0504389),\n\t                  vec2(-0.184329,0.0544637),\n\t                  vec2(-0.154316,0.144526),\n\t                  vec2(-0.0784164,0.187196),\n\t                  vec2(-0.00261069,0.187196),\n\t                  vec2(0.0365778,0.187196),\n\t                  vec2(0.0646098,0.176847),\n\t                  vec2(0.0849267,0.163359),\n\t                  vec2(0.0884543,0.161153),\n\t                  vec2(0.0927588,0.162551),\n\t                  vec2(0.0942736,0.166024),\n\t                  vec2(0.0957033,0.169746),\n\t                  vec2(0.0936057,0.172621),\n\t                  vec2(0.0904278,0.17461),\n\t                  vec2(0.0678964,0.189566),\n\t                  vec2(0.038124,0.2),\n\t                  vec2(-0.00261069,0.2),\n\t                  vec2(-0.0836923,0.2),\n\t                  vec2(-0.163888,0.154868),\n\t                  vec2(-0.19641,0.060392),\n\t                  vec2(-0.198003,0.0558544),\n\t                  vec2(-0.19641,0.0521327),\n\t                  vec2(0.196869,-0.0127652),\n\t                  vec2(0.200568,-0.0127652),\n\t                  vec2(0.203496,-0.00967311),\n\t                  vec2(0.203194,-0.0055317),\n\t                  vec2(0.196412,0.0635927),\n\t                  vec2(0.167586,0.118126),\n\t                  vec2(0.126074,0.152607),\n\t                  vec2(0.123098,0.155279),\n\t                  vec2(0.118957,0.155544),\n\t                  vec2(0.116634,0.153197),\n\t                  vec2(0.114202,0.150656),\n\t                  vec2(0.113814,0.146484),\n\t                  vec2(0.117123,0.143757),\n\t                  vec2(0.158044,0.107878),\n\t                  vec2(0.184142,0.060112),\n\t                  vec2(0.190466,-0.00578032),\n\t                  vec2(0.190824,-0.00981274),\n\t                  vec2(0.19317,-0.0127652));\n\n\tivec4[20] c_bez=ivec4[](ivec4(0,1,2,3),\n\t                        ivec4(3,4,5,6),\n\t                        ivec4(6,7,8,9),\n\t                        ivec4(9,10,11,12),\n\t                        ivec4(12,13,14,15),\n\t                        ivec4(15,16,17,0),\n\t                        ivec4(18,19,20,21),\n\t                        ivec4(21,22,23,24),\n\t                        ivec4(24,25,26,27),\n\t                        ivec4(27,28,29,30),\n\t                        ivec4(30,31,32,33),\n\t                        ivec4(33,34,35,36),\n\t                        ivec4(36,37,38,39),\n\t                        ivec4(39,40,41,18),\n\t                        ivec4(42,43,44,45),\n\t                        ivec4(45,46,47,48),\n\t                        ivec4(48,49,50,51),\n\t                        ivec4(51,52,53,54),\n\t                        ivec4(54,55,56,57),\n\t                        ivec4(57,58,59,42));\n\n\tif(all(lessThan(uv,vec2(0.203496,0.2)+border)) && all(greaterThan(uv,vec2(-0.203496,-0.0612226)-border))){\n\t\tfor(int i=ZERO;i<20;i++){\n\t\t\tdis_sq=min(dis_sq,cubic_bezier_dis_approx_sq(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]));\n\t\t\tnum_its+=cubic_bezier_int_test(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]);\n\t\t}\n\t}\n\n\tfloat sgn=1.;\n\n\tif(num_its%2==1){\n\t\tsgn=-1.;\n\t}\n\n\treturn sgn*dis_sq;\n}\n\nfloat path1_dis_sq(vec2 uv){\n\tfloat dis_sq=1e38;\n\n\tint num_its=0;\n\n\tvec2[42] p=vec2[](vec2(-0.160539,-0.116028),\n\t                  vec2(-0.158527,-0.11926),\n\t                  vec2(-0.154083,-0.12006),\n\t                  vec2(-0.150742,-0.117077),\n\t                  vec2(-0.137876,-0.106347),\n\t                  vec2(-0.131303,-0.0882912),\n\t                  vec2(-0.131442,-0.0721154),\n\t                  vec2(-0.131862,-0.044332),\n\t                  vec2(-0.143376,-0.0325533),\n\t                  vec2(-0.143376,0.00393138),\n\t                  vec2(-0.143376,0.076715),\n\t                  vec2(-0.079916,0.140175),\n\t                  vec2(-0.00671272,0.140175),\n\t                  vec2(0.0894953,0.140175),\n\t                  vec2(0.146499,0.0645871),\n\t                  vec2(0.147253,-0.0422654),\n\t                  vec2(0.147393,-0.0792868),\n\t                  vec2(0.142024,-0.111374),\n\t                  vec2(0.13274,-0.136181),\n\t                  vec2(0.131194,-0.140525),\n\t                  vec2(0.132965,-0.144138),\n\t                  vec2(0.135917,-0.145458),\n\t                  vec2(0.138979,-0.146531),\n\t                  vec2(0.142918,-0.145567),\n\t                  vec2(0.14441,-0.141395),\n\t                  vec2(0.153803,-0.114373),\n\t                  vec2(0.159638,-0.0804368),\n\t                  vec2(0.159638,-0.042351),\n\t                  vec2(0.159638,0.0714479),\n\t                  vec2(0.0976147,0.15256),\n\t                  vec2(-0.00671272,0.15256),\n\t                  vec2(-0.0869243,0.15256),\n\t                  vec2(-0.155761,0.0836688),\n\t                  vec2(-0.155761,0.00393138),\n\t                  vec2(-0.155761,-0.0291816),\n\t                  vec2(-0.143998,-0.0510212),\n\t                  vec2(-0.143804,-0.0720609),\n\t                  vec2(-0.143804,-0.0848491),\n\t                  vec2(-0.149359,-0.0984536),\n\t                  vec2(-0.159047,-0.106976),\n\t                  vec2(-0.161751,-0.109323),\n\t                  vec2(-0.162388,-0.113239));\n\n\tivec4[14] c_bez=ivec4[](ivec4(0,1,2,3),\n\t                        ivec4(3,4,5,6),\n\t                        ivec4(6,7,8,9),\n\t                        ivec4(9,10,11,12),\n\t                        ivec4(12,13,14,15),\n\t                        ivec4(15,16,17,18),\n\t                        ivec4(18,19,20,21),\n\t                        ivec4(21,22,23,24),\n\t                        ivec4(24,25,26,27),\n\t                        ivec4(27,28,29,30),\n\t                        ivec4(30,31,32,33),\n\t                        ivec4(33,34,35,36),\n\t                        ivec4(36,37,38,39),\n\t                        ivec4(39,40,41,0));\n\n\tif(all(lessThan(uv,vec2(0.159638,0.15256)+border)) && all(greaterThan(uv,vec2(-0.162388,-0.146531)-border))){\n\t\tfor(int i=ZERO;i<14;i++){\n\t\t\tdis_sq=min(dis_sq,cubic_bezier_dis_approx_sq(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]));\n\t\t\tnum_its+=cubic_bezier_int_test(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]);\n\t\t}\n\t}\n\n\tfloat sgn=1.;\n\n\tif(num_its%2==1){\n\t\tsgn=-1.;\n\t}\n\n\treturn sgn*dis_sq;\n}\n\nfloat path2_dis_sq(vec2 uv){\n\tfloat dis_sq=1e38;\n\n\tint num_its=0;\n\n\tvec2[30] p=vec2[](vec2(-0.0823633,-0.0549912),\n\t                  vec2(-0.0888974,-0.0396857),\n\t                  vec2(-0.0961619,-0.0196255),\n\t                  vec2(-0.0961619,-0.000590324),\n\t                  vec2(-0.0961619,0.0549916),\n\t                  vec2(-0.057913,0.0932405),\n\t                  vec2(-0.00261069,0.0932405),\n\t                  vec2(0.0159427,0.0932405),\n\t                  vec2(0.0308285,0.0884467),\n\t                  vec2(0.0453185,0.0791157),\n\t                  vec2(0.0491023,0.0768161),\n\t                  vec2(0.0528626,0.0780047),\n\t                  vec2(0.0541602,0.0804602),\n\t                  vec2(0.0558151,0.082962),\n\t                  vec2(0.0564989,0.0870489),\n\t                  vec2(0.0510137,0.0906537),\n\t                  vec2(0.0359565,0.100466),\n\t                  vec2(0.0168982,0.105679),\n\t                  vec2(-0.00261069,0.105679),\n\t                  vec2(-0.0650609,0.105679),\n\t                  vec2(-0.108601,0.0622795),\n\t                  vec2(-0.108601,-0.000590324),\n\t                  vec2(-0.108601,-0.0175124),\n\t                  vec2(-0.103675,-0.0373241),\n\t                  vec2(-0.0946391,-0.0597074),\n\t                  vec2(-0.0928988,-0.0637398),\n\t                  vec2(-0.0890299,-0.0651695),\n\t                  vec2(-0.0856733,-0.0637943),\n\t                  vec2(-0.0823633,-0.0624422),\n\t                  vec2(-0.0810657,-0.0586043));\n\n\tivec4[10] c_bez=ivec4[](ivec4(0,1,2,3),\n\t                        ivec4(3,4,5,6),\n\t                        ivec4(6,7,8,9),\n\t                        ivec4(9,10,11,12),\n\t                        ivec4(12,13,14,15),\n\t                        ivec4(15,16,17,18),\n\t                        ivec4(18,19,20,21),\n\t                        ivec4(21,22,23,24),\n\t                        ivec4(24,25,26,27),\n\t                        ivec4(27,28,29,0));\n\n\tif(all(lessThan(uv,vec2(0.0564989,0.105679)+border)) && all(greaterThan(uv,vec2(-0.108601,-0.0651695)-border))){\n\t\tfor(int i=ZERO;i<10;i++){\n\t\t\tdis_sq=min(dis_sq,cubic_bezier_dis_approx_sq(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]));\n\t\t\tnum_its+=cubic_bezier_int_test(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]);\n\t\t}\n\t}\n\n\tfloat sgn=1.;\n\n\tif(num_its%2==1){\n\t\tsgn=-1.;\n\t}\n\n\treturn sgn*dis_sq;\n}\n\nfloat path3_dis_sq(vec2 uv){\n\tfloat dis_sq=1e38;\n\n\tint num_its=0;\n\n\tvec2[42] p=vec2[](vec2(-0.122111,-0.150338),\n\t                  vec2(-0.107878,-0.142677),\n\t                  vec2(-0.0885402,-0.118405),\n\t                  vec2(-0.0838009,-0.0975601),\n\t                  vec2(-0.082946,-0.0935202),\n\t                  vec2(-0.0851916,-0.0902722),\n\t                  vec2(-0.0886953,-0.0894488),\n\t                  vec2(-0.0917567,-0.088765),\n\t                  vec2(-0.0949267,-0.0903887),\n\t                  vec2(-0.0959447,-0.094227),\n\t                  vec2(-0.101468,-0.115096),\n\t                  vec2(-0.114234,-0.129173),\n\t                  vec2(-0.127908,-0.138606),\n\t                  vec2(-0.132103,-0.141643),\n\t                  vec2(-0.132515,-0.145567),\n\t                  vec2(-0.130938,-0.148217),\n\t                  vec2(-0.129166,-0.150835),\n\t                  vec2(-0.125748,-0.152296),\n\t                  vec2(0.0725967,0.0550461),\n\t                  vec2(0.0911581,0.0277989),\n\t                  vec2(0.100061,-0.0127337),\n\t                  vec2(0.100061,-0.0550771),\n\t                  vec2(0.100061,-0.0999688),\n\t                  vec2(0.0878636,-0.144658),\n\t                  vec2(0.0658529,-0.17499),\n\t                  vec2(0.0636154,-0.177973),\n\t                  vec2(0.0630871,-0.18192),\n\t                  vec2(0.0655423,-0.184515),\n\t                  vec2(0.0678268,-0.18739),\n\t                  vec2(0.0729933,-0.187755),\n\t                  vec2(0.0754795,-0.184469),\n\t                  vec2(0.0995957,-0.151581),\n\t                  vec2(0.112617,-0.103208),\n\t                  vec2(0.112617,-0.0547195),\n\t                  vec2(0.112617,-0.00845229),\n\t                  vec2(0.102369,0.0323831),\n\t                  vec2(0.0841347,0.0612465),\n\t                  vec2(0.0813143,0.0656441),\n\t                  vec2(0.0771733,0.0663279),\n\t                  vec2(0.0742519,0.064533),\n\t                  vec2(0.071276,0.0626837),\n\t                  vec2(0.0700874,0.0587133));\n\n\tivec4[14] c_bez=ivec4[](ivec4(0,1,2,3),\n\t                        ivec4(3,4,5,6),\n\t                        ivec4(6,7,8,9),\n\t                        ivec4(9,10,11,12),\n\t                        ivec4(12,13,14,15),\n\t                        ivec4(15,16,17,0),\n\t                        ivec4(18,19,20,21),\n\t                        ivec4(21,22,23,24),\n\t                        ivec4(24,25,26,27),\n\t                        ivec4(27,28,29,30),\n\t                        ivec4(30,31,32,33),\n\t                        ivec4(33,34,35,36),\n\t                        ivec4(36,37,38,39),\n\t                        ivec4(39,40,41,18));\n\n\tif(all(lessThan(uv,vec2(0.112617,0.0663279)+border)) && all(greaterThan(uv,vec2(-0.132515,-0.187755)-border))){\n\t\tfor(int i=ZERO;i<14;i++){\n\t\t\tdis_sq=min(dis_sq,cubic_bezier_dis_approx_sq(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]));\n\t\t\tnum_its+=cubic_bezier_int_test(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]);\n\t\t}\n\t}\n\n\tfloat sgn=1.;\n\n\tif(num_its%2==1){\n\t\tsgn=-1.;\n\t}\n\n\treturn sgn*dis_sq;\n}\n\nfloat path4_dis_sq(vec2 uv){\n\tfloat dis_sq=1e38;\n\n\tint num_its=0;\n\n\tvec2[42] p=vec2[](vec2(-0.0824412,-0.174858),\n\t                  vec2(-0.052824,-0.151037),\n\t                  vec2(-0.0364616,-0.113184),\n\t                  vec2(-0.0366561,-0.070165),\n\t                  vec2(-0.0368503,-0.0380775),\n\t                  vec2(-0.0483878,-0.0176051),\n\t                  vec2(-0.0483878,0.00174074),\n\t                  vec2(-0.0483878,0.028032),\n\t                  vec2(-0.029982,0.0456065),\n\t                  vec2(-0.00445207,0.0456065),\n\t                  vec2(0.0331365,0.0456065),\n\t                  vec2(0.0509357,0.00985133),\n\t                  vec2(0.0512623,-0.0518216),\n\t                  vec2(0.051612,-0.113122),\n\t                  vec2(0.0293837,-0.161603),\n\t                  vec2(0.00105656,-0.188252),\n\t                  vec2(-0.00178726,-0.190738),\n\t                  vec2(-0.0017793,-0.194242),\n\t                  vec2(6.96385e-05,-0.196581),\n\t                  vec2(0.00208207,-0.199308),\n\t                  vec2(0.00644068,-0.2),\n\t                  vec2(0.00953312,-0.197156),\n\t                  vec2(0.0408127,-0.168736),\n\t                  vec2(0.0636547,-0.11233),\n\t                  vec2(0.0634061,-0.0515264),\n\t                  vec2(0.063072,0.0179317),\n\t                  vec2(0.0412634,0.057991),\n\t                  vec2(-0.00445207,0.057991),\n\t                  vec2(-0.0365241,0.057991),\n\t                  vec2(-0.0608037,0.0357241),\n\t                  vec2(-0.0608037,0.0021445),\n\t                  vec2(-0.0608037,-0.0171468),\n\t                  vec2(-0.0492892,-0.0431664),\n\t                  vec2(-0.0490951,-0.070165),\n\t                  vec2(-0.048901,-0.109183),\n\t                  vec2(-0.0639733,-0.143058),\n\t                  vec2(-0.0905836,-0.164897),\n\t                  vec2(-0.0940098,-0.167492),\n\t                  vec2(-0.0942274,-0.17161),\n\t                  vec2(-0.0920443,-0.174089),\n\t                  vec2(-0.0900629,-0.177064),\n\t                  vec2(-0.0860074,-0.178067));\n\n\tivec4[14] c_bez=ivec4[](ivec4(0,1,2,3),\n\t                        ivec4(3,4,5,6),\n\t                        ivec4(6,7,8,9),\n\t                        ivec4(9,10,11,12),\n\t                        ivec4(12,13,14,15),\n\t                        ivec4(15,16,17,18),\n\t                        ivec4(18,19,20,21),\n\t                        ivec4(21,22,23,24),\n\t                        ivec4(24,25,26,27),\n\t                        ivec4(27,28,29,30),\n\t                        ivec4(30,31,32,33),\n\t                        ivec4(33,34,35,36),\n\t                        ivec4(36,37,38,39),\n\t                        ivec4(39,40,41,0));\n\n\tif(all(lessThan(uv,vec2(0.0636547,0.057991)+border)) && all(greaterThan(uv,vec2(-0.0942274,-0.2)-border))){\n\t\tfor(int i=ZERO;i<14;i++){\n\t\t\tdis_sq=min(dis_sq,cubic_bezier_dis_approx_sq(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]));\n\t\t\tnum_its+=cubic_bezier_int_test(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]);\n\t\t}\n\t}\n\n\tfloat sgn=1.;\n\n\tif(num_its%2==1){\n\t\tsgn=-1.;\n\t}\n\n\treturn sgn*dis_sq;\n}\n\nfloat path5_dis_sq(vec2 uv){\n\tfloat dis_sq=1e38;\n\n\tint num_its=0;\n\n\tvec2[36] p=vec2[](vec2(-0.0404861,-0.190537),\n\t                  vec2(-0.0247224,-0.179186),\n\t                  vec2(-0.00876374,-0.159474),\n\t                  vec2(0.00225312,-0.128459),\n\t                  vec2(0.00361277,-0.124606),\n\t                  vec2(0.00222209,-0.120915),\n\t                  vec2(-0.00105691,-0.119897),\n\t                  vec2(-0.00416486,-0.118825),\n\t                  vec2(-0.00797969,-0.120169),\n\t                  vec2(-0.00930792,-0.123681),\n\t                  vec2(-0.0203327,-0.153484),\n\t                  vec2(-0.0339679,-0.169808),\n\t                  vec2(-0.0479606,-0.180187),\n\t                  vec2(-0.0509985,-0.182394),\n\t                  vec2(-0.0520785,-0.186287),\n\t                  vec2(-0.0500351,-0.189239),\n\t                  vec2(-0.0481857,-0.19258),\n\t                  vec2(-0.0438271,-0.193077),\n\t                  vec2(0.0129048,-0.0893557),\n\t                  vec2(0.0193224,-0.0664902),\n\t                  vec2(0.0159272,-0.0296713),\n\t                  vec2(0.00543068,-0.00445169),\n\t                  vec2(0.00332517,0.000777286),\n\t                  vec2(-0.000210009,0.00164766),\n\t                  vec2(-0.00357414,0.000404555),\n\t                  vec2(-0.00710932,-0.000838944),\n\t                  vec2(-0.0087876,-0.00440515),\n\t                  vec2(-0.00734998,-0.00840615),\n\t                  vec2(0.00312309,-0.0327944),\n\t                  vec2(0.00593548,-0.0657443),\n\t                  vec2(0.000349286,-0.0875608),\n\t                  vec2(-0.000536597,-0.0911505),\n\t                  vec2(0.000815499,-0.094266),\n\t                  vec2(0.00481689,-0.0950974),\n\t                  vec2(0.00865479,-0.0959829),\n\t                  vec2(0.0118248,-0.0935512));\n\n\tivec4[12] c_bez=ivec4[](ivec4(0,1,2,3),\n\t                        ivec4(3,4,5,6),\n\t                        ivec4(6,7,8,9),\n\t                        ivec4(9,10,11,12),\n\t                        ivec4(12,13,14,15),\n\t                        ivec4(15,16,17,0),\n\t                        ivec4(18,19,20,21),\n\t                        ivec4(21,22,23,24),\n\t                        ivec4(24,25,26,27),\n\t                        ivec4(27,28,29,30),\n\t                        ivec4(30,31,32,33),\n\t                        ivec4(33,34,35,18));\n\n\tif(all(lessThan(uv,vec2(0.0193224,0.00164766)+border)) && all(greaterThan(uv,vec2(-0.0520785,-0.193077)-border))){\n\t\tfor(int i=ZERO;i<12;i++){\n\t\t\tdis_sq=min(dis_sq,cubic_bezier_dis_approx_sq(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]));\n\t\t\tnum_its+=cubic_bezier_int_test(uv,p[c_bez[i][0]],p[c_bez[i][1]],p[c_bez[i][2]],p[c_bez[i][3]]);\n\t\t}\n\t}\n\n\tfloat sgn=1.;\n\n\tif(num_its%2==1){\n\t\tsgn=-1.;\n\t}\n\n\treturn sgn*dis_sq;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tborder=1./iResolution.x;\n\n\tvec2 uv=fragCoord.xy/iResolution.xy;\n\tuv-=.5;\n\tuv.y*=iResolution.y/iResolution.x;\n\n    vec2 mouse=vec2(0);\n\n\tif(iMouse.x>0.0){\n\t\tmouse = iMouse.xy / iResolution.y;\n\t\tmouse.x -= .5 * iResolution.x / iResolution.y;\n\t\tmouse.y -= .75;\n\t}\n\t\n\tconst float pi=3.14159265358979;\n\n\tfloat t0=smoothstep(0.,5.,iTime);\n\tfloat t1=t0*6.*pi;\n\n\tmat2 rot=mat2(cos(t1),sin(t1),-sin(t1),cos(t1));\n\n\tborder*=exp(4.*mouse.y)*exp(1.-1.*t0);\n\tuv*=exp(4.*mouse.y)*exp(1.-1.*t0);\n\tuv*=rot;\n\n\tuv.x+=mouse.x;\n\n\tfloat dis_sq=1e38;\n\n\tif(all(lessThan(uv,vec2(0.203496,0.2)+border)) && all(greaterThan(uv,vec2(-0.203496,-0.2)-border))){\n\t\tdis_sq=min(dis_sq,path0_dis_sq(uv));\n\t\tdis_sq=min(dis_sq,path1_dis_sq(uv));\n\t\tdis_sq=min(dis_sq,path2_dis_sq(uv));\n\t\tdis_sq=min(dis_sq,path3_dis_sq(uv));\n\t\tdis_sq=min(dis_sq,path4_dis_sq(uv));\n\t\tdis_sq=min(dis_sq,path5_dis_sq(uv));\n\t}\n\n\tfloat dis=sign(dis_sq)*sqrt(abs(dis_sq));\n\n\tfragColor=vec4(smoothstep(-border, border, dis));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}