{
    "Shader": {
        "info": {
            "date": "1712858370",
            "description": "jsjjdjj",
            "flags": 0,
            "hasliked": 0,
            "id": "McV3Ww",
            "likes": 0,
            "name": "wjyr",
            "published": 3,
            "tags": [
                "srjsj"
            ],
            "usePreview": 0,
            "username": "kashircevpetr",
            "viewed": 78
        },
        "renderpass": [
            {
                "code": "// Rotation around the Y axis.\nmat3 rotateX(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(1, 0, 0),\n        vec3(0, c, -s),\n        vec3(0, s, c)\n    );\n}\n\n// Rotation around the Y axis.\nmat3 rotateY(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, 0, s),\n        vec3(0, 1, 0),\n        vec3(-s, 0, c)\n    );\n}\n\n// Rotation around the Z axis.\nmat3 rotateZ(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, -s, 0),\n        vec3(s, c, 0),\n        vec3(0, 0, 1)\n    );\n}\n\n\nvec3 past(vec3 a, float xs, float ys, float zs){\n    return a * rotateX(-xs * iTime) * rotateY(-ys * iTime) * rotateZ(-zs * iTime);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5, 0.5);\n    uv *= vec2(iResolution.x/iResolution.y, 1.0);\n    vec2 uv1 = uv - vec2(0.1*sin(2.0*iTime), 0.2*cos(3.0*iTime));\n    vec3 col = vec3(0.7, 0.7, 0.7), coordP;\n    \n    \n    float xs = 0.3, ys = 0.4, zs = 0.5, nz; //rotation speeds\n    float lx = 1.0, ly = -0.2, lz = 1.0; //coordinates of lamp\n\n    \n    \n    \n    \n    if (abs(uv.x) <= 0.3 && -0.4 <= uv.y && uv.y <= 0.0){col = vec3(0.3, 0.3, 0.3);}\n    \n    if (abs(uv1.x) <= 0.18 && -0.18 <= uv1.y && uv.y <= 0.0){\n    for (float z = 174.0; z >= 0.0; z -= 1.0){\n        nz = z / 1000.0;\n        coordP = past(vec3(uv1, nz), xs, ys, zs);\n        if (abs(coordP.z - 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(0.0, 0.0, 1.0);\n            break;\n        }\n        if (abs(coordP.z + 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(0.0, 1.0, 0.0);\n            break;\n        }\n        if (abs(coordP.x - 0.1) <= 0.001 && abs(coordP.z) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(1.0, 0.0, 0.0);\n            break;\n        }\n        if (abs(coordP.x + 0.1) <= 0.001 && abs(coordP.z) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(0.0, 1.0, 1.0);\n            break;\n        }\n        if (abs(coordP.y - 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.z) <= 0.1){\n            col = vec3(1.0, 0.0, 1.0);\n            break;\n        }\n        if (abs(coordP.y + 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.z) <= 0.1){\n            col = vec3(1.0, 1.0, 0.0);\n            break;\n        }\n    }}\n    \n    if (abs(uv1.x) <= 0.18 && 0.0 < uv.y && uv1.y <= 0.18){\n    for (float z = 174.0; z >= -174.0; z -= 1.0){\n        nz = z / 1000.0;\n        coordP = past(vec3(uv1, nz), xs, ys, zs);\n        if (abs(coordP.z - 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(0.0, 0.0, 1.0);\n            break;\n        }\n        if (abs(coordP.z + 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(0.0, 1.0, 0.0);\n            break;\n        }\n        if (abs(coordP.x - 0.1) <= 0.001 && abs(coordP.z) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(1.0, 0.0, 0.0);\n            break;\n        }\n        if (abs(coordP.x + 0.1) <= 0.001 && abs(coordP.z) <= 0.1 && abs(coordP.y) <= 0.1){\n            col = vec3(0.0, 1.0, 1.0);\n            break;\n        }\n        if (abs(coordP.y - 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.z) <= 0.1){\n            col = vec3(1.0, 0.0, 1.0);\n            break;\n        }\n        if (abs(coordP.y + 0.1) <= 0.001 && abs(coordP.x) <= 0.1 && abs(coordP.z) <= 0.1){\n            col = vec3(1.0, 1.0, 0.0);\n            break;\n        }\n    }}\n    \n    float q;\n    float x1 = -0.4 * abs(sin(iTime / 2.3)) + 0.8;\n    float y1 = -0.8 * abs(cos(iTime / 2.3)) + 0.4;\n    float r = 0.1;\n\n   \n    if ((uv.x - x1) * (uv.x - x1) + (uv.y - y1) * (uv.y - y1) <= r * r){\n\n        col = vec3(uv.x * uv.y, uv.x * uv.x + uv.y, uv.y*uv.y) + vec3(0.9, 0.0, 0.4);\n\n    }\n    \n    \n    //для пятиугольника:\n    //5x\n    //0.8+0.2x\n    //0.7-0.25x\n    //2-3x\n    //0.1+1.5x\n    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}