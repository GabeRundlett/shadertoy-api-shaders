{
    "Shader": {
        "info": {
            "date": "1720724674",
            "description": "original from glslsandbox and shadertoy",
            "flags": 0,
            "hasliked": 0,
            "id": "lclczn",
            "likes": 2,
            "name": "spiral way",
            "published": 3,
            "tags": [
                "spiral",
                "rotating",
                "way"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 93
        },
        "renderpass": [
            {
                "code": "#define  time iTime\n#define resolution iResolution.xy\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n vec2 uv = fragCoord/iResolution.xy-0.5;\nvec2 pos = uv*0.5;\n    vec2 pos2 = uv*.02;\nfloat t3 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\nfloat si = sin(t3);\nfloat co = cos(t3);\nmat2 ma = mat2(co, si, -si, co);\n    pos*=ma;\nconst float pi = 85.14159;\nconst float n = 2.0;\n\n   \n \nconst float n2 = 16.0;\n\nfloat radius2 = length(pos2) *5.5 - 0.4;\nfloat t2 = atan(pos2.y, pos2.x);\n\nfloat color2 = 0.0;\n\nfor (float i = 9.0; i <= n2; i++){\ncolor2 += 0.012 / abs(0.2 * cos(\n3. * (t2+ i/n2 * +time *1.1)\n   ) + tan(dot(radius2,pi-tan(time*1.2)))\n);\n}\n   \nfloat radius = length(pos) * 2.0 - 0.4;\n    pos*=ma;\nfloat t = atan(pos.y, pos.x);\n\nfloat color = 0.025;\n\nfor (float i = 1.0; i <= n; i++){\ncolor += 0.051 / abs(1. * sin(\n4. * ((t) + i/n * time * .25)\n   ) - sqrt(ceil(radius))\n);\n}\n\nfragColor = vec4(vec3(1.5, 0.3, 1.15) * color, 8.);\n    fragColor+= vec4(vec3(.5, 0.5, 1.15) * color2, 9.);\n\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}