{
    "Shader": {
        "info": {
            "date": "1640745210",
            "description": "e",
            "flags": 0,
            "hasliked": 0,
            "id": "slVSDD",
            "likes": 6,
            "name": "zoomy bouncy flower",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 318
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nfloat func(float a, float b) {\n    return tanh(a * b) / tanh(a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n\n    float sc = 4.;\n    vec2 ipos = floor(sc * uv) + 0.5;\n    vec2 fpos = fract(sc * uv) - 0.5;\n       \n    // thickness of burst\n    float b = 2. * thc(1., log(r) - iTime);\n    // closeness of bursts (min 1. I think)\n    float c = 1.;\n    // rotation (do b * (A + t), A could be uv.x for example)\n    float t = .2 * iTime;\n    \n    float x = mod(b * (5. * 0.5 * a / pi + t), c * b) - 0.5 * b;\n   \n    float n = 0.5 * (1. + cos(pi * clamp(x, -1., 1.))); // 3. * pi\n    n = smoothstep(0., 1., n);\n    // n = n * n * (3. - 2. * n);    \n    \n    float val = 4.; // <- change me to 1., 2., etc.\n    float d = 0.75 * (func(5. + 8. * cos(mix(2., 12., 0.5 + 0.5 * ths(4., iTime)) * r - 4. * iTime), n/val) - 0.5);\n    float k = 0.5;\n    float s = smoothstep(-k, k, -thc(4., 20. * d + iTime) * r + d);\n   // s = 2. * s * s;\n    \n    vec3 e = vec3(1.);\n    vec3 col = (1.-s) * pal(0.12 * iTime, 1.2 * e, 0.7 * e, e, vec3(0., 0.33,0.66));\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}