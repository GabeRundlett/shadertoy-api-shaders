{
    "Shader": {
        "info": {
            "date": "1571904670",
            "description": "Simple example to answer a reddit post",
            "flags": 0,
            "hasliked": 0,
            "id": "3dtSWH",
            "likes": 5,
            "name": "GoldenCricularTrails",
            "published": 3,
            "tags": [
                "test",
                "simple",
                "circular",
                "trails"
            ],
            "usePreview": 0,
            "username": "Wasserwecken",
            "viewed": 376
        },
        "renderpass": [
            {
                "code": "float PI = 3.14159265359;\nfloat PI2 = 6.28318530717;\n\n\nfloat whiteNoise(vec2 seed)\n{\n    return fract(sin(dot(seed, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\nvec2 toPolar(vec2 uv, vec2 origin)\n{\n    uv -= origin;\n    uv = vec2(\n        length(uv),\n        (atan(uv.y, uv.x) + PI) / PI2\n    );\n\n    return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.y;\n\n    vec2 screenCenter = vec2(iResolution.x / iResolution.y / 2.0, .5);\n    uv = toPolar(uv, screenCenter);\n\n    // defines how many rings\n    uv.x *= 100.0;\n\n    // shifts each ring randomly\n    uv.y += whiteNoise(vec2(ceil(uv.x))) * iTime * .1;\n\n    // brings the shift into the 0 to 1 range again\n    uv.y = fract(uv.y);\n    \n    // defines how many trails are on one ring\n    uv.y *= 3.0;\n\n    // get a uniqe id for each trail\n    vec2 trailId = ceil(uv);\n    uv = fract(uv);\n\n    // the mask defines the inner and outer radius and also the trail thickness\n    float ringMask = step(20.0, trailId.x) * step(trailId.x, 50.0) * step(.8, uv.x);\n\n    // defines by probability wich trails are golden\n    float isGolden = step(.9, whiteNoise(trailId));\n\n    // finally coloring the trails\n    vec3 pixelColor = isGolden * vec3(0.83, 0.68, 0.21);\n    pixelColor += (1.0 - isGolden) * vec3(.5);\n    pixelColor *= ringMask;\n\n    // this is for a fading the ending of the trails\n    pixelColor *= 1. - pow(uv.y, 2.0);\n\n    \n    \n    fragColor = vec4(pixelColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}