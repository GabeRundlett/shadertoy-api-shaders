{
    "Shader": {
        "info": {
            "date": "1602132470",
            "description": "some waves",
            "flags": 0,
            "hasliked": 0,
            "id": "3sVyRz",
            "likes": 2,
            "name": "some simple subtractive plasma",
            "published": 3,
            "tags": [
                "plasma",
                "colorful",
                "sine"
            ],
            "usePreview": 0,
            "username": "netgrind",
            "viewed": 248
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord -= iResolution.xy*.5;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    \n    float d = length(uv);\n    float a = atan(uv.x, uv.y);\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx*20.+vec3(0,2,4)+d*20.+sin(a*3.));\n    \n    float s = mix(sin(a*16.+iTime*.5+cos(d*20.+iTime*.125)), cos(a*7.-iTime*.66), cos(d*60.+iTime*.25)*.5+.5)*sin(d*30.-iTime*.33);\n    s *= smoothstep(.1, .2, d);\n    s *= smoothstep(.5, .4, d);\n    s = max(s, 0.);\n    s = pow(s, 2.);\n    \n    col *= s;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}