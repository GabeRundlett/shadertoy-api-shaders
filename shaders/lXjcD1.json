{
    "Shader": {
        "info": {
            "date": "1727241149",
            "description": "mod factors added mouse exploring of color and tunnel factors-see ifdefs.\nElsio's org comment:\neu vou jogar o tangente hiperb√≥lico em tudo agora. soca tanh() nisso tb!\n(I'm going to throw hyperbolic tangent at everything now. Punch tanh() into that too!",
            "flags": 0,
            "hasliked": 0,
            "id": "lXjcD1",
            "likes": 10,
            "name": "Bioluminescence tunnel 2Explorer",
            "published": 3,
            "tags": [
                "plasma",
                "spiral",
                "color",
                "random",
                "hsv",
                "refract",
                "neon",
                "kishimisu"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "#define COLORFACTOR   (16.3*mouse.x/mouse.y)\n// 9.35 is good  9.997 is what default (0.301,0.491) results in\n// This COLORFACTOR is printed in blue whqn \n// 11.221(0.3843,0.5583) IS GOOD\n#define cor(a) (cos(a * COLORFACTOR + vec3(0, 23, 21)) * .5 + .5)\n#define wmod(p, w) mod(p, w) - w/2.\n#define PI 3.14\n#define t iTime * .5\n\n//   CHANGE this to 0 to have mouse change tunnel factor\n#if 1\n#define MOUSE_TUNNEL_FACTOR (2.0)\n#define PRINTVALUE    COLORFACTOR\n#else\n#define MOUSE_TUNNEL_FACTOR (2.0 * mouse.x/mouse.y)\n#define PRINTVALUE    MOUSE_TUNNEL_FACTOR\n#endif\n\n#define DEBUG_PRINT \n\n// https://www.shadertoy.com/view/cd3yRB\n\nvoid mainImage(out vec4 o, vec2 fragCoord) {\n    vec2 u = fragCoord;\n    vec2  r = iResolution.xy;\n          u = (u - r.xy / 2.) / r.y;\n          o *= 0.;\n    \n    vec2 mouse = (iMouse.xy==vec2(0.)) ? vec2(0.3843,0.5583) : iMouse.xy/iResolution.xy;\n    \n#ifdef DEBUG_PRINT\n    // This will print color factor and mouse ^^^^^^^^^^^^ value to use\n    debugPrint(o, fragCoord, iMouse.xy, mouse, PRINTVALUE );\n#endif\n\n    vec3 p;      \n    float i, a, d, z;\n    \n    while(i++ < 59.) {\n        p = a * vec3(u, .5);\n        \n        z = p.z + t * 5.;\n        \n        p.z = wmod(z, 2.), \n        p.x = \n          cos(\n              wmod(\n                  atan(p.y, p.x) + tanh((cos(i))*18.) * .4 + z * .9, \n                  PI / 1.5 // 1.5 ... 3 \n              )  \n          ) \n       * length(p.xy) - MOUSE_TUNNEL_FACTOR, \n        \n        a += d = max(abs(length(p.xz) - .2), .01);\n        \n        o.rgb += exp(-d * 5.) * cor(z * .3) * .1;\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Debug print function modified from https://www.shadertoy.com/view/3lGBDm    \nconst float Bin[10]= float[] (480599.,\n                              139810.,\n                              476951.,\n                              476999.,\n                              350020.,\n                              464711.,\n                              464727.,\n                              476228.,\n                              481111.,\n                              481095.\n                             );\n\nfloat DecimalForm( vec2 vStringCoords, float fValue, float fMaxDigits, float fDecimalPlaces )\n{       \n    if ((vStringCoords.y < 0.0) || (vStringCoords.y >= 1.0)) return 0.0;\n    \n    bool bNeg = ( fValue < 0.0 );\n    fValue = abs(fValue);\n    \n\tfloat fLog10Value = log2(fValue) / log2(10.0);\n\tfloat fBiggestIndex = max(floor(fLog10Value), 0.0);\n\tfloat fDigitIndex = fMaxDigits - floor(vStringCoords.x);\n\tfloat fCharBin = 0.0;\n    if(fDigitIndex > (-fDecimalPlaces - 1.01)) {\n        if(fDigitIndex > fBiggestIndex) {\n            if((bNeg) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin =  1792.0; // minus sign\n        } else {\t\t\n            if(fDigitIndex == -1.0) {\n                if(fDecimalPlaces > 0.0) fCharBin = 2.0; //decimal point\n            } else {\n                float fReducedRangeValue = fValue;\n                if(fDigitIndex < 0.0) {\n                    fReducedRangeValue = fract( fValue ); \n                    fDigitIndex += 1.0; \n                }\n                float fDigitValue = (abs(fReducedRangeValue / (pow(10.0, fDigitIndex))));\n                fCharBin = Bin[int(floor(mod(fDigitValue, 10.0)))]; //Digit\n            }\n        }\n    }\n    float q = floor(fract(vStringCoords.x) * 4.0) + floor(vStringCoords.y * 5.0) * 4.0;\n    \n    float r = fCharBin / pow(2.0, q);\n    return floor(mod(r, 2.0));\n}\n\nvoid debugPrint( out vec4 fragColor, in vec2 fragCoord, in vec2 iMouse, in vec2 mouse, in float valueToPrint )\n{\n\n    if(iMouse.xy==vec2(0.)) {\n        // only print when mouse is adjusting things\n        return;\n    }\n\n    vec3 vColour = vec3(0);\n    vec3 vColour1 = vec3(1.0, 0.0, 1.0);\n    vec2 vFontSize = vec2(8.0, 15.0);\n    float fDigits;\n    float fDecimalPlaces;\n   \n    // Print Shader Date\n//    vColour = mix( vColour, vColour1, DecimalForm( (fragCoord - vec2(184.0, 5.0)) / vFontSize, mod(iDate.w / (60.0 * 60.0), 12.0), 2.0, 0.0));\n//\tvColour = mix( vColour, vColour1, DecimalForm( (fragCoord - vec2(184.0 + 24.0, 5.0)) / vFontSize, mod(iDate.w / 60.0, 60.0), 2.0, 0.0));\n//\tvColour = mix( vColour, vColour1, DecimalForm( (fragCoord - vec2(184.0 + 48.0, 5.0)) / vFontSize, mod(iDate.w, 60.0), 2.0, 0.0));\n    \n\n    // print passed in value\n\tvec2 vPixelCoord1 = vec2(1.,5.0);\n\tfloat fValue1 = valueToPrint;\n\tfDigits = 3.0;\n    fDecimalPlaces = 3.0;\n\tfloat fIsDigit1 = DecimalForm( (fragCoord - vPixelCoord1) / vFontSize, fValue1, fDigits, fDecimalPlaces);\n\tvColour = mix( vColour, vec3(0.0, 1.0, 1.0), fIsDigit1);\n    \n    if(mouse.x > 0.0)\n\t{\n\t\t// Print Mouse X\n\t\tvec2 vPixelCoord2 = iMouse.xy + vec2(-62.0, 6.0);\n\t\tfloat fValue2 = mouse.x;\n\t\tfDigits = 1.0;\n\t\tfDecimalPlaces = 4.0;\n\t\tfloat fIsDigit2 = DecimalForm( (fragCoord - vPixelCoord2) / vFontSize, fValue2, fDigits, fDecimalPlaces);\n\t\tvColour = mix( vColour, vec3(0.0, 1.0, 0.0), fIsDigit2);\n\t\t\n\t\t// Print Mouse Y\n\t\tvec2 vPixelCoord3 = iMouse.xy + vec2(0.0, 6.0);\n\t\tfloat fValue3 = mouse.y;\n\t\tfDigits = 1.0;\n\t\tfloat fIsDigit3 = DecimalForm( (fragCoord - vPixelCoord3) / vFontSize, fValue3, fDigits, fDecimalPlaces);\n\t\tvColour = mix( vColour, vec3(0.0, 1.0, 0.0), fIsDigit3);\n\t}\n\n     fragColor = vec4(vColour, 1);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}