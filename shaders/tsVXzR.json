{
    "Shader": {
        "info": {
            "date": "1573289423",
            "description": "Draw f(xy)",
            "flags": 0,
            "hasliked": 0,
            "id": "tsVXzR",
            "likes": 2,
            "name": "F(XY)",
            "published": 3,
            "tags": [
                "function"
            ],
            "usePreview": 0,
            "username": "VPas",
            "viewed": 370
        },
        "renderpass": [
            {
                "code": "#define spx(a) s(px, 0., (a))\n\n// visible area (x)\nconst float dx = 13.;\n// move speed\nconst float scroll = 1.;\n\nconst float graphWidth = 6.;\n\nconst float axisWidth = 2.0;\nconst float pi = 3.1415926535;\n\nvec3 graphColor = vec3(0.7, 0.8, 0.4);\nvec3 axisColor = vec3(0.8, 0.8, 0.9);\nvec3 gridColor = vec3(0.5);\n\nfloat s(float a, float b, float c) {\n return smoothstep(a,b,c);\n}\n\nfloat len(vec2 p) {\n return length(p);\n}\n\n\nfloat flower(vec2 p) {\n    float x = p.x;\n    float y = p.y;\n\n    float val = 0.;\n    val = -x*x*x -x*x + x + 1. - y;\n    val = abs(x*y) + 10. * sin(abs(x*y)) - 2.;\n    val -= len(abs(p) + vec2(1.));\n    val -= pow(abs(x)-3.,2.)+pow(abs(y)-3.,2.);\n    float n = abs(x*(y+22.)) + 50. * cos(abs(x*(y+22.))) - 1.5;\n    n -= pow(abs(2.*x)-4.,2.)/2. + pow(2.*y + 48., 2.) * 4.;\n    float s = pow(x, 4.)*3. + pow(y + 13., 4.)/5000. - .8;\n    float b = abs((x-20.)*(y-17.)) + 60. * cos(abs((x-20.)*(y-16.)));\n    b -= pow(abs(x-20.),2.)/1.1 + pow(y-18.,2.)/2.2;\n    b -= 40.;\n\n    val = val * n * s * b;\n    \n    return val;\n}\n\n\nfloat sdStar(in vec2 p, in float r, in int n, in float m) {\n    \n    float an = pi/float(n);\n    float en = pi/m;\n    \n    vec2 acs = vec2(cos(an),sin(an));\n    vec2 ecs = vec2(cos(en),sin(en));\n\n    float bn = mod(atan(p.x,p.y),2.0*an) - an;\n    p = length(p)*vec2(cos(bn),abs(sin(bn)));\n    p -= r*acs;\n    p += ecs*clamp( -dot(p,ecs), 0.0, r*acs.y/ecs.y);\n    return length(p)*sign(p.x);\n}\n\nfloat fir(vec2 p) {\n    \n    float x = p.x;\n    float y = p.y;\n    \n    float val = 0.0;\n    \n    float s = sdStar(p - vec2(0., 12.2), 1., 12, 7.);\n    \n    float leaves = 2. - .2 * cos(6.8 * y + .7 * abs(x)) * (y - 13.) - 2. * abs(x) - .51 * (y + abs(y)) + 5. * (y - abs(y - 2.));\n    \n    float x2 = x*x;\n    float x4 = x2 * x2;\n    float y_12 = (y - 1.) * (y - 1.);\n    float y_14 = y_12 * y_12;\n    float stump = x2 * x4 * x4 / 10. + y_14 * y_14 * y_12 * 30. - 1.;\n    \n    val = max(leaves, -stump);\n    \n    \n    return val * s;\n}\n\n\nfloat func(vec2 p) {\n    float val = 0.;\n    \n    //val = flower(p);\n    \n    val = fir(p);\n    \n    return smoothstep(fwidth(val) * graphWidth, 0., abs(val));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p = (fragCoord.xy * 2. - iResolution.xy) / iResolution.x * dx;\n    vec2 mousePos = iMouse.xy / iResolution.xy * 2. - 1.;\n    mousePos = mix(vec2(0.0, -0.9), mousePos, step(1., iMouse.x));\n    p -= (mousePos) * scroll * dx * vec2(1., iResolution.y / iResolution.x);\n\n    float px = dx / iResolution.x;\n    float lineH = iResolution.y * .01;\n    float f = func(p);\n    f = pow(f, 10.);\n    float axis = max(spx(abs(p.x) - px * axisWidth), spx(abs(p.y) - px * axisWidth));\n    axis = max(axis, spx(abs(p.y) - px * lineH) * max(spx(fract(p.x) - px * axisWidth), spx(1. - px * axisWidth - fract(p.x))));\n    axis = max(axis, spx(abs(p.x) - px * lineH) * max(spx(fract(p.y) - px * axisWidth), spx(1. - px * axisWidth - fract(p.y))));\n    float grid = max(spx(fract(p.x) - px * .5), spx(1. - px *.5 - fract(p.x)));\n    grid = max(grid, max(spx(fract(p.y) - px * .5), spx(1. - px *.5 - fract(p.y))));\n\n    vec3 bgColor = mix(gridColor * grid, axisColor * axis, axis);\n    vec3 color = mix(bgColor, graphColor * f, f);\n \n    fragColor = vec4(color, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}