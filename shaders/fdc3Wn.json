{
    "Shader": {
        "info": {
            "date": "1629470913",
            "description": "test--svg-n2\n//Referencia\n///https://www.shadertoy.com/view/ldXyRn... FabriceNeyret2",
            "flags": 0,
            "hasliked": 0,
            "id": "fdc3Wn",
            "likes": 12,
            "name": "Basic SVG",
            "published": 3,
            "tags": [
                "basicsvg"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 1796
        },
        "renderpass": [
            {
                "code": "//Por Jorge2017a1..Jorge Flores.P.---Ago-2021-\n//Referencia\n//https://iquilezles.org/articles/distfunctions2d\n///https://www.shadertoy.com/view/ldXyRn... FabriceNeyret2\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(1.0),b,d)\n\n\nfloat d;\nfloat _x,_y;\nfloat x0,y0;\nvec2 gUV;\n\n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  //colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj),0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\nreturn colOut;\n}\n\nvoid IniciarPath(vec2 uv)\n{   gUV=uv;\n    d=10000.0;\n}\n\n//moveto\nvoid M(float x, float y)\n{   _x = x;\n    _y = y;\n    x0 = x;\n    y0 = y;   \n}\n\n\nvec3 FinPath( vec3 colIn, vec3 colOut)\n{   colOut= DrawFig(colIn, colOut,d);\n    return colOut;\n}\n\n\nfloat line( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat circle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\n\nvoid Z(void)\n{ d = unionSDF(d, line(gUV, vec2(_x,_y), vec2(x0,y0)) );  }\n\n//line\nvoid L(float x, float y)\n{    float d1=line(gUV, vec2(_x,_y), vec2(x,y));\n    d = unionSDF(d, d1 ); \n    _x=x;\n    _y=y;\n}\n\n\nvoid Ci(float x, float y,float r)\n{    float d1=circle(vec2(gUV.x- x,gUV.y-y),r);\n    d = unionSDF(d, d1 ); \n    _x=x;\n    _y=y;\n}\n\n//https://www.shadertoy.com/view/sdX3zN\nvec3 getBackgroundColor(vec2 uv) \n{\n  uv = uv * 0.5 + 0.5; // remap uv from <-0.5,0.5> to <0.25,0.75>\n  vec3 gradientStartColor = vec3(0., 0., 0.);\n  vec3 gradientEndColor = vec3(0., 1., 1.);\n  return mix(gradientStartColor, gradientEndColor, uv.y); // gradient goes from bottom to top\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n     vec2 uv = (2.*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);\n    uv*=0.8;\n    uv-=vec2(-0.5,-0.5);\n    \n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //vec3 col =vec3(1.0);\n    vec3 col = getBackgroundColor(uv); \n    \n     //cuarto casa\n     IniciarPath(uv );\n     M(0.2,0.5);\n     L(0.5 ,0.6);\n     L(0.5 ,0.3);\n     L(0.6 ,0.3);\n     L(0.6 ,0.12);\n     L(0.2 ,0.12);\n     Z();\n     col= FinPath(vec3(0.0,0.0,0.0), col);\n     \n     ///ventana\n     IniciarPath(uv );\n     M(0.3,0.2);\n     L(0.3 ,0.4);\n     L(0.4 ,0.4);\n     L(0.4 ,0.2);\n     Z();\n     col= FinPath(vec3(0.0,0.0,1.0), col);\n     \n     //ventana division\n     IniciarPath(uv );\n     M(0.3,0.3);\n     L(0.4 ,0.3);\n     Z();\n     col= FinPath(vec3(0.5,0.0,1.0), col);\n     \n     //pasto\n     IniciarPath(uv );\n     for(float i=0.0; i<5.0;i+=0.02)\n     {\n         M(-2.2+i,0.0);\n         L(-2.25+i,0.1);\n         col= FinPath(vec3(0.0,1.0,0.0), col);\n     }\n  \n  \n    \n     //montaÃ±a\n     IniciarPath(uv );\n     M(-0.3,0.7);\n     L(0.0 ,0.3);\n     L(0.2 ,0.6);\n     L(0.3 ,0.8);\n     L(0.4 ,0.7);\n     L(0.6 ,0.9);\n     L(0.8 ,0.7);\n     L(0.9 ,0.9);\n     L(1.0 ,0.7);\n     L(1.1 ,0.6);\n     L(1.3 ,0.9);\n     col= FinPath(vec3(1.0,0.0,0.0), col);\n     \n     //nube\n     float py=0.1*sin(iTime);\n     IniciarPath(uv );\n     Ci(0.3, 0.7+ py,0.05);\n     Ci(0.4, 0.7+ py,0.06);\n     Ci(0.35,0.72+py,0.05);\n     Ci(0.45,0.7 +py,0.05);\n     col= FinPath(vec3(0.5,0.5,1.0), col);\n     \n     \n     //arbol\n     IniciarPath(uv-vec2(0.2,-0.2) );\n     M(0.5,0.3);\n     L(0.5 ,0.4);\n     L(0.55 ,0.5);\n     M(0.5,0.4);\n     L(0.5,0.5);\n     L(0.4,0.6);\n     M(0.5,0.4);\n     L(0.5,0.6);\n     Ci(0.5, 0.6,0.05);\n     Ci(0.55, 0.55,0.05);\n     Ci(0.43, 0.6,0.04);\n     col= FinPath(vec3(0.0,0.8,0.0), col);\n     \n     \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}