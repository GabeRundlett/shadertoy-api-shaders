{
    "Shader": {
        "info": {
            "date": "1628908079",
            "description": "Simple fire shader",
            "flags": 0,
            "hasliked": 0,
            "id": "stjSDt",
            "likes": 6,
            "name": "Fire Using Noise",
            "published": 3,
            "tags": [
                "fire"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 409
        },
        "renderpass": [
            {
                "code": "float hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(vec2 n) {\n    vec2 b = floor(n), f = smoothstep(vec2(0), vec2(1), fract(n));\n    return mix(mix(hash12(b), hash12(b + vec2(1, 0)), f.x), mix(hash12(b + vec2(0, 1)), hash12(b + vec2(1)), f.x), f.y);\n}\n\nfloat fbm(vec2 p, int octaves) {\n\tfloat s = 0.0, m = 0.0, a = 1.0;\n\tfor(int i = 0; i < octaves; i++) {\n\t\ts += a * noise(p);\n\t\tm += a;\n\t\ta *= 0.5;\n\t\tp *= mat2(1.6, 1.2, -1.2, 1.6);\n\t}\n\treturn s / m;\n}\n\nvec3 get_fire_color(float v) {\n    return vec3(smoothstep(0.0, 0.6, v), smoothstep(0.0, 1.0, v), smoothstep(0.65, 0.9, v) * .8);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mr = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / mr;\n    float b = fbm(uv * 16.0 + vec2(uv.y * sin(iTime * 1.5) * 1.25, -iTime * 3.0), 4);\n    b += max(1.0 - uv.y * 2.5, -1.0);\n    b *= 0.6;\n    fragColor = vec4(get_fire_color(b), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}