{
    "Shader": {
        "info": {
            "date": "1609065106",
            "description": "Water Paint",
            "flags": 32,
            "hasliked": 0,
            "id": "WtcyDN",
            "likes": 1,
            "name": "Water Paint",
            "published": 3,
            "tags": [
                "paint",
                "multipass"
            ],
            "usePreview": 1,
            "username": "smkgames",
            "viewed": 576
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U ) { \n    \n    O = texture( iChannel1,texture( iChannel0,U/iResolution.xy ).xy );\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define T(U)            texelFetch( iChannel0, ivec2(U), 0 )\n#define hue(v)        ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) ) // https://www.shadertoy.com/view/llySRh\n#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n#define keyDown(a)    ( texelFetch(iChannel3,ivec2(a,1),0).x > 0.)\n#define keyClick(a)   ( texelFetch(iChannel3,ivec2(a,0),0).x > 0.)\n#define S(v)            smoothstep( 1.5, 0., v )\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n\n    vec2 R = iResolution.xy, U = u / R.y, P,m;\n    vec4 M = iMouse;\n    O = T(u);                                                        // restore previous state\n    if (iFrame<1 || keyDown(64+3) )                                  // start or 'C': reset\n        O = vec4(u / R.xy,0.,0.);\n    //  O = vec4(keyToggle(32)), O.w=1.;\n    if keyDown(64+6)  O = T(0);                                      // 'F': fill with color\n    if keyDown(64+20) O = texture(iChannel1,U);                      // 'T': wood texture bg\n    if ( u == vec2(1.5) ) { O.xy = M.xy; return; }                   // memo prev mouse\n    if ( u == vec2(.5) ) {\n        if ( M.z > 0. && ( M.x/R.y < .1 || keyClick(64+16)) )        // choose color in palette or pick in paint\n            O = T(M.xy), O /= O.w; \n    //  else if keyDown(32) O.rgb = 1.-O.rgb;                        // inverse at switch colors mode\n        if keyDown(64+19) O.rgb = -O.rgb;                            // 'S': switch to negative colors\n        return;\n    }\n \n    \n    P = M.w > 0. ? M.xy : T(1).xy;                                   // prev mouse or start stroke \n    m = abs( (M.xy+P)/2. - u ) - abs(M.xy-P)/2.;                     // for bounding box\n    \n    if (M.z > 0.  && M.xy != P )                                     // paint\n      if ( max(m.x,m.y)< 20. )                                       // optim: bounding box\n        for( float  l = length(M.xy-P), d = 0.; d < l ; d++ )\n        O +=  S( length( mix( M.xy, P, d/l ) - u ) - 20. ) / 20. * vec4(1.,0.,0.,0.); \n        \n//  if keyDown(32) O.rgb = O.w - O.rgb;                              // inverse at switch colors mode\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}