{
    "Shader": {
        "info": {
            "date": "1575038143",
            "description": "Dare fullscreen ! :-p\ngolfing of my [url]https://shadertoy.com/view/XtSBDK[/url]\nother greek friezes here: [url]https://www.shadertoy.com/results?query=frieze[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "wsKSWK",
            "likes": 39,
            "name": "wave greek frieze 5  (237 chars)",
            "published": 3,
            "tags": [
                "waves",
                "patterns",
                "2tweets",
                "short",
                "greek",
                "golf",
                "frieze"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1300
        },
        "renderpass": [
            {
                "code": "// golfing of https://shadertoy.com/view/XtSBDK ( 343 chars )\n// NB: -15 chars without animation  -43 without big spiral antialiasing (at least for the 266 chars version )\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  R = iResolution.xy,  U = u+u - R;\n    float a = atan(U.y,U.x)/6.283 ;\n    a += ceil( U = 5.*length(U)/R - a ).y;\n    U.x= 2.6*a*a - iTime;\n    a  = dot( U = 2.* fract( U ) - 1. ,\n              cos( .4*a*a * max(0.,1.-length(U) ) - vec2(33,0) ));\n    O += min(1., a/fwidth(a) +.5) - pow( U.y*U.y, 5.) -O;\n}/*\n\n\n\n\n\n\n// --- 244 chars\n\n#define mainImage(O,u)                                            \\\n    vec2  R = iResolution.xy,           U = u+u - R;              \\\n    float a = atan(U.y,U.x)/6.283 +.5,  l = length(U)*5./R.y - a; \\\n    a += ceil(l);                                                 \\\n    a = dot( U = 2.* fract( vec2( 2.6*a*a - iTime, l ) ) - 1. ,   \\\n             cos( .4*a*a * max(0.,1.-length(U) ) - vec2(33,0) )); \\\n    O += min(1., a/fwidth(a) +.5) - pow( U.y*U.y, 5.)            /*\n        \n\n        \n\n\n        \n// --- 266 chars\n        \n#define mainImage(O,u)                                       \\\n    vec2 R = iResolution.xy, U = 5.* ( u+u - R ) / R.y;      \\\n    float a = atan(U.y,U.x)/6.283 +.5, l = length(U)-a;      \\\n    a += ceil(l); a = 2.6*a*a - iTime;                       \\\n    a = dot( U = fract(vec2(a,l)) - .5  ,                    \\\n             cos( .3*(iTime+a) * max(0.,.5-length(U)) - vec2(33,0) ));  \\\n    O  += min(1., a/fwidth(a) +.5) - pow( abs( 2.*fract(l) -1. ), 10.) /*\n        \n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}