{
    "Shader": {
        "info": {
            "date": "1491226046",
            "description": "A variant of graffiti3 [url]https://www.shadertoy.com/view/4djcRD[/url]\n\nBut the purpose was having shells growing. I don't know why I can't seek for hit rearer than 1.6 radian back.",
            "flags": 32,
            "hasliked": 0,
            "id": "Xs2cRD",
            "likes": 149,
            "name": "maze worms / graffitis 3c",
            "published": 3,
            "tags": [
                "automata",
                "worms",
                "maze",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 4149
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, U/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define CS(a)  vec2(cos(a),sin(a))\n#define rnd(x) ( 2.* fract(456.68*sin(1e3*x+mod(iDate.w,100.))) -1.) // NB: mod(t,1.) for less packed pattern\n#define T(U) textureLod(iChannel0, (U)/R, 0.)\nconst float r = 1.5, N = 100., da = .1; // width , number of worms , turn angle at hit\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    \n    if (T(R).x==0.) { U = abs(U/R*2.-1.); O  = vec4(max(U.x,U.y)>1.-r/R.y); O.w=0.; return; } // track window resize\n\n      // 1st column store worms state.\n    if (U.y==.5 && T(U).w==0.) {                           // initialize heads state: P, a, t\n        O = vec4( R/2. + R/2.4* vec2(rnd(U.x),rnd(U.x+.1)) , 3.14 * rnd(U.x+.2), 1);\n        if (T(O.xy).x>0.) O.w = 0.;                        // invalid start position\n        return;\n    } // Other columns do the drawing.\n    \n    O = T(U);\n    \n    for (float x=.5; x<N; x++) {                           // --- draw heads\n        vec4 P = T(vec2(x,.5));                            // head state: P, a, t\n        if (P.w>0.) O += smoothstep(r,0., length(P.xy-U))  // draw head if active\n                         *(.5+.5*sin(6.3*x/N+vec4(0,-2.1,2.1,1)));   // coloring scheme\n    }\n    \n    if (U.y==.5) {                                         // --- head programms: worm strategy\n        vec4 P = T(U);                                     // head state: P, a, t\n        if (P.w>0.) {                                      // if active\n            float a = P.z-1.6, a0=a;  // why can't angle start more rear ?\n#define next T(P.xy+(r+2.)*CS(a)).w\n//#define next T(P.xy+((r+2.)*1.5)*CS(a)).w  // if rear angle = dir - 3pi/4\n            while ( next == 0. && a < 13. )  a += da;      // seek for last angle before hit\n            a = max(a0, a-4.*da);\n            if ( next > 0.) { O.w = 0.; return; }          // stop head\n            O = vec4(P.xy+CS(a),mod(a,6.2832),P.w+1.);     // move head\n        }\n    }\n   \n  //if (iMouse.w > 0. && distance(iMouse.xy, U) < 50.) O = vec4(0.); // painting\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}