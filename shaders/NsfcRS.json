{
    "Shader": {
        "info": {
            "date": "1642376511",
            "description": "Rigid body simulation of horse shape with legs that form circles with their feet as it walks.",
            "flags": 32,
            "hasliked": 0,
            "id": "NsfcRS",
            "likes": 31,
            "name": "Horse Automaton",
            "published": 3,
            "tags": [
                "horsie"
            ],
            "usePreview": 1,
            "username": "wyatt",
            "viewed": 517
        },
        "renderpass": [
            {
                "code": "Main\n    Q = vec4(0);\n    U -= .5*R;\n    U *= 2.;\n    U += .5*R;\n    U += A(BACK).xy-vec2(.5,.5)*R;\n    DRAW(HEAD,3,2)\n    DRAW(NECK,4,2)\n    DRAW(SHOULDER,5,4)\n    DRAW(BACK,5,5)\n    DRAW(BUTT,4,5)\n    DRAW(TAIL,0,3)\n    DRAW(BACK_LEG_RIGHT,2,4)\n    DRAW(BACK_LEG_LEFT,2,4)\n    DRAW(BACK_FOOT_RIGHT,1,2)\n    DRAW(BACK_FOOT_LEFT,1,2)\n    DRAW(FRONT_LEG_RIGHT,3,2)\n    DRAW(FRONT_LEG_LEFT,3,2)\n    DRAW(FRONT_FOOT_RIGHT,2,1)\n    DRAW(FRONT_FOOT_LEFT,2,1)\n    \n    Q += pow(B(.5*(2.*U-1.5*vec2(A(BACK).xy))),vec4(5));\n    Q += pow(B(.5*(U-.5*vec2(A(BACK).xy))),vec4(4));\n    Q += pow(B(.5*(1.5*U-1.*vec2(A(BACK).xy))),vec4(8));\n    Q -= step(U.y,HEIGHT(U.x));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R; vec4 M; float T; float dT; int I;\n#define Main void mainImage(out vec4 Q, in vec2 U) { R=iResolution.xy;M=iMouse;T=iTime;dT=iTimeDelta;I=iFrame;\nfloat ln (vec2 p, vec2 a, vec2 b, float r1, float r2) { \n    float x = clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.);\n    return length(p-a-(b-a)*x)-mix(r1,r2,x);\n}\nstruct dual {\n    vec2 xy;\n    float z;\n    vec2 dxy;\n    float dz;\n};\ndual set_dual(vec4 a, vec4 b) {return dual(a.xy,a.z,b.xy,b.z);}\nvec4 first (dual a) {return vec4(a.xy,a.z,1);}\nvec4 second (dual a) {return vec4(a.dxy,a.dz,1);}\n#define pi 3.14159265359\n#define dt .2\n#define L (R.x*.07)\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define G(x) (vec2(x,0)+.5)\n#define S(o) (L*an(o.z))\n#define dS(o) (L*an(o.z+.5*pi)*o.dz)\n#define ei(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define an(a) vec2(cos(a),sin(a))\n#define SET(g,b) if (length(U-(g))<.5) Q = first(b); if (length(U-(g)-vec2(0,1))<.5) Q = second(b);\n#define GET(g,b) dual b = set_dual(A(g),A((g)+vec2(0,1)));\n#define BEHIND(a,b) a.xy = b.xy-S(b)-S(a); a.dxy = b.dxy-dS(b)-dS(a);\n#define INFRONT(a,b) b.xy = a.xy+S(a)+S(b); b.dxy = a.dxy+dS(a)+dS(b);\nvoid draw (inout vec4 Q, vec2 U, vec4 b, vec4 db, float j, float k) {\n    vec2 v = S(b); \n    float l = ln(U+vec2(0,-15.),\n                    b.xy-v,b.xy+v,\n                    10.*float(j),10.*float(k)\n                );\n    Q += .6*vec4(1.-Q)*\n    smoothstep(8.,5.,abs(l));\n}\n#define DRAW(g,j,k) draw(Q,U,A((g)),A((g)+vec2(0,1)),float(j),float(k));\n#define HEIGHT(x) (.1*R.y*(.0001*(x)+2.*sin(10.*sin(.0005*x)+(x)*.001)+.7+.5*sin(.003*(x))+.1*sin(.02*(x))+.3*sin(.004*(x))+.05*sin(.03*(x))+.03*sin(.1*(x))+.01*sin(.2*(x)) ))\n#define gravity -1e-2\nvoid calc_force(dual pt, vec2 bk, inout vec2 force, inout float torq) {\n    vec2 a = pt.xy - S(pt);\n    vec2 b = pt.xy + S(pt);\n    vec2 da = pt.dxy - dS(pt);\n    vec2 db = pt.dxy + dS(pt);\n    #define DH(x) normalize(vec2(-1./R.y*(HEIGHT(x+1.)-HEIGHT(x-1.)),1))\n    if (a.y < HEIGHT(a.x)) {\n        vec2 dh =  DH(a.x);\n        vec2 im = dh*.2-.3*da;\n        im += .5*vec2(-dh.y,dh.x)*atan(-dot(da,dh));\n        vec2 r = a-bk;\n        torq -= dot(r,vec2(-im.y,im.x))/(10.*L*L);\n        force.xy += im*abs(dot(normalize(r),normalize(im)));\n        \n    }\n    if (b.y < HEIGHT(b.x)) {\n        vec2 dh =  DH(b.x);\n        vec2 im = dh*.2-.3*db;\n        im += .5*vec2(-dh.y,dh.x)*atan(-dot(db,dh));\n        vec2 r = b-bk;\n        torq -= dot(r,vec2(-im.y,im.x))/(10.*L*L);\n        force.xy += im*abs(dot(normalize(r),normalize(im)));\n    }\n}\n#define FORCE(g) calc_force((g),back.xy,force,torq);\nvoid place (dual p1, inout dual p2, inout dual p3, vec2 v, vec2 t) {\n    float theta = acos(min(.5*length(t),1.));\n    float phi = atan(t.y,t.x);\n    float z = p2.z;\n    p2.z = phi+theta;\n    p2.dz = p2.z-z;\n    z = p3.z;\n    p3.z = phi-theta;\n    p3.dz = p3.z-z;\n}\n#define PLACE(p1,p2,p3,t) place((p1),(p2),(p3),(p1).xy-S(p1),t);\n/*\n\n                 _\n            ____/\n           /|\\ |\\\n            | || |\n\n\n*/\n#define BACK             G(0)\n#define BUTT             G(1)\n#define TAIL             G(2)\n#define BACK_LEG_RIGHT   G(4)\n#define BACK_LEG_LEFT    G(5)\n#define FRONT_LEG_RIGHT  G(6)\n#define FRONT_LEG_LEFT   G(7)\n#define BACK_FOOT_RIGHT  G(8)\n#define BACK_FOOT_LEFT   G(9)\n#define FRONT_FOOT_RIGHT G(10)\n#define FRONT_FOOT_LEFT  G(11)\n#define SHOULDER         G(12)\n#define NECK             G(13)\n#define HEAD             G(14)\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main if (U.y>2.||U.x>20.) discard;\n  //\n    GET(HEAD,head)\n    GET(NECK,neck)\n    GET(SHOULDER,shoulder)\n    GET(BACK,back)\n    GET(BUTT,butt)\n    GET(TAIL,tail)\n    GET(BACK_LEG_RIGHT,back_leg_right)\n    GET(BACK_LEG_LEFT,back_leg_left)\n    GET(FRONT_LEG_RIGHT,front_leg_right)\n    GET(FRONT_LEG_LEFT,front_leg_left)\n    GET(BACK_FOOT_RIGHT,back_foot_right)\n    GET(BACK_FOOT_LEFT,back_foot_left)\n    GET(FRONT_FOOT_RIGHT,front_foot_right)\n    GET(FRONT_FOOT_LEFT,front_foot_left)\n  \n/*\n\n                 _\n            ____/\n           /|\\ |\\\n            | || |\n\n\n*/\nfloat N = 25.;\ndT /= N;\nfor (float _i = 0.; _i < N; _i++) {\n    T += dT;\n    if (I<1) back.z = 0.1,   back.dz = 0.4;\n    butt.z = back.z+0.;     butt.dz = back.dz+0.;\n    tail.z = back.z+.2*pi; tail.dz = butt.dz;\n    shoulder.z = back.z+0.; shoulder.dz = back.dz;\n    neck.z = shoulder.z + .3*pi+.2*cos(8.*T); neck.dz = shoulder.dz+.2*8.*dT*sin(T);\n    head.z = -0.2;      head.dz = neck.dz+0.;\n    \n    float w = -1.5*(HEIGHT(butt.xy.x) - HEIGHT(shoulder.xy.x))/R.y;\n    \n    PLACE(butt,back_leg_right,back_foot_right,.5*an(-4.*T)*1.+vec2(0,1.5+w))\n    PLACE(butt,back_leg_left,back_foot_left,.5*an(-4.*T+pi)*1.+vec2(0,1.5+w))\n     \n    PLACE(shoulder,front_leg_right,front_foot_right,.5*an(-4.*T)*1.+vec2(0,-1.5+w))\n    PLACE(shoulder,front_leg_left,front_foot_left,.5*an(-4.*T+pi)*1.+vec2(0,-1.5+w))\n    \n/*\n\n                 _\n            ____/\n           /|\\ |\\\n            | || |\n\n\n*/\n    if (I<1) back.xy = (0.5,.7)*R, back.dz = -0.02, back.dxy = vec2(8,1);\n    BEHIND(butt,back)\n    BEHIND(tail,butt)\n    \n    BEHIND(back_leg_right,butt)\n    BEHIND(back_foot_right,back_leg_right)\n    \n    BEHIND(back_leg_left,butt)\n    BEHIND(back_foot_left,back_leg_left)\n    \n    INFRONT(back,shoulder)\n    \n    INFRONT(shoulder,front_leg_right)\n    INFRONT(front_leg_right,front_foot_right)\n    \n    INFRONT(shoulder,front_leg_left)\n    INFRONT(front_leg_left,front_foot_left)\n    \n    INFRONT(shoulder,neck)\n    INFRONT(neck,head)\n //\n     vec2 force = vec2(0,gravity);\n     float torq = float(0);\n     FORCE(head)\n     FORCE(neck)\n     FORCE(shoulder)\n     FORCE(back)\n     FORCE(butt)\n     FORCE(tail)\n     FORCE(back_leg_right)\n     FORCE(back_foot_right)\n     FORCE(back_leg_left)\n     FORCE(back_foot_left)\n     FORCE(front_leg_right)\n     FORCE(front_foot_right)\n     FORCE(front_leg_left)\n     FORCE(front_foot_left)\n     \n     back.dxy += dt*force;\n     back.dz +=  dt*torq;\n     back.xy +=  dt*(.5*force+back.dxy);\n     back.z +=   dt*(.5*torq+back.dz);\n}\n //\n     if (M.z>0.) back.dxy += .2*(M.xy-.5*R)/R.y;\n\n //\n    SET(HEAD,head)\n    SET(NECK,neck)\n    SET(SHOULDER,shoulder)\n    SET(BACK,back)\n    SET(BUTT,butt)\n    SET(TAIL,tail)\n    SET(BACK_LEG_RIGHT,back_leg_right)\n    SET(BACK_LEG_LEFT,back_leg_left)\n    SET(FRONT_LEG_RIGHT,front_leg_right)\n    SET(FRONT_LEG_LEFT,front_leg_left)\n    SET(BACK_FOOT_RIGHT,back_foot_right)\n    SET(BACK_FOOT_LEFT,back_foot_left)\n    SET(FRONT_FOOT_RIGHT,front_foot_right)\n    SET(FRONT_FOOT_LEFT,front_foot_left)\n \n \n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}