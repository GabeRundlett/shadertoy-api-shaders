{
    "Shader": {
        "info": {
            "date": "1605902167",
            "description": "Here's a simple sharpening shader! You can all use it in your commercial projects aswell! Enjoy!",
            "flags": 0,
            "hasliked": 0,
            "id": "3sdfWB",
            "likes": 4,
            "name": "Sharpening Filter",
            "published": 3,
            "tags": [
                "processing",
                "sharpening"
            ],
            "usePreview": 1,
            "username": "Tech_",
            "viewed": 494
        },
        "renderpass": [
            {
                "code": "\n#define OFFSET_STRENGTH 0.8\n#define SHARPENING_AMOUNT 7.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    float offsetStrength = .5;\n    float effectStrength = 12.0;\n    \n    vec3 blur = col;\n    blur += texture(iChannel0, uv + vec2(0.0, 0.001 * OFFSET_STRENGTH)).rgb;\n    blur += texture(iChannel0, uv + vec2(0.001 * OFFSET_STRENGTH, 0.0)).rgb;\n    blur += texture(iChannel0, uv - vec2(0.0, 0.001 * OFFSET_STRENGTH)).rgb;\n    blur += texture(iChannel0, uv - vec2(0.001 * OFFSET_STRENGTH, 0.0)).rgb;\n    \n    blur += texture(iChannel0, uv + vec2(0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    blur += texture(iChannel0, uv - vec2(0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    blur += texture(iChannel0, uv + vec2(0.001 * OFFSET_STRENGTH, -0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    blur += texture(iChannel0, uv + vec2(-0.001 * OFFSET_STRENGTH, 0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    \n    blur /= 7.0;\n    \n    float sharpness = (col - blur).r * SHARPENING_AMOUNT;\n    \n    // col = vec3(0);\n    col -= step(distance(fract(uv.x + (sin(iTime) + 1.0) / 2.0) + 0.5, 0.5) * 2.0, 0.013);\n    \n    \n    if(floor(uv.x + ((sin(iTime) + 1.0) / 2.0)) > 0.0) \n    {\n    \tcol += sharpness;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}