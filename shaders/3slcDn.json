{
    "Shader": {
        "info": {
            "date": "1584558540",
            "description": "This is coded in a bus traveling to Helsinki. Shader programming = creativity + math.",
            "flags": 0,
            "hasliked": 0,
            "id": "3slcDn",
            "likes": 11,
            "name": "orange planet",
            "published": 3,
            "tags": [
                "raytracing",
                "metaballs",
                "sphere"
            ],
            "usePreview": 0,
            "username": "makesmi",
            "viewed": 412
        },
        "renderpass": [
            {
                "code": "// sphere radius 2.0, camera distance 4.0\n// camera distance from screen 2.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pixel = (fragCoord-0.5*iResolution.xy)/iResolution.y*2.0;\n\tfloat time = iTime + 26.0;\n    float squareSum = dot(pixel, pixel);\n    float d = (8. - sqrt(16. - squareSum*20.)) / (squareSum + 4.);\n    float isSphere = step(0.0, d);\n    vec3 worldPosition = vec3(d * pixel.xy, d*2. - 4.);\n    \n\tfloat sum = 0.;\n  \tfor(float i = 0.; i < 22.; i++){\n        float angle1 = 2. * cos(i + 0.2 + time*0.11) + 3. * sin(i * 5.7 + 5.);\n        float angle2 = sin(i*3.5 + 3. + time*0.4) + 2. * sin(i * 1.4 + 1.);\n        vec3 direction = vec3(cos(angle1)*sin(angle2), cos(angle2), sin(angle1)+cos(angle2*1.5));\n        vec3 distance = normalize(worldPosition) - normalize(direction);\n        sum += 1.0 / dot(distance, distance);\n  \t}    \n    \n    float outer = smoothstep(7.5, 6.0, abs(sum - 39.0));\n    float inner = smoothstep(16.0, 10.0, abs(sum - 105.));\n    float strong = outer + inner;\n    float fadeout = 1.-smoothstep(-0.5, -1.6, worldPosition.z);  \n    float smoothing = smoothstep(-0.75, -1.0, worldPosition.z);\n    float color = min(isSphere, (fadeout+max(strong, 0.13))*smoothing);    \n    fragColor = vec4(1.,1.-color*0.5,1.-color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}