{
    "Shader": {
        "info": {
            "date": "1525118781",
            "description": "Rotating Julia sets. Use your mouse to set an initial value for c! :D",
            "flags": 0,
            "hasliked": 0,
            "id": "ldcBD4",
            "likes": 1,
            "name": "Rotating Julia Sets",
            "published": 3,
            "tags": [
                "fractal",
                "juliasets"
            ],
            "usePreview": 0,
            "username": "Boomerang",
            "viewed": 504
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 5.0;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec2 coord = scale * mouse - scale/2.0;\n    \n    float theta = atan(coord.y, coord.x);\n    float r = sqrt(coord.x*coord.x + coord.y*coord.y);\n    \n    vec2 c = r * vec2(cos(theta+iTime), sin(theta+iTime));\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int i = 0;\n    int iters = 5000;\n    vec2 z = scale * uv - scale/2.0;\n    \n    while (i < iters && z.x*z.x + z.y*z.y < 4.0) {\n        z = vec2(z.x*z.x - z.y*z.y + c.x, 2.0 * z.x * z.y + c.y);\n        i++;\n    }\n    // Time varying pixel color\n    vec3 col = i == iters ? vec3(0): vec3((30 * i) % 255, (-40 * i) % 255, 50 + 50 * (i % 4)) / 255.0;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n                  \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}