{
    "Shader": {
        "info": {
            "date": "1692206713",
            "description": "color could be better but the motion is cool, golifng always welcome!",
            "flags": 0,
            "hasliked": 0,
            "id": "DlByDy",
            "likes": 32,
            "name": "Springy Subdivision [324 Chars]",
            "published": 3,
            "tags": [
                "spring",
                "subdivision",
                "onetweet",
                "golf"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 462
        },
        "renderpass": [
            {
                "code": "// -10 thanks to Xor ðŸ¦™\n// -26  thanks to Fabrice ðŸ¦™\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u = 1.4 * u / iResolution.xy - .7; \n    \n    float i, // index\n          t, // time\n          f, // fract(time)\n          j; // id\n    \n    for (O *= i; i++ < 8.; O += .6 / exp( (2.+i) * dot(u,u) ) ) \n    {\n        // Springy time\n        f = fract( t = .05*i + .35*iTime - .4 );\n        t -= f + cos(23.*f) / exp(7.*f) - i/.8; \n        \n        // New horiz&vert splits      \n        vec2 H = .4* cos( t + vec2(0,11) ), \n        \n        // New bounds   \n        s = .5*sign(H-u);  \n        \n        j += s.x+s.y+1., \n        \n        // Map uv to new bounds and rotate\n        u = mat2(H,-H.y,H) * ( (u+u -H+s) / (s+H) *s ) /.4;       \n    }\n    \n    // Color (O * palette -> gamma)\n    O = .7 * sqrt(O + O*cos(.4*j +cos(vec4(1,2,3,0)*t)));         \n}\n\n\n// Mid version [352 Chars]\n/*\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u = 1.4 * u / iResolution.xy - .7;\n         \n    float i, // index\n          t, // time\n          h, // horizontal split\n          v, // vertical split\n          j; // id\n          \n    for (O *= i; i++ < 8.; O += .6 / exp((2.+i) * dot(u,u))) {  \n        vec2 z,\n        B = .5 + z, // top-right bounds\n        A = -B;     // bot-left  bounds\n\n        v = fract(t = .05 * i + .35 * iTime - .4),\n\n        // New splits and springy time\n        // (S=cos(t+vec2(0,11)) needs too many S.x's)\n        h = .4 * cos(t -= v + cos(23.*v)/exp(7.*v) - i/.8),\n        v = .4 * sin(t),\n       \n        // New bounds and id\n        u.x < h ? B.x = h, j+=.4 \n                : A.x = h,\n        u.y < v ? B.y = v, j+=.4\n                : A.y = v,\n\n        // Map uv to new bounds and rotate\n        u = (u+u-A-B) / (B-A) * mat2(h, -v, v, h)/.8;\n    }        \n    // Color (O * palette -> gamma)\n    O = .71 * sqrt(O + O*cos(j+cos(vec4(1,2,3,0)*t)));\n}\n//*/\n\n\n// Original [379 Chars]\n/*\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u = 1.4 * (u / iResolution.xy - .5);\n         \n    float i,    // index\n          t,    // time\n          h,    // horizontal split\n          v,    // vertical split\n          j, k, // x, y id values\n          a, b, // x1, x2 horizontal bounds\n          c, d; // y1, y2 vertical bounds\n        \n    for (O = O-O; i++ < 8.;) \n        // Reset bounds\n        a = c = -.5,\n        b = d = .5,\n\n        // Springy time (-.04*i is cool too)\n        t = .05 * i + .35 * iTime - .4,\n        v = fract(t),\n        t -= v + exp(-7.*v)*cos(23.*v) - 1.25*i,               \n        //t = -.5 * iTime,\n        \n        // New splits\n        h = .4 * cos(t),\n        v = .4 * sin(t),\n\n        // New bounds and id\n        u.x < h ? b = h, j+=.4\n                : a = h,    \n        u.y < v ? d = v, k+=.4\n                : c = v,\n\n        // Remap uv to new bounds\n        u = (u-vec2(a, c)) / vec2(b-a, d-c) - .5,\n              \n        // Rotate\n        u *= mat2(h, -v, v, h)/.4,\n        \n        O += .6 / exp((2.+i) * dot(u,u));\n            \n    // Color (O * palette -> gamma)\n    O = .71 * sqrt(O + O*cos(j+k+cos(vec4(1,2,3,0)*t)));\n}\n//*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}