{
    "Shader": {
        "info": {
            "date": "1625165012",
            "description": "messing around with bicomplex numbers which I hadn't even heard of until https://www.shadertoy.com/view/NlBGDd\n",
            "flags": 0,
            "hasliked": 0,
            "id": "NlXXR8",
            "likes": 2,
            "name": "BiComplexFractal 1",
            "published": 3,
            "tags": [
                "fractal",
                "bicomplex"
            ],
            "usePreview": 0,
            "username": "bgold",
            "viewed": 247
        },
        "renderpass": [
            {
                "code": "#define ITER_MAX 255\n#define GAMMA 0.6\n\nvec4 bcSquare( vec4 a ) {\n    return vec4(a.x*a.x - a.y*a.y - a.z*a.z + a.w*a.w,\n                2.0 * (a.x*a.y - a.z*a.t),\n                2.0 * (a.x*a.z - a.y*a.t),\n                2.0 * (a.x*a.t + a.y*a.z));\n}\n\nvec4 bcNorm( vec4 a ) {\n    return vec4(a.x*a.x - a.y*a.y + a.z*a.z - a.w*a.w,\n                2.0 * (a.x*a.y + a.z*a.t),\n                0.0,\n                0.0);\n}\n\nvec3 iterate(vec4 inVec) {\n    vec4 v = inVec;\n    float iterfrac = 0.0;\n    for (int i=0; i<ITER_MAX; i++) {\n        v = bcSquare(v) + inVec;\n        iterfrac = float(i+1)/float(ITER_MAX);\n        if (length(v) > 1000.0) break;\n    }\n    return vec3(bcNorm(v).xy, iterfrac);\n}\n\nvec3 colrot(vec3 c, float th) {\n    vec3 v = c - vec3(0.5);\n    v = mat3(cos(th), 0, -sin(th), 0, 1, 0, sin(th), 0, cos(th)) * v;\n    return v+vec3(0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy/2.0) /iResolution.y;\n    uv *= 2.0;\n\n    vec3 escape = iterate(vec4(uv.x, uv.y, 0.8*sin(iTime/15.7), 0.8*sin(iTime/4.007)));\n    \n    float val = pow(escape.z, GAMMA);\n    float shade = smoothstep(0.1, 10.0, length(escape.xy));\n    float hue = abs(escape.y*10.0);\n    vec3 col = val*colrot(vec3(shade*shade, shade, 1.0), hue);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}