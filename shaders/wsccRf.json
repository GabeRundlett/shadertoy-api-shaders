{
    "Shader": {
        "info": {
            "date": "1602541373",
            "description": "for presentation",
            "flags": 0,
            "hasliked": 0,
            "id": "wsccRf",
            "likes": 3,
            "name": "Julia Sets in Mandel",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "DerStefan",
            "viewed": 368
        },
        "renderpass": [
            {
                "code": "// https://www.mi.sanu.ac.rs/vismath/javier/b3.htm (COLORING ALGORITHMS)\n\nconst vec3 colorf = vec3(.3, .3, .7);\nconst vec3 colorf2 = vec3(.0, .0, .0);\n\nvec3 hsv2rgb( float c )\n{\n    vec3 rgb = clamp( abs(mod(c*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n  return rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y; \n    vec2 mouse = iMouse.xy/iResolution.y;\n    mouse = (mouse == vec2(0.0) ? vec2(0.0) : (iMouse.xy - iResolution.xy*0.5)/iResolution.y);  //for initialization\n    \n    vec2 zoompoint = vec2(0.0);\n    float zoom = .4;\n    //zoom = 1.*(sin(iTime/1.) + 1.5);\n    uv /= zoom;\n    mouse /= zoom;\n    uv += zoompoint;\n    mouse += zoompoint;\n    \n//julia set \n    vec2 juliac = mouse;    \n    vec2 z = uv;\n    vec2 c = juliac;\n    vec2 dz = vec2(0.0);\n    float rz = 0.0;\n    float rdz = 0.0;\n    int nri = 0;\n    \n    for (int i = 0; i < 500; i++)\n    {\n        if(rz > 128.0)\n            break;\n    \n        // Z' -> 2*Z*Z' + 1\n    dz = 2.0 * vec2(z.x * dz.x - z.y * dz.y, z.x * dz.y + z.y * dz.x) + vec2(1.0, 0.0);\n        // Z -> Z^2 + c      \n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;  \n        nri = i;\n        rz = dot(z, z);\n    }\n    \n    //https://iquilezles.org/articles/distancefractals\n    rdz = dot(dz, dz);\n    float d = 0.5*sqrt(rz / rdz) * log(rz);\n    d = clamp(pow(6.0 * d / zoom, 0.2), 0.0, 1.0);\n    \n    //Change coloring method here\n    vec3 color;\n    if (rz < 4.0)\n        color = vec3(0.0);\n    else {\n        float nic = float(nri) + 1. - log2(log2(rz));          //normalized iteration count: https://iquilezles.org/articles/msetsmooth\n        //color = hsv2rgb((nic * .015));                //multicolored\n        color = .5 + .5 * cos(3.0 + nic * .2 + vec3(0.0,0.6,1.0));    //like on wiki?\n        //color = mix(colorf, colorf2, fract(float(nri) * .02));    //(discrete) escape time coloring: Base the color on the number of iterations\n        //color = vec3(d);\n    }\n\n//mandelbrot set \n    vec3 color2;\n    if(iMouse.z > 0.0) {\n//see if juliac is in mandelbrot set\n        z = vec2(0.0);\n        rz = 0.0;\n        c = juliac;\n\n        for (int i = 0; i < 100; i++)\n        {\n            if(rz > 4.0)\n                break;\n\n            // Z -> Z^2 + c      \n            z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n            rz = dot(z, z);\n        }\n        vec3 incolor;\n        if (rz < 4.0)\n            incolor = vec3(0.3, 1.0, 0.3);\n        else\n            incolor = vec3(1.0, 0.3, 0.3);\n        \n        \n        z = vec2(0.0);\n        rz = 0.0;\n        c = uv;\n\n        for (int i = 0; i < 100; i++)\n        {\n            if(rz > 64.0)\n                break;\n\n            // Z -> Z^2 + c      \n            z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n            rz = dot(z, z);\n        }\n\n        \n        if (rz < 4.0)\n            color2 = incolor;\n        else\n            color2 = vec3(0.0);\n\n      //  color = mix(color, color2, 0.2);\n        color = mix(color, vec3(0.0), 0.2);\n    }\n    \n    //red dot which is the julia parameter c\n    color = mix(color, vec3(1.0,0.0,0.0), smoothstep(5.0 / zoom / iResolution.y, 0.0, length(uv-juliac)));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}