{
    "Shader": {
        "info": {
            "date": "1662300229",
            "description": "Simple 2D virus shape shader with animation and drag simulation. Designed to fit on a 1 by 1 quad with radius 1. Insert velocity with the mouse.",
            "flags": 0,
            "hasliked": 0,
            "id": "stKyR3",
            "likes": 6,
            "name": "2D Virus Shape",
            "published": 3,
            "tags": [
                "2d",
                "shape",
                "simplistic",
                "virus"
            ],
            "usePreview": 0,
            "username": "W_Master",
            "viewed": 216
        },
        "renderpass": [
            {
                "code": "// Created by Walter Jansen (2022-09-04)\n//\n//\n// Editable variables at line 45 and in defines.\n\n#define PI 3.1416\n#define TAU (PI * 2.0)\n\n#define SPOKES 9.0\n#define MAX_VEL 1.0\n#define DRAG_EFFECT 1.0\n#define SWAY_FREQUENCY 1.0\n#define SWAY_EFFECT 0.5\n#define SWAY_MAG 0.2\n\nfloat Sway(float dist, float radius, vec2 normal)\n{\n    vec2 velocity = (iMouse.xy / iResolution.xy - vec2(0.5,0.5)) * vec2(iResolution.x/iResolution.y * 2.0, 2.0);\n    float speed;\n    float offset;\n    float sign;\n    float mag;\n    speed = min(MAX_VEL, length(velocity));\n    velocity = normalize(velocity);\n    offset = max(0.0, dist - radius);\n    \n    sign = smoothstep(-0.15, 0.15, dot(normal.yx * vec2(1,-1), velocity));\n    sign = sign * 2.0 - 1.0;\n    \n    mag = (dot(normal, velocity) + 1.0) * DRAG_EFFECT;\n    mag += sin(iTime * SWAY_FREQUENCY * TAU) * 0.2 * SWAY_EFFECT;\n    mag *= speed * offset * sign;\n    \n    return (mag * SWAY_MAG);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.;\n    \n    // EDITABLE Vars\n    float radius = 0.42;\n    float spokeThickness = 0.05;\n    float spokeTransitionRatio = 1.1;\n    float spokeTransitionLength = 0.11;\n    float spokeRadius = 0.07;\n    vec3 colorBG    = vec3(0.12, 0.15, 0.60);\n    vec3 colorSpoke = vec3(1.00, 1.00, 1.00);\n    vec3 colorBase  = vec3(0.40, 0.20, 0.20);\n    vec3 colorEnds  = vec3(0.34, 0.34, 0.34);\n    \n    // Other\n    float spokeDist = (1.0 - spokeRadius);\n    \n    // Polar coordinates\n    float a;\n    float d;\n    a = atan(uv.y, uv.x) / (PI * 2.0) + 0.5; // Range 0.0 - 1.0\n    d = length(uv);\n    \n    // Spoke Cell\n    float c;\n    c = floor(a * SPOKES); // Range 0 - (SPOKES - 1)\n    \n    // Spoke Normal\n    float sway;\n    vec2 normal;\n    vec2 n;\n    a = ((0.5 + c) / SPOKES) * TAU;\n    normal = vec2(-cos(a), -sin(a));\n    sway = Sway(d, radius, normal);\n    n = vec2(-cos(a + sway), -sin(a + sway));\n    \n    vec2 uv2;\n    uv2.x = dot(vec2(n.y, -n.x), uv);\n    uv2.y = dot(n, uv);\n    \n    // Spoke Line\n    float line;\n    line = smoothstep(spokeThickness * 0.5 + 0.0025,spokeThickness * 0.5 - 0.0025, abs(uv2.x));\n    line = line * smoothstep(spokeDist, spokeDist - 0.01, uv2.y);\n    \n    // Circle Shape\n    float circle;\n    float rAdd;  // Transition to spokes\n    rAdd = (cos(min(max(0.0, abs(uv2.x)-spokeThickness*spokeTransitionRatio*0.5) / (spokeThickness * 1.9), 0.5) * TAU) + 1.0) * 0.5 * spokeTransitionLength;\n    circle = smoothstep((radius + rAdd), (radius + rAdd)-0.008, d);\n    \n    // Spoke Circle\n    float sCircle;\n    vec2 p;\n    sway = Sway(spokeDist, radius, normal);\n    p = vec2(-cos(a + sway), -sin(a + sway)) * spokeDist;\n    sCircle = smoothstep(spokeRadius, spokeRadius-0.008, length(uv-p));\n    \n    // Coloring\n    vec3 color;\n    color = mix(colorBG, colorSpoke, line);\n    color = mix(color, colorBase, circle);\n    color = mix(color, colorEnds, sCircle);\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}