{
    "Shader": {
        "info": {
            "date": "1597976387",
            "description": "Source Link : https://www.youtube.com/watch?v=kY7liQVPQSc\nMy Game : https://play.google.com/store/apps/details?id=com.BigBUFF.OnetIconConnect\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wllBW2",
            "likes": 0,
            "name": "18. Mandelbrot fractal",
            "published": 3,
            "tags": [
                "simplebuff"
            ],
            "usePreview": 0,
            "username": "altera0",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "vec2 rot(vec2 p, vec2 pivot, float angle) {\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\n\tp -= pivot;\n\tp = vec2(p.x * c - p.y * s, p.x * s + p.y * c);\n\tp += pivot;\n\n\treturn p;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy )/iResolution.y;\n\n    \n    vec2 m = iMouse.xy / iResolution.xy;\n    float angle = mix( -3.1415 , 3.1415 , m.x );\n    float scale = mix( 3.0f , 0.1f , m.y );\n    \n    \n    vec2 c = /* _Area.xy + */ (uv ) *scale;\n    c = rot(c, vec2(0), angle);\n    \n    \n\n    vec2 z;\n\t\t\t\t\n    float iter;\n    for (iter = 0.0; iter < 255.0; iter++)\n    {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\n        if (length(z) > 2.0)\n            break;\n    }\n\t\t\t\t\n    \n    // Output to screen\n    fragColor = vec4( vec3(iter / 255.0f) ,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}