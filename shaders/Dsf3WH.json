{
    "Shader": {
        "info": {
            "date": "1666031422",
            "description": "3D ring UI component",
            "flags": 0,
            "hasliked": 0,
            "id": "Dsf3WH",
            "likes": 66,
            "name": "UI Test 5",
            "published": 3,
            "tags": [
                "ui",
                "cineshader"
            ],
            "usePreview": 1,
            "username": "yasuo",
            "viewed": 3763
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 64\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define Tri(p,s,a) max(-dot(p,vec2(cos(-a),sin(-a))),max(dot(p,vec2(cos(a),sin(a))),max(abs(p).x-s.x,abs(p).y-s.y)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define Skew(a,b) mat2(1.0,tan(a),tan(b),1.0)\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SkewY(a) mat2(1.0,0.0,tan(a),1.0)\n#define seg_0 0\n#define seg_1 1\n#define seg_2 2\n#define seg_3 3\n#define seg_4 4\n#define seg_5 5\n#define seg_6 6\n#define seg_7 7\n#define seg_8 8\n#define seg_9 9\n#define seg_DP 39\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(234.56,789.34));\n    p+=dot(p,p+34.56);\n    return fract(p.x+p.y);\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\n\nfloat segBase(vec2 p){\n    vec2 prevP = p;\n    \n    float size = 0.02;\n    float padding = 0.05;\n\n    float w = padding*3.0;\n    float h = padding*5.0;\n\n    p = mod(p,0.05)-0.025;\n    float thickness = 0.005;\n    float gridMask = min(abs(p.x)-thickness,abs(p.y)-thickness);\n    \n    p = prevP;\n    float d = B(p,vec2(w*0.5,h*0.5));\n    float a = radians(45.0);\n    p.x = abs(p.x)-0.1;\n    p.y = abs(p.y)-0.05;\n    float d2 = dot(p,vec2(cos(a),sin(a)));\n    d = max(d2,d);\n    d = max(-gridMask,d);\n    return d;\n}\n\nfloat seg0(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    float mask = B(p,vec2(size,size*2.7));\n    d = max(-mask,d);\n    return d;\n}\n\nfloat seg1(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    \n    p = prevP;\n    \n    p.x+=size*1.8;\n    p.y-=size*3.5;\n    mask = B(p,vec2(size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg2(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x-=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg3(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=0.05;\n    mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg4(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    \n    p.x+=size;\n    p.y+=0.08;\n    float mask = B(p,vec2(size*2.,size*2.0));\n    d = max(-mask,d);\n\n    p = prevP;\n    \n    p.y-=0.08;\n    mask = B(p,vec2(size,size*2.0));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg5(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg6(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.y+=0.05;\n    mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg7(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    return d;\n}\n\n\nfloat seg8(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg9(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat segDecimalPoint(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.028;\n    p.y+=0.1;\n    float mask = B(p,vec2(size,size));\n    d = max(mask,d);\n    return d;\n}\n\nfloat drawFont(vec2 p, int char){\n    p*=2.0;\n    float d = 10.;\n    if(char == seg_0) {\n        d = seg0(p);\n    } else if(char == seg_1) {\n        d = seg1(p);\n    } else if(char == seg_2) {\n        d = seg2(p);\n    } else if(char == seg_3) {\n        d = seg3(p);\n    } else if(char == seg_4) {\n        d = seg4(p);\n    } else if(char == seg_5) {\n        d = seg5(p);\n    } else if(char == seg_6) {\n        d = seg6(p);\n    } else if(char == seg_7) {\n        d = seg7(p);\n    } else if(char == seg_8) {\n        d = seg8(p);\n    } else if(char == seg_9) {\n        d = seg9(p);\n    } else if(char == seg_DP) {\n        d = segDecimalPoint(p);\n    }\n    \n    return d;\n}\n\nfloat ring0(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(-iTime*30.+50.));\n    p = DF(p,16.0);\n    p -= vec2(0.35);\n    float d = B(p*Rot(radians(45.0)),vec2(0.005,0.03));\n    p = prevP;\n    \n    p*=Rot(radians(-iTime*30.+50.));\n    float deg = 165.;\n    float a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(-deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);    \n    \n    p = prevP;\n    p*=Rot(radians(iTime*30.+30.));\n    float d2 = abs(length(p)-0.55)-0.015;\n    d2 = max(-(abs(p.x)-0.4),d2);\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(length(p)-0.55)-0.001;\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-iTime*50.+30.));\n    p+=sin(p*25.-radians(iTime*80.))*0.01;\n    d2 = abs(length(p)-0.65)-0.0001;\n    d = min(d,d2);\n    \n    p = prevP;\n    a = radians(-sin(iTime*1.2))*120.0;\n    a+=radians(-70.);\n    p.x+=cos(a)*0.58;\n    p.y+=sin(a)*0.58;\n    \n    d2 = abs(Tri(p*Rot(-a)*Rot(radians(90.0)),vec2(0.03),radians(45.)))-0.003;\n    d = min(d,d2);      \n    \n    p = prevP;\n    a = radians(sin(iTime*1.3))*100.0;\n    a+=radians(-10.);\n    p.x+=cos(a)*0.58;\n    p.y+=sin(a)*0.58;\n    \n    d2 = abs(Tri(p*Rot(-a)*Rot(radians(90.0)),vec2(0.03),radians(45.)))-0.003;\n    d = min(d,d2);     \n    \n    return d;\n}\n\nfloat ring1(vec2 p){\n    vec2 prevP = p;\n    float size = 0.45;\n    float deg = 140.;\n    float thickness = 0.02;\n    float d = abs(length(p)-size)-thickness;\n    \n    p*=Rot(radians(iTime*60.));\n    float a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(-deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    float d2 = abs(length(p)-size)-0.001;\n    \n    return min(d,d2);\n}\n\nfloat ring2(vec2 p){\n    vec2 prevP = p;\n    float size = 0.3;\n    float deg = 120.;\n    float thickness = 0.02;\n    \n    p*=Rot(-radians(sin(iTime*2.)*90.));\n    float d = abs(length(p)-size)-thickness;\n    float a = radians(-deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    float d2 = abs(length(p)-size)-thickness;\n    a = radians(-deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    \n    return min(d,d2);\n}\n\nfloat ring3(vec2 p){\n    p*=Rot(radians(-iTime*80.-120.));\n    \n    vec2 prevP = p;\n    float deg = 140.;\n    \n    p = DF(p,6.0);\n    p -= vec2(0.3);\n    float d = abs(B(p*Rot(radians(45.0)),vec2(0.03,0.025)))-0.003;\n    \n    p = prevP;\n    float a = radians(-deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    \n    p = DF(p,6.0);\n    p -= vec2(0.3);\n    float d2 = abs(B(p*Rot(radians(45.0)),vec2(0.03,0.025)))-0.003;\n    \n    p = prevP;\n    a = radians(-deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    \n    return min(d,d2);\n}\n\nfloat ring4(vec2 p){\n    p*=Rot(radians(iTime*75.-220.));\n    \n    vec2 prevP = p;\n    float deg = 20.;\n    \n    float d = abs(length(p)-0.25)-0.01;\n    \n    p = DF(p,2.0);\n    p -= vec2(0.1);\n    \n    float a = radians(-deg);\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(deg);\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat ring5(vec2 p){\n    p*=Rot(radians(-iTime*70.+170.));\n    \n    vec2 prevP = p;\n    float deg = 150.;\n    \n    float d = abs(length(p)-0.16)-0.02;\n    \n    float a = radians(-deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    p*=Rot(radians(-30.));\n    float d2 = abs(length(p)-0.136)-0.02;\n    \n    deg = 60.;\n    a = radians(-deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    \n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat ring6(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(iTime*72.+110.));\n    \n    float d = abs(length(p)-0.95)-0.001;\n    d = max(-(abs(p.x)-0.4),d);\n    d = max(-(abs(p.y)-0.4),d);\n    \n    p = prevP;\n    p*=Rot(radians(-iTime*30.+50.));\n    p = DF(p,16.0);\n    p -= vec2(0.6);\n    float d2 = B(p*Rot(radians(45.0)),vec2(0.02,0.03));\n    p = prevP;\n    \n    p*=Rot(radians(-iTime*30.+50.));\n    float deg = 155.;\n    float a = radians(deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(-deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);    \n    \n    return min(d,d2);\n}\n\nfloat bg(vec2 p){\n    p.y-=iTime*0.1;\n    vec2 prevP = p;\n\n    p*=2.8;\n    vec2 gv = fract(p)-0.5;\n    vec2 gv2 = fract(p*3.)-0.5;\n    vec2 id = floor(p);\n\n    float d = min(B(gv2,vec2(0.02,0.09)),B(gv2,vec2(0.09,0.02)));\n    \n    float n = Hash21(id);\n    gv+=vec2(0.166,0.17);\n    float d2 = abs(B(gv,vec2(0.169)))-0.004;\n         \n    if(n<0.3){\n        gv*= Rot(radians(iTime*60.));\n        d2 = max(-(abs(gv.x)-0.08),d2);\n        d2 = max(-(abs(gv.y)-0.08),d2);\n        d = min(d,d2);\n    } else if(n>=0.3 && n<0.6){\n        gv*= Rot(radians(-iTime*60.));\n        d2 = max(-(abs(gv.x)-0.08),d2);\n        d2 = max(-(abs(gv.y)-0.08),d2);\n        d = min(d,d2);\n    } else if(n>=0.6 && n<1.){\n        gv*= Rot(radians(iTime*60.)+n);\n        d2 = abs(length(gv)-0.1)-0.025;\n        d2 = max(-(abs(gv.x)-0.03),d2);\n        d = min(d,abs(d2)-0.003);\n    }\n    \n    p = prevP;\n    p = mod(p,0.02)-0.01;\n    d2 = B(p,vec2(0.001));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat numberWithCIrcleUI(vec2 p){\n    \n    vec2 prevP = p;\n    \n    p*=SkewX(radians(-15.0));\n    int num = int(mod(iTime*6.0,10.0));\n    float d = drawFont(p-vec2(-0.16,0.),num);\n    num = int(mod(iTime*3.0,10.0));\n    float d2 = drawFont(p-vec2(-0.08,0.),num);\n    d = min(d,d2); \n    d2 = drawFont(p-vec2(-0.02,0.),seg_DP);\n    d = min(d,d2); \n    \n    p*=1.5;\n    num = int(mod(iTime*10.0,10.0));\n    d2 = drawFont(p-vec2(0.04,-0.03),num);\n    d = min(d,d2); \n    num = int(mod(iTime*15.0,10.0));\n    d2 = drawFont(p-vec2(0.12,-0.03),num);\n    d = abs(min(d,d2))-0.002; \n    \n    p = prevP;\n    \n    p.x-=0.07;\n    p*=Rot(radians(-iTime*50.));\n    p = DF(p,4.);\n    p -= vec2(0.085);\n    d2 = B(p*Rot(radians(45.0)),vec2(0.015,0.018));\n    p = prevP;\n    d2 = max(-B(p,vec2(0.13,0.07)),d2);\n    d = min(d,abs(d2)-0.0005);\n    \n    return d;\n}\n\nfloat blockUI(vec2 p){\n    vec2 prevP = p;\n    p.x+=iTime*0.05;\n    p.y = abs(p.y)-0.02;\n    p.x = mod(p.x,0.04)-0.02;\n    float d = B(p,vec2(0.0085));\n    p = prevP;\n    p.x+=iTime*0.05;\n    p.x+=0.02;\n    p.x = mod(p.x,0.04)-0.02;\n    float d2 = B(p,vec2(0.0085));\n    d = min(d,d2);\n    p = prevP;\n    d = max((abs(p.x)-0.2),d);\n    return abs(d)-0.0002;\n}\n\nfloat smallCircleUI(vec2 p){\n    p*=1.1;\n    vec2 prevP = p;\n    \n    float deg = 20.;\n    \n    p*=Rot(radians(sin(iTime*3.)*50.));\n    float d = abs(length(p)-0.1)-0.003;\n    \n    p = DF(p,0.75);\n    p -= vec2(0.02);\n    \n    float a = radians(-deg);\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    a = radians(deg);\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    p*=Rot(radians(-sin(iTime*2.)*80.));\n    float d2 = abs(length(p)-0.08)-0.001;\n    d2 = max(-p.x,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-iTime*50.));\n    d2 = abs(length(p)-0.05)-0.015;\n    deg = 170.;\n    a = radians(deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(-deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2); \n    d = min(d,abs(d2)-0.0005);\n    \n    return d;\n}\n\nfloat smallCircleUI2(vec2 p){\n    vec2 prevP = p;\n    float d = abs(length(p)-0.04)-0.0001;\n    float d2 = length(p)-0.03;\n    \n    p*=Rot(radians(iTime*30.));\n    float deg = 140.;\n    float a = radians(deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(-deg);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2); \n    d = min(d,d2);\n    \n    d2 = length(p)-0.03;\n    a = radians(deg);\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    a = radians(-deg);\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2); \n    d = min(d, d2);\n    \n    d = max(-(length(p)-0.02),d);\n    \n    return d;\n}\n\nfloat rectUI(vec2 p){\n    p*= Rot(radians(45.));\n    vec2 prevP = p;\n    float d = abs(B(p,vec2(0.12)))-0.003;\n    p*= Rot(radians(iTime*60.));\n    d = max(-(abs(p.x)-0.05),d);\n    d = max(-(abs(p.y)-0.05),d);\n    p = prevP;\n    float d2 = abs(B(p,vec2(0.12)))-0.0005;\n    d = min(d,d2);\n    \n    d2 = abs(B(p,vec2(0.09)))-0.003;\n    p*= Rot(radians(-iTime*50.));\n    d2 = max(-(abs(p.x)-0.03),d2);\n    d2 = max(-(abs(p.y)-0.03),d2);\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(B(p,vec2(0.09)))-0.0005;\n    d = min(d,d2);\n    \n    p*=Rot(radians(-45.));\n    p.y = abs(p.y)-0.07-sin(iTime*3.)*0.01;\n    d2 = Tri(p,vec2(0.02),radians(45.));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(45.));\n    p.y = abs(p.y)-0.07-sin(iTime*3.)*0.01;\n    d2 = Tri(p,vec2(0.02),radians(45.));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(45.));\n    d2 = abs(B(p,vec2(0.025)))-0.0005;\n    d2 = max(-(abs(p.x)-0.01),d2);\n    d2 = max(-(abs(p.y)-0.01),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat graphUI(vec2 p){\n    vec2 prevP = p;\n    p.x+=0.5;\n    p.y-=iTime*0.25;\n    p*=vec2(1.,100.);\n\n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n    \n    float n = Hash21(vec2(id.y))*2.;\n    \n    float w = (abs(sin(iTime*n)+0.25)*0.03)*n*0.5;\n    float d = B(gv,vec2(w, 0.1));\n    \n    p = prevP;\n    d = max((abs(p.x)-0.2),d);\n    d = max((abs(p.y)-0.2),d);\n    \n    return d;\n}\n\nfloat staticUI(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.005,0.13));\n    p-=vec2(0.02,-0.147);\n    p*=Rot(radians(-45.));\n    float d2 = B(p,vec2(0.005,0.028));\n    d = min(d,d2);\n    p = prevP;\n    d2 = B(p-vec2(0.04,-0.2135),vec2(0.005,0.049));\n    d = min(d,d2);\n    p-=vec2(0.02,-0.28);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(0.005,0.03));\n    d = min(d,d2);\n    p = prevP;\n    d2 = length(p-vec2(0.,0.13))-0.012;\n    d = min(d,d2);\n    d2 = length(p-vec2(0.,-0.3))-0.012;\n    d = min(d,d2);\n    return d;\n}\n\nfloat arrowUI(vec2 p){\n    vec2 prevP = p;\n    p.x*=-1.;\n    p.x-=iTime*0.12;\n    p.x = mod(p.x,0.07)-0.035;\n    p.x-=0.0325;\n    \n    p*=vec2(0.9,1.5);\n    p*=Rot(radians(90.));\n    float d = Tri(p,vec2(0.05),radians(45.));\n    d = max(-Tri(p-vec2(0.,-0.03),vec2(0.05),radians(45.)),d);\n    d = abs(d)-0.0005;\n    p = prevP;\n    d = max(abs(p.x)-0.15,d);\n    return d;\n}\n\nfloat sideLine(vec2 p) {\n    p.x*=-1.0;\n    vec2 prevP = p;\n    p.y = abs(p.y)-0.17;\n    p*=Rot(radians(45.));\n    float d = B(p,vec2(0.035,0.01));\n    p = prevP;\n    float d2 = B(p-vec2(0.0217,0.),vec2(0.01,0.152));\n    d = min(d,d2);\n    return abs(d)-0.0005;\n}\n\nfloat sideUI(vec2 p){\n    vec2 prevP = p;\n    p.x*=-1.;\n    p.x+=0.025;\n    float d = sideLine(p);\n    p = prevP;\n    p.y= abs(p.y)-0.275;\n    float d2 = sideLine(p);\n    d = min(d,d2);\n    return d;\n}\n\nfloat overlayUI(vec2 p){\n    vec2 prevP = p;\n    \n    float d = numberWithCIrcleUI(p-vec2(0.56,-0.34));\n    p.x = abs(p.x)-0.56;\n    p.y-=0.45;\n    float d2 = blockUI(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p.x = abs(p.x)-0.72;\n    p.y-=0.35;\n    d2 = smallCircleUI2(p);\n    d = min(d,d2);\n    p = prevP;\n    d2 = smallCircleUI2(p-vec2(-0.39,-0.42));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x -= 0.58;\n    p.y -= 0.07;\n    p.y = abs(p.y)-0.12;\n    d2 = smallCircleUI(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = rectUI(p-vec2(-0.58,-0.3));\n    d = min(d,d2);\n    \n    p-=vec2(-0.58,0.1);\n    p.x = abs(p.x)-0.05;\n    d2 = graphUI(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p.x = abs(p.x)-0.72;\n    p.y-=0.13;\n    d2 = staticUI(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p.x = abs(p.x)-0.51;\n    p.y-=0.35;\n    d2 = arrowUI(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p.x = abs(p.x)-0.82;\n    d2 = sideUI(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat GetDist(vec3 p) {\n    vec3 prevP = p;\n    \n    p.z+=0.7;\n    float maxThick = 0.03;\n    float minThick = 0.007;\n    float thickness = maxThick;\n    float frame = mod(iTime,30.);\n    float time = frame;\n    if(frame>=10.0 && frame<20.){\n        time = getTime(time-10.0,1.5);\n        thickness = (maxThick+minThick)-cubicInOut(time)*maxThick;\n    } else if(frame>=20.){\n        time = getTime(time-20.0,1.5);\n        thickness = minThick+cubicInOut(time)*maxThick;\n    }    \n    \n    float d = ring0(p.xy);\n    d = max((abs(p.z)-thickness),d);\n    \n    p.z-=0.2;\n    float d2 = ring1(p.xy);\n    d2 = max((abs(p.z)-thickness),d2);\n    d = min(d,d2);\n    \n    p.z-=0.2;\n    d2 = ring2(p.xy);\n    d2 = max((abs(p.z)-thickness),d2);\n    d = min(d,d2);\n        \n    p.z-=0.2;\n    d2 = ring3(p.xy);\n    d2 = max((abs(p.z)-thickness),d2);\n    d = min(d,d2);\n            \n    p.z-=0.2;\n    d2 = ring4(p.xy);\n    d2 = max((abs(p.z)-thickness),d2);\n    d = min(d,d2);\n    \n    p.z-=0.2;\n    d2 = ring5(p.xy);\n    d2 = max((abs(p.z)-thickness),d2);\n    d = min(d,d2);\n    \n    p.z-=0.2;\n    d2 = ring6(p.xy);\n    d2 = max((abs(p.z)-thickness),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nvec3 RayMarch(vec3 ro, vec3 rd, int stepnum) {\n    vec3 res = vec3(0.0);\n    float steps = 0.0;\n    float alpha = 0.0;\n    \n    float tmax = 5.;\n    float t = 0.0;\n    \n    float glowVal = 0.003;\n    \n    for(float i=0.; i<float(stepnum); i++) {\n        steps = i;\n        vec3 p = ro + rd*t;\n        float d = GetDist(p);\n        float absd = abs(d);\n\n        if (t > tmax) break;\n\n        alpha += 1.0 - smoothstep(0.0,glowVal, d);        \n        t += max(0.0001, absd * 0.6);\n    }\n    alpha /= steps;\n    \n    res += alpha * vec3(1.5);\n    return res;\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 m =  iMouse.xy/iResolution.xy;\n    \n    vec3 ro = vec3(0, 0, -2.1);\n    if(iMouse.z>0.){\n        ro.yz *= Rot(m.y*3.14+1.);\n        ro.y = max(-0.9,ro.y);\n        ro.xz *= Rot(-m.x*6.2831);\n    } else {\n    \n        float YZ = 45.;\n        float ogRXZ = 50.;\n        float animRXZ = 20.;\n        \n        float frame = mod(iTime,30.);\n        float time = frame;\n\n        if(frame>=10.0 && frame<20.){\n            time = getTime(time-10.0,1.5);\n            \n            YZ = 45.-cubicInOut(time)*45.0;\n            ogRXZ = 50.-cubicInOut(time)*50.0;\n            animRXZ = 20.-cubicInOut(time)*20.0;\n        } else if(frame>=20.){\n            time = getTime(time-20.0,1.5);\n            \n            YZ = cubicInOut(time)*45.0;\n            ogRXZ = cubicInOut(time)*50.0;\n            animRXZ = cubicInOut(time)*20.0;\n        }\n    \n        ro.yz *= Rot(radians(YZ));\n        ro.xz *= Rot(radians(sin(iTime*0.3)*animRXZ+ogRXZ));\n    }\n    \n    vec3 rd = R(uv, ro, vec3(0,0.0,0), 1.0);\n    vec3 d = RayMarch(ro, rd, MAX_STEPS);\n    vec3 col = vec3(.0);\n    float bd = bg(uv);\n    col = mix(col,vec3(1.),S(bd,0.0));\n\n    col=mix(col,d.xyz,0.7);\n    // gamma correction\n    col = pow( col, vec3(0.9545) );    \n\n    float d2 = overlayUI(uv);\n    col = mix(col,vec3(1.),S(d2,0.0));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}