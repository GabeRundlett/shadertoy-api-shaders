{
    "Shader": {
        "info": {
            "date": "1623753292",
            "description": "https://www.shacknews.com/\n\ncheck out my game! https://store.steampowered.com/app/1153850/Super_Space_Towers/",
            "flags": 0,
            "hasliked": 0,
            "id": "7t23WR",
            "likes": 3,
            "name": "shacknews",
            "published": 3,
            "tags": [
                "logo"
            ],
            "usePreview": 0,
            "username": "Del",
            "viewed": 341
        },
        "renderpass": [
            {
                "code": "// shacknews hack :)\n// Del 15/06/2021 - just for fun\n// shacknews rocks :)\n\n#define PI 3.14159265\n#define TWO_PI 6.2831853\n\n\nfloat circle(vec2 p, float radius)\n{\n\treturn length(p) - radius;\n}\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n\tvec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float k = sign( q.y );\n    float d = min(dot( a, a ),dot(b, b));\n    float s = max( k*(p.x*q.y-p.y*q.x),k*(p.y-q.y)  );\n\treturn sqrt(d)*sign(s);\n}\nfloat sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = (p-(a+b)*0.5);\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l,th)*0.5;\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\n\n // --- access to the image of ascii code c\nfloat char(inout vec2 p, int C,float d,float w)\n{\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.)\n    {\n        p.x -= w;\n        return d;\n    }\n    vec4 cc = textureGrad( iChannel0, p/16. + fract( vec2(C, 15-C/16) / 16. ) , dFdx(p/16.),dFdy(p/16.) );\n    p.x -= w;\n    return min(d,(cc.w-0.505));\n}\n\nfloat fontDist(vec2 p)\n{\n    p.x *= 2.0;\n    p.x += 5.8;\n    p.y -= 1.0;\n    p.y *= 0.7;\n    \n    float d = 1e5;\n    float w = 0.514;\n    \n    d =  char(p,83,d,w);\n    d =  char(p,72,d,w);\n    d =  char(p,65,d,w);\n    d =  char(p,67,d,w);\n    d =  char(p,75,d,w);\n    p.x -= 0.2;\n    d =  char(p,78,d,w);\n    d =  char(p,69,d,w);\n    d =  char(p,87,d,w);\n    d =  char(p,83,d,w);\n    p.x -= 5.2;\n    p = 1.0-p;\n    d =  char(p,50,d,w);\n    d =  char(p,53,d,w);\n    p.x -= 0.2;\n    d =  char(p,89,d,w);\n    d =  char(p,69,d,w);\n    d =  char(p,65,d,w);\n    d =  char(p,82,d,w);\n    d =  char(p,83,d,w);\n    \n    return d;\n}\nmat2 rot( float th ){ vec2 a = sin(vec2(1.5707963, 0) + th); return mat2(a, -a.y, a.x); }\n\nfloat CircleText(vec2 p)\n{\n\n    //p*=rot(sin(fract(iTime*0.44)*6.28)*0.35);\n\n\tfloat r = length(p*1.3);\n\tfloat a = atan(p.y,p.x);\n    float yp = (2.0* PI*(r*r));\n    float xp = -a;\n    vec2 p2 = vec2(xp, yp);\n    return fontDist(p2)+0.01;\n}\n\n\nfloat DateText(vec2 p)\n{\n    float d = 1e5;\n    float w = 0.5;\n    \n    p*=14.0;\n    p.y += 0.77;\n    p.x -= 4.27;\n    d =  char(p,50,d,w);\n    d =  char(p,48,d,w);\n    d =  char(p,50,d,w);\n    d =  char(p,49,d,w);\n    p.x += 13.1;\n    d =  char(p,49,d,w);\n    d =  char(p,57,d,w);\n    d =  char(p,57,d,w);\n    d =  char(p,54,d,w);\n    return d;\n}\n\nvec3 hash33( vec3 x )\n{\n\treturn texture( iChannel1, (x.xy+vec2(3.0,1.0)*x.z+0.5)/256.0, -100.0 ).xyz;\n}\n\n// 3D Voronoi- (IQ)\nfloat voronoi(vec3 p){\n\n\tvec3 b, r, g = floor(p);\n\tp = fract(p);\n\tfloat d = 1.; \n\tfor(int j = -1; j <= 1; j++)\n    {\n\t    for(int i = -1; i <= 1; i++)\n        {\n\t\t    b = vec3(i, j, -1);\n\t\t    r = b - p + hash33(g+b);\n\t\t    d = min(d, dot(r,r));\n\t\t    b.z = 0.0;\n\t\t    r = b - p + hash33(g+b);\n\t\t    d = min(d, dot(r,r));\n\t\t    b.z = 1.;\n\t\t    r = b - p + hash33(g+b);\n\t\t    d = min(d, dot(r,r));\n\t    }\n\t}\n\treturn d;\n}\n\n// fbm layer\nfloat noiseLayers(in vec3 p) {\n\n    vec3 pp = vec3(0., 0., p.z + iTime*.15);\n    float t = 0.;\n    float s = 0.;\n    float amp = 1.;\n    for (int i = 0; i < 5; i++)\n    {\n        t += voronoi(p + pp) * amp;\n        p *= 2.;\n        pp *= 1.5;\n        s += amp;\n        amp *= .5;\n    }\n    return t/s;\n}\n\nvec3 neb(in vec2 uv)\n{\n    float dd = length(uv*uv)*0.125;\n    \n\tvec3 rd = normalize(vec3(uv.x, uv.y, 3.141592/8.));\n    rd.xy *= rot(dd-iTime*.025);\n\t\n\tfloat c = noiseLayers(rd*2.25);\n    float oc = c;\n    c = max(c + dot(hash33(rd)*2. - 1., vec3(.006)), 0.);\n    c = pow(c*1.45,3.5);    \n    \n    \n    vec3 col =  vec3(0.55,0.8,0.35);\n    vec3 col2 =  vec3(.85,0.85,1.4)*2.0;\n\n    \n    \n    float pulse2 = voronoi(vec3((rd.xy*1.5),iTime*.255));\n    float pulse = pow(oc*1.35,4.0);\n    //pulse = clamp(pulse,0.0,2.0);\n    col = mix(col,col2,pulse*pulse2)*c;\n    return sqrt(col);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 p = ( fragCoord -.5*iResolution.xy ) / iResolution.y;\n    vec3 background = neb(p);\n\n    p.y *= 1.2+sin(fract(iTime*0.9)*6.28)*0.1;// bounce\n    p.x *= 1.2+cos(fract(iTime*0.9)*6.28)*0.1;// bounce\n\n    \n    float blur = 0.005;\n    \n    //vec3 background = vec3(0.0);\n    vec3 grey = vec3(0.2,0.2,0.2);\n    vec3 txtcol = vec3(0.8,0.8,0.8);\n    vec3 blue = vec3(0.2,0.6,0.6);\n    \n    float _d = length(p);\n    \n    float d = smoothstep(0.0,blur, _d-0.5);\n    vec3 color = mix(background*0.45,background,d);\n    \n    \n    d = smoothstep(0.0,blur, _d-0.3);\n    color = mix(grey,color,d);\n\n\n    d = _d-0.23;\n    d = abs(d)-0.01;\n    d = smoothstep(0.0,blur, d);\n    color = mix(blue,color,d);\n\n    d = _d-0.51;\n    d = abs(d)-0.012;\n    d = smoothstep(0.0,blur, d);\n    color = mix(txtcol,color,d);\n\n\n\tvec2 tri = vec2(0.22,-0.13); // width, height\n\n\tfloat td = sdTriangleIsosceles( p-vec2(-0.05,0.18), tri );\n    d = smoothstep(0.0,blur, td-0.0125);\n    color = mix(grey,color,d);\n\n    d = smoothstep(0.0,blur, td);\n    color = mix(txtcol,color,d);\n    \n    \n    vec2 pp = p-vec2(-0.05,0.0);\n    \n    d = sdOrientedBox(pp,vec2(-0.09,0.05),vec2(-0.0795,-0.14),0.05);\n    d = smoothstep(0.0,blur, d);\n    color = mix(txtcol,color,d);\n    \n    d = sdOrientedBox(pp,vec2(0.09,0.05),vec2(0.0795,-0.14),0.05);\n    d = smoothstep(0.0,blur, d);\n    color = mix(txtcol,color,d);\n    \n    d = circle(p+vec2(0.07,0.055),0.0125);\n    d = smoothstep(0.0,blur, d);\n    color = mix(txtcol,color,d);\n\n    d = CircleText(p);\n    d = smoothstep(0.0,0.03,d);\n    if (p.y > 0.)\n        color = mix(txtcol,color,d);\n    else\n        color = mix(blue,color,d);\n\n    d = DateText(p);\n    \n    d = smoothstep(0.0,blur, d);\n    color = mix(blue*1.1,color,d);\n        \n    \n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}