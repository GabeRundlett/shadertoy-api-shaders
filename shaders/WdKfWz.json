{
    "Shader": {
        "info": {
            "date": "1606930660",
            "description": ":octopus:",
            "flags": 0,
            "hasliked": 0,
            "id": "WdKfWz",
            "likes": 4,
            "name": "- diamond -",
            "published": 3,
            "tags": [
                "diamond"
            ],
            "usePreview": 0,
            "username": "anahit_movsesyan",
            "viewed": 243
        },
        "renderpass": [
            {
                "code": "#define WITH_CUBEMAP\n#define MIX\n\n//---------------------\n\n#define PI 3.14159\n#define EPS 0.001\n#define MAX_DIST 20.\n\nfloat sdTorus(vec3 p) {\n  \treturn length(vec2(length(p.xz) - 1., p.y)) - 0.03;  \n}\n\nfloat sdOctahedron(vec3 p, float s) {\n  \tp = abs(p);\n  \treturn (p.x + p.y + p.z - s) * 0.58;\n}\n\nfloat sdPlane(vec3 p, vec3 n, float off) {\n  return dot(p, n) + off;\n}\n\nmat2 rotMat(float k) {\n    float c = cos(k);\n    float s = sin(k);\n    return mat2(c, -s, s,  c);\n}\n\nvec3 swirl(vec3 p, float k) {\n    float c = cos(k * p.x);\n    float s = sin(k * p.x);\n    return vec3(mat2(c, -s, s, c) * p.yz, p.x);\n}\n\nfloat calcDist(vec3 p) {\n    float dTorus1 = sdTorus(0.3 * swirl(p.yxz, 3. * sin(iTime)));\n    float dTorus2 = sdTorus(0.3 * swirl(p, 3. * sin(iTime)));\n    \n    p.xz *= rotMat(iTime);\n    p.xy *= rotMat(PI / 6.);\n\tfloat dOctahedron = sdOctahedron(p, 1.);\n    float dPlane = sdPlane(p, vec3(0, 1, 0), -0.35);\n    \n    #ifdef MIX\n    return min(mix(dTorus1, dTorus2, sin(iTime) * 0.5 + 0.5), max(dOctahedron, dPlane));\n    #else\n    return min(dTorus1, max(dOctahedron, dPlane));\n    #endif\n}\n\nfloat rayMarch(vec3 rayO, vec3 rayD) {\n    float distFromO = 0.;\n    for (int i = 0; i < 100; ++i) {\n\t    float dS = calcDist(rayO + rayD * distFromO);\n        distFromO += dS;\n        if (dS < EPS || distFromO > MAX_DIST) break;\n    }\n    return distFromO;\n}\n\nvec3 calcNormal(vec3 p) {\n    float d = calcDist(p);\n\treturn normalize(vec3(d - calcDist(p - vec3(EPS, 0,  0 )),\n\t\t\t\t\t  \t  d - calcDist(p - vec3( 0, EPS, 0 )),\n\t\t\t\t\t   \t  d - calcDist(p - vec3( 0,  0, EPS))));\n}\n\nvec3 calcLight(vec3 fragPos, vec3 lightPos, vec3 lightCol, vec3 camDir) {    \n\tvec3 normal = calcNormal(fragPos);\n    vec3 lightDir = normalize(lightPos - fragPos);\n    \n    vec3 ambient = vec3(0.1);\n    vec3 diffuse = vec3(max(dot(normal, lightDir), 0.0));\n    vec3 specular = vec3(0.15 * pow(max(dot(-camDir, reflect(-lightDir, normal)), 0.), 16.));\n    \n    return lightCol * (ambient + diffuse + specular);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 xy = (fragCoord.xy - iResolution.xy / 2.) / min(iResolution.x, iResolution.y);\n    \n    vec3 camPos = vec3(0, 0, -10);\n\tvec3 camDir = normalize(vec3(xy, 1.));\n    \n    float dist = rayMarch(camPos, camDir);\n    \n    vec3 col =  vec3(0.87, 0.92, 0.99) + vec3(0.009 / length(xy + vec2(0., 0.015)));\n    \n    if (dist < MAX_DIST) { \n        #ifdef WITH_CUBEMAP\n        col = texture(iChannel0, reflect(camDir, calcNormal(camPos + dist * camDir))).xyz * vec3(0.95, 1.1, 1.4);\n        #else\n\t\tcol = calcLight(camPos + dist * camDir, vec3(5, 0, -15), vec3(0.9, 0.5, 0.4), camDir);\n        #endif\n    }\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv *= 1.0 - uv.yx;\n    col *=  vec3(pow(uv.x * uv.y * 15., 0.1)); \n    \n\tfragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 25,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}