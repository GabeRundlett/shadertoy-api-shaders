{
    "Shader": {
        "info": {
            "date": "1684375728",
            "description": "It doesn't draw the orbs in order from furthest to nearest so they pass in front of each other in ways that don't make sense. But otherwise I'm pretty happy with it",
            "flags": 0,
            "hasliked": 0,
            "id": "dlK3R3",
            "likes": 1,
            "name": "Infinity Orbs",
            "published": 3,
            "tags": [
                "2d",
                "orb",
                "infinity",
                "orbs"
            ],
            "usePreview": 0,
            "username": "isaacchurchill",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "vec2 circle(vec2 uv, vec2 pos, float r)\n{\n    vec2 diff = uv - pos;\n    diff /= r;\n    float d = dot(diff, diff);\n    float intensity = max(1.0 - d * d, 0.0);\n    float alpha = float(d <= 1.0);\n    return vec2(intensity, alpha);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (uv * 2.0) - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    \n    for (float i = 1.0; i <= 20.0; i++) {\n        if (i > 9.9 && i < 10.1) {\n            col = mix(col,\n                      (0.5 + 0.5 * sin(iTime + vec3(0,2,4))),\n                      min(1.5 + 0.5 * sin(iTime) - length(uv), 1.0));\n        }\n        float theta = iTime + i;\n        vec2 pos = vec2(sin(theta), 0.5 * cos(theta * 2.0 + 3.14159/2.0));\n        vec2 circ = circle(uv, pos, 0.1 + abs(pos.x) * 0.1);\n        vec3 circCol = 0.5 + 0.5 * cos(iTime * i * 0.4 +uv.xyx+vec3(0,2,4));\n        circCol = mix(circCol, vec3(0.0), circ.x);\n        col = mix(col, circCol, circ.y);\n    }\n    \n    for (float i = 1.0; i <= 20.0; i++) {\n        float theta = iTime + i;\n        vec2 pos = vec2(sin(theta), cos(theta)) * 1.6;\n        vec2 circ = circle(uv, pos, 0.15);\n        vec3 circCol = 0.5 + 0.5 * cos(iTime * i * 0.4 +uv.xyx+vec3(0,2,4));\n        circCol = mix(circCol, vec3(1.0), circ.x);\n        col = mix(col, circCol, circ.y);\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}