{
    "Shader": {
        "info": {
            "date": "1721230501",
            "description": "sources  https://www.shadertoy.com/view/4tyfWy https://www.shadertoy.com/view/fdy3WG https://glslsandbox.com/e#78073.0",
            "flags": 0,
            "hasliked": 0,
            "id": "lcXyRS",
            "likes": 6,
            "name": "manada mandala dala",
            "published": 3,
            "tags": [
                "fractal",
                "star",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 264
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nuniform float time;\n\n#define time iTime\n#define resolution iResolution.xy\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n     vec2 uv = ( C - .5*iResolution.xy ) / iResolution.y;\n    vec2 p2 = (C.xy * 2.0 - resolution) /min(resolution.x, resolution.y);\n\tfloat l = 0.3 * abs(cos(time)) / length(p2);\n\tvec3 Color = vec3(l, 0.5, 0.7);\n\tfloat f = 0.0;\n\tfor(float i = 0.0; i < 20.0; i++)\n\t{\n\t\tfloat s = sin(time + i * 1.0) * 0.5;\n\t\tfloat c = cos(time + i * 1.0) * 0.5;\n        f += 0.0025 / abs(length(p2 + vec2(c, s)) - 0.5);\n\t\tf += 0.0015 / abs(length(p2 - vec2(c, s)) - 1.0);\n\t\tf += 0.00215 / abs(length(p2 + vec2(c, s)) - 0.5);\n\t}\n\t\n\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    for(\n        float i=0.,g=0.,e,s;\n        ++i<99.;\n        O.rgb+=mix(r/r,H(log(s)),.7)*.08*exp(-i*i*e))\n    {\n        p=g*d;\n       \n        p.z-=.6;\n\n        s=3.;\n        for(int j=0;j++<8;)\n            p=abs(p+vec3(Color * f)),p=p.x<p.y?p.zxy:p.zyx,\n              p=abs(p),p=p.x<p.y?p.zxy:p.zyx,\n              \n            s*=e=1.8/min(dot(p,p),1.3),\n            p=p*e-vec3(12,3,3);\n        g+=e=length(p.xz)/s;\n  \n    }\n    O=pow(O,vec4(5));\n    uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    O*= vec4(happy_star(uv, anim) * vec3(0.35,0.2,0.15), 1.0);\n    O+= vec4(happy_star(uv, anim) * vec3(0.35,0.2,0.35)*0.1, 1.0);\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}