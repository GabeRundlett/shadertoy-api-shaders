{
    "Shader": {
        "info": {
            "date": "1571087423",
            "description": "An exploration of figure and ground on a hexagonal tiled plane",
            "flags": 0,
            "hasliked": 0,
            "id": "tsXSWS",
            "likes": 6,
            "name": "Field of Diamonds",
            "published": 3,
            "tags": [
                "hexagon",
                "loop",
                "tiling"
            ],
            "usePreview": 0,
            "username": "jrkirby",
            "viewed": 527
        },
        "renderpass": [
            {
                "code": "\nvec2 rotate(vec2 v, float angle) {\n    angle = angle * 3.1415;\n\tfloat s = sin(angle);\n\tfloat c = cos(angle);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat invert(float inUV) {\n    inUV = min(1., max(0., inUV));\n\treturn 1.-inUV;\n}\n\nfloat HexDist(vec2 p) {\n\tp = abs(p);\n    \n    float c = dot(p, normalize(vec2(1,1.73205080757)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\nvec4 HexCoords(vec2 uv) {\n\tvec2 r = vec2(1, 1.73205080757);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 gv = dot(a, a) <= dot(b,b) ? a : b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .5-HexDist(gv);\n    vec2 id = floor(uv-gv + vec2(.00001, .00001));\n    return vec4(x, y, id.x,id.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat stepTime = floor(iTime);\n    float sawTime = mod(stepTime, 2.0);\n    float halfSawTime = mod(floor(iTime/2.), 2.);\n    float sawTimeInv = 1.- sawTime;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv = rotate(uv, 4. *floor(stepTime/2.)/6.);\n\n    vec3 col = vec3(0);\n    \n    uv *= 4.;\n    \n    vec2 motionDir = vec2(-1./2.,1.73205080757/2.);\n    \n    float hexmotion = iTime;\n    vec2 uvSten = uv;\n    uvSten = rotate(uvSten, 2./3.);\n    uvSten = mod(floor(uvSten/.86602540378), 2.0);\n    \n    \n    vec4 hc1 = HexCoords(uv);\n    vec4 hc2 = HexCoords(uv+(motionDir * hexmotion));\n    vec4 hc3 = HexCoords(uv+(motionDir * -hexmotion));\n    vec4 hc4 = mix(hc2, hc3, uvSten.y);\n    \n    vec4 hc = mix(hc1, hc4, sawTimeInv);\n    \n    float rotUV = ((hc.x/3.1415) + 1.) /2.;\n    float rotTime = (mod(iTime, 1.0) /3.) + 1./3.;\n    \n    float c1 = step(rotUV, 1./3.);\n    float c2 = step(rotUV, rotTime);\n    float c = mix(c1, c2, sawTime);\n    float r = invert(c);\n    c = mix(c, r, halfSawTime);\n    \n    col = vec3(c);\n    \n    \n    fragColor = vec4(col,1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}