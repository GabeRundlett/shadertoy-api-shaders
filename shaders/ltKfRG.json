{
    "Shader": {
        "info": {
            "date": "1543002008",
            "description": "Just a monkey pressing keys to create an error",
            "flags": 0,
            "hasliked": 0,
            "id": "ltKfRG",
            "likes": 6,
            "name": "Error step",
            "published": 3,
            "tags": [
                "lines",
                "red",
                "funny",
                "ui",
                "error",
                "whatimdoingwithmylife",
                "okstop"
            ],
            "usePreview": 0,
            "username": "josemorval",
            "viewed": 528
        },
        "renderpass": [
            {
                "code": "float smoothstepFun(float edge0, float edge1, float x) {\n  x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0); \n  return 0.4*x * x * (3. - 2. * x);\n}\n\nfloat gradSmoothstepFun(float edge0, float edge1, float x) {\n  // Scale, bias and saturate x to 0..1 range\n  x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0); \n  // Evaluate polynomial\n  return 0.4*6.*x*(1.-x)*(1./(edge1 - edge0));\n}\n\nfloat smoothstepFun_(float edge0, float edge1, vec2 p){\n  float f1 = abs(smoothstepFun(edge0,edge1,p.x)-p.y);\n  float f2 = gradSmoothstepFun(edge0,edge1,p.x);\n  return f1/sqrt(1.+f2*f2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n  float time = iTime;\n  time *= step(0.5,fract(sin(345.*time)));\n  time+=0.5;\n  \n  float mask = 0.;\n  float mask1 = 0.;\n  float mask2 = 0.;\n  \n  vec2 p = fragCoord.xy/iResolution.xy;\n  p-=0.5;\n  p.x*=iResolution.x/iResolution.y;\n  p*=7.*mix(floor(fract(sin(3434.*time))*3.)/3.,1.,fract(sin(0.01*time)));\n  \n  float t = mod(2.*time,3.)-1.5;\n  p.y-=0.1;\n  p.x-=0.7;\n  mask1 =smoothstepFun_(-0.3,0.3,p-vec2(-1.,0));\n  mask1 = mix(mask1,smoothstepFun_(0.3,-0.3,p-vec2(1.,0.)),step(0.,p.x));\n  mask1 = max(mask1,sin(time)*(1.-min(step(0.,p.x-5.*(t-0.5)),1.-step(0.,p.x-5.*(t-0.)))));\n\n  t = mod(1.5*time+0.7,3.)-1.5;\n  p.x+=1.3;\n  p.y+=0.2;\n  p.y*=-1.;\n  mask2 =smoothstepFun_(-0.3,0.3,p-vec2(-1.,0));\n  mask2 = mix(mask2,smoothstepFun_(0.3,-0.3,p-vec2(1.,0.)),step(0.,p.x));\n  mask2= max(mask2,1.-min(step(0.,p.x-5.*(t-0.9)),1.-step(0.,p.x-5.*(t-0.1))));\n\n  mask1 = min(mask1,mask2);\n  mask = 2.*smoothstep(0.02,0.,mask1)+0.5*smoothstep(0.1,0.,mask1);\n\n  mask = max(mask,fract(sin(1302.*time))*step(0.9,sin(50.*p.x+10.*time))*(1.-step(0.1,abs(p.y))));\n\n  p.x+=5.*fract(sin(2.*time))-2.;\n  p.y+=5.*fract(12.*cos(time));\n  float points = step(0.99,sin(2323.*time))-fract(sin(12.*time+4.*p.x))*step(1.,length(p)-1.);\n  points*=0.05*pow(p.x*p.y-123.*fract(sin(3434.*time)),1.*sin(34.*time+p.x*p.y+p.x));\n  mask = 0.4*max(mask,points)+0.*max(mask,points)*3.*max(mask,points+sin(time));\n  \n  vec3 col = vec3(1.,0.,0.)*(1.-mask);//mix(mask,(1.-mask),step(0.0,sin(0.01*time)));\n  fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}