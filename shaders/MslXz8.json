{
    "Shader": {
        "info": {
            "date": "1396923387",
            "description": "The sixth variation of the \"Iterations\" shader. Orbit trapping for non linear operator applied repeatedly",
            "flags": 0,
            "hasliked": 0,
            "id": "MslXz8",
            "likes": 77,
            "name": "Iterations - shiny",
            "published": 3,
            "tags": [
                "procedural",
                "2d"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 7236
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2014 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work neither\n// as it is or altered, here on Shadertoy or anywhere else, in any\n// form including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it or train a neural\n// network with it without permission. I share this Work for educational\n// purposes, and you can link to it, through an URL, proper attribution\n// and unmodified screenshot, as part of your educational material. If\n// these conditions are too restrictive please contact me and we'll\n// definitely work it out.\n\n\n// Other \"Iterations\" shaders:\n//\n// \"trigonometric\"   : https://www.shadertoy.com/view/Mdl3RH\n// \"trigonometric 2\" : https://www.shadertoy.com/view/Wss3zB\n// \"circles\"         : https://www.shadertoy.com/view/MdVGWR\n// \"coral\"           : https://www.shadertoy.com/view/4sXGDN\n// \"guts\"            : https://www.shadertoy.com/view/MssGW4\n// \"inversion\"       : https://www.shadertoy.com/view/XdXGDS\n// \"inversion 2\"     : https://www.shadertoy.com/view/4t3SzN\n// \"shiny\"           : https://www.shadertoy.com/view/MslXz8\n// \"worms\"           : https://www.shadertoy.com/view/ldl3W4\n// \"stripes\"         : https://www.shadertoy.com/view/wlsfRn\n\n\nvec3 shape( in vec2 p )\n{\n\tp *= 2.0;\n\t\n\tvec3 s = vec3( 0.0 );\n\tvec2 z = p;\n\tfor( int i=0; i<8; i++ ) \n\t{\n        // transform\t\t\n\t\tz += cos(z.yx + cos(z.yx + cos(z.yx+0.5*iTime) ) );\n\n        // orbit traps\t\t\n\t\tfloat d = dot( z-p, z-p ); \n\t\ts.x += 1.0/(1.0+d);\n\t\ts.y += d;\n\t\ts.z += sin(atan(z.y-p.y,z.x-p.x));\n\t\t\n\t}\n\t\n\treturn s / 8.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 pc = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n\n\tvec2 pa = pc + vec2(0.04,0.0);\n\tvec2 pb = pc + vec2(0.0,0.04);\n\t\n    // shape (3 times for diferentials)\t\n\tvec3 sc = shape( pc );\n\tvec3 sa = shape( pa );\n\tvec3 sb = shape( pb );\n\n    // color\t\n\tvec3 col = mix( vec3(0.08,0.02,0.15), vec3(0.6,1.1,1.6), sc.x );\n\tcol = mix( col, col.zxy, smoothstep(-0.5,0.5,cos(0.5*iTime)) );\n\tcol *= 0.15*sc.y;\n\tcol += 0.4*abs(sc.z) - 0.1;\n\n    // light\t\n\tvec3 nor = normalize( vec3( sa.x-sc.x, 0.01, sb.x-sc.x ) );\n\tfloat dif = clamp(0.5 + 0.5*dot( nor,vec3(0.5773) ),0.0,1.0);\n\tcol *= 1.0 + 0.7*dif*col;\n\tcol += 0.3 * pow(nor.y,128.0);\n\n    // vignetting\t\n\tcol *= 1.0 - 0.1*length(pc);\n\t\n\tfragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}