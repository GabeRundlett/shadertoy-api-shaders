{
    "Shader": {
        "info": {
            "date": "1685975762",
            "description": "simple square grid",
            "flags": 0,
            "hasliked": 0,
            "id": "ml3SWl",
            "likes": 1,
            "name": "square grid",
            "published": 3,
            "tags": [
                "grid",
                "square"
            ],
            "usePreview": 0,
            "username": "silica163",
            "viewed": 198
        },
        "renderpass": [
            {
                "code": "vec4 grid(vec2 uv,float s){\n    vec2 ouv = uv;\n    uv = mod(uv*s,1.);\n    vec2 id = floor(ouv*s)/s;\n    return vec4(uv*2.-1.,id+1./s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy)*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(0);\n    vec4 sg = grid(uv*.7,32.);\n    col *= step(abs(sg.x),.9) * step(abs(sg.y),.9);\n    //col *= (sg.z -sin(sg.w*256.+iTime))*(sg.w -sin(sg.z*512.+iTime));\n    col.r += sg.w - sin(sg.z*128.+iTime);\n    col *= step(abs(sg.x),.9) * step(abs(sg.y),.9);\n    col.g += sg.w - sin(sg.z*64.+iTime);\n    col *= step(abs(sg.x),.9) * step(abs(sg.y),.9);\n    col.b += sg.w - sin(sg.z*256.+iTime);\n    col *= step(abs(sg.x),.9) * step(abs(sg.y),.9);\n    \n    \n    //col += step(abs(sg.x),.9) * step(abs(sg.y),.9) * (sg.z -sin(sg.w*1024.-iTime))*(sg.w -sin(sg.z*256.+iTime)); \n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}