{
    "Shader": {
        "info": {
            "date": "1696887954",
            "description": "i just cannot\nit shouldnt be hard\nbut im stupid\nwtf is smoothstep even doing btw\nlike wtf\nits so weird\nit never does what i expect it to do\naaaaaaa\nthis is the best version i can do probably\nwe just need to get rid of thta little section where the tan is",
            "flags": 0,
            "hasliked": 0,
            "id": "DscBz4",
            "likes": 1,
            "name": "fuck i just cant get this rightt",
            "published": 3,
            "tags": [
                "fuck",
                "transition",
                "barreldistortion",
                "opticaltransition",
                "wannabeaftereffects"
            ],
            "usePreview": 0,
            "username": "kwyntes",
            "viewed": 220
        },
        "renderpass": [
            {
                "code": "// Given a vec2 in [-1,+1], generate a texture coord in [0,+1]\nvec2 Distort(vec2 uv, float power)\n{\n    float theta  = atan(uv.y, uv.x);\n    float radius = length(uv);\n    radius = pow(radius, power);\n    uv.x = radius * cos(theta);\n    uv.y = radius * sin(theta);\n    return 0.5 * (uv + 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalised vector adjusted for aspect ratio with origin at the center of the screen\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.xy;\n    //vec2 uv = fragCoord / iResolution.xy;\n    \n    float speed = 4.;\n    float wait = 2.;\n    float end = radians(180.);\n    float lim = 3.;\n    float div = 4.;\n    \n    \n    \n    float MUL = 4.;\n    \n    \n    \n    \n    float x = clamp(iTime*speed, wait+0., wait+end)-wait;\n    //float power = (sin(x) * sign(cos(x))) * MUL + 1.; // no distortion when power=1\n    // it's literally a power, as in math.pow.\n    \n    float pi = radians(180.);\n    //float power = asin(clamp(iTime - pi/2., -pi/2., pi/2.)) + 1.;\n    float power = clamp(-tan(x), -lim, lim) / div + 1.;\n   \n       // smoothstep actually makes our lives harder for some reason wtfffffffffffffffffff\n       /// liek wiehfiuwerhfiuerhgifubeirufgeryuifhbie4rfh what\n       // jdiwefuiwhuioh what ha=eeven fucking happeneddd\n       // fefuwehufihwuifhiwu wWHYY whyyYYy hwhyshauishn WHY DOES NOTGHIBN WORKKkk kk,d,.d.,d.d.d.d.d.... .. , , , \n   \n    //float delay = 2.;\n    //float duration = 1.;\n    //float delayed = max(iTime/duration, delay) - delay;\n    //float power = smoothstep(-1., 1., delayed*2. - 1.) + 1.;\n    \n    //float peek = 4.;\n    \n    //float t = iTime * 2.;\n    //float power = smoothstep(-1., 1., t*2. - 1.) * peek + (t > 0.5 ? (1. - peek) : 1.);\n    \n    vec2 duv = Distort(uv, power);\n    \n    if (x<end/2.) {\n    //if (delayed > 0.5) {\n    //if (t > 0.5) {\n        fragColor = texture(iChannel0, duv);\n    } else {\n        fragColor = texture(iChannel1, duv);\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    },
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}