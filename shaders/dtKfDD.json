{
    "Shader": {
        "info": {
            "date": "1702146897",
            "description": "Interplay of wave patterns and grid structures.",
            "flags": 0,
            "hasliked": 0,
            "id": "dtKfDD",
            "likes": 21,
            "name": "Grid Flow",
            "published": 3,
            "tags": [
                "procedural",
                "waves",
                "grid"
            ],
            "usePreview": 0,
            "username": "harsh",
            "viewed": 476
        },
        "renderpass": [
            {
                "code": "#define t iTime\n#define r iResolution.xy\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 c = vec3(0.0);\n    float l, z = t;\n    for (int i = 0; i < 3; i++) {\n        vec2 uv, p = fragCoord.xy / r;\n        uv = p;\n        p.x *= r.x / r.y;\n        p -= vec2(0.5, 1.1);\n        z += 0.05;\n        l = length(p);\n\n        float grid = 0.7 * sin(p.x * 20.0 + z) * cos(p.y * 20.0 + z + 25.);\n        \n        float wave = (sin(z) + 1.) * abs(sin(l * 7. - z * 1.));\n        \n        uv += (p / l) * wave * grid;\n        uv = mod(uv, 1.0);\n\n        float angle = atan(p.y, p.x);\n        float radius = length(p) * 2.;\n        uv += vec2(cos(angle * radius - z), sin(angle * radius - z)) * grid;\n\n        c[i] = 0.03 / length(mod(uv, 1.) - 0.5);\n    }\n\n    c = c / (l + 0.3);\n\n    fragColor = vec4(c, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}