{
    "Shader": {
        "info": {
            "date": "1667412032",
            "description": "Grid fract try",
            "flags": 0,
            "hasliked": 0,
            "id": "Nt2cDz",
            "likes": 0,
            "name": "Step Grid",
            "published": 3,
            "tags": [
                "firsttrygrid"
            ],
            "usePreview": 0,
            "username": "Yahor10",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "mat2 rotate(float r){\n  \n  float c = cos(r);\n  float s = sin(r);\n  return mat2(c,-s,s,c);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x-=.5;\n      uv.x *=iResolution.x/iResolution.y;\n      float x = 0.0;\n      float y =.0;\n      vec2 uvl = rotate(.7) *uv;\n      vec2 uvr = rotate(-.7) *uv;\n      vec2 uvres = fract(uvl+uvl.x *10.0 ); \n      vec2 uvrightres = fract(uvr+uvr.x*10.0);\n      float leftDiagonal = step(uvres.x,.343)-step(uvres.x,.32);\n      float rightDiagonal = step(uvrightres.x,.343)-step(uvrightres.x,.32);\n\n       // Output to screen\n      fragColor =vec4(vec4(rightDiagonal) * vec4(.0,1.0,.0,1.0)  + vec4(leftDiagonal) * vec4(1.0,.0,.0,1.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}