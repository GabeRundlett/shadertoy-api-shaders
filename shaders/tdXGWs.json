{
    "Shader": {
        "info": {
            "date": "1547777915",
            "description": "This is a manual Sierpinski Triangle.",
            "flags": 0,
            "hasliked": 0,
            "id": "tdXGWs",
            "likes": 0,
            "name": "Manual Sierpinksi!",
            "published": 3,
            "tags": [
                "sierpinskimanualinputnoresursivefunctioninteresting"
            ],
            "usePreview": 0,
            "username": "thenicholaschen",
            "viewed": 439
        },
        "renderpass": [
            {
                "code": "float Band (float t, float start, float end, float blur) {\n    float step1 = smoothstep(start - blur, start + blur, t);\n    float step2 = smoothstep( end + blur, end - blur,t );\n    return step1 * step2;\n}\n\n\nfloat Rectangle (vec2 uv, float blur, float left, float right, float bottom, float top) {\n    float r;\n    r = Band(uv.x, left, right, blur);\n    r *= Band(uv.y, bottom, top, blur);\n    return r;\n}\n\nfloat Triangle (vec2 uv, float blur, float point) {\n    float t = uv.y;\n    return Rectangle(uv, blur, -point + t, point - t , -point - t , point + t);\n}\n\nfloat Inv_Triangle (vec2 uv, float blur, float point) {\n    float t = -uv.y;\n    return Rectangle(uv, blur, -point + t, point - t , -point - t , point + t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col;\n    float x = uv.x;\n    float y = uv.y;\n    float c, row;\n    \n    vec2 pos;\n    \n    row = -0.1;\n    pos = vec2(0,row);\n    float mask = Triangle(uv-pos, 0.001, 0.55);\n    float mask2 = Inv_Triangle(uv-pos, 0.001, 0.27);\n    \n    row = 0.178;\n    pos = vec2(0,row);\n    mask2 += Inv_Triangle(uv-pos, 0.001, 0.142);\n    \n    row = -0.235;\n    pos = vec2(-.41,row);\n    mask2 += Inv_Triangle(uv-pos, 0.001, 0.14);\n    \n    row = -0.235;\n    pos = vec2(.41,row);\n    mask2 += Inv_Triangle(uv-pos, 0.001, 0.14);\n    \n    mask -= mask2;\n    \n    col = vec3(1.,1.,0.)*mask;\n    col += vec3(0., 0., 0.)*mask2;\n    fragColor = vec4(col,1.);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}