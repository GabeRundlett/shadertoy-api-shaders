{
    "Shader": {
        "info": {
            "date": "1650609129",
            "description": "rps",
            "flags": 32,
            "hasliked": 0,
            "id": "4dSBzV",
            "likes": 1,
            "name": "rps cell auto",
            "published": 3,
            "tags": [
                "rps"
            ],
            "usePreview": 0,
            "username": "netgrind",
            "viewed": 181
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor =texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float s = .1;\n\nvec2 getDir(vec2 p){\n    vec2 v = (vec2(cos(iTime+p.x), sin(iTime+p.y)));\n    if(abs(v.x)<.25)\n        v.x = 0.;\n    if(abs(v.y)<.25)\n        v.y = 0.;\n \treturn ceil(abs(v))*sign(v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 1.-uv;\n    vec3 c = texture(iChannel0, uv).rgb;   \n    \n    vec2 dir = getDir((uv.xy-.5)*vec2(cos(iTime), sin(iTime*.5))*20.);\n    \n    uv = 1.-uv;\n   uv = fract((fragCoord.xy+dir) / iResolution.xy);\n\n    vec3 f = texture(iChannel0, uv).rgb;\n    vec3 o = c;\n    if(f.r>0. && o.g >0.){\n        c.g-=s;\n        if(c.g<0.)\n        \tc = f+vec3(s,0.,0.);\n    }\n    if (f.g>0. && o.b >0.){\n        c.b-=s;\n        if(c.b<0.)\n        \tc = f+vec3(.0,s,0.);\n    }\n    if(f.b>0. && o.r >0.){\n        c.r-=s;\n        if(c.r<0.)\n        \tc = f+vec3(.0,0.,s);\n    }\n    \n    if(iFrame<=1 || iMouse.z> 0.){\n    \tc = texture(iChannel1, uv).rgb;  \n        if(c.r>c.g && c.r>c.b)\n            c = vec3(1., 0., 0.);\n        else if(c.g>c.r && c.g>c.b)\n            c = vec3(0., 1., 0.);\n        else\n            c = vec3(0., 0., 1.);\n\n    }\n    \n    fragColor = vec4(c, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}