{
    "Shader": {
        "info": {
            "date": "1508778834",
            "description": "for real light sources, sensors are saturated. But saturate in which color space ?\nHere, testing saturation is LMS retinal color space (Left) vs RGB space (Right).\nDisk: intensity boost *8 (at center) to *1 (exterior = *1 )\nBottom: no sRGB conversion",
            "flags": 0,
            "hasliked": 0,
            "id": "MtBcWm",
            "likes": 2,
            "name": "saturation: LMS vs RGB (3)",
            "published": 3,
            "tags": [
                "saturation",
                "perception",
                "short",
                "onetweet",
                "golf",
                "sensor"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 565
        },
        "renderpass": [
            {
                "code": "// RGB to XYZ see https://en.wikipedia.org/wiki/CIE_1931_color_space\nmat3 RGB2XYZ = mat3( 0.490,  0.310 , 0.200,       \n                     0.177,  0.812 , 0.0106,\n                     0.000,  0.010,  0.990 \n                   ), // /   0.17697,\n// XYZ to LMS see  https://en.wikipedia.org/wiki/LMS_color_space\n#if 0    \n    XYZ2LMS = mat3( 0.38971 , 0.68898 ,-0.07868,   // standard Hunt-Pointer-Estevez / von Kries\n                   -0.22981 , 1.18340 , 0.04641,\n                    0.00000 , 0.00000 , 1.00000 \n                  );\n#else\n    XYZ2LMS = mat3( 0.7328 , 0.4296 ,-0.1624,     // standard CIECAM02\n                   -0.7036 , 1.6975 , 0.0061,\n                    0.0030 , 0.0136 , 0.9834 \n                  );\n#endif\n\n\nvoid mainImage( out vec4 o,vec2 u) {\n    vec2 R = iResolution.xy,\n         U = (u+u-R)/R.y;\n    o = .5+.5*cos(6.28*abs(U.y)+vec4(0,2.1,-2.1,0)); // rainbow\n    //if (U.y>0.) o = pow(o,vec4(2.2)) ;             // sRGB to RGB\n    float l =  1.- .8* length(U);\n     o *= max( 10. * l , 1.);\n    \n    if (U.x < 0.) {                                // left: saturate in LMS space\n        o.xyz *= RGB2XYZ;\n        o.xyz *= XYZ2LMS; \n        o = clamp(o, 0., 1.);\n      //o = U.y < 0. ? step(1.,o) : o;             // show satured\n        o.xyz *= inverse(XYZ2LMS);\n        o.xyz *= inverse(RGB2XYZ);\n    }\n    else {                                         // right: saturate in RGB space\n        o = clamp(o, 0., 1.);\n      //o = U.y < 0. ? step(1.,o) : o;             // show satured\n    }\n    o *= .48;\n    o = fract(o);                                  // test overflow (thus the previous dimming)\n    \n  if (U.y>0.) o = pow(o,vec4(1./2.2)) ;            // top: RGB 2 sRGB\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}