{
    "Shader": {
        "info": {
            "date": "1635594766",
            "description": "just discovered kernel convolution that translates\nclick to add cream\nkey A to apply image\nkey S to delete cream",
            "flags": 48,
            "hasliked": 0,
            "id": "7t3GRr",
            "likes": 15,
            "name": "simple cream",
            "published": 3,
            "tags": [
                "fluid",
                "convolution"
            ],
            "usePreview": 1,
            "username": "lomateron",
            "viewed": 399
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,u);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel2,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  a = A(u);\n    float b = 0.;\n    //kernel convolution\n    {\n        float z    = 4.;//kernel convolution size\n        float blur = 1./z;\n        for(float i = -z; i<=z;++i){\n        for(float j = -z; j<=z;++j){\n          float t  = dot(A(u+vec2(i,j)),vec4(1,0,0,0));\n          float dl = t*6.+1.5; dl = min(dl,5.);    //creaminess\n          float f  = dot(B(u+vec2(i,j)),vec4(.5)); //wall friction\n          vec2  mv =(f*t*.4)*vec2(0,1);            //translation amount\n          float s = 0.;\n          for(float i2 = -z; i2<=z;++i2){\n          for(float j2 = -z; j2<=z;++j2){\n            vec2 c = (mv+vec2(i2,j2))*blur*dl;\n            s += 1./exp(dot(c,c));\n          }}\n          if(s==0.){s = 1.;}\n          vec2 c = (mv-vec2(i,j))*blur*dl;\n          b += t/s/exp(dot(c,c));\n        }}\n    }\n    a = vec4(b,a.xyz);\n    \n    float keyA  = texture( iChannel1, vec2(65.5/256.,.25) ).x;\n    float keyS  = texture( iChannel1, vec2(83.5/256.,.25) ).x;\n    if(keyA!=0.)a = texture( iChannel2, u/iResolution.xy);\n    if(keyS!=0.)a = vec4(0);\n    if(iMouse.z>0.)\n    {\n        vec2 m1 = 2.*(u-iMouse.xy)/iResolution.y;\n        a += .1/exp(dot(m1,m1)*222.);\n    }\n    if(iFrame==0){a = vec4(.5)*float(u.y/iResolution.y>.5);}\n    fragColor = a;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}