{
    "Shader": {
        "info": {
            "date": "1544739675",
            "description": "I don't really know if this is a real analogy to any physical system. But I think there's something to it and it's really fun to to play with.",
            "flags": 32,
            "hasliked": 0,
            "id": "3slGRr",
            "likes": 17,
            "name": "Thermal Particles IV",
            "published": 3,
            "tags": [
                "dynamics",
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 760
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    R = iResolution.xy;\n    vec4 \n        a = T(U+vec2(1,0)),\n        b = T(U-vec2(1,0)),\n        c = T(U+vec2(0,1)),\n        d = T(U-vec2(0,1));\n        \n    vec4 g = vec4(a.zw-b.zw,c.zw-d.zw);\n    vec2 dz = g.xz;\n    vec2 dw = g.yw;\n   \tvec4 v = T(U);\n    float r = smoothstep(0.,2.,length(U-abs(P(U).xy)));\n    vec3 n = normalize(vec3(dz+dw,.1));\n    vec3 t = texture(iChannel2,n).xyz;\n    C.xyz = (t*0.2+0.9)*(0.5+0.5*(r*2.-1.)*sin(.9+r+v.w+.6*v.z*vec3(1,2,3)));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r, inout vec4 mu) {\n    vec2 V = U + r, v = T(V).xy;\n    vec4 t = T (V-v);\n    Q.xy -= 0.25*r*(t.z-Q.z-t.w+Q.w);\n    mu += 0.25*t;\n    return (0.5*(length(r-v+u)-length(r+v-u))+t.z);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tQ = T(U-u);\n \tvec4 p = P(U-u),mu=vec4(0);\n \tQ.z = 0.25*(X(U,u,Q,e,mu)+X(U,u,Q,-e,mu)+X(U,u,Q,e.yx,mu)+X(U,u,Q,-e.yx,mu));\n\tfloat r = smoothstep(3.,1.,length(U-abs(p.xy)));\n \tQ.w =  mix(0.9*mu.w,sign(p.x),r);\n \tQ.xy = mix(Q.xy*0.9,p.zw,r);\n \tQ.z*= 0.995;\n \tif (iMouse.z > 0.) Q.w = mix(Q.w,100.,exp(-.1*dot(U-iMouse.xy,U-iMouse.xy)));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy = vec2(0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r, inout vec4 mu) {\n    vec2 V = U + r, v = T(V).xy;\n    vec4 t = T (V-v);\n    Q.xy -= 0.25*r*(t.z-Q.z-t.w+Q.w);\n    mu += 0.25*t;\n    return (0.5*(length(r-v+u)-length(r+v-u))+t.z);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tQ = T(U-u);\n \tvec4 p = P(U-u),mu=vec4(0);\n \tQ.z = 0.25*(X(U,u,Q,e,mu)+X(U,u,Q,-e,mu)+X(U,u,Q,e.yx,mu)+X(U,u,Q,-e.yx,mu));\n\tfloat r = smoothstep(3.,1.,length(U-abs(p.xy)));\n \tQ.w =  mix(0.9*mu.w,sign(p.x),r);\n \tQ.xy = mix(Q.xy*0.9,p.zw,r);\n \tQ.z*= 0.995;\n \tif (iMouse.z > 0.) Q.w = mix(Q.w,100.,exp(-.1*dot(U-iMouse.xy,U-iMouse.xy)));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy = vec2(0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r, inout vec4 mu) {\n    vec2 V = U + r, v = T(V).xy;\n    vec4 t = T (V-v);\n    Q.xy -= 0.25*r*(t.z-Q.z-t.w+Q.w);\n    mu += 0.25*t;\n    return (0.5*(length(r-v+u)-length(r+v-u))+t.z);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tQ = T(U-u);\n \tvec4 p = P(U-u),mu=vec4(0);\n \tQ.z = 0.25*(X(U,u,Q,e,mu)+X(U,u,Q,-e,mu)+X(U,u,Q,e.yx,mu)+X(U,u,Q,-e.yx,mu));\n\tfloat r = smoothstep(3.,1.,length(U-abs(p.xy)));\n \tQ.w =  mix(0.9*mu.w,sign(p.x),r);\n \tQ.xy = mix(Q.xy*0.9,p.zw,r);\n \tQ.z*= 0.995;\n \tif (iMouse.z > 0.) Q.w = mix(Q.w,100.,exp(-.1*dot(U-iMouse.xy,U-iMouse.xy)));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy = vec2(0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Voronoi based particle tracking\n\nvec2 R;float N;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}//sample fluid\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}//sample particles\nvoid swap (vec2 U, inout vec4 Q, vec2 u) {\n    vec4 p = P(U+u);\n    float dl = length(U-abs(Q.xy)) - length(U-abs(p.xy));\n    Q = mix(Q,p,float(dl>=0.));\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tQ = P(U);\n \tswap(U,Q,vec2(1,0));\n \tswap(U,Q,vec2(0,1));\n \tswap(U,Q,vec2(0,-1));\n \tswap(U,Q,vec2(-1,0));\n \tswap(U,Q,vec2(2,0));\n \tswap(U,Q,vec2(0,-2));\n \tswap(U,Q,vec2(-2,0));\n \tswap(U,Q,vec2(0,2));\n \tvec4 t = T(Q.xy);\n \tvec2 e = vec2(3.5,0);\n \tvec4 \n        a = T(Q.xy+e.xy),\n        b = T(Q.xy+e.yx),\n        c = T(Q.xy-e.xy),\n        d = T(Q.xy-e.yx);\n \tQ.zw = Q.zw-0.06*vec2(a.z-c.z,b.z-d.z)-.1*vec2(a.w-c.w,b.w-d.w);\n \tQ.zw = clamp(Q.zw,-.9,.9);\n \tQ.xy = sign(Q.xy)*(abs(Q.xy)+Q.zw);\n \t\n \tif (iFrame < 1 && U.x>20.&&R.x-U.x>20.&&U.y>20.&&R.y-U.y>20.) {\n       Q = vec4(floor(U/10.+0.5)*10.,0,0);\n    }\n \t\n \tif (abs(Q.x)<10.)Q.z=0.9*abs(Q.z);\n \tif (R.x-abs(Q.x)<10.)Q.z=-0.9*abs(Q.z);\n \tif (abs(Q.y)<10.)Q.w=0.9*abs(Q.w);\n \tif (R.y-abs(Q.y)<10.)Q.w=-0.9*abs(Q.w);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}