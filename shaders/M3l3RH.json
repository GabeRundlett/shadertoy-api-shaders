{
    "Shader": {
        "info": {
            "date": "1707159630",
            "description": "A basic triangles drawing with color blending",
            "flags": 0,
            "hasliked": 0,
            "id": "M3l3RH",
            "likes": 1,
            "name": "Triangles with blend color",
            "published": 3,
            "tags": [
                "triangle",
                "color",
                "blend",
                "shape"
            ],
            "usePreview": 0,
            "username": "AstalNeker",
            "viewed": 131
        },
        "renderpass": [
            {
                "code": "vec4 blendColor(vec4 colorA,vec4 colorB)\n{\n    return colorA * (1.0 - colorB.a) + colorB * colorB.a;\n}\n\nvec4 triangle(vec4 curcolor,vec2 uv,vec2 posA,vec2 posB,vec2 posC,vec4 color)\n{\n    // Compute vectors\n    vec2 v0 = posC - posA;\n    vec2 v1 = posB - posA;\n    vec2 v2 = uv - posA;\n\n    // Compute dot products\n    float dot00 = dot(v0, v0);\n    float dot01 = dot(v0, v1);\n    float dot02 = dot(v0, v2);\n    float dot11 = dot(v1, v1);\n    float dot12 = dot(v1, v2);\n\n    // Compute barycentric coordinates\n    float invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);\n    float u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    float v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n    // Check if point is in triangle\n    if((u >= 0.0) && (v >= 0.0) && (u + v <= 1.0)) {\n        return blendColor(curcolor,color);\n    }\n    \n    return curcolor;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 currentcolor = vec4(0.0,0.0,0.0,0.0); // default screen color\n    \n    // draw red triangle\n    currentcolor = triangle(currentcolor,uv,vec2(0.2,0.2),vec2(0.8,0.8),vec2(0.3,0.6),vec4(1.0,0.0,0.0,1.0));\n    \n    // draw green triangle with alpha 0.4\n    currentcolor = triangle(currentcolor,uv,vec2(0.4,0.2),vec2(0.6,0.8),vec2(0.3,0.6),vec4(0.0,1.0,0.0,0.4));\n    \n    // draw blue triangle with alpha 0.8\n    currentcolor = triangle(currentcolor,uv,vec2(0.3,0.1),vec2(0.6,0.5),vec2(0.3,0.6),vec4(0.0,0.0,1.0,0.8));\n    \n    fragColor = vec4(currentcolor.xyz,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}