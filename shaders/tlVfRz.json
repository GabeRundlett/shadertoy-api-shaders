{
    "Shader": {
        "info": {
            "date": "1613808886",
            "description": "参考效果：https://www.shadertoy.com/view/MssXDn\n通过一个粒子+三条发光线条组成一个元素，多个元素通过一个排列的方法组合成形状",
            "flags": 0,
            "hasliked": 0,
            "id": "tlVfRz",
            "likes": 6,
            "name": "Particle Motion",
            "published": 3,
            "tags": [
                "particle"
            ],
            "usePreview": 0,
            "username": "hanker",
            "viewed": 363
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\n#define PARTICLE_NUMBER 80.\n\nfloat grow(vec2 uv,float growWidth,float filmWidth){\n    //发光效果的本质是定义了一个矩形，矩形内通过x和y的坐标去进行渐变\n    if(abs(uv.y) > growWidth)return 0.;\n    float y = uv.y / growWidth;\n    float d = abs(uv.x / filmWidth);\n    return sqrt(1. - y * y) / (d) * .1;\n}\nfloat star(vec2 uv,float growWidth,float filmWidth){\n    //通过旋转矩阵去生成其他两条光带 +-60度\n    //二维矩阵\n    vec2 rotUV1 = mat2(\n        cos(PI / 3.),-sin(PI / 3.),\n        sin(PI / 3.),cos(PI / 3.)\n    ) * uv;\n    vec2 rotUV2 = mat2(\n        cos(PI / 3.),sin(PI / 3.),\n        -sin(PI / 3.),cos(PI / 3.)\n    ) * uv;\n    return grow(uv,growWidth,filmWidth) + grow(rotUV1,growWidth,filmWidth) +grow(rotUV2,growWidth,filmWidth) ;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n    vec2 uv = fragCoord / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float t = iTime;\n\n    vec3 color = vec3(0.);\n    for(float i = 0.; i < PARTICLE_NUMBER; i+=1.){\n        float t = i / PARTICLE_NUMBER;\n        float a = t * 2. * PI + iTime * .1;\n        //定义环形的方法（数学真伟大）\n        vec3 pos=vec3(\n            sin(a)+2.0*sin(2.0*a),\n            cos(a)-2.0*cos(2.0*a),\n            -sin(3.0*a))*0.01;\n        float a1 = .1 * iTime;\n\n        //整体再旋转\n        pos.xy *= mat2(\n            cos(a1),-sin(a1),\n            sin(a1),cos(a1)\n        ) * 30.;\n       \n       //简单加一下颜色，毕竟只白色还是差点意思\n        color += star(uv + pos.xy,.02,.3) * abs(vec3(\n            sin(i + .123),sin(i + .412),sin(i + .789)\n        ));\n    }\n    fragColor = vec4(color,1.);\n}\n   ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}