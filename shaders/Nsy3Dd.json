{
    "Shader": {
        "info": {
            "date": "1632385640",
            "description": "Task for Tatev",
            "flags": 2,
            "hasliked": 0,
            "id": "Nsy3Dd",
            "likes": 4,
            "name": "random puzzle cubes 2",
            "published": 3,
            "tags": [
                "task"
            ],
            "usePreview": 0,
            "username": "gormonboza",
            "viewed": 333
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n    return fract( sin ( dot (co, vec2(12.9898, 78.233))) * 43758.5453 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 nUV = (uv - .5) * iResolution.xy / vec2(iResolution.y);\n\tint count = 6;\n\tnUV *= float(count);\n\tfloat cellSize = iResolution.y / float(count);\n\tivec2 gRes = ivec2(count);\n\tgRes.x = int(ceil(iResolution.x / cellSize) + 1.);\n\tint gCount = gRes.x * gRes.y;\n\tvec2 gUV = fract(nUV) - .5;\n\tvec2 id = floor(nUV);\n\tfloat act = step(1., float(int(iTime) % 2));\n\tid += float(int(iTime));\n\tint newID = int(rand(id) * float(gCount));\n\tvec2 lookup = vec2(newID % gRes.x, int(newID / gRes.x));\n\tvec2 cellCenter0 = uv - gUV * iResolution.y / iResolution.xy / float(count);\n\tvec2 cellCenter1 = ((cellSize * lookup) - (cellSize / 2.)) / iResolution.xy;\n\tcellCenter1 = clamp(cellCenter1, cellSize / 2. / iResolution.xy, 1. - cellSize / 2. / iResolution.xy);\n\tcellCenter0 = cellCenter0 * act + cellCenter1 * (1. - act);\n\tvec2 cellUV = cellCenter0 + gUV * iResolution.y / iResolution.xy / float(count);\n\tvec4 color = texture(iChannel0, cellUV);\n\tfragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}