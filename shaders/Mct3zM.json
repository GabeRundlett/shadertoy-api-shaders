{
    "Shader": {
        "info": {
            "date": "1713058582",
            "description": "Test code",
            "flags": 0,
            "hasliked": 0,
            "id": "Mct3zM",
            "likes": 2,
            "name": "Base Test Code",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "Iris_",
            "viewed": 71
        },
        "renderpass": [
            {
                "code": "float f(in vec2 uv)\n{\n    return uv.x * uv.x - uv.y * uv.y + 0.5;\n}\n\nvec2 rotate(in vec2 uv, float theta)\n{\n    return vec2(uv.x*sin(theta) + uv.y*cos(theta), uv.y*sin(theta) - uv.x*cos(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5f;\n\n    float[] factor = float[3](0.5, 0.8, 1.2);\n    vec3[] colormap = vec3[3](vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0));\n\n    vec3 col = vec3(0);\n    for(int i = 0; i < 3; i++)\n    {\n        col += colormap[i] * f(rotate(uv, iTime*factor[i]));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}