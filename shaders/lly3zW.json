{
    "Shader": {
        "info": {
            "date": "1473456332",
            "description": "A few compositing effects put together to look like the video feed from a malfunctioning camera in a low light environment",
            "flags": 0,
            "hasliked": 0,
            "id": "lly3zW",
            "likes": 6,
            "name": "Low light video feed",
            "published": 3,
            "tags": [
                "video",
                "malfunction",
                "lowlight"
            ],
            "usePreview": 0,
            "username": "Toonst49",
            "viewed": 975
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n    return fract(sin(iTime * dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat contrast( float Value, float Contrast, float Brightness) {\n    return (Value - 0.5) * Contrast + Brightness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float vignette = distance( vec4(uv.x, uv.y, 0,1) , vec4(0.5,0.5,0,1));\n    vignette = 1. - vignette + sin(iTime * 2.) / 16.;\n    \n    float noise = rand(uv);\n    float tex = texture(iChannel0, vec2(uv.x, uv.y)).r;\n    \n    vec4 color = vec4(0.4,0.8,0.6,1);\n    \n    float bars = 1.;\n    if((1. - sin(uv.y * 10000. + iTime)) < 0.1) {\n    \tbars = 0.9;   \n    }\n    \n    float multiplier = vignette * noise * tex * bars;\n    multiplier = contrast(multiplier,1.5,0.6);\n    \n\tfragColor = color * multiplier * 2.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}