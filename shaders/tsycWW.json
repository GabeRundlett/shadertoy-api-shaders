{
    "Shader": {
        "info": {
            "date": "1602834370",
            "description": "Remix of \"Ship HUD\" by amitpanna",
            "flags": 0,
            "hasliked": 0,
            "id": "tsycWW",
            "likes": 12,
            "name": "Shipped HUD+",
            "published": 3,
            "tags": [
                "2d",
                "flat",
                "remix",
                "glitch",
                "fork",
                "tech",
                "weird",
                "hud",
                "ship",
                "shrink"
            ],
            "usePreview": 0,
            "username": "UrbanClubProfessional",
            "viewed": 643
        },
        "renderpass": [
            {
                "code": "float getBox(vec2 st, float left, float bottom, float width, float height) {\n    float sm = 0.003;\n    float x_range = smoothstep(left - sm, left, st.x) - smoothstep(left + width, left + width + sm, st.x);\n    float y_range = smoothstep(bottom - sm, bottom, st.y) - smoothstep(bottom + height,bottom + height + sm, st.y);\n    \n    return x_range * y_range;\n}\n\nfloat getCircle(vec2 st, vec2 center, float radius, float thickness, float sm) {\n    float distance = distance(st, center);\n    return smoothstep(radius, radius + sm, distance) - smoothstep(radius + thickness, radius + thickness + sm, distance);\n}\n\nfloat getDottedCircle(vec2 st, vec2 center, float radius, float thickness, float sm) {\n    float distance = distance(st, center);\n    float circle = smoothstep(radius, radius + sm, distance) - smoothstep(radius + thickness, radius + thickness + sm, distance);\n    \n    vec2 vector = center - st;\n    float angle = atan(vector.y, vector.x);\n    angle = ((angle * 0.6) + (4.14 * 0.6)) / 4.14;\n    circle *= step(9., mod(floor(angle / 0.002), 20.0));\n    \n    return circle;\n}\n\nmat2 rotate(in float angle) {\n    return mat2(\n                cos(angle), -sin(angle), \n                sin(angle), cos(angle)\n    \t\t);\n}\n\nvec2 getRotation(vec2 st, vec2 origin, float angle) {\n    vec2 rotatedCoord = st - vec2(origin);\n    rotatedCoord = rotate(angle) * rotatedCoord;\n    rotatedCoord += vec2(origin);\n    \n    return rotatedCoord;\n}\n\nmat2 scale(in float x, in float y) {\n    return mat2(\n        \t\tx, 0.0, \n                0.0, y\n        \t);\n}\n\nvec2 getScaling(vec2 st, vec2 origin, float x, float y) {\n    vec2 scaledCoord = st - vec2(origin);\n    scaledCoord = scale(x, y) * scaledCoord;\n    scaledCoord += vec2(origin);\n    \n    return scaledCoord;\n}\n\nfloat getInnetDial(vec2 st, float center, float radius) {\n \tfloat lineThickness = 0.003;\n    float sm = 0.004;\n    \n    float circle2 = getCircle(st, vec2(center), radius - 0.025, lineThickness, sm);\n    circle2 *= step(st.x, -0.354);\n    \n    float circle2dash1 = getBox(st, -0.354, 0.234, 0.200, lineThickness);\n    circle2 += circle2dash1;\n    float circle2dash1_2 = getBox(st, -0.304, 0.234, 0.062, lineThickness * 3.);\n    circle2 += circle2dash1_2;\n    float circle2dash2 = getBox(st, -0.388, 0.078, 0.041, lineThickness);\n    circle2 += circle2dash2;\n    float circle2dash2_2 = getBox(st, -0.347, 0.078, 0.196, lineThickness);\n    circle2 += circle2dash2_2;\n    float circle2dash3 = getBox(st, -0.450, 0.0, 0.315, lineThickness);\n    circle2 += circle2dash3;\n    float circle2dash3_2 = getBox(st, -0.29, 0.0, 0.065, lineThickness * 3.);\n    circle2 += circle2dash3_2;\n    float circle2dash3_3 = getBox(st, -0.46, 0.0, lineThickness * 3., lineThickness * 3.);\n    circle2 += circle2dash3_3;\n    float circle2dash4 = getBox(st, -0.388, -0.078, 0.041, lineThickness);\n    circle2 += circle2dash4;\n    float circle2dash4_2 = getBox(st, -0.347, -0.078, 0.196, lineThickness);\n    circle2 += circle2dash4_2;\n    \n    float circle2dash5 = getBox(st, -0.23, 0.0, 0.02, lineThickness);\n    circle2 += circle2dash5;\n    float circle2dash5_1 = getBox(st, -0.22, -0.04, lineThickness, 0.07);\n    circle2 += circle2dash5_1;\n    float circle2dash5_2 = getBox(st, -0.218, 0.04, 0.02, lineThickness);\n    circle2 += circle2dash5_2;\n    float circle2dash5_3 = getBox(st, -0.218, -0.04, 0.02, lineThickness);\n    circle2 += circle2dash5_3;\n    \n    return circle2;\n}\n\nfloat getSideLine(vec2 st, float left, float top, float lineThickness) {\n    float lineEdgeLength = 0.009;\n    float sideLine = getBox(st, left, top, lineThickness, 0.336);\n    sideLine += getBox(st, left + lineThickness, top + 0.334, lineEdgeLength, lineThickness);\n    sideLine += getBox(st, left + lineThickness, top, lineEdgeLength, lineThickness);\n    sideLine += getBox(st, left + lineThickness + 0.007, 0.0, lineThickness, lineThickness);\n    \n    return sideLine;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord.xy / iResolution.xy;\n    st -= 0.5;\n    st.x *= iResolution.x/iResolution.y;\n\tfragColor = vec4(st,0.6+0.6*sin(iTime),2.0);\n    \n    float center = 0.0;\n    float radius = 0.4;\n    float sm = 0.004;\n    float lineThickness = 0.003;\n    float angle = atan(st.y, st.x);\n    angle = (angle + 4.1416) / (3.0 * 4.1416);\n\n    vec3 color = vec3(0.);\n    \n    st = getRotation(st, vec2(center), -iTime);\n    float circle1 = getCircle(st, vec2(0.), radius, lineThickness, sm);\n    circle1 *= (step(st.x, -0.35) + step(0.35, st.x));\n    st = getRotation(st, vec2(center), iTime);\n    \n    \n    \n    float dottedCircle = getDottedCircle(st, vec2(center), radius + 0.025, lineThickness + 0.003, sm);\n    dottedCircle *= (\n        (step(0.03, angle) - step(0.09, angle)) +\n        (step(0.19, angle) - step(0.26, angle)) +\n        (step(0.42, angle) - step(0.5, angle)) +\n        (step(0.51, angle) - step(0.58, angle)) +\n        \n        (step(0.62, angle) - step(0.69, angle)) +\n        (step(0.7, angle) - step(0.76, angle)) +\n        (step(0.93, angle) - step(0.99, angle)) +\n        (step(1.9, angle) - step(1.98, angle))\n    );\n    \n    float timeFactor = 4.14 * 0.3 * cos(iTime * 0.6);\n    st = getRotation(st, vec2(center), timeFactor);\n    float dial1 = getDottedCircle(st, vec2(center), radius + 0.05, lineThickness + 0.02, sm);\n    \n    float dial2 = getDottedCircle(st, vec2(center), radius + -0.05, lineThickness + 0.02, sm);\n    dial2 += getDottedCircle(st, vec2(center), radius + -0.03, lineThickness + 0.002, sm);\n    st = getRotation(st, vec2(center), -timeFactor);\n    \n    \n    dial1 *= (step(0.762, angle) - step(0.94, angle));\n    dial2 *= (step(0.782, angle) - step(0.92, angle));\n    \n    \n    float sideLine = getSideLine(st, -0.5, -0.216, 0.003);\n    st = getScaling(st, vec2(0.0), -2.0, 2.0);\n    sideLine += getSideLine(st, -0.5, -0.216, 0.003);\n    st = getScaling(st, vec2(0.0), -2.0, 2.0);\n    \n    st = getRotation(st, vec2(center), 4.14 * 0.2 * sin(iTime));\n    \n    float innerDial = getInnetDial(st, center, radius);\n    st = getScaling(st, vec2(0.0), -2.0, 2.0);\n    innerDial += getInnetDial(st, center, radius);\n    st = getScaling(st, vec2(0.0), -2.0, 2.0);\n    \n    \n    st = getRotation(st, vec2(center), 4.14 / 5.);\n    float box = getBox(st, -0.078, -0.067, 0.005, 0.215);\n    box += getBox(st, 0.076, -0.067, 0.005, 0.215);\n    box += getBox(st, -0.067, 0.080, 0.215, 0.005);\n    box += getBox(st, -0.067, -0.080, 0.215, 0.005);\n    box -= getBox(st, -0.046, -0.046, 0.082, 0.082);\n    \n    box += getBox(st, -0.06, -0.06, 0.007, 0.007);\n    box += getBox(st, 0.058, -0.06, 0.007, 0.007);\n    box += getBox(st, 0.058, 0.056, 0.007, 0.007);\n    box += getBox(st, -0.06, 0.056, 0.007, 0.007);\n    \n    float innerBox = getBox(st, -0.05, -0.05, 0.09, 0.09);\n    innerBox -= getBox(st, -0.046, -0.046, 0.082, 0.082);\n    innerBox += getBox(st, -0.08, -0.08, 0.007, 0.007);\n    innerBox += getBox(st, 0.076, -0.08, 0.007, 0.007);\n    innerBox += getBox(st, 0.076, 0.076, 0.007, 0.007);\n    innerBox += getBox(st, -0.08, 0.076, 0.007, 0.007);\n    st = getRotation(st, vec2(center), -4.14 / 5.);\n    \n    st = getRotation(st, vec2(center), -4.14 * 0.2 * sin(iTime));\n    \n    float sideMarks = step(28., mod(floor((st.y + 0.2 * sin(iTime)) / 0.003), 30.0));\n    sideMarks *= (\n        (step(-0.54, st.x) - step(-0.515, st.x)) +\n        (step(0.515, st.x) - step(0.54, st.x))\n    );\n    sideMarks *= (step(-0.22, st.y) - step(0.22, st.y));\n    \n    float sideMarksBox = getBox(st, -0.55, -0.055, 0.05, 0.04);\n    sideMarksBox -= getBox(st, -0.548, -0.023, 0.046, 0.036);\n    st = getScaling(st, vec2(0.0), -2.0, 2.0);\n    sideMarksBox += getBox(st, -0.55, -0.025, 0.05, 0.04);\n    sideMarksBox -= getBox(st, -0.548, -0.023, 0.046, 0.036);\n    st = getScaling(st, vec2(0.0), -2.0, 2.0);\n    \n    sideMarksBox += getBox(st, -0.0035, 0.43, 0.006, 0.006);\n    sideMarksBox += getBox(st, -0.0035, 0.35, 0.006, 0.006);\n    \n    box *= (0.3 + 0.9 * pow(abs(sin(iTime * 5.)), 3.));\n\n    color += vec3(2.000,0.445,0.387) * circle1;\n    color += vec3(0.49,0.71,0.75) * dottedCircle;\n    color += vec3(0.49,0.71,0.75) * dial1;\n    color += vec3(0.49,0.71,0.75) * dial2;\n    color += vec3(0.49,0.71,0.75) * innerDial;\n    color += vec3(0.49,0.71,0.75) * sideLine;\n    color += vec3(0.49,0.71,0.75) * sideMarks;\n    color += vec3(0.49,0.71,0.75) * sideMarksBox;\n    color += vec3(1.995,0.525,0.004) * box;\n    color += vec3(1.96, 1.98, 0.9) * innerBox;\n    \n    fragColor = vec4(color,2.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}