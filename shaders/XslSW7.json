{
    "Shader": {
        "info": {
            "date": "1402396851",
            "description": "Conversion of an old generative art program to GLSL. Could probably do more with this method, might go for a #2 too. Run in fullscreen!",
            "flags": 0,
            "hasliked": 0,
            "id": "XslSW7",
            "likes": 24,
            "name": "Pop Art #1",
            "published": 3,
            "tags": [
                "monochrome",
                "popart"
            ],
            "usePreview": 0,
            "username": "WAHa_06x36",
            "viewed": 1715
        },
        "renderpass": [
            {
                "code": "#define SUPERSAMPLE\n\nfloat rand(vec3 r) { return fract(sin(dot(r.xy,vec2(1.38984*sin(r.z),1.13233*cos(r.z))))*653758.5453); }\n\nvec2 threshold(vec2 threshold,vec2 x,vec2 low,vec2 high) { return low+step(threshold,x)*(high-low); }\n\nfloat art(vec2 position)\n{\n\tvec2 topleft=vec2(-1.0);\n\tvec2 bottomright=vec2(1.0);\n\tfloat col=1.0;\n\n\tfor(int i=0;i<7;i++)\n\t{\n\t\tvec2 midpoint=(topleft+bottomright)/2.0;\n\t\tvec2 diagonal=bottomright-topleft;\n\n\t\t//if(position.x>bottomright.x || position.y>bottomright.y) break;\n\t\t//if(position.x<topleft.x || position.y<topleft.y) break;\n\n\t\tif(rand(vec3(topleft,floor(iTime/2.0)+1.0))<0.7)\n\t\t{\n\t\t\tif(length(position-midpoint)>length(diagonal)*0.35) break;\n\t\t\ttopleft+=diagonal*0.15;\n\t\t\tbottomright-=diagonal*0.15;\n\t\t\tcol=1.0-col;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttopleft=threshold(midpoint,position,topleft,midpoint);\n\t\t\tbottomright=threshold(midpoint,position,midpoint,bottomright);\n\t\t}\n\t}\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position=(2.0*fragCoord.xy-iResolution.xy)/min(iResolution.x,iResolution.y);\n\n\t#ifdef SUPERSAMPLE\n\tfloat delta=1.0/min(iResolution.x,iResolution.y);\n\tfloat col=(\n\t\tart(position+delta*2.*vec2(0.25,0.00))+\n\t\tart(position+delta*2.*vec2(0.75,0.25))+\n\t\tart(position+delta*2.*vec2(0.00,0.50))+\n\t\tart(position+delta*2.*vec2(0.50,0.75))\n\t)/4.0;\n\t#else\n\tfloat col=art(position);\n\t#endif\n\n\tfragColor=vec4(vec3(col),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}