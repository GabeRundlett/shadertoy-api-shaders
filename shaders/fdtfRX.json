{
    "Shader": {
        "info": {
            "date": "1656962833",
            "description": "It's a fancy circle",
            "flags": 0,
            "hasliked": 0,
            "id": "fdtfRX",
            "likes": 1,
            "name": "Fancy Circle",
            "published": 3,
            "tags": [
                "hue",
                "rainbowcircle"
            ],
            "usePreview": 0,
            "username": "Zyphery",
            "viewed": 222
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n#define TWO_PI 6.28318\n#define HALF_PI 1.57079\n\nvec3 hue(float val) {\n    vec3 col;\n    float h = mod(val, 1.0);\n    float X = -abs(6.0 * mod(h, 1.0 / 3.0) - 1.0) + 1.0;\n    \n    if(h < 1.0 / 6.0)\n        col = vec3(1.0,X,0.0);\n    else if(h < 2.0 / 6.0)\n        col = vec3(X,1.0,0.0);\n    else if(h < 3.0 / 6.0)\n        col = vec3(0.0,1.0,X);\n    else if(h < 4.0 / 6.0)\n        col = vec3(0.0,X,1.0);\n    else if(h < 5.0 / 6.0)\n        col = vec3(X,0.0,1.0);\n    else\n        col = vec3(1.0,0.0,X);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    \n\n    float dist = distance(uv, iMouse.xy);\n    \n    float feather = 2.;\n    float inside = 45.;\n    float outside = 50.;\n    \n    vec3 col = vec3((\n    // inner circle\n    (1.0f - smoothstep(inside, inside - feather, dist))*\n    // outer circle\n    smoothstep(outside, outside - feather, dist)))*\n    // colour :)\n    hue(mod(iTime / 3.0f + ((atan(uv.y - iMouse.y, uv.x - iMouse.x) + PI) / TWO_PI), 1.0f));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}