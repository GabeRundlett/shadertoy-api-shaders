{
    "Shader": {
        "info": {
            "date": "1644076204",
            "description": "Sized swirl",
            "flags": 0,
            "hasliked": 0,
            "id": "fdScDV",
            "likes": 3,
            "name": "sized swirl",
            "published": 3,
            "tags": [
                "swirl"
            ],
            "usePreview": 0,
            "username": "van_darkholme",
            "viewed": 213
        },
        "renderpass": [
            {
                "code": "\n#define PI 3.14\n\n// \tColors\n#define RED \tvec3(0.00, 0.9, 1.00)\n#define BLUE \tvec3(0.04, 0.00, 0.98)\n#define BEIGE \tvec3(0.05, 0.45, 0.95)\n#define VIOLET \tvec3(0.14, 0.42, 0.96)\n\n\n#define SPEED 16.0\n\n#define SPIN_SPEED 8.0\n\n\n//\tUsual rotation.\nmat2 rotate(float angle)\n{\n\treturn mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\n\n//\tConvert time to [0; 4 * PI].\nfloat normalizeTime()\n{\n    float tt = iTime * 1.0;\n\treturn tt - float(int(tt / 4.0 / PI)) * 4.0 * PI;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.xy;\n\n    float time = normalizeTime();\n    \n    float angle = abs(acos(dot(rotate(-iTime * SPIN_SPEED) *  rotate(length(uv) * 32.0) * vec2(1, 0), uv) / length(uv)));\n    \n    vec2 p = length(uv) * (rotate(angle) * uv);\n    \n    float pLength = length(p);\n    \n    vec3 color = vec3(pLength);\n\n    float timePercent = time / (4.0 * PI);\n    \n    if (angle < 1.5 * abs(0.4 * sin(iTime) + 0.8))\n    {\n        color = RED;\n        \n        if (SPEED * pLength < time)\n        {\n           color = mix(BEIGE, color, timePercent); \n        }\n    }\n    else\n    {\n        color = VIOLET;\n    \n        if (SPEED * pLength < time)\n        {\n            color = mix(BLUE, color, timePercent);\n        }\n    }\n    \n    color *= textureLod(iChannel0, p, 0.5).xyz;\n    \n    //\tGamma correction.\n    float size = (1.0 + sin(iTime)) / 2.0 * 0.5;\n    color = pow(color, vec3(0.4545 * 2.0));\n    color *= 13.0 * (size - distance(uv, vec2(0)));\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}