{
    "Shader": {
        "info": {
            "date": "1616162707",
            "description": "A robot hand follow the mouse ",
            "flags": 0,
            "hasliked": 0,
            "id": "fdlGzS",
            "likes": 12,
            "name": " Robot hand",
            "published": 3,
            "tags": [
                "2d",
                "inversekinematics"
            ],
            "usePreview": 0,
            "username": "dopa",
            "viewed": 302
        },
        "renderpass": [
            {
                "code": "float segment(vec2 P, vec2 A, vec2 B, float r) \n\n{\n\n    vec2 g = B - A;\n\n    vec2 h = P - A;\n\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\n\treturn smoothstep(r, 0.5*r, d);\n\n}\n\nconst vec3 backColor  = vec3(0.3);\n\nconst vec3 pointColor = vec3(1,0,0.51);\n\nconst vec3 lineColor = vec3(0.95,0.95,0.10);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    //uv=fragCoord/iResolution.xy;\n    vec2 mouse = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    //mouse =iMouse.xy/ iResolution.y;\n    if(sign(iMouse.z)!=1.0){\n        mouse = vec2(0.0,-0.3)+vec2(cos(iTime)*2.0, sin(iTime)) * 0.4;\n    }\n    \n    vec3 color = backColor;\n    \n    int iterations=5;\n    \n    vec2 startPoint=vec2(0,0);\n    \n    int piece=5;\n    \n    vec2[] points=vec2[] (vec2(0,0),vec2(0,1),vec2(0,2),vec2(0,3),vec2(0,4),vec2(0,5));\n\n    //vec2[] points=vec2[] (vec2(0,0),vec2(1,1),vec2(2,2),vec2(3,3),vec2(4,4),vec2(5,5));\n    \n    //vec2[] points=vec2[] (vec2(-5,-5),vec2(-3,-3),vec2(-1,-1),vec2(1,1),vec2(3,3),vec2(5,5));\n\n    //vec2[] points=vec2[] (vec2(0,0),vec2(1,1),vec2(2,-2),vec2(3,3),vec2(4,-4),vec2(5,5));\n    \n    //vec2[] points=vec2[] (vec2(0,1),vec2(1,0),vec2(0,-1),vec2(-1,0),vec2(0,1),vec2(1,0));\n\n    float[] lenghts=float[](0.3,0.25,0.2,0.15,0.1);\n   \n    \n    for (int j=0;j<=iterations;j++){\n        vec2 target=mouse;\n        for (int i=piece;i>0;i--){\n            points[i]=target;\n\n            vec2 dir;\n            dir=(target-points[i-1])/ length(target-points[i-1]);\n            points[i-1] = target-(dir*lenghts[i-1]);\n\n\n            target=points[i-1];\n        }\n        \n        target=startPoint;\n        for (int i=0;i<piece;i++){\n            points[i]=target;\n\n            vec2 dir;\n            dir=(target-points[i+1])/ length(target-points[i+1]);\n            points[i+1] = target-(dir*lenghts[i]);\n\n\n            target=points[i+1];\n        }\n    }\n    \n    /*\n    \n        vec2 target=mouse;\n        for (int i=piece;i>0;i--){\n            points[i]=target;\n\n            vec2 dir;\n            dir=(target-points[i-1])/ length(target-points[i-1]);\n            points[i-1] = target-(dir*lenghts[i-1]);\n\n\n            target=points[i-1];\n        }\n        \n    */\n    float intensity;\n    for (int i=piece;i>=1;i--){\n        intensity = segment(uv, points[i],points[i-1], 0.01);\n        color = mix(color, lineColor, intensity);\n    }\n    for (int i=piece;i>=0;i--){\n        intensity = segment(uv, points[i],points[i], 0.02);\n        color = mix(color, pointColor, intensity);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n      ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}