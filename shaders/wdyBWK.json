{
    "Shader": {
        "info": {
            "date": "1607955767",
            "description": "This is a simulation of ripples with fractional Brownian motion.\nYou may change the constant values in the program to explore other variations.\nMove your mouse over the screen to see the surroundings.",
            "flags": 0,
            "hasliked": 0,
            "id": "wdyBWK",
            "likes": 13,
            "name": "Ripples with fBm",
            "published": 3,
            "tags": [
                "noise",
                "ripples",
                "fbm",
                "generativeart",
                "brownianmotion",
                "creativecoding"
            ],
            "usePreview": 0,
            "username": "AI",
            "viewed": 576
        },
        "renderpass": [
            {
                "code": "// pseudo-random function, returns value between [0.,1.]\nfloat rand (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(31.7667,14.9876)))\n                 * 833443.123456);\n}\n//bilinear value noise function\nfloat bilinearNoise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners of a 2D square\n    float f00 = rand(i);\n    float f10 = rand(i + vec2(1.0, 0.0));\n    float f01 = rand(i + vec2(0.0, 1.0));\n    float f11 = rand(i + vec2(1.0, 1.0));\n\n    vec2 u = smoothstep(0.,1.,(1.-f));\n\treturn u.x*u.y*f00+(1.-u.x)*u.y*f10+\n    u.x*(1.-u.y)*f01+(1.-u.x)*(1.-u.y)*f11;\n    \n}\n\n#define OCTAVES 5\nfloat fbm (in vec2 st) {\n    // Initial parameters\n    float value = 0.0;\n    float amplitude = .65;\n    float frequency = 1.;\n    //-----\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * bilinearNoise(frequency*st);\n        frequency *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    float color =0.;\n    vec2 q=vec2(0.);\n    q.x=fbm(10.*st+.55*iTime);\n    q.y=fbm(10.*st+.21*iTime);\n    vec2 r=vec2(0.);\n    r.x=fbm(100.*st+21.5*q+.1*iTime);\n    r.y=fbm(100.*st+21.5*q+.34*iTime);\n\tcolor=fbm(10.*st+1.*r+3.*iMouse.xy/iResolution.xy);\n    fragColor = vec4(color*clamp(q.x+q.y,0.,1.),color*color,color*clamp(length(r),0.,1.),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}