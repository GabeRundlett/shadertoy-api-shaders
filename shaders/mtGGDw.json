{
    "Shader": {
        "info": {
            "date": "1684100580",
            "description": "Created by Cellulose in 2013-10-10\nhttps://www.shadertoy.com/view/4dfGDs",
            "flags": 0,
            "hasliked": 0,
            "id": "mtGGDw",
            "likes": 3,
            "name": "Test_cymatics",
            "published": 3,
            "tags": [
                "cymatics"
            ],
            "usePreview": 0,
            "username": "oliviano",
            "viewed": 165
        },
        "renderpass": [
            {
                "code": "float ripple(float dist, float shift)\n{\n\treturn cos(64.0 * dist + shift) / (1.0 + 1.0 * dist);\n}\n\n\n#define POLES 21\n\n#define REFLECTIONS 10.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat larger = max(iResolution.x, iResolution.y);\n\tvec2 uv = (fragCoord.xy - .5*iResolution.xy) / larger;\n\tvec2 uvflip = vec2(uv.x, -uv.y);\n\tvec2 cursor = (iMouse.xy - .5*iResolution.xy) / larger;\n\tvec2 blessr = vec2(-cursor.x, cursor.y);\n\t\n\t//float on = float(abs(uv.x)<.25 && abs(uv.y)<.25);\n\t\n\tfloat lum = .5 +\n\t\t/*.1 * ripple(length(cursor - uv), -iTime) +\n\t\t.1 * ripple(length(blessr - uv), -iTime) +\n\t\t.1 * ripple(length(cursor - uvflip), -iTime) +\n\t\t.1 * ripple(length(blessr - uvflip), -iTime) +*/\n\t\t.1 * ripple(length(uv), 0.0) +\n\t\t//.1 * cos(64.0*uv.y - iTime) +\n\t\t//.1 * cos(64.0*(uv.x*uv.x) - iTime) +\n\t\t0.0;\n\t\n\tconst float twopi = 2.0*3.141592654;\n\tconst int count = POLES;\n\tfloat fcount = float(count);\n\tvec2 rot = vec2(cos(twopi*.618), sin(twopi*.618));\n\tvec2 tor = vec2(-sin(twopi*.618), cos(twopi*.618));\n\tfor (int i = 0; i < count; ++i)\n\t{\n\t\tlum += .2 * ripple(length(cursor - uv), -iTime);\n\t\tcursor = cursor.x*rot + cursor.y*tor;\n\t}\n\t\n\t/*float lum = .5, dist;\n\tvec2 part, flip = vec2(1.0, 1.0);\n\t\n\t//float freq = 64.0, phase = -iTime;\n\tfloat freq = 32.0, phase  = 0.0; // * pow(4.0, cos(iTime/8.0)), phase = 0.0;\n\t\n\tfor (float ox = -REFLECTIONS; ox <= REFLECTIONS; ox += 1.0)\n\t{\n\t\tfor (float oy = -REFLECTIONS; oy <= REFLECTIONS; oy += 1.0)\n\t\t{\n\t\t\tdist = length((cursor*flip-uv)+vec2(ox, oy));\n\t\t\tlum += cos(freq * dist - phase) / (5.0 + 10.0*dist);\n\t\t\t\n\t\t\tflip.y *= -1.0;\n\t\t}\n\t\tflip.x *= -1.0;\n\t}*/\n\t\n\tlum = 3.0*lum*lum - 2.0*lum*lum*lum;\n\tfragColor = vec4(lum, lum, lum, 1.0);\n\t\n\t\n\t/*fragColor = vec4(.5+.5*sin(3000.0*iTime),\n\t\t.5+.5*sin(4997.0*iTime+iResolution.x*3910.0),\n\t\t.5+.5*cos(2872.0*iTime+iResolution.y*8721.0), 1.0);*/\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}