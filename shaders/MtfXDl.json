{
    "Shader": {
        "info": {
            "date": "1440526527",
            "description": "description",
            "flags": 0,
            "hasliked": 0,
            "id": "MtfXDl",
            "likes": 1,
            "name": "Julia sets and the logistic map",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "julia",
                "map",
                "logistic",
                "bifurcation",
                "period",
                "doubling"
            ],
            "usePreview": 0,
            "username": "piotrekli",
            "viewed": 327
        },
        "renderpass": [
            {
                "code": "#define maxiter 150\n\n#define miter maxiter\n#define citer 40\n\nfloat lm(float a, float r)\n{\n    return r*a*(1.0-a);\n}\n\nfloat lmView( float r, float y )\n{\n    float f = 1.0/0.0000001;\n    for (int i=0; i<citer; ++i)\n    {\n        float a = float(i)/float(citer);\n        for (int j=0; j<miter; ++j)\n            a = lm(a, r);\n        f = min(f, abs(a-y));\n    }\n    \n\treturn 1.0-smoothstep(f, 0.0, 0.001);\n}\n\nvec2 getUV(vec2 coords)\n{\n    coords = coords*0.5+vec2(iResolution.x*0.5, iResolution.y*0.25);\n    coords = (coords-iResolution.xy*0.5) / min(iResolution.x, iResolution.y);\n    return coords;\n}\n\nvec2 cmul(vec2 a, vec2 b)\n{\n    return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x);\n}\n\nfloat transformLmPar(float coord)\n{\n    return coord/iResolution.x*4.0;\n}\n\n#define ITERATE(z) vec2(kx*cmul(z, vec2(1.0, 0.0)-z)) + c\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = getUV(fragCoord);\n    if (iMouse.y/iResolution.y < 0.5)\n        uv.y = 0.0;\n    vec2 c = vec2(0.0);\n    vec2 z = uv;\n    int i = 0;\n    float kx = transformLmPar(iMouse.x);\n    for (int j=0; j<maxiter; ++j)\n    {\n        i = j;\n        z = ITERATE(z);\n    }\n    vec2 zz = ITERATE(z);\n    vec2 zzz = ITERATE(zz);\n    zz = abs(zz-z)*2.0;\n    zzz = abs(zzz-z)*4.0;\n    float v = 0.0;\n    if (iMouse.z > 0.0)\n        v = lmView(transformLmPar(fragCoord.x), fragCoord.y/iResolution.y);\n\tfragColor = vec4(clamp(vec3(z.x, zz.x, zzz.x), 0.0, 1.0)+vec3(v), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}