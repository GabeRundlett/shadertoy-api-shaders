{
    "Shader": {
        "info": {
            "date": "1649479360",
            "description": "first pass at a nebula",
            "flags": 0,
            "hasliked": 0,
            "id": "ftjcWR",
            "likes": 1,
            "name": "Nebula I",
            "published": 3,
            "tags": [
                "nebula"
            ],
            "usePreview": 0,
            "username": "itishappy",
            "viewed": 220
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a)\n{\n    return mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nfloat noise(vec2 p)\n{\n    return fract(634171.9852*sin(dot(p,vec2(394.915,594.337))));\n}\n\nvec2 noise2(vec2 p)\n{\n    float x = fract(619723.6489*sin(dot(p,vec2(467.294,357.517))));\n    float y = fract(693118.1384*sin(dot(p,vec2(572.221,492.997))));\n    return vec2(x,y);\n}\n\nfloat smoothnoise(vec2 p)\n{\n    vec2 c = floor(p);\n    vec2 d = fract(p);\n    float n = 0.;\n    for (float x=-0.; x<=1.; x++)\n    {\n        for (float y=-0.; y<=1.; y++)\n        {\n            vec2 xy = vec2(x,y);\n            vec2 v = abs(1.-xy-d);\n            n += noise(xy+c) * v.x * v.y;\n        }\n    }\n    n *= 0.5;\n    return n;\n}\n\nfloat fractalnoise(vec2 p)\n{\n    float n = 0.;\n    for (float i=0.; i<9.; i++)\n    {\n        n += smoothnoise(pow(1.5,i)*rot(.1*i)*p)*pow(.8,i);\n    }\n    n *= 0.65;\n    return n;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.x;\n    uv *= rot(0.01 * iTime);\n    uv *= 16.;\n    \n    float n0 = max(0.,fractalnoise(rot(.14)*uv+vec2(7.12,5.31))-0.65);\n    float nr = max(0.,fractalnoise(rot(.48)*uv+vec2(5.19,4.56))-0.3);\n    float nb = max(0.,fractalnoise(rot(.69)*uv+vec2(3.21,8.67))-0.3);\n    \n    float den = 15.*pow(n0,2.3);\n    float red = sqrt(1.5*nr);\n    float blu = sqrt(1.5*nb);\n    \n    vec3 col = vec3(0.);\n\n    col += 0.8*den*vec3(.9*red,red*blu+.08*(red+blu),blu);\n    \n    uv *= 8.;\n    for (float x=-1.; x<=1.; x++)\n    {\n        for (float y=-1.; y<=1.; y++)\n        {\n            vec2 xy = vec2(x,y);\n            vec2 id = floor(uv) - xy;\n            vec2 p = fract(uv) + xy;\n            float d = distance(p, noise2(id));\n            vec3 c = vec3(.6);\n            c.rb += 0.4*noise2(id + 20.);\n            col += c * (0.5 + 0.5*sin(1.5*iTime + 6.283*noise(id-30.))) * (0.4 + 0.6*noise(id + 30.)) * smoothstep(1.,0.,8.*d);\n        }\n    }\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}