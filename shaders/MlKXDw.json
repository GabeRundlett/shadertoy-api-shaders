{
    "Shader": {
        "info": {
            "date": "1484819524",
            "description": "looking at  balkhan shader I finnaly made a correct enoutgh diffusion shader\nusing :http://www.karlsims.com/rd.html\nas source\nand : https://www.shadertoy.com/view/XlKXDm#\nwhen I needed help ^^\n",
            "flags": 32,
            "hasliked": 0,
            "id": "MlKXDw",
            "likes": 13,
            "name": "My attempt at reaction diffusion",
            "published": 3,
            "tags": [
                "2d",
                "noob",
                "reaction"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 1070
        },
        "renderpass": [
            {
                "code": "#define _Smooth(p,r,s) smoothstep(-s, s, p-(r))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 state = texture(iChannel0,uv);\n\tfragColor =  vec4(0.,state.y,state.y/state.x,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define sample(x,y) texture(iChannel0, (uv + vec2(x,y) / iResolution.xy))\n\nvec2 difRate = vec2(1.,.25);\n\n#define FEED .0367;\n#define KILL .0649;\n\nfloat zoom = .9997;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv =( uv - vec2(.5)) * zoom + vec2(.5);\n    vec4 current = sample(0.,0.);\n    \n    vec4 cumul = current * -1.;\n    \n    cumul += (   sample( 1., 0.) \n               + sample(-1., 0.) \n               + sample( 0., 1.) \n               + sample( 0.,-1.)\n             ) * .2;\n\n    cumul += (\n        sample( 1, 1) +\n        sample( 1,-1) +\n        sample(-1, 1) +\n        sample(-1,-1) \n       )*.05;\n    \n    \n    float feed = FEED;\n    float kill = KILL;\n    \n    float dist = distance(uv,vec2(.5)) - .34;\n    kill = kill + step(0.,dist) * dist*.25;\n    \n    vec4 lap =  cumul;\n    float newR = current.r + (difRate.r * lap.r - current.r * current.g * current.g + feed * (1. - current.r));\n    float newG = current.g + (difRate.g * lap.g + current.r * current.g * current.g - (kill + feed) * current.g);\n    \n    newR = clamp(newR,0.,1.);\n    newG = clamp(newG,0.,1.);\n    \n    current = vec4(newR,newG,0.,1.);\n    \n    \n        uv = (fragCoord / iResolution.y) -  vec2(iResolution.x /iResolution.y * .5,.5);\n    \tfloat f = step(length(uv),.25) - step(length(uv),.24);\n    \tf *=  .25 + fract(atan(uv.y,uv.x)*.5 + iTime*.5) * .25 * sin(iTime*.1);\n        current = max(current, vec4(0.,1.,0.,1.) * f);\n    \n    if(iMouse.z > .5)\n    {\n        uv = (fragCoord - iMouse.xy) / iResolution.xy;\n        current = max(current,vec4(1.) * step(dot(uv,uv),.001225));\n    }\n    \n    fragColor = current;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}