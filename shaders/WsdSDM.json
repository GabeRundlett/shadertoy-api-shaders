{
    "Shader": {
        "info": {
            "date": "1572136643",
            "description": "I was working on a bigger shader that required worley noise, and ended up coding\na quick psychedelic disco mock up.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsdSDM",
            "likes": 5,
            "name": "Psychedelic Worley",
            "published": 3,
            "tags": [
                "voronoi",
                "noise",
                "color",
                "random",
                "worley",
                "psychedelic",
                "disco",
                "cell"
            ],
            "usePreview": 0,
            "username": "piyushslayer",
            "viewed": 560
        },
        "renderpass": [
            {
                "code": "// Thank you Dave_Hoskins for the hash! <3\nvec2 hash22(vec2 p)\n{\n\tuvec2 q = uvec2(ivec2(p))*uvec2(1597334673U, 3812015801U);\n\tq = (q.x ^ q.y) * uvec2(1597334673U, 3812015801U);\n\treturn vec2(q) * (1.0 / float(0xffffffffU));\n}\n\nfloat worley(vec2 uv)\n{\n    uv *= 5.;\n    uv += iTime*.25;\n    \n    vec2 id = floor(uv);\n    vec2 gv = fract(uv);\n    \n    float minDist = 100.;\n    for (float y = -1.; y <= 1.; ++y)\n    {\n        for(float x = -1.; x <= 1.; ++x)\n        {\n            vec2 offset = vec2(x, y);\n            vec2 h = hash22(id + offset) * .8 + .1; // .1 - .9\n    \t\th = (((sin(h*iTime)+1.)*.5)*.8+.1) + offset;\n            float p = length(gv - h);\n            if (p < minDist)\n            {\n                minDist=p;\n            }\n        }\n    }\n    \n    return minDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= aspectRatio;\n    \n    vec3 col = vec3(0.);\n    float w = worley(uv);\n    col += 1.-w;\n    col.r *= smoothstep(1.7, .0, length(uv-(sin(vec2(.7, .5)+iTime)+1.)*.5));\n    uv.x = 1.2-uv.x;\n    col.g *= smoothstep(1.7, .0, length(uv-(cos(.5+iTime)+1.)*.5));\n    col.b *= 1.-sin(col.r+col.g);\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}