{
    "Shader": {
        "info": {
            "date": "1435185978",
            "description": "using the Trisomie21 base ray-marcher of https://www.shadertoy.com/view/4tfGRB#",
            "flags": 0,
            "hasliked": 0,
            "id": "ltfXRM",
            "likes": 11,
            "name": "crowded place",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "short",
                "spheremarching"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1952
        },
        "renderpass": [
            {
                "code": "// using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB#\n\n#define r(v,t) { float a = t*iTime, c=cos(a),s=sin(a); v*=mat2(c,s,-s,c); }\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    vec4 p = vec4(w,0,1)/iResolution.yyxy-.5, d,c; p.x-=.4; // init ray \n    r(p.xz,.13); r(p.yz,.2); r(p.xy,.1);   // camera rotations\n    d = p;                                 // ray dir = ray0-vec3(0)\n    p.z += 5.*iTime;\n    \n    for (float i=1.; i>0.; i-=.01)  \n    {\n        vec4 u = floor(p/8.), t = mod(p, 8.)-4.; // objects id + local frame\n        r(t.xy,u.x); r(t.xz,u.y); r(t.yz,1.);    // objects rotations\n        u = sin(78.*(u+u.yzxw));                 // randomize ids\n        t -= u;                                  // jitter positions (also cause artifacts..)\n\n        t = abs(t);     // here for relief X symmetry\n        c = texture(iChannel0, t.zxy-3.);  // c for color, c.x for displacement\n        // c = p/p;                            // just the canonical shape           \n\n        // t = abs(t);  // here for no relief symmetry\n        // float x = min(t.y, length(t.xz) -1.5 + 1.*c.x); // pilars\n        // float x = length(t.xyz) -3. + 1.*c.x;           // spheres\n        // float x = max(t.x,max(t.y,t.z)) -2. + c.x;      // bricks\n        float x = ( u.x>.6? length(t.xyz)-.5 :max(t.x,max(t.y,t.z)) ) -2. + c.x; // sphs and bricks\n        // float x = max(-length(t.xyz)+2.6-c.x, max(t.x,max(t.y,t.z))-2.+c.x);  // bricks - sphs\n      \n \n        // f = p/p*p.w*.01;                // show depth\n        // f = p/p*x*100.;                 // show dist\n        f = c*i*i*3.;                           // color texture + black fog (try c alone !)\n        // f *= (.5+.5*u)*vec4(1,1,.005,1);     // gradient block coloring (set off random id)\n        f *= .5+.5*u;                           // random block coloring\n\n        if(x<.01) break;    // hit !\n        p -= d*x;           // march ray\n     }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}