{
    "Shader": {
        "info": {
            "date": "1720201442",
            "description": "SOS by Avicii Attempt 1, based on https://cf.github.io/avicii-sos-guitar-synth/\n\nif the sound doesn't play try hitting the ⏮ button",
            "flags": 8,
            "hasliked": 0,
            "id": "l3dSzB",
            "likes": 3,
            "name": "[GPU Sound] SOS by AVICII",
            "published": 3,
            "tags": [
                "sound",
                "gpu",
                "sos",
                "avicii"
            ],
            "usePreview": 1,
            "username": "cf",
            "viewed": 269
        },
        "renderpass": [
            {
                "code": "// SOS - AVICII by carter feldman\n\n\n// ORIGINAL SHADER:\n//Shader License: CC BY 3.0\n//Author: Jan Mróz (jaszunio15)\n\n#define OVERSHOOT(x) tanh(x*x)*(1./exp(x*x*x)+1.)\n#define TWEEN_VALUE OVERSHOOT(2.*mod(iTime,10.))\n\nfloat triangle(vec2 position, float halfWidth, float halfHeight) {\n    vec2 e = vec2(halfWidth, -halfHeight);\n    vec2 d = position - e * clamp(dot(position, e) / dot(e, e), -1.0, 1.0);\n    if (max(d.x, d.y) > 0.0) {\n       return length(d);\n    }\n    position += vec2(halfWidth, halfHeight);\n    if (max(position.x, position.y) > 0.0) {\n        return -min(length(d), min(position.x, position.y));\n    }\n    return length(position);\n}\n#define A_SCALE 0.175\n#define X_COORD (TWEEN_VALUE*0.07875)\nfloat avicii(vec2 p) {\n\n    return min(\n        triangle(vec2(p.x-X_COORD,0.-p.y+0.01), 0.4*A_SCALE, 0.4*A_SCALE),\n        triangle(vec2(-X_COORD-p.x,p.y-0.01), 0.4*A_SCALE, 0.4*A_SCALE)\n        );\n  \n}\n\n\nfloat sphereSDF(vec2 point, float radius)\n{\n\treturn length(point) - radius;//max(length(point) - radius, avicii(point));\n}\n\nvec2 sphereCenter(vec2 rootUV)\n{\n \tfloat hash = hash12(rootUV);\n    vec2 relativePos = vec2(sin(hash * 532.121 + TIME * 2.0), cos(hash * 532.121 + TIME * 2.0)) * 0.5 + 0.5;\n    return rootUV + relativePos;\n}\n\n\nfloat addObjects(float o1, float o2)\n{\n \treturn min(o1, o2);   \n}\n\nfloat addObjectsSmooth(float o1, float o2, float smoothness)\n{\n    float k = clamp((o1 - o2) / smoothness * 0.5 + 0.5, 0.0, 1.0);\n    return mix(o1, o2, k) - k * (1.0 - k) * smoothness;\n}\n\nfloat sphereGridSDF(vec2 point, float radius, float gridScale)\n{\n    point *= gridScale;\n \tvec2 rootUV = floor(point);\n    float minSDF = 99999.0;\n    for (float x = -1.0; x <= 1.0; x++)\n    {\n     \tfor (float y = -1.0; y <= 1.0; y++)\n        {\n        \tfloat sphereSDF = sphereSDF(point - sphereCenter(rootUV + vec2(x, y)), radius);\n            minSDF = addObjectsSmooth(minSDF, sphereSDF, 0.3);\n        }\n    }\n    \n    return minSDF / gridScale;\n}\n\nfloat objSDF(vec2 point)\n{\n \tfloat object = sphereSDF(point, 0.2);\n    \n    vec2 circularMovement = vec2(sin(TIME * 0.2), cos(TIME * 0.2)) * 2.0;\n    vec2 dotsShift = vec2(-cos(TIME * 0.2), sin(TIME * 0.2));\n    float gridSphereRadius = (smoothstep(0.5, 0.0, length(point - dotsShift * 0.1)) - 0.4);\n    float smallGridSphereRadius = (smoothstep(0.4, 0.0, length(point - dotsShift * 0.1)) - 0.5);\n    object = addObjectsSmooth(object, sphereGridSDF(point + circularMovement, gridSphereRadius, 10.0), 0.1);\n    object = addObjectsSmooth(object, sphereGridSDF(point + circularMovement, smallGridSphereRadius, 20.0), 0.01);\n    return object;\n}\n\nvec3 objSDFToTestColor(float objSDF)\n{\n\tvec3 col = vec3(0.0);\n    float positive = smoothstep(-BORDER_WIDTH, BORDER_WIDTH, objSDF);\n    float border = smoothstep(BORDER_WIDTH, BORDER_WIDTH * 0.5, abs(objSDF));\n    \n    float lines = smoothstep(0.5, 0.0, abs(fract(objSDF * 40.0) - 0.5)) * 0.8;\n    \n    col += POSITIVE_COLOR * positive * lines;\n    col += NEGATIVE_COLOR * (1.0 - positive) * lines;\n    col += BORDER_COLOR * border;\n    \n    return col;\n}\n\nvec3 objSDFToColor(float objSDF)\n{\n    float positive = smoothstep(-BORDER_WIDTH, BORDER_WIDTH, objSDF);\n\n    return vec3(1.0) * positive;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x;\n\n    float sdf = max(objSDF(uv),-avicii(uv));\n    vec3 col = objSDFToColor(sdf);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define NEGATIVE_COLOR vec3(0.4, 0.4, 1.0)\n#define POSITIVE_COLOR vec3(0.4, 1.0, 0.4)\n#define BORDER_COLOR vec3(1.0, 1.0, 1.0)\n#define BORDER_WIDTH 0.004\n\n#define TIME (iTime * 1.0)\n\nfloat hash12(vec2 x)\n{\n \treturn fract(sin(dot(x, vec2(533.59731, 821.49221))) * 4315.212331);   \n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// SOS by Avicii\n\n// Instrument by inigo quilez - iq/2014\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//----------------------------------------------------------------------------------------\n// main instrument\nfloat instrument( float freq, float time )\n{\n    float ph = 1.0;\n    ph *= sin(6.283185*freq*time*2.0);\n    ph *= 0.5+0.5*max(0.0,5.0-0.01*freq);\n    ph *= exp(-time*freq*0.2);\n    \n    float y = 0.0;\n    y += 0.70*sin(1.00*6.283185*freq*time+ph)*exp2(-0.7*0.007*freq*time);\n    y += 0.20*sin(2.01*6.283185*freq*time+ph)*exp2(-0.7*0.011*freq*time);\n    y += 0.20*sin(3.01*6.283185*freq*time+ph)*exp2(-0.7*0.015*freq*time);\n    y += 0.16*sin(4.01*6.283185*freq*time+ph)*exp2(-0.7*0.018*freq*time);\n    y += 0.13*sin(5.01*6.283185*freq*time+ph)*exp2(-0.7*0.021*freq*time);\n    y += 0.10*sin(6.01*6.283185*freq*time+ph)*exp2(-0.7*0.027*freq*time);\n    y += 0.09*sin(8.01*6.283185*freq*time+ph)*exp2(-0.7*0.030*freq*time);\n    y += 0.07*sin(9.01*6.283185*freq*time+ph)*exp2(-0.7*0.033*freq*time);\n\n    y += 0.35*y*y*y;\n    y += 0.10*y*y*y;\n       \n    y *= 1.0 + 1.5*exp(-8.0*time);\n    y *= clamp( time/0.004, 0.0, 1.0 );\n\n    y *= 2.5-1.5*clamp( log2(freq)/10.0,0.0,1.0);\n\treturn y;\t\n}\n\nfloat instrumentDuration(float t, float freq, float startTime, float endTime) {\n if(t>=startTime && t<=endTime) {\n     return instrument(freq, t-startTime);\n }else{\n     return 0.;\n }\n}\n\nfloat doChannel1( float soundTime );\nfloat doChannel2( float soundTime );\n\nvec2 mainSound( in int samp, float time )\n{\t\n    time = mod( time, 135.0 );\n    \n    vec2 y = vec2(0.0);\n    y += vec2(0.7,0.3)*doChannel1( time ); // main instrument\n    y += vec2(0.3,0.7)*doChannel2( time ); // secondary instrument\n\ty *= 0.1;\n    \n\treturn y;\n}\n\n//----------------------------------------------------------------------------------------\n\n#define Z(f,s,e) y += instrumentDuration(t,f,s*1.1,e*1.1);\n\n//----------------------------------------------------------------------------------------\n\nfloat doChannel1( float t )\n{\n  float y = 0.0;\n  Z(622.3,0.,0.341)Z(622.3,0.36,0.701)Z(622.3,0.72,1.175)Z(622.3,1.2,1.541)Z(622.3,1.56,1.901)Z(622.3,1.92,2.261)Z(622.3,2.28,2.621)Z(622.3,2.64,3.095)Z(622.3,3.12,3.461)Z(622.3,3.48,3.821)Z(698.5,3.84,4.067)Z(830.6,4.08,4.307)Z(698.5,4.32,4.433)Z(622.3,4.44,4.553)Z(523.3,4.56,4.787)Z(622.3,4.8,5.027)Z(523.3,5.04,5.267)Z(466.2,5.28,5.393)Z(415.3,5.4,6.653)Z(466.2,7.68,7.907)Z(466.2,7.92,8.033)Z(523.3,8.04,8.153)Z(415.3,8.16,8.387)Z(349.2,8.4,8.627)Z(415.3,8.64,8.867)Z(349.2,8.88,9.107)Z(311.1,9.12,9.233)Z(349.2,9.24,10.493)Z(698.5,11.52,11.747)Z(830.6,11.76,11.987)Z(698.5,12.,12.113)Z(622.3,12.12,12.233)Z(523.3,12.24,12.353)Z(523.3,12.36,12.473)Z(622.3,12.48,12.707)Z(523.3,12.72,12.947)Z(466.2,12.96,13.073)Z(523.3,13.08,13.535)Z(466.2,13.56,13.673)Z(415.3,13.68,13.793)Z(349.2,13.8,13.913)Z(523.3,15.24,15.353)Z(466.2,15.36,15.587)Z(466.2,15.6,15.713)Z(466.2,15.72,16.061)Z(349.2,16.08,16.193)Z(349.2,16.2,16.313)Z(415.3,16.32,16.433)Z(349.2,16.44,16.553)Z(349.2,16.56,16.787)Z(311.1,16.8,16.913)Z(349.2,16.92,18.173)Z(523.3,19.68,19.907)Z(415.3,19.92,20.147)Z(466.2,20.16,20.387)Z(523.3,20.4,20.627)Z(415.3,20.64,21.095)Z(466.2,21.12,21.233)Z(466.2,21.24,21.467)Z(523.3,21.48,21.593)Z(466.2,21.6,21.827)Z(415.3,21.84,21.953)Z(415.3,21.96,22.073)Z(466.2,22.08,22.307)Z(523.3,22.32,22.547)Z(415.3,22.56,22.901)Z(349.2,22.92,23.033)Z(523.3,23.52,23.747)Z(415.3,23.76,23.987)Z(466.2,24.,24.227)Z(523.3,24.24,24.467)Z(466.2,24.48,24.935)Z(523.3,24.96,25.073)Z(622.3,25.08,25.307)Z(622.3,25.32,25.433)Z(622.3,25.44,25.553)Z(523.3,25.56,25.673)Z(523.3,25.68,25.793)Z(622.3,25.8,25.913)Z(698.5,25.92,26.147)Z(466.2,26.16,26.273)Z(523.3,26.28,26.393)Z(466.2,26.4,26.513)Z(415.3,26.52,26.861)Z(523.3,27.36,27.587)Z(415.3,27.6,27.827)Z(466.2,27.84,28.067)Z(523.3,28.08,28.307)Z(415.3,28.32,28.775)Z(466.2,28.8,28.913)Z(466.2,28.92,29.147)Z(523.3,29.16,29.273)Z(466.2,29.28,29.507)Z(415.3,29.52,29.633)Z(415.3,29.64,29.753)Z(466.2,29.76,29.987)Z(523.3,30.,30.227)Z(415.3,30.24,30.581)Z(349.2,30.6,30.713)Z(523.3,31.2,31.427)Z(415.3,31.44,31.667)Z(466.2,31.68,31.907)Z(523.3,31.92,32.147)Z(466.2,32.16,32.615)Z(523.3,32.64,32.753)Z(622.3,32.76,32.987)Z(622.3,33.,33.113)Z(622.3,33.12,33.233)Z(523.3,33.24,33.353)Z(523.3,33.36,33.473)Z(622.3,33.48,33.593)Z(698.5,33.6,33.827)Z(466.2,33.84,33.953)Z(523.3,33.96,34.073)Z(466.2,34.08,34.193)Z(415.3,34.2,34.541)Z(415.3,34.56,34.901)Z(415.3,34.92,35.033)Z(311.1,35.16,35.273)Z(415.3,35.28,35.393)Z(466.2,35.4,35.513)Z(466.2,35.52,35.57)Z(523.3,35.571,35.748)Z(622.3,35.76,35.873)Z(523.3,35.88,35.993)Z(466.2,36.,36.113)Z(415.3,36.12,36.461)Z(415.3,36.48,36.821)Z(415.3,36.84,36.953)Z(311.1,37.08,37.193)Z(415.3,37.2,37.313)Z(466.2,37.32,37.433)Z(466.2,37.44,37.49)Z(523.3,37.491,37.668)Z(622.3,37.68,37.793)Z(523.3,37.8,37.913)Z(466.2,37.92,38.033)Z(415.3,38.04,38.381)Z(415.3,38.4,38.741)Z(415.3,38.76,38.873)Z(311.1,39.,39.113)Z(415.3,39.12,39.233)Z(466.2,39.24,39.353)Z(466.2,39.36,39.41)Z(523.3,39.411,39.588)Z(622.3,39.6,39.713)Z(523.3,39.72,39.833)Z(466.2,39.84,39.953)Z(415.3,39.96,40.301)Z(523.3,40.32,40.433)Z(622.3,40.44,40.667)Z(622.3,40.68,40.793)Z(622.3,40.8,40.913)Z(523.3,40.92,41.033)Z(523.3,41.04,41.153)Z(622.3,41.16,41.273)Z(698.5,41.28,41.507)Z(466.2,41.52,41.633)Z(523.3,41.64,41.753)Z(466.2,41.76,41.873)Z(415.3,41.88,42.221)Z(415.3,42.24,42.581)Z(415.3,42.6,42.713)Z(311.1,42.84,42.953)Z(415.3,42.96,43.073)Z(466.2,43.08,43.193)Z(466.2,43.2,43.25)Z(523.3,43.251,43.428)Z(622.3,43.44,43.553)Z(523.3,43.56,43.673)Z(466.2,43.68,43.793)Z(415.3,43.8,44.141)Z(415.3,44.16,44.501)Z(415.3,44.52,44.633)Z(311.1,44.76,44.873)Z(415.3,44.88,44.993)Z(466.2,45.,45.113)Z(466.2,45.12,45.17)Z(523.3,45.171,45.348)Z(622.3,45.36,45.473)Z(523.3,45.48,45.593)Z(466.2,45.6,45.713)Z(415.3,45.72,46.061)Z(415.3,46.08,46.421)Z(415.3,46.44,46.553)Z(311.1,46.68,46.793)Z(415.3,46.8,46.913)Z(466.2,46.92,47.033)Z(466.2,47.04,47.09)Z(523.3,47.091,47.268)Z(622.3,47.28,47.393)Z(523.3,47.4,47.513)Z(466.2,47.52,47.633)Z(415.3,47.64,47.981)Z(523.3,48.,48.113)Z(622.3,48.12,48.347)Z(622.3,48.36,48.473)Z(622.3,48.48,48.593)Z(523.3,48.6,48.713)Z(523.3,48.72,48.833)Z(622.3,48.84,48.953)Z(698.5,48.96,49.187)Z(466.2,49.2,49.313)Z(523.3,49.32,49.433)Z(466.2,49.44,49.553)Z(415.3,49.56,49.901)Z(415.3,49.92,50.261)Z(415.3,50.28,50.393)Z(311.1,50.52,50.633)Z(415.3,50.64,50.753)Z(466.2,50.76,50.873)Z(466.2,50.88,50.93)Z(523.3,50.931,51.108)Z(622.3,51.12,51.233)Z(523.3,51.24,51.353)Z(466.2,51.36,51.473)Z(415.3,51.48,51.821)Z(415.3,51.84,52.181)Z(415.3,52.2,52.313)Z(311.1,52.44,52.553)Z(415.3,52.56,52.673)Z(466.2,52.68,52.793)Z(466.2,52.8,52.85)Z(523.3,52.851,53.028)Z(622.3,53.04,53.153)Z(523.3,53.16,53.273)Z(466.2,53.28,53.393)Z(415.3,53.4,53.741)Z(415.3,53.76,54.101)Z(415.3,54.12,54.233)Z(311.1,54.36,54.473)Z(415.3,54.48,54.593)Z(466.2,54.6,54.713)Z(466.2,54.72,54.77)Z(523.3,54.771,54.948)Z(622.3,54.96,55.073)Z(523.3,55.08,55.193)Z(466.2,55.2,55.313)Z(415.3,55.32,55.661)Z(415.3,55.68,56.021)Z(415.3,56.04,56.153)Z(311.1,56.28,56.393)Z(415.3,56.4,56.513)Z(466.2,56.52,56.633)Z(466.2,56.64,56.69)Z(523.3,56.691,56.868)Z(622.3,56.88,56.993)Z(523.3,57.,57.113)Z(466.2,57.12,57.233)Z(415.3,57.24,57.581)Z(698.5,57.6,57.827)Z(830.6,57.84,58.067)Z(698.5,58.08,58.193)Z(622.3,58.2,58.313)Z(523.3,58.32,58.547)Z(622.3,58.56,58.787)Z(523.3,58.8,59.027)Z(466.2,59.04,59.153)Z(415.3,59.16,60.413)Z(466.2,61.44,61.667)Z(466.2,61.68,61.793)Z(523.3,61.8,61.913)Z(415.3,61.92,62.147)Z(349.2,62.16,62.387)Z(415.3,62.4,62.627)Z(349.2,62.64,62.867)Z(311.1,62.88,62.993)Z(349.2,63.,64.253)Z(698.5,65.28,65.507)Z(830.6,65.52,65.747)Z(698.5,65.76,65.873)Z(622.3,65.88,65.993)Z(523.3,66.,66.113)Z(523.3,66.12,66.233)Z(622.3,66.24,66.467)Z(523.3,66.48,66.707)Z(466.2,66.72,66.833)Z(523.3,66.84,67.295)Z(466.2,67.32,67.433)Z(415.3,67.44,67.553)Z(349.2,67.56,67.673)Z(523.3,69.,69.113)Z(466.2,69.12,69.347)Z(466.2,69.36,69.473)Z(466.2,69.48,69.821)Z(349.2,69.84,69.953)Z(349.2,69.96,70.073)Z(415.3,70.08,70.193)Z(349.2,70.2,70.313)Z(349.2,70.32,70.547)Z(311.1,70.56,70.673)Z(349.2,70.68,71.933)Z(523.3,73.44,73.667)Z(415.3,73.68,73.907)Z(466.2,73.92,74.147)Z(523.3,74.16,74.387)Z(415.3,74.4,74.855)Z(466.2,74.88,74.993)Z(466.2,75.,75.227)Z(523.3,75.24,75.353)Z(466.2,75.36,75.587)Z(415.3,75.6,75.713)Z(415.3,75.72,75.833)Z(466.2,75.84,76.067)Z(523.3,76.08,76.307)Z(415.3,76.32,76.661)Z(349.2,76.68,76.793)Z(523.3,77.28,77.507)Z(415.3,77.52,77.747)Z(466.2,77.76,77.987)Z(523.3,78.,78.227)Z(466.2,78.24,78.695)Z(523.3,78.72,78.833)Z(622.3,78.84,79.067)Z(622.3,79.08,79.193)Z(622.3,79.2,79.313)Z(523.3,79.32,79.433)Z(523.3,79.44,79.553)Z(622.3,79.56,79.673)Z(698.5,79.68,79.907)Z(466.2,79.92,80.033)Z(523.3,80.04,80.153)Z(466.2,80.16,80.273)Z(415.3,80.28,80.621)Z(523.3,81.12,81.347)Z(415.3,81.36,81.587)Z(466.2,81.6,81.827)Z(523.3,81.84,82.067)Z(415.3,82.08,82.535)Z(466.2,82.56,82.673)Z(466.2,82.68,82.907)Z(523.3,82.92,83.033)Z(466.2,83.04,83.267)Z(415.3,83.28,83.393)Z(415.3,83.4,83.513)Z(466.2,83.52,83.747)Z(523.3,83.76,83.987)Z(415.3,84.,84.341)Z(349.2,84.36,84.473)Z(523.3,84.96,85.187)Z(415.3,85.2,85.427)Z(466.2,85.44,85.667)Z(523.3,85.68,85.907)Z(466.2,85.92,86.375)Z(523.3,86.4,86.513)Z(622.3,86.52,86.747)Z(622.3,86.76,86.873)Z(622.3,86.88,86.993)Z(523.3,87.,87.113)Z(523.3,87.12,87.233)Z(622.3,87.24,87.353)Z(698.5,87.36,87.587)Z(466.2,87.6,87.713)Z(523.3,87.72,87.833)Z(466.2,87.84,87.953)Z(415.3,87.96,88.301)Z(622.3,88.32,88.889)Z(554.4,88.92,89.033)Z(523.3,89.04,89.267)Z(466.2,89.28,89.393)Z(523.3,89.4,89.627)Z(466.2,89.64,89.753)Z(415.3,90.,90.455)Z(466.2,90.48,90.707)Z(523.3,92.64,92.867)Z(415.3,92.88,93.107)Z(466.2,93.12,93.347)Z(523.3,93.36,93.587)Z(415.3,93.6,94.055)Z(466.2,94.08,94.193)Z(466.2,94.2,94.427)Z(523.3,94.44,94.553)Z(466.2,94.56,94.787)Z(415.3,94.8,94.913)Z(415.3,94.92,95.033)Z(466.2,95.04,95.267)Z(523.3,95.28,95.507)Z(415.3,95.52,95.861)Z(349.2,95.88,95.993)Z(523.3,96.48,96.707)Z(415.3,96.72,96.947)Z(466.2,96.96,97.187)Z(523.3,97.2,97.427)Z(466.2,97.44,97.895)Z(523.3,97.92,98.033)Z(622.3,98.04,98.267)Z(622.3,98.28,98.393)Z(622.3,98.4,98.513)Z(523.3,98.52,98.633)Z(523.3,98.64,98.753)Z(622.3,98.76,98.873)Z(698.5,98.88,99.107)Z(466.2,99.12,99.233)Z(523.3,99.24,99.353)Z(466.2,99.36,99.473)Z(415.3,99.48,99.821)Z(415.3,99.84,100.181)Z(415.3,100.2,100.313)Z(311.1,100.44,100.553)Z(415.3,100.56,100.673)Z(466.2,100.68,100.793)Z(466.2,100.8,100.85)Z(523.3,100.851,101.028)Z(622.3,101.04,101.153)Z(523.3,101.16,101.273)Z(466.2,101.28,101.393)Z(415.3,101.4,101.741)Z(415.3,101.76,102.101)Z(415.3,102.12,102.233)Z(311.1,102.36,102.473)Z(415.3,102.48,102.593)Z(466.2,102.6,102.713)Z(466.2,102.72,102.77)Z(523.3,102.771,102.948)Z(622.3,102.96,103.073)Z(523.3,103.08,103.193)Z(466.2,103.2,103.313)Z(415.3,103.32,103.661)Z(830.6,104.64,104.867)Z(932.3,104.88,105.107)Z(932.3,105.12,105.233)Z(1047.,105.24,105.581)Z(523.3,105.6,105.713)Z(622.3,105.72,105.947)Z(622.3,105.96,106.073)Z(622.3,106.08,106.193)Z(523.3,106.2,106.313)Z(523.3,106.32,106.433)Z(622.3,106.44,106.553)Z(698.5,106.56,106.787)Z(466.2,106.8,106.913)Z(523.3,106.92,107.033)Z(466.2,107.04,107.153)Z(415.3,107.16,107.501)Z(415.3,107.52,107.861)Z(415.3,107.88,107.993)Z(311.1,108.12,108.233)Z(415.3,108.24,108.353)Z(466.2,108.36,108.473)Z(466.2,108.48,108.53)Z(523.3,108.531,108.708)Z(622.3,108.72,108.833)Z(523.3,108.84,108.953)Z(466.2,108.96,109.073)Z(415.3,109.08,109.421)Z(415.3,109.44,109.781)Z(415.3,109.8,109.913)Z(311.1,110.04,110.153)Z(415.3,110.16,110.273)Z(466.2,110.28,110.393)Z(466.2,110.4,110.45)Z(523.3,110.451,110.628)Z(622.3,110.64,110.753)Z(523.3,110.76,110.873)Z(466.2,110.88,110.993)Z(415.3,111.,111.341)Z(830.6,112.32,112.547)Z(932.3,112.56,112.787)Z(932.3,112.8,112.913)Z(1047.,112.92,113.261)Z(523.3,113.28,113.393)Z(622.3,113.4,113.627)Z(622.3,113.64,113.753)Z(622.3,113.76,113.873)Z(523.3,113.88,113.993)Z(523.3,114.,114.113)Z(622.3,114.12,114.233)Z(698.5,114.24,114.467)Z(466.2,114.48,114.593)Z(523.3,114.6,114.713)Z(466.2,114.72,114.833)Z(415.3,114.84,115.181)Z(698.5,115.2,115.427)Z(830.6,115.44,115.667)Z(698.5,115.68,115.793)Z(622.3,115.8,115.913)Z(523.3,115.92,116.147)Z(622.3,116.16,116.387)Z(523.3,116.4,116.627)Z(466.2,116.64,116.753)Z(415.3,116.76,118.013)Z(466.2,119.04,119.267)Z(466.2,119.28,119.393)Z(523.3,119.4,119.513)Z(415.3,119.52,119.747)Z(349.2,119.76,119.987)Z(415.3,120.,120.227)Z(349.2,120.24,120.467)Z(311.1,120.48,120.593)Z(349.2,120.6,121.853)\n  return y;\n}\n\nfloat doChannel2( float t )\n{\n  float x = 0.0;\n  float y = 0.0;\n  Z(261.6, 3.84, 4.751)Z(196., 4.8, 5.255)Z(207.7, 5.28, 7.559)Z(207.7, 7.68, 8.591)Z(233.1, 8.64, 9.095)Z(261.6, 9.12, 11.399)Z(261.6, 11.52, 12.431)Z(196., 12.48, 12.935)Z(207.7, 12.96, 15.239)Z(207.7, 15.36, 16.271)Z(233.1, 16.32, 16.775)Z(261.6, 16.8, 18.167)Z(261.6, 19.2, 19.541)Z(261.6, 19.56, 19.673)Z(261.6, 19.92, 20.147)Z(311.1, 20.4, 20.627)Z(311.1, 20.76, 21.101)Z(311.1, 21.12, 21.461)Z(311.1, 21.48, 21.593)Z(311.1, 21.84, 22.067)Z(277.2, 22.32, 22.547)Z(277.2, 22.68, 23.021)Z(261.6, 23.04, 23.381)Z(261.6, 23.4, 23.513)Z(261.6, 23.76, 23.987)Z(311.1, 24.24, 24.467)Z(311.1, 24.6, 24.941)Z(311.1, 24.96, 25.301)Z(311.1, 25.32, 25.433)Z(311.1, 25.68, 25.907)Z(277.2, 26.16, 26.387)Z(277.2, 26.52, 26.861)Z(174.6, 26.88, 27.221)Z(174.6, 27.24, 27.581)Z(174.6, 27.6, 28.055)Z(207.7, 28.08, 28.421)Z(207.7, 28.44, 28.781)Z(155.6, 28.8, 29.141)Z(155.6, 29.16, 29.501)Z(138.6, 29.52, 29.975)Z(138.6, 30., 30.341)Z(138.6, 30.36, 30.701)Z(174.6, 30.72, 31.061)Z(174.6, 31.08, 31.421)Z(174.6, 31.44, 31.895)Z(207.7, 31.92, 32.261)Z(207.7, 32.28, 32.621)Z(155.6, 32.64, 32.981)Z(155.6, 33., 33.341)Z(138.6, 33.36, 33.815)Z(138.6, 33.84, 34.181)Z(138.6, 34.2, 34.541)Z(261.6, 34.56, 34.901)Z(261.6, 34.92, 35.489)Z(196., 35.76, 36.101)Z(196., 36.12, 36.461)Z(207.7, 36.48, 36.821)Z(207.7, 36.84, 37.409)Z(233.1, 37.68, 38.021)Z(233.1, 38.04, 38.381)Z(261.6, 38.4, 38.741)Z(261.6, 38.76, 39.329)Z(196., 39.6, 39.941)Z(196., 39.96, 40.301)Z(207.7, 40.32, 40.661)Z(207.7, 40.68, 41.249)Z(87.31, 42.24, 42.467)Z(174.6, 42.48, 42.707)Z(87.31, 42.72, 42.947)Z(174.6, 42.96, 43.187)Z(87.31, 43.2, 43.427)Z(130.8, 43.44, 43.667)Z(65.41, 43.68, 43.907)Z(130.8, 43.92, 44.147)Z(69.3, 44.16, 44.387)Z(138.6, 44.4, 44.627)Z(69.3, 44.64, 44.867)Z(138.6, 44.88, 45.107)Z(69.3, 45.12, 45.347)Z(155.6, 45.36, 45.587)Z(77.78, 45.6, 45.827)Z(155.6, 45.84, 46.067)Z(87.31, 46.08, 46.307)Z(174.6, 46.32, 46.547)Z(87.31, 46.56, 46.787)Z(174.6, 46.8, 47.027)Z(87.31, 47.04, 47.267)Z(130.8, 47.28, 47.507)Z(65.41, 47.52, 47.747)Z(130.8, 47.76, 47.987)Z(69.3, 48., 48.227)Z(138.6, 48.24, 48.467)Z(69.3, 48.48, 48.707)Z(138.6, 48.72, 48.947)Z(69.3, 48.96, 49.187)Z(155.6, 49.2, 49.427)Z(77.78, 49.44, 49.667)Z(155.6, 49.68, 49.907)Z(87.31, 49.92, 50.147)Z(174.6, 50.16, 50.387)Z(87.31, 50.4, 50.627)Z(174.6, 50.64, 50.867)Z(87.31, 50.88, 51.107)Z(130.8, 51.12, 51.347)Z(65.41, 51.36, 51.587)Z(130.8, 51.6, 51.827)Z(69.3, 51.84, 52.067)Z(138.6, 52.08, 52.307)Z(69.3, 52.32, 52.547)Z(138.6, 52.56, 52.787)Z(69.3, 52.8, 53.027)Z(155.6, 53.04, 53.267)Z(77.78, 53.28, 53.507)Z(155.6, 53.52, 53.747)Z(87.31, 53.76, 53.987)Z(174.6, 54., 54.227)Z(87.31, 54.24, 54.467)Z(174.6, 54.48, 54.707)Z(87.31, 54.72, 54.947)Z(130.8, 54.96, 55.187)Z(65.41, 55.2, 55.427)Z(130.8, 55.44, 55.667)Z(69.3, 55.68, 55.907)Z(138.6, 55.92, 56.147)Z(69.3, 56.16, 56.387)Z(138.6, 56.4, 56.627)Z(69.3, 56.64, 56.867)Z(155.6, 56.88, 57.107)Z(77.78, 57.12, 57.347)Z(155.6, 57.36, 57.587)Z(261.6, 57.6, 58.511)Z(196., 58.56, 59.015)Z(207.7, 59.04, 61.319)Z(207.7, 61.44, 62.351)Z(233.1, 62.4, 62.855)Z(261.6, 62.88, 65.159)Z(261.6, 65.28, 66.191)Z(196., 66.24, 66.695)Z(207.7, 66.72, 68.999)Z(207.7, 69.12, 70.031)Z(233.1, 70.08, 70.535)Z(261.6, 70.56, 71.927)Z(261.6, 72.96, 73.301)Z(261.6, 73.32, 73.433)Z(261.6, 73.68, 73.907)Z(311.1, 74.16, 74.387)Z(311.1, 74.52, 74.861)Z(311.1, 74.88, 75.221)Z(311.1, 75.24, 75.353)Z(311.1, 75.6, 75.827)Z(277.2, 76.08, 76.307)Z(277.2, 76.44, 76.781)Z(261.6, 76.8, 77.141)Z(261.6, 77.16, 77.273)Z(261.6, 77.52, 77.747)Z(311.1, 78., 78.227)Z(311.1, 78.36, 78.701)Z(311.1, 78.72, 79.061)Z(311.1, 79.08, 79.193)Z(311.1, 79.44, 79.667)Z(277.2, 79.92, 80.147)Z(277.2, 80.28, 80.621)Z(174.6, 80.64, 80.981)Z(174.6, 81., 81.341)Z(174.6, 81.36, 81.815)Z(207.7, 81.84, 82.181)Z(207.7, 82.2, 82.541)Z(155.6, 82.56, 82.901)Z(155.6, 82.92, 83.261)Z(138.6, 83.28, 83.735)Z(138.6, 83.76, 84.101)Z(138.6, 84.12, 84.461)Z(174.6, 84.48, 84.821)Z(174.6, 84.84, 85.181)Z(174.6, 85.2, 85.655)Z(207.7, 85.68, 86.021)Z(207.7, 86.04, 86.381)Z(155.6, 86.4, 86.741)Z(155.6, 86.76, 87.101)Z(138.6, 87.12, 87.575)Z(138.6, 87.6, 87.941)Z(138.6, 87.96, 88.301)Z(261.6, 88.32, 88.661)Z(261.6, 88.68, 89.249)Z(196., 89.52, 89.861)Z(196., 89.88, 90.221)Z(207.7, 90.24, 90.581)Z(207.7, 90.6, 91.169)Z(233.1, 91.44, 91.781)Z(233.1, 91.8, 92.141)Z(261.6, 92.16, 92.501)Z(261.6, 92.52, 93.089)Z(196., 93.36, 93.701)Z(196., 93.72, 94.061)Z(207.7, 94.08, 94.421)Z(207.7, 94.44, 95.009)Z(233.1, 95.28, 95.621)Z(233.1, 95.64, 95.981)Z(261.6, 96., 96.341)Z(261.6, 96.36, 96.929)Z(196., 97.2, 97.541)Z(196., 97.56, 97.901)Z(207.7, 97.92, 98.261)Z(207.7, 98.28, 98.849)Z(233.1, 99.12, 99.461)Z(233.1, 99.48, 99.821)Z(87.31, 99.84, 100.067)Z(174.6, 100.08, 100.307)Z(87.31, 100.32, 100.547)Z(174.6, 100.56, 100.787)Z(87.31, 100.8, 101.027)Z(130.8, 101.04, 101.267)Z(65.41, 101.28, 101.507)Z(130.8, 101.52, 101.747)Z(69.3, 101.76, 101.987)Z(138.6, 102., 102.227)Z(69.3, 102.24, 102.467)Z(138.6, 102.48, 102.707)Z(69.3, 102.72, 102.947)Z(155.6, 102.96, 103.187)Z(77.78, 103.2, 103.427)Z(155.6, 103.44, 103.667)Z(87.31, 103.68, 103.907)Z(174.6, 103.92, 104.147)Z(87.31, 104.16, 104.387)Z(174.6, 104.4, 104.627)Z(87.31, 104.64, 104.867)Z(130.8, 104.88, 105.107)Z(65.41, 105.12, 105.347)Z(130.8, 105.36, 105.587)Z(69.3, 105.6, 105.827)Z(138.6, 105.84, 106.067)Z(69.3, 106.08, 106.307)Z(138.6, 106.32, 106.547)Z(69.3, 106.56, 106.787)Z(155.6, 106.8, 107.027)Z(77.78, 107.04, 107.267)Z(155.6, 107.28, 107.507)Z(87.31, 107.52, 107.747)Z(174.6, 107.76, 107.987)Z(87.31, 108., 108.227)Z(174.6, 108.24, 108.467)Z(87.31, 108.48, 108.707)Z(130.8, 108.72, 108.947)Z(65.41, 108.96, 109.187)Z(130.8, 109.2, 109.427)Z(69.3, 109.44, 109.667)Z(138.6, 109.68, 109.907)Z(69.3, 109.92, 110.147)Z(138.6, 110.16, 110.387)Z(69.3, 110.4, 110.627)Z(155.6, 110.64, 110.867)Z(77.78, 110.88, 111.107)Z(155.6, 111.12, 111.347)Z(87.31, 111.36, 111.587)Z(174.6, 111.6, 111.827)Z(87.31, 111.84, 112.067)Z(174.6, 112.08, 112.307)Z(87.31, 112.32, 112.547)Z(130.8, 112.56, 112.787)Z(65.41, 112.8, 113.027)Z(130.8, 113.04, 113.267)Z(69.3, 113.28, 113.507)Z(138.6, 113.52, 113.747)Z(69.3, 113.76, 113.987)Z(138.6, 114., 114.227)Z(69.3, 114.24, 114.467)Z(155.6, 114.48, 114.707)Z(77.78, 114.72, 114.947)Z(155.6, 114.96, 115.187)Z(174.6, 115.2, 116.111)Z(130.8, 116.16, 116.615)Z(138.6, 116.64, 118.919)Z(138.6, 119.04, 119.951)Z(155.6, 120., 120.455)Z(174.6, 120.48, 122.759)\n\n  return y;\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}