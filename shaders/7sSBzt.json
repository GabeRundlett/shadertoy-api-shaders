{
    "Shader": {
        "info": {
            "date": "1646841508",
            "description": "Original from: https://www.shadertoy.com/view/MsX3DN\n\nmodified for testing and fun, fucking around with this is interesting\n\n\n\nfort nite",
            "flags": 0,
            "hasliked": 0,
            "id": "7sSBzt",
            "likes": 0,
            "name": "Insanity Shader [Sin/Wobble]",
            "published": 3,
            "tags": [
                "wobble",
                "warp",
                "trippy",
                "weird",
                "sinwave",
                "insanity"
            ],
            "usePreview": 0,
            "username": "cooldude999",
            "viewed": 246
        },
        "renderpass": [
            {
                "code": "vec3 hueshift(vec3 c, float s){\n    vec3 m=vec3(cos(s),s=sin(s)*.5700,-s);\n    return c*mat3(m+=(1.-m.x)/3.,m.zxy,m.yzx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    bool DoColor = false;//fun\n    \n    float timeMulti = 30.09;\n    float timeDiv = 6.3;\n\t// Get the UV Coordinate of your texture or Screen Texture, yo!\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t// Flip that shit, cause shadertool be all \"yolo opengl\"\n\tuv.x + 0.09 / iTime;\n    uv.y * 2.0 * iTime / uv.y;\n\t\n\t// the funny doings!\n    \n    //some weird spinny wobble thing !! :]? ??\n\tuv.x += sin(uv.y*0.5*iTime * 0.005)/20.0;\n    uv.y += sin(uv.x*0.8/iTime + timeDiv)/00.3;\n\tuv.xy += sin(uv.x-10.0+iTime)*0.29;\n    uv.xy += sin(uv.y+10.0+iTime)/10.0;\n    uv.y += sin(uv.x * 10.0+iTime + 0.03)*0.08;\n    uv.x += sin(uv.y * 20.0+iTime * 0.5)*0.005;\n    uv.x * 0.09 * iTime;\n \n\t\n\t\n\t\n\t\n\t\n    \n    \n    vec4 color = texture(iChannel0, uv);\n    fragColor = color;\n    \n    //COLOR STUFF!!!!!! use the BOOL to enable a silly little rainbow :3\n    if (DoColor)\n    {\n        vec3 hue = hueshift(vec3(0.3, 0., 0.), -uv.x * 6.283);    \n        \n        vec3 col = texture(iChannel0, uv).rgb;\n        \n        fragColor = vec4(hueshift(col, iTime / 1.3), 1.);\n    \n    }\n    \n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}