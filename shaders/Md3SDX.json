{
    "Shader": {
        "info": {
            "date": "1461761907",
            "description": "modification of bananaft's 'Two lines atmospheric scattering' ",
            "flags": 0,
            "hasliked": 0,
            "id": "Md3SDX",
            "likes": 3,
            "name": "3d atmospheric scattering",
            "published": 3,
            "tags": [
                "scattering",
                "atmospheric"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 1010
        },
        "renderpass": [
            {
                "code": "//This is a derivative of Bananaft's 'Two lines atmospheric scattering' https://www.shadertoy.com/view/MdtXD2\n\n\n#define pi 3.14\n\n\nvec2 rot(in vec2 p, in float a) {\n    return p*mat2(sin(a),cos(a),-cos(a),sin(a));\n}\nvec3 rot(in vec3 p, in vec2 a) {\n    vec3 rp = p;\n    rp.yz = rot(rp.yz,a.y);\n    rp.xz = rot(rp.xz,a.x);\n    return rp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 rd = normalize(vec3((fragCoord.xy*2.-iResolution.xy)/iResolution.x, 1.));\n    rd = rot(rd, vec2(0.,pi/2.5));\n    \n    vec3 sunDirection;\n    if (iMouse.w > 0.) \n        sunDirection = normalize(vec3(1.,iMouse.y*2./iResolution.y-.5,0.));\n    else\n        sunDirection = normalize(vec3(1.,1.,0.));\n    \n   //modified bananaft's code\n    //Mie mask\n    float sun = max(1.0 - (1.0 + 10.0 * max(0., sunDirection.y) + 1.0 * rd.y) * max(0., length(rd - sunDirection)-.2),0.0)\n        + 0.3 * pow(1.0-rd.y,12.0) * (1.6-max(0.,sunDirection.y));\n\t\n    //the sauce\n    fragColor = vec4(mix(vec3(0.3984,0.5117,0.7305), vec3(0.7031,0.4687,0.1055), sun)\n              * ((0.5 + 1.0 * pow(max(0.,sunDirection.y),0.4)) * (1.5-abs(sunDirection.y))+ pow(sun, 5.2)\n              * max(0.,sunDirection.y) * (5.0 + 15.0 * max(0.,sunDirection.y))),1.0);\n    \n    //gray bottom\n    fragColor = mix(fragColor,\n                    vec4(.3),\n                    clamp((-rd.y+.01)*100.,0.,1.));\n    \n    //fragColor = vec4(sun);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}