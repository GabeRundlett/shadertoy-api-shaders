{
    "Shader": {
        "info": {
            "date": "1702934294",
            "description": "reference: https://www.facebook.com/CymaticUniverse/posts/741183981377178",
            "flags": 0,
            "hasliked": 0,
            "id": "XfX3Dn",
            "likes": 16,
            "name": "harmonic waves",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "short",
                "yinyang",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 382
        },
        "renderpass": [
            {
                "code": "/**/ // see golfed version below.\n\n\n//#define S(v) smoothstep( 1.5, 0., abs(v)/fwidth(v) )\n#define S(P) smoothstep( 5./R.y*i, 0., abs( length(P) - 1. ) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 1.2*( u+u - R ) / R.y, V;\n         \n    float i=1., v=i;   \n    \n    O = vec4( S(U) );                                // circle\n    if ( length(U) < 1. )                           // inside only\n        for( ; i++ < 9.;  v /= 1.2 )                 // foreach harmonic\n            V = U*i, \n            V.x = mod( V.x + i + sign(V.y), 4.) - 2.,// arc center\n            O = max(O, S(V)*v ) ;                    // draw arc, grey=v\n}\n\n\n\n\n/**   // -2Â by Observer, -4 by SnoopethDuckDuck, -10 by Fab\n\n#define S(P) ( 1.- R.y/5./i * abs( length(P) - 1. ) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy,V;    \n    float i, v=++i;   \n    O = S(U = 1.2*(U+U-R)/R.y) + 0.*O;  // circle\n    if ( dot(U,U) < i )                              // inside only\n        for( ; i++ < 9.;  v /= 1.2 )                 // foreach harmonic\n            V = U*i, \n            V.x = mod( V.x + i + sign(V.y), 4.) - 2.,// arc center\n            O = max(O, S(V)*v ) ;                    // draw arc, grey=v\n}\n\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}