{
    "Shader": {
        "info": {
            "date": "1488159518",
            "description": "top viewed grass.\nthank you for helping",
            "flags": 0,
            "hasliked": 0,
            "id": "ldlyDH",
            "likes": 6,
            "name": "topview grass",
            "published": 3,
            "tags": [
                "grass"
            ],
            "usePreview": 1,
            "username": "ho4040",
            "viewed": 769
        },
        "renderpass": [
            {
                "code": "float easeOut( float t ){\n    t-=1.0;\n    return (t*t*t+1.0);\n}\n\nvec2 hash( vec2 p ) {\n    p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); \n    return fract(sin(p)*18.5453); \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    \n    uv *= 80.0 + sin(iTime*0.2)*50.0;\n\t\n    float maxHeight = 0.0;\n    float brightness = 0.0;\n    \n    vec2 wind = vec2(sin(iTime*0.8), cos(iTime*0.7));\n    \n    for(float u=-2.0;u<=2.0;u++){\n        \n        for(float v=-2.0;v<=2.0;v++){\n            \n            vec2 ij = vec2(floor(uv.x)+u, floor(uv.y)+v);\n            vec2 growStartAt = ij + hash(ij);\n            \n            //Make some voids with texture\n            vec3 tx = texture(iChannel0, growStartAt/130.0).xyz;\n    \t\tfloat e = smoothstep(0.0, 0.5, length(tx));\n            if(e < 0.6) continue;\n            \n            \n            float tickness = length(hash(ij)) * 0.25+0.05;\n        \tvec2 growTo = sin(hash(growStartAt)*10.0)*1.0+wind;\n            float b = length(growTo)/2.0;\n            \n            for(float h=0.0;h<=1.0;h+=0.07){\n            \t\n                if( maxHeight < h * b ) {\n                    \n                    vec2 trunkCenter = growStartAt + growTo * h;\n                \tfloat trunkTickness = tickness * easeOut(1.0-h);\n                    \n                    if(length(trunkCenter-uv) < trunkTickness){\n                \t\tmaxHeight = h;\n                        brightness = b;\n                    }\n                }\n            }\n            \n        }\n    }\n    fragColor = vec4(0.8, 1.0, 0.7, 1.0) * maxHeight*brightness;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}