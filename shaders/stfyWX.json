{
    "Shader": {
        "info": {
            "date": "1648789780",
            "description": "fbm stuff.",
            "flags": 0,
            "hasliked": 0,
            "id": "stfyWX",
            "likes": 10,
            "name": "Noise Caverns",
            "published": 3,
            "tags": [
                "2d",
                "noise"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 256
        },
        "renderpass": [
            {
                "code": "// Plento (Cole Peterson)\n\n#define ss(a, b, t) smoothstep(a, b, t)\n#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define R iResolution.xy\n\nvec2 hash22( vec2 x ){\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat gdns(vec2 p ){\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = smoothstep(0., 1., f);\n    \n    vec2 a = hash22(i);\n    vec2 b = hash22( i + vec2(1.,0.));\n    vec2 c = hash22( i + vec2(.0,1.));\n    vec2 d = hash22( i + vec2(1));\n    \n    float nse = mix( mix( dot( a, f - vec2(0.0,0.0) ), \n                     dot( b, f - vec2(1.0,0.0) ), u.x),\n                mix( dot( c, f - vec2(0.0,1.0) ), \n                     dot( d, f - vec2(1) ), u.x), u.y);\n    return nse + 0.5;\n}\n\nfloat octnse(vec2 p, int oct){\n    float a = 1.;\n    float n = 0.;\n    \n    for(int i = 0; i < oct; i++){\n     \tn += gdns(p) * a;\t\n        p*=2.;\n        a *= .5;\n    }\n    \n    return n;\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    float y = uv.y;\n    uv*=3.5;\n    uv *= rot(-iTime*.1);\n   \n    vec3 col = vec3(0);\n    \n    float scale = 1., N = 25.;\n    for(float i = 0.; i < N; i++){\n        vec2 p = uv * scale;\n\n        p *= rot(i*.01);\n        p += iTime*.52;\n\n        float ns = octnse(p*0.4, 4);\n        float h = 0.5 + (i / N) * 0.75;\n        float ns2 = ss(h, h + .04 , ns);\n        \n        vec3 nc = mix(vec3(0), .5 + .4*cos(vec3(7., 6., 2.)*i*0.08 - iTime*0.4+2.8), ns2);\n        float fog = max(ss(0.0, 0.9, i / N), 0.02);\n        \n        if(i == N - 1.)  nc -= .4*vec3(ss(.3, 4.3, ns*ns*ns));\n           \n        col = mix(col, nc*fog, ns2);\n    \n        scale += 0.03;\n    }\n\n    col *= step(abs(y), .44);\n\n    col = 1.-exp(-col);\n    f = vec4(col, 1.0);\n    \n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}