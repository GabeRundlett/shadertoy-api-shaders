{
    "Shader": {
        "info": {
            "date": "1636878348",
            "description": "马赛克",
            "flags": 0,
            "hasliked": 0,
            "id": "slt3DX",
            "likes": 3,
            "name": "入门之路-16",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "jialouluo",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "//这是一个生成马赛克的案例\nconst vec2 textureSize =vec2(720.,405.);\nconst vec2 pixSize = vec2(1,1);//调节这里的参数，可以看到不同大小的马赛克\nvec4  getCircular(vec2 uv){\n    vec2 Txy = vec2(floor(uv.x/pixSize.x)*pixSize.x,floor(uv.y/pixSize.y)*pixSize.y)+0.5 * pixSize;\n    vec2 dis = Txy -uv;\n    float r = length(dis);\n    vec2 nuv = Txy/textureSize;\n    vec4 finalColor ;\n    if(r<pixSize.x*0.5){\n        finalColor = texture(iChannel1,nuv);\n    }else{\n        finalColor = vec4(0,0,0,1);\n    }\n    return finalColor;\n}\nvec4 getSquare(vec2 uv){\n    vec2 Txy = vec2(floor(uv.x/pixSize.x)*pixSize.x,floor(uv.y/pixSize.y)*pixSize.y)+0.5 * pixSize;\n    vec2 dis = Txy -uv;\n    vec2 color = smoothstep(abs(dis)-0.001,abs(dis),pixSize*0.5);\n    vec2 nuv = Txy/textureSize;\n    vec4 finalColor ;\n    if(color.x<1.0|| color.y<1.0 ){\n        finalColor = vec4(0,0,0,1);\n    }\n    else{\n        finalColor = texture(iChannel1,nuv);\n\n    }\n    return finalColor;\n}\nvec2 random(in vec2 _st ){\n    _st = vec2(\n            dot(_st,vec2(127.326,321.324)),\n            dot(_st,vec2(15.31,45.332))\n                    );\n    return 2.0*fract(sin(_st)*432.23) +1.0; //1.0 ~ 3.0\n}\nfloat snoise(vec2 st){ //Gradient Noise\n    vec2 i = fract(st);//取小数\n    vec2 k = floor(st);//向负无穷取整\n    vec2 u = i*i*(3.0-2.0*i);//插值函数\n    return  mix(\n                    mix(dot(random(k + vec2(0.0,0.0)),i - vec2(0.0,0.0)),\n                        dot(random(k + vec2(0.0,1.0)),i - vec2(0.0,1.0)),\n                         u.y),\n                    mix(dot(random(k + vec2(1.0,0.0)),i - vec2(1.0,0.0)),\n                        dot(random(k + vec2(1.0,1.0)),i - vec2(1.0,1.0)),\n                         u.y),\n                       u.x\n                   );//二维noise\n}\nvec4 getNoise(vec2 uv){\n    vec2 Txy = vec2(floor(uv.x/pixSize.x)*pixSize.x,floor(uv.y/pixSize.y)*pixSize.y)+0.5 * pixSize;\n    vec2 dis = Txy -uv;\n    vec2 color = smoothstep(abs(dis)-0.001,abs(dis),pixSize*0.5);\n    vec2 nuv = Txy/textureSize;\n    vec4 finalColor ;\n    \n    if(color.x<1.0|| color.y<1.0 ){\n        finalColor = vec4(0,0,0,1);\n    }\n    else{\n        vec2 st = nuv-0.5;\n        vec2 result = vec2(step(abs(st)-0.49,vec2(0.0)));\n        if(result.x<1.0|| result.y<1.0 ){\n        }else{\n            nuv+=0.01* snoise(nuv + iTime *0.3);\n        }\n        finalColor = texture(iChannel1,nuv);\n    }\n    \n    return finalColor;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv *=textureSize;\n    \n    fragColor =getNoise(uv);\n        \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}