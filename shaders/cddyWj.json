{
    "Shader": {
        "info": {
            "date": "1697484460",
            "description": "It's just a box blur that averages the pixel values around a given pixel in two passes",
            "flags": 32,
            "hasliked": 0,
            "id": "cddyWj",
            "likes": 0,
            "name": "Simple box blur",
            "published": 3,
            "tags": [
                "blur",
                "boxblur"
            ],
            "usePreview": 0,
            "username": "Kampfhund",
            "viewed": 138
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float blurAmount = 10.0;\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0); \n    vec2 currentCoordinate = vec2(0.0, 0.0);\n    \n    for(float i = blurAmount * -1.0; i <= blurAmount; i++)\n    {\n        currentCoordinate = vec2(fragCoord.x, fragCoord.y + i);\n        color.r += texture(iChannel0, currentCoordinate / iResolution.xy).r;\n        color.g += texture(iChannel0, currentCoordinate / iResolution.xy).g;\n        color.b += texture(iChannel0, currentCoordinate / iResolution.xy).b;\n    }\n    \n    color = vec4(color.r / (blurAmount*2.0+1.0), color.g / (blurAmount*2.0+1.0), color.b / (blurAmount*2.0+1.0), 1.0);\n    fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float blurAmount = 10.0;\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0); \n    vec2 currentCoordinate = vec2(0.0, 0.0);\n    \n    for(float i = blurAmount * -1.0; i <= blurAmount; i++)\n    {\n        currentCoordinate = vec2(fragCoord.x + i, fragCoord.y);\n        color.r += texture(iChannel0, currentCoordinate / iResolution.xy).r;\n        color.g += texture(iChannel0, currentCoordinate / iResolution.xy).g;\n        color.b += texture(iChannel0, currentCoordinate / iResolution.xy).b;\n    }\n    \n    color = vec4(color.r / (blurAmount*2.0+1.0), color.g / (blurAmount*2.0+1.0), color.b / (blurAmount*2.0+1.0), 1.0);\n    fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}