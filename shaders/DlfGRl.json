{
    "Shader": {
        "info": {
            "date": "1672196155",
            "description": "I made some digits previously but I think this seven segment system is a lot better. I also learned the powers of #define lol",
            "flags": 0,
            "hasliked": 0,
            "id": "DlfGRl",
            "likes": 6,
            "name": "Smarter digits",
            "published": 3,
            "tags": [
                "digits",
                "counting"
            ],
            "usePreview": 0,
            "username": "fishy",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "float box(in vec2 uv, vec2 b)\n{\n    uv = abs(uv)-b; return max(uv.x, uv.y);\n}\n\nstruct displayInfo\n{\n    bool a, b, c, d, e, f, g;\n};\n\n#define t true\n#define f false\ndisplayInfo[] info = displayInfo[] (\ndisplayInfo(t, t, t, t, t, t, f),\ndisplayInfo(f, t, t, f, f, f, f),\ndisplayInfo(t, t, f, t, t, f, t),\ndisplayInfo(t, t, t, t, f, f, t),\ndisplayInfo(f, t, t, f, f, t, t),\ndisplayInfo(t, f, t, t, f, t, t),\ndisplayInfo(t, f, t, t, t, t, t),\ndisplayInfo(t, t, t, f, f, f, f),\ndisplayInfo(t, t, t, t, t, t, t),\ndisplayInfo(t, t, t, t, f, t, t));\n#undef t\n#undef f\n\n#define vc(p, b, z) if(i.z) d = min(d, box(uv-vec2(size.xx*p.xy), size.yx+vec2(0, size.y)))\n#define hc(p, b, z) if(i.z) d = min(d, box(uv-vec2(0, size.x*p*2.), size.xy+vec2(size.y, 0)))\nfloat segDisplay(vec2 uv, vec2 size, displayInfo i)\n{\n    float d = 1e20;\n    hc(1., size.x, a);\n    vc(vec2(1, 1), size.x, b);\n    vc(vec2(1, -1), size.x, c);\n    hc(-1., size.x, d);\n    vc(vec2(-1, -1), size.x, e);\n    vc(vec2(-1, 1), size.x, f);\n    hc(0., size.x, g);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(1.-step(0., segDisplay(uv, vec2(0.3, 0.05), info[int(mod(iTime, 10.))])));\n    #define t true\n    col += vec3(1.-step(0., segDisplay(uv, vec2(0.3, 0.05), displayInfo(t, t, t, t, t, t, t))))*0.2;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}