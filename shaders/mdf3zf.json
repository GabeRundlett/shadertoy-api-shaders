{
    "Shader": {
        "info": {
            "date": "1666550165",
            "description": "Yet another fractal mosaic pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "mdf3zf",
            "likes": 2,
            "name": "Fractal mosaic 28 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 219
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 = vec2(1.,0.5);\n    return abs(fract((a+a2)*(a2.x+a2.y))-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    vec2 uv = (fragCoord)/iResolution.y/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/2.;\n    vec2 t2 = vec2(0.);\n    bool t3 = false;\n    for(int k = 0; k < 6; k++){\n        t3 = uv.x > uv.y;\n        uv.x -= floor(mod(uv.x*1.5,1.5));\n        if(t3){ uv = uv.yx;t2 = -t2.yx;}\n        uv = abs(.5-uv+t2);\n        t2 =\n            triangle_wave(uv+.5)\n            //triangle_wave(uv+.5*sign(uv.x-uv.y))*sign(uv.x-uv.y)\n        ;\n        uv = t2+triangle_wave(uv.yx);\n        if(t3 || uv.y < uv.x) col = vec3(col.yz,uv.x-uv.y);\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//#define fmod(x,y) mod(floor(x),y)\n#define fmod(a, b) mod(mod(floor((a)),floor(1.+(a)/5.)),b)\nvec2 mainSound(int samp, float time){\n  \n  float s1 =\n      8.,\n  s2 = 8.,\n  m4 = fmod(floor(time*s1)/s1+floor(time*s1),2.),\n  t= //varying tempo\n      time*(1.+m4)/2.\n  ,\n  m1 =\n      fmod(floor(t*s2+floor(t*s2)*floor(t*s2))*floor(t/s2),s2)\n  ,\n  m3 =\n      fmod(t/(m1+.5),s2);\n  t *= s1*s1;\n  t /=  //varying tempo\n      (1.+fmod((t/s1+floor(t/s1))/2.,2.))\n  ;\n\n    float m2 =\n      1. + fmod(t/s1,s1)\n  ;\n  \n  float a = 64.*sqrt((1.-sqrt(fract(t/s1))))*.2,\n\n  nb = pow(2.,(m3+m2)/5.+5.5);\n\n  return\n      abs(.5-vec2(fract(time*nb*.998*2.),fract(time*nb)))*a\n      //vec2(fract(time*nb*.998/m2*s1)*a,fract(time*nb/m2*s1)*a)\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}