{
    "Shader": {
        "info": {
            "date": "1592665564",
            "description": "my next tattoo will like \"sin(iTime)\".",
            "flags": 0,
            "hasliked": 0,
            "id": "ttlyRX",
            "likes": 2,
            "name": "Hey VJ show me your screen, p1.",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "postviolet",
            "viewed": 304
        },
        "renderpass": [
            {
                "code": "float random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ),\n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ),\n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nconst int TIMES = 10;\nconst float ZOOM = 20.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 st = uv*rotate2d(5.);\n\nfor(int i = 0; i < TIMES; i++) {\n            float dist = distance(st.x, st.y);\n\n            st.x = st.x + sin(st.y + sin(dist*0.5)) + noise(uv)+iTime;\n            st.y = st.y - cos(st.x + cos(dist*0.5)) + noise(uv)+iTime;\n        }\n\n    fragColor = vec4(noise(sin(st*0.5+iTime)),0.,noise(sin(st/0.2+iTime)), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}