{
    "Shader": {
        "info": {
            "date": "1598806152",
            "description": "Attempt at creating a J. J. abrams style lensflare.",
            "flags": 0,
            "hasliked": 0,
            "id": "wlBBWh",
            "likes": 11,
            "name": "J J Flare",
            "published": 3,
            "tags": [
                "2d",
                "flare",
                "lensflare"
            ],
            "usePreview": 0,
            "username": "Jaromir",
            "viewed": 632
        },
        "renderpass": [
            {
                "code": "//Created by Jaromir Mulders\n//www.jaromirmulders.nl\n\n#define M_PI 3.14159265359\n\nfloat hash21(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\n\nfloat noise(vec2 x) {\n\tvec2 i = floor(x);\n\tvec2 f = fract(x);\n\n\tfloat a = hash21(i);\n\tfloat b = hash21(i + vec2(1.0, 0.0));\n\tfloat c = hash21(i + vec2(0.0, 1.0));\n\tfloat d = hash21(i + vec2(1.0, 1.0));\n\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n\n\nfloat flareLine(vec2 p, vec2 width){\n\n  float sphere = length(p);\n  sphere = smoothstep(width.x,0.,sphere);    \n       \n  vec2 s = vec2(0.5,1.);\n    \n  float line = abs(p.y+smoothstep(s.x,s.y,cos(p.x)*0.2));\n  line+= abs(p.y-smoothstep(s.x,s.y,cos(p.x)*0.2));\n   \n  line = smoothstep(width.y,0.0,line);\n  line*= sphere;  \n    \n  return line;\n}\n\nfloat sinSphere(vec2 p, float scale, float offset){\n\n  float s = sin(length(p*scale)+offset);\n    \n  return smoothstep(0.98,0.7,s)-smoothstep(1.,0.6,s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    \n    uv*=1.2;\n    \n    float sLen = length(uv);\n    float n = hash21(uv);\n    float n2 = noise(uv*15.+iTime*0.08);\n\t\n    float l1 = flareLine(uv + vec2(0.,0.),\n                         vec2(.9,0.03) + vec2(cos(iTime*0.265)) *vec2(0.11,0.01) );\n\tfloat l2 = flareLine(uv + vec2(-0.08,0.01),\n                         vec2(.5,0.013) + vec2(cos(iTime*0.287)) *vec2(0.12,0.005));\n\tfloat l3 = flareLine(uv + vec2(0.09,-0.011),\n                         vec2(.7,0.018) + vec2(cos(iTime*0.289)) *vec2(0.13,0.0023));\n    \n    float lCurve = cos(uv.x*M_PI*0.6)*0.2;\n    float lUv = abs(uv.y+lCurve);\n    lUv+= abs(uv.y -lCurve);\n    \n    float curveLine = length(lUv);\n    curveLine = smoothstep(0.8,0.,curveLine);\n    \n    vec2 sUv = uv*1.5;\n    float line = smoothstep(.15+n2*0.08,0.,abs(sUv.y));\n    float s = length(sUv);\n    float sphere = smoothstep(.8,-0.5,s);\n    float lAnim = fract(hash21(vec2(iTime*0.1)));\n    lAnim = max(0.9,lAnim);\n    float wSphere = smoothstep(.1+lAnim*0.03,-0.02,s);\n    float d = dot(abs(sUv.x*1.),abs(sUv.y*0.75));\n    float star = smoothstep(.07,-0.1,d)*5.;\n    float sSphere = line*star*sphere;\n    sSphere = pow(sSphere,2.);\n    \n    float bulb = length(uv*1.9+n2*-0.015);\n    bulb = bulb * smoothstep(1.,0.3,bulb);\n    bulb = smoothstep(0.3,.5,bulb);\n    \n    vec2 rUv = uv;\n    float emit = abs(sin(atan(rUv.y,rUv.x)*.7+.2));\n    emit+= abs(sin(atan(rUv.y,-rUv.x)*0.8+.1));\n    emit*=0.5;\n    emit*=smoothstep(.9,0.,sLen) - bulb*0.3 ;\n    emit = pow(emit,2.5);\n    emit = (emit*mix(n,1.,0.97))*0.9;\n\n\tfloat rRep = 1.5;\n    float rLen = length(uv*2.5);\n    float angle = atan(rUv.x,rUv.y);\n    float rAngle = sin(angle*rRep+n2*0.9+iTime*0.5);\n\tfloat rays = (abs(rAngle))*smoothstep(1.+n2*0.05,0.,rLen);\n    rays*= clamp(.1/rLen,0.,1.);\n    rays-=smoothstep(.8,0.,rLen)*2.;\n    float aId = floor(angle*rRep);\n    float rId = hash21(vec2(aId));\n\trays = clamp(rays* abs(sin(angle*0.3+0.1))*0.3,0.,1.) ;\n    \n    float r1 = sinSphere(uv+n2*0.1,0.9,0.0);\n    float r2 = sinSphere(uv+n2*-0.023,1.,0.0);\n    float r3 = sinSphere(uv+n2*0.05,1.1,0.0);\n    vec3 ripple = vec3(r1,r2,r3)*mix(sin(angle*0.7+iTime*0.23),1.,0.5);\n    \n    \n    vec3 col = vec3(0.);\n\n    col+=l1*vec3(0.1,0.1,.3);\n    col+=smoothstep(0.3,1.,l1)*vec3(1.)*0.3;\n    \n    col+=l2*vec3(0.2,0.5,0.6);\n    col+=smoothstep(0.3,1.,l2)*vec3(1.)*0.3;\n\n    col+=l3*vec3(1.5,0.3,1.);\n    col+=smoothstep(0.3,1.,l3)*vec3(1.)*0.3;\n\t\n    col+=vec3(sSphere*1.5)*vec3(.8,.05,0.)*2.;\n\tcol+=vec3(wSphere)*vec3(1.1);\n    \n    col+=ripple*0.075;\n    \n    col+=rays*vec3(.4,0.3,0.2)*100.;\n    col+=mix(vec3(0.34,0.5,0.6),vec3(.9,0.05,0.1),emit)*emit;\n    \n    col = pow(col,vec3(0.4545));\n    \n    fragColor = vec4(col,1.);\n    //fragColor = vec4(ripple,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}