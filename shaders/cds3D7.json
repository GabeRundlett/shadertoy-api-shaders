{
    "Shader": {
        "info": {
            "date": "1666244396",
            "description": "trying to follow https://www.youtube.com/watch?v=BV9ny785UNc\ninspired by byte_mechanic (https://www.shadertoy.com/view/ddX3R7) who was inspired by leon and coding train who both also inspired me",
            "flags": 32,
            "hasliked": 0,
            "id": "cds3D7",
            "likes": 5,
            "name": "reaction diffusion attempt",
            "published": 3,
            "tags": [
                "reactiondiffusion"
            ],
            "usePreview": 0,
            "username": "ufffd",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // smoothstep the A channel as output\n    vec3 col = vec3(smoothstep(0.4,0.6,texture(iChannel0,uv).a));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float dA = 1.;\nfloat dB = .25;\nfloat feed = 0.055;\nfloat k = 0.062;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec2 laplacianAB(in vec2 xy) {\n    vec2 sum = vec2(0.);\n    vec2 px = 1./iResolution.xy;\n    px *= 1.;\n    int range = 1;\n    for (int i=-range;i<range+1;i++){\n        for (int j=-range;j<range+1;j++){\n            vec2 offset = vec2(float(i),float(j))*px;\n            float factor = 0.05;\n            if (i==0||j==0) factor = 0.2;\n            if (i==0&&j==0) factor = -1.;\n            if (i<-1||j<-1) factor = 0.025;\n            if (i>1||j>1) factor = 0.025;\n            sum += texture(iChannel0,xy+offset).ab*factor;\n        }\n    }\n    return sum;\n}\n\nvec2 setAB(in vec2 xy) {\n    float a = texture(iChannel0,xy).a;\n    float b = texture(iChannel0,xy).b;\n    vec2 lapAB = laplacianAB(xy);\n    return vec2(\n        a +\n        dA * lapAB.x -\n        a * b * b +\n        feed * (1. - a),\n        b +\n        dB * lapAB.y +\n        a * b * b -\n        (k + feed) * b\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvc = (fragCoord*2. - iResolution.xy)/iResolution.y;\n    if (iFrame < 10) {\n        fragColor.b = step(0.5,length(uvc));\n        fragColor.b = mix(fragColor.b,1.,step(0.1,sin(50.*length(uvc.x))));\n        fragColor.b = mix(fragColor.b,1.,step(0.1,sin(50.*length(uvc.y))));\n        fragColor.a = 1.-fragColor.b;\n        return;\n    }\n    \n    float mouse_dist = distance(iMouse.xy/iResolution.xy,uv);\n    \n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv = rotate(uv,0.001);\n    uv.x /= iResolution.x/iResolution.y;\n    uv -= 0.5;\n    fragColor.ab = setAB(uv);\n    if (iMouse.z > 0.5) {\n        if (mouse_dist<0.03) { fragColor.b = 1.; fragColor.a = 0.; }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}