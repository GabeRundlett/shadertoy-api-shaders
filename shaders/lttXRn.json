{
    "Shader": {
        "info": {
            "date": "1477825407",
            "description": "random maze",
            "flags": 0,
            "hasliked": 0,
            "id": "lttXRn",
            "likes": 3,
            "name": "Maze ??",
            "published": 3,
            "tags": [
                "thebookofshader"
            ],
            "usePreview": 0,
            "username": "20911870",
            "viewed": 593
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n\nfloat random (in vec2 _st) { \n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))* \n        43758.5453123);\n}\n\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*2.0));\n    if (_index > 0.75) {\n        _st = vec2(1.0) - _st;\n    } else if (_index > 0.5) {\n        _st = vec2(1.0-_st.x,_st.y);\n    } else if (_index > 0.25) {\n        _st = 1.0-vec2(1.0-_st.x,_st.y);\n    }\n    return _st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    \n    uv *= 10.;\n    \n    vec2 ipos = floor(uv);  // integer\n    vec2 fpos = fract(uv);  // fraction\n\n    vec2 tile = truchetPattern(fpos, random( ipos ));\n\n    float color = 0.0;\n\n    // Maze\n    color = smoothstep(tile.x-0.3,tile.x,tile.y)-\n            smoothstep(tile.x,tile.x+0.3,tile.y);\n    \n\tfragColor = vec4(vec3(color),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}