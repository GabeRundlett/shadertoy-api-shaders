{
    "Shader": {
        "info": {
            "date": "1661016833",
            "description": "From paper:\nFundamental quantitative methods of land surface analysis (Shary et al. 2002)",
            "flags": 32,
            "hasliked": 0,
            "id": "slyyzW",
            "likes": 3,
            "name": "Curvature metrics",
            "published": 3,
            "tags": [
                "curvature",
                "meancurvature",
                "shary",
                "evans",
                "plancurvature",
                "surfaceanalysis"
            ],
            "usePreview": 0,
            "username": "Nolan",
            "viewed": 210
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define HORIZONTAL_CURVATURE 0\n#define PLAN_CURVATURE \t\t 1\n#define VERTICAL_CURVATURE\t 2\n#define DIFFERENCE_CURVATURE 3\n#define MEAN_CURVATURE\t\t 4\n#define UNSPHERICITY\t\t 5\n#define MIN_CURVATURE \t\t 6\n#define MAX_CURVATURE\t\t 7\n#define MIN_MAX_CURVATURE\t 8\t\n\n#define TYPE      MIN_MAX_CURVATURE\n\n#define SCALE     10.\n#define THRESHOLD 0.\n\n#define R iResolution\n#define T iTime\n\nfloat e[9];          // elevation in a 3x3 grid\nfloat p, q, r, s, t; // coefficients of the polynomial fitting the surface\nfloat pp, qq, pq;    // see Shary 2002 Geoderma (appendix A)\n\nvec2 uv;\n\nfloat h(in float x, in float y) {\n\tvec2 o = vec2(x,y)/R.xy;\n\treturn texture(iChannel0, uv+o).x;\n}\n\nfloat z(in int i) {\n\tif (i < 1 || i > 9) return 0.;\n\n\treturn e[i-1];\n}\n\n// formula sheet, p. 13 of (Shary et al. 2002)\n// http://wiki.dpi.inpe.br/lib/exe/fetch.php?media=ser301-2012:shary2002geoderma.pdf\n\nfloat plan_curvature() {\n\treturn -(qq*r-2.*pq*s+pp*t) / pow(pp+qq, 1.5);\n}\n\nfloat horizontal_curvature() { // sometimes called profile curvature\n\treturn -(qq*r-2.*pq*s+pp*t) / ((pp+qq)*sqrt(1.+pp+qq));\n}\n\nfloat vertical_curvature() { // sometimes called profile curvature\n\treturn -(pp*r-2.*pq*s+qq*t) / ((pp+qq)*pow(1.+pp+qq, 1.5));\n}\n\nfloat difference_curvature() {\n\treturn (qq*r-2.*pq*s+pp*t)/((pp+qq)*sqrt(1.+pp+qq))-((1.+qq)*r-2.*pq*s+(1.+pp)*t)/(2.*pow(1.+pp+qq, 1.5));\n}\n\nfloat mean_curvature() {\n\treturn -((1.+qq)*r - 2.*pq*s + (1.+pp)*t)/(2.*pow((1.+pp+qq), 1.5));\n}\n\nfloat unsphericity() { // Shary 1995\n\tfloat a = sqrt((1.+qq)/(1.+pp));\n\tfloat term1 = r*a - t/a;\n\tterm1 *= term1;\n\tfloat term2 = pq*r*a - 2.*a*s + pq*t/a;\n\t \n\treturn sqrt(term1/(1.+pp+qq) + term2*term2) / (2.*pow(1.+pp+qq, 1.5));\n}\n\nfloat min_curvature() {\n\treturn mean_curvature() - unsphericity();\n}\n\nfloat max_curvature() {\n\treturn mean_curvature() + unsphericity();\n}\n\nvoid init(in vec2 fc) {\n    uv = fc/R.xy;\n    \n\te[0] = h(-1., 1.);\n\te[1] = h(0., 1.);\n\te[2] = h(1., 1.);\n\te[3] = h(-1., 0.);\n\te[4] = h(0., 0.); // center of the grid\n\te[5] = h(1., 0.);\n\te[6] = h(-1., -1.);\n\te[7] = h(0., -1.);\n\te[8] = h(1., -1.);\n\n\tp\t= (z(3)+z(6)+z(9)-z(1)-z(4)-z(7)) / 6.; // dz/dx;\n\tq\t= (z(1)+z(2)+z(3)-z(7)-z(8)-z(9)) / 6.; // dz/dy; equivalent to GLSL dFdy & dFdx?\n \tr \t= (z(1)+z(3)+z(4)+z(6)+z(7)+z(9)-2.*(z(2)+z(5)+z(8)))/3.; // d²z/dx²\n\ts \t= (-z(1)+z(3)-z(7)+z(9))/4.; // d²z/dxdy\n\tt\t= (z(1)+z(2)+z(3)+z(7)+z(8)+z(9)-2.*(z(4)+z(5)+z(6)))/3.; // d²z/dy²\n\n\tpp = p*p, qq = q*q, pq=p*q;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tinit(fragCoord);\n\tfloat k = SCALE * (\n\t\t\t\tTYPE == HORIZONTAL_CURVATURE ? horizontal_curvature() :\n\t\t\t\tTYPE == PLAN_CURVATURE ? plan_curvature() :\n\t\t\t\tTYPE == VERTICAL_CURVATURE ? vertical_curvature() :\n\t\t\t\tTYPE == DIFFERENCE_CURVATURE ? difference_curvature() :\n\t\t\t\tTYPE == MEAN_CURVATURE ? mean_curvature() :\n\t\t\t\tTYPE == UNSPHERICITY ? unsphericity() :\n\t\t\t\tTYPE == MIN_CURVATURE ? min_curvature() :\n\t\t\t\tTYPE == MAX_CURVATURE ? max_curvature() : 0.);\n\n\tvec4 o = TYPE == MIN_MAX_CURVATURE ?\n\t\tSCALE*vec4(max_curvature(), 0., -min_curvature(), 1.) : vec4(k, 0., -k, 1.);\n\n\tfragColor = step(THRESHOLD, o)*o; return;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}