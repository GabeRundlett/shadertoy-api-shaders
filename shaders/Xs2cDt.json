{
    "Shader": {
        "info": {
            "date": "1494516406",
            "description": "A circle inversion IFS. Mouse changes circle radii.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xs2cDt",
            "likes": 11,
            "name": "Alien Tissue",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "interactive",
                "apollonian",
                "gasket"
            ],
            "usePreview": 0,
            "username": "Ebanflo",
            "viewed": 947
        },
        "renderpass": [
            {
                "code": "#define AA 1\n#define zoom 0.5\n#define yShift -0.25\n\nconst int ITS = 50;\nconst float pi = 3.1415926536;\nconst vec2 c1 = vec2(0, 1);\nconst vec2 c2 = vec2(.866, -.866);\nconst vec2 c3 = vec2(-.866, -.866);\nconst float rad1 = 1.0;\n\nvec2 circleInverse(vec2 pos, vec2 center, float rad){\n    vec2 d = pos - center;\n\treturn d * rad * rad/dot(d, d) + center;\n}\n\nvec3 gasket(vec2 pos){\n    float rad2 = iMouse.x / iResolution.x + .5;\n\tfloat rad3 = iMouse.y / iResolution.y + .5;\n    if(iMouse.xy == vec2(0.)) {rad2 = 1.; rad3 = 1.;}\n    float index = 0.;\n\tfor(int i = 0 ; i < ITS; i++){\n\t\tif(distance(pos, c1) < rad1){\n\t\t\tpos = circleInverse(pos, c1, rad1);\n            index++;\n\t\t}\n        else if(distance(pos, c2) < rad2){\n\t\t\tpos = circleInverse(pos, c2, rad2);\n            index++;\n\t\t}\n        else if(distance(pos, c3) < rad3){\n\t\t\tpos = circleInverse(pos, c3, rad3);\n            index++;\n\t\t}\n        else if(pos.y < 0.){\n\t\t\tpos = vec2(pos.x, -pos.y);\n            index++;\n\t\t}\n        else return vec3(pos, index);\n\t}\n}\n\nvec3 render(vec2 p){\n    p = zoom*(2.0*p - iResolution.xy)/iResolution.y;\n    p.y += yShift;\n    vec3 n = gasket(p);\n    float s = 0.08 * (4.0-length(n.xy)) + n.z;\n    if (n.z > 44.0)return vec3(0);\n    float arg = pi * s / 20. + iTime;\n    vec3 col = sin(arg - vec3(0.5*pi, pi, 0.666666*pi)) * 0.5 + 0.5;\n    return col*col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec3 col = vec3(0);\n    \n#if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n    \tcol += render(fragCoord);    \n    }\n    col /= float(AA*AA);\n#else\n        \n    col = render(fragCoord);\n#endif            \n    \n\tfragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}