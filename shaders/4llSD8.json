{
    "Shader": {
        "info": {
            "date": "1436376432",
            "description": "Desciption required...?",
            "flags": 0,
            "hasliked": 0,
            "id": "4llSD8",
            "likes": 1,
            "name": "Circle Test v1",
            "published": 3,
            "tags": [
                "2d",
                "circle",
                "easy"
            ],
            "usePreview": 0,
            "username": "W_Master",
            "viewed": 1376
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433832795\n\nvec3 color_bg = vec3(0.0,0.0,0.0);\n\nvec3 color_circle = vec3(1.0,1.0,0.0);\nvec3 color_ring = vec3(1.0,0.0,0.0);\n\nfloat radius = 14.0;\n\nfloat pixelSize = 20.0;\n\n\n\nvec2 toPixel(vec2 coord)\n{\n    coord -= vec2(0.5,0.5);\n    coord /= pixelSize;\n    return vec2(floor(coord.x) + 0.5, floor(coord.y) + 0.5);\n}\n\nfloat calcPerc(vec2 localPos, float radius)\n{\n    vec2 testPos = localPos + sign(localPos) * 0.5; //max pos\n    \n    if( dot(testPos, testPos) <= radius * radius)\n    {\n        return 1.0;\n    }\n    \n    testPos -= sign(localPos); // min pos\n    if( dot(testPos, testPos) >= radius * radius)\n    {\n        return 0.0;\n    }\n    \n    return 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ring = calcPerc(fragCoord.xy - iMouse.xy, radius*pixelSize);\n    \n    if(ring != 1.0 && ring != 0.0)\n    {\n        fragColor = vec4(color_ring,1.0);\n        return;\n    }\n    \n    float volume = calcPerc(toPixel(fragCoord.xy)- iMouse.xy / pixelSize, radius);\n    \n    vec3 finalColor = mix(color_bg, color_circle, volume);\n    \n\tfragColor = vec4(finalColor,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}