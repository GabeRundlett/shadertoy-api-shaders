{
    "Shader": {
        "info": {
            "date": "1577923416",
            "description": " This is a color experiment based on Color Squares by Joseph Albers. The two smaller boxes are the same color. They appear to change as their surrounding colors change. This is an illusion, showing how they eye is influenced by multiple colors. ",
            "flags": 0,
            "hasliked": 0,
            "id": "tl33Dl",
            "likes": 2,
            "name": "Joseph Albers, Squares 1",
            "published": 3,
            "tags": [
                "josephalbers"
            ],
            "usePreview": 0,
            "username": "danamuise",
            "viewed": 2826
        },
        "renderpass": [
            {
                "code": "vec3 DrawBox(vec2 uv, float L, float R, float B, float T, vec3 col){\n\tvec3 colorBox = vec3(0.0);\n    \n    if (uv.x>L && uv.x<R && uv.y>B && uv.y<T) {\n       colorBox = vec3(col.r/255.0,col.g/255.0,col.z/255.0);\n    }\n    return colorBox; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 colorA = vec3(237.0, 139.0, 53.0);\n\tvec3 colorB = vec3(239.0, 234.0, 106.0);\n    vec3 colorC = vec3(56.0, 61.0, 127.0);\n\tvec3 colorD = vec3(85.0, 138.0, 176.0);\n    vec3 brown = vec3(162.0/255.0,94.0/255.0,36.0/255.0);\n    \n    // Time varying pixel color\n    vec3 color = vec3(0.5);\n    \n    float pct = abs(sin(iTime*.25));\n\n    // fill left1\n    color = DrawBox(uv, 0.0, 0.25, 0.0, 1.0, mix(colorA, colorC, pct));\n\n    // fill left2\n    color += DrawBox(uv, 0.25, 0.5, 0.0, 1.0, mix(colorB, colorD, pct));\n    \n    // fill right1\n    color += DrawBox(uv, 0.5, 0.75, 0.0, 1.0, mix(colorC, colorA, pct));\n    \n    // fill right2\n    color += DrawBox(uv, 0.75, 1.0, 0.0, 1.0, mix(colorD, colorB, pct));\n    \n    // fill boxL\n    \n    if (uv.x>0.25*0.5 && uv.x<0.25 && uv.y>0.5*0.75 && uv.y<0.5/0.75) {\n       color = brown;\n    }\n    \n    // fill boxR\n    if (uv.x>0.75 && uv.x<0.75/.85 && uv.y>0.5*0.75 && uv.y<0.5/0.75) {\n       color = brown;\n    }\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}