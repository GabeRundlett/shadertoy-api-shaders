{
    "Shader": {
        "info": {
            "date": "1708442877",
            "description": "Convert between index n and coordinates (x,y) of a square spiral on integer lattice.",
            "flags": 0,
            "hasliked": 0,
            "id": "4XB3DD",
            "likes": 12,
            "name": "Square integer spiral",
            "published": 3,
            "tags": [
                "spiral"
            ],
            "usePreview": 0,
            "username": "FordPerfect",
            "viewed": 208
        },
        "renderpass": [
            {
                "code": "// Public Domain under http://unlicense.org, see link for details.\n\n// Convert between index n and coordinates (x,y)\n// of a square spiral on integer lattice: \n//     +y\n//      ^\n//      |\n//   4  3  2\n//---5--0--1---> +x\n//   6  7  8  9\n//      |\n\nint xy2n(ivec2 xy)\n{\n    int x=xy.x,y=xy.y,a=x+y,b=x-y;\n    // Note: the clauses can be freely reordered: if\n    // a point satisfies several clauses, all produce\n    // the same result.\n    if(a> 0&&b>=0) return x*(4*x-3)+y;\n    if(a<=0&&b<=0) return x*(4*x-1)-y;\n    if(a>=0&&b<=0) return y*(4*y-1)-x;\n    if(a<=0&&b>=0) return y*(4*y-3)+x;\n    return 0;\n}\n\nivec2 n2xy(int n)\n{\n    if(n==0) return ivec2(0,0);\n    // Works up to 16785407 (0x1001FFF)\n    // in IEEE-754 float32. You may\n    // need a proper isqrt() otherwise.\n    int m=int(sqrt(float(n)));\n    m=(m+1)/2;\n    int t=n-(2*m-1)*(2*m-1),k=t/(2*m);\n    t=t-2*m*k+1;\n    if(k==0) return ivec2(+m  ,-m+t);\n    if(k==1) return ivec2(+m-t,+m  );\n    if(k==2) return ivec2(-m  ,+m-t);\n    if(k==3) return ivec2(-m+t,-m  );\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    ivec2 xy=ivec2(fragCoord)-ivec2(iResolution.xy)/2;\n    xy>>=3;\n    int n=xy2n(xy);\n    vec3 col=0.5+0.5*cos(0.1*float(n)-iTime+vec3(0,2,4));\n    if(n2xy(n)!=xy) col=vec3(0);\n    fragColor=vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}