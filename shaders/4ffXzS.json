{
    "Shader": {
        "info": {
            "date": "1705372234",
            "description": "tiles-004",
            "flags": 0,
            "hasliked": 0,
            "id": "4ffXzS",
            "likes": 4,
            "name": "tiles-004",
            "published": 3,
            "tags": [
                "tiles",
                "004"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 159
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//tiles-004\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///15-enero-2024-\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;} \n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n\n\nvec3 mozaico(vec2 p, vec3 col)\n{\nvec3 colc =vec3(0.0);\nvec2 pos=vec2(1.66,2.27);\nvec2 med=vec2(0.5,0.5);\nfloat d1= sdBox(p, med );\ncolc=vec3(0.62,0.54,0.43);\ncol=DrawFigDelgado(colc, col, d1);\n\n pos=vec2(-0.35,0.35);\n med=vec2(0.125,0.125);\nfloat d2= sdBox(p-pos, med );\ncol=DrawFigDelgado(colc, col, d2);\n\n\n\npos=vec2(-0.35,-0.29);\nmed=vec2(0.125,0.5);\nfloat d3= sdBox(p-pos, med );\ncol=DrawFigDelgado(colc, col, d3);\n\n\npos=vec2(0.29,0.345);\nmed=vec2(0.5,0.125);\nfloat d4= sdBox(p-pos, med );\ncol=DrawFigDelgado(colc, col, d4);\n\n\n//cuadro mediano A\npos=vec2(0.28,-0.15);\nmed=vec2(0.5,0.35);\nfloat d5= sdBox(p-pos, med );\ncolc=vec3(0.05);\ncol=DrawFigDelgado(colc, col, d5);\n\n//cuadro mediano B\npos=vec2(0.26,-0.15);\nmed=vec2(0.25,0.35);\nfloat d5a= sdBox(p-pos, med );\ncolc=vec3(0.71,0.37,0.25);\ncol=DrawFigDelgado(colc, col, d5a);\n\n\ncolc=vec3(0.85,0.84,0.82);\n//triangulo inferior\npos=vec2(0.025,0.25);\nmed=vec2(0.25, 0.25);\nfloat d6= sdTriangleIsosceles(vec2(p.x,-p.y)-pos, med );\n\n\npos=vec2(0.25,-0.51);\nmed=vec2(0.25, 0.25);\nfloat d7= sdTriangleIsosceles(p-pos, med );\n\n\npos=vec2(0.48,0.25);\nmed=vec2(0.25, 0.25);\nfloat d8= sdTriangleIsosceles(vec2(p.x,-p.y)-pos, med );\nd6=min(d6,d7);\nd6=min(d6,d8);\ncol=DrawFigDelgado(colc,col,d6);\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float esc=2.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n    vec2 iuv=floor(uv);\n    vec2 fuv=fract(uv)-0.5;\n    vec2 p=fuv;\n    \n    vec2 p2=uv;\n    p2.x-=7.5;\n    p2.y+=1.5;\n    float t=mod(iTime,15.0);\n\n    p2.x+= t;\n    p2.y+= 2.0*sin(t);\n\t\n    float d1= sdCircle(uv+p2, 0.25 );\n    \n    \n    col= mozaico(p,col);\n    col= DrawFigBorde(vec3(1.0,0.0,0.0),col, d1 );\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}