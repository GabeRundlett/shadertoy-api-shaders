{
    "Shader": {
        "info": {
            "date": "1721227089",
            "description": "originals  https://glslsandbox.com/e#78381.0 https://www.shadertoy.com/view/fdy3WG",
            "flags": 0,
            "hasliked": 0,
            "id": "4fXyRB",
            "likes": 5,
            "name": "menger transformation",
            "published": 3,
            "tags": [
                "fractal",
                "menger",
                "transform"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 142
        },
        "renderpass": [
            {
                "code": "\n\n\n#define time iTime\n#define resolution iResolution.xy\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\nfloat cube(vec3 p, vec3 s)\n{\ns+=R(s,normalize(vec3(1,1,1)),iTime);\n  p =abs(p) - s;\n  return max(max(p.x,p.y),p.z);\n}\n\nfloat crosscube(vec3 p, vec3 s)\n{\n s=R(s,normalize(vec3(10,3,10)),iTime);\n  vec3 a = vec3(s.x*1./3.,s.x*1./3.,s.x*4./3.);\n  float d = cube(p,a.xyz);\n  float d2 = cube(p,a.yzx);\n  float d3 = cube(p,a.zxy);\n\n  return min(min(d,d2),d3);\n}\n\nfloat menger(vec3 p, vec3 s)\n{\n  p=R(p,normalize(vec3(10,3,10)),iTime);\n  float d = cube(p,s);\n  float td = crosscube(p,s);\n  d = max(d,-td);\n\nfor(int i = 0; i < 4; i++)\n{\n  s *= 1./3.;\n  float m = s.x * 2.;\n    p+=R(p,normalize(vec3(10,53,2)),iTime);\n  p = mod(p-m*0.5,m)-m*0.5;\n  p=R(p,normalize(vec3(23,2,1)),iTime);\n  td = crosscube(p,s);\n  d = max(d,-td);\n}\n  return d;\n}\n\nfloat map(vec3 p)\n{\np=R(p,normalize(vec3(1,2,1)),iTime);\n  float d = menger(p,vec3(1.));\n\n  return d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 p = (gl_FragCoord.xy * 2. - resolution.xy) / min(resolution.x,resolution.y);\n\n  vec3 cp = vec3(0.,0.,5.);\n  vec3 cd = vec3(0.,0.,-1.);\n  vec3 cu = vec3(0.,1.,0.);\n  vec3 cs = cross(cd,cu);\n  float td = 1.;\n\n  vec3 ray = normalize(p.x*cs+p.y*cu+cd*td);\n  vec3 col = vec3(0.);\n  float me = 0.;\n\n  float d,t = 0.;\n  vec3 rp = cp;\n  for(int i = 0; i < 128; i++)\n  {\n\n      d = map(rp);\n      \n      me += exp(abs(d)*-0.2);\n    if(d < 0.001)\n    {\n      break;\n    }\n    t += d;\n    rp = cp + t * ray;\n  }\n  col = vec3(0.3,0.7,1.9)*me*0.05;\n fragColor = vec4(col,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}