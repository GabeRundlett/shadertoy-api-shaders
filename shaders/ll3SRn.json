{
    "Shader": {
        "info": {
            "date": "1533957703",
            "description": "Lab colors",
            "flags": 0,
            "hasliked": 0,
            "id": "ll3SRn",
            "likes": 3,
            "name": "Lab Colors",
            "published": 3,
            "tags": [
                "colorspacelab"
            ],
            "usePreview": 0,
            "username": "metaeaux",
            "viewed": 486
        },
        "renderpass": [
            {
                "code": "\nvec3 rgbToLab(vec3 c)\n{\n\tfloat labL, labA, labB;\n\n    vec3 D65 = vec3(0.9505, 1.0, 1.089);\n\n    float rLinear = c.r;\n\tfloat gLinear = c.g;\n\tfloat bLinear = c.b;\n\n\tfloat r = (rLinear > 0.04045)? pow((rLinear + 0.055)/1.055, 2.2) : (rLinear/12.92) ;\n\tfloat g = (gLinear > 0.04045)? pow((gLinear + 0.055)/1.055, 2.2) : (gLinear/12.92) ;\n\tfloat b = (bLinear > 0.04045)? pow((bLinear + 0.055)/1.055, 2.2) : (bLinear/12.92) ;\n\n    vec3 f = vec3(r*0.4124 + g*0.3576 + b*0.1805,\n                  r*0.2126 + g*0.7152 + b*0.0722,\n                  r*0.0193 + g*0.1192 + b*0.9505);\n\n    f = clamp(f, vec3(0.), D65) / D65;\n\n\tf.x = ((f.x > 0.008856)? pow(f.x, (1.0/3.0)) : (7.787*f.x + 16.0/116.0));\n\tf.y = ((f.y > 0.008856)? pow(f.y, (1.0/3.0)) : (7.787*f.y + 16.0/116.0));\n\tf.z = ((f.z > 0.008856)? pow(f.z, (1.0/3.0)) : (7.787*f.z + 16.0/116.0));\n\n\tlabL = 116.0 * f.y - 16.; // L range: [0, 100]\n\tlabA = 500.0 * (f.x - f.y); // A range: [-86.185,  98.254]\n\tlabB = 200.0 * (f.y - f.z); // B range: [-107.863, 94.482]\n\n    /* Normalize both to max B range since the A term should be\n       weighted less in the Euclidian distance metric */\n\t//return vec3(labL, (labA+86.185) / 202.345, (labB+107.863) / 202.345);\n    return vec3(labL, labA, labB);\n}\n\nvec3 labToXyz(vec3 lab) {\n    float y = (lab.x + 16.) / 116.;\n    float x = y + lab.y / 500.;\n    float z = y - lab.z / 200.;\n\n    y = y > 0.206896552 ? pow(y, 3.) : 0.12841855 * (y - 0.137931034);\n    x = x > 0.206896552 ? pow(x, 3.) : 0.12841855 * (x - 0.137931034);\n    z = z > 0.206896552 ? pow(z, 3.) : 0.12841855 * (z - 0.137931034);\n\n    vec3 D65 = vec3(95.0470, 100, 108.8830);\n    vec3 xyz = vec3(x * D65.x,y * D65.y,z * D65.z);\n\n    return xyz;\n}\n\n\nvec3 xyzToRgb(vec3 xyz) {\n  xyz = xyz / 100.;\n\n  // apply gamma correction\n  mat3 m = mat3(3.2404542, -1.5371385,-0.4985314,\n              -0.9692660, 1.8760108, 0.0415560,\n              0.0556434, -0.2040259, 1.0572252);\n  vec3 rgb =  xyz * m;\n\n  rgb.x = rgb.x <= 0.00304 ? rgb.x * 12.92 : 1.055 * pow(rgb.x, 1. / 2.4) - 0.055;\n  rgb.y = rgb.x <= 0.00304 ? rgb.y * 12.92 : 1.055 * pow(rgb.y, 1. / 2.4) - 0.055;\n  rgb.z = rgb.x <= 0.00304 ? rgb.z * 12.92 : 1.055 * pow(rgb.z, 1. / 2.4) - 0.055;\n\n\n  if(rgb.x < 0. || rgb.y < 0. || rgb.z < 0.) {\n      rgb = vec3(1.);\n  }\n\n  return rgb;\n}\n\nvec3 labToRgb(vec3 lab) {\n \treturn xyzToRgb(labToXyz(lab));   \n}\n\nvec3 hclToLab(vec3 hcl) {\n    float h = hcl.x;\n    float c = hcl.y;\n    float l = hcl.z;\n    return vec3(hcl.z, cos(h) * c, sin(h) * c);\n}\n\nvec3 hclToRgb(vec3 hcl){\n    return xyzToRgb(labToXyz(hclToLab(hcl)));\n}\n\nvec3 hsvToRgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// draw a circle tile using a distance field\nvec4 drawTile (vec2 p, vec2 xy){\n\n    p = p * 2.-1.;\n    vec2 c = 200.*p;\n    vec4 col = vec4(labToRgb(vec3(100.*xy.x,c)), 1.);\n\n\n\t//if((length(p) - 1.) < 0.)\n    //    return col;\n    return col; //vec4(1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 xy = iMouse.xy / iResolution.xy;\n    //vec3 uv = HCL_to_RGB(vec3(mod(iTime, 100.), 100., 50.));\n\tfragColor = drawTile(uv, xy);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}