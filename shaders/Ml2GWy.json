{
    "Shader": {
        "info": {
            "date": "1432180668",
            "description": "Inspired by the previous [url=https://www.shadertoy.com/view/ll2GWy]Smooth XOR[/url] experiment.",
            "flags": 0,
            "hasliked": 0,
            "id": "Ml2GWy",
            "likes": 207,
            "name": "Fractal Tiling",
            "published": 3,
            "tags": [
                "2d",
                "xor",
                "tiling"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 11150
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2015 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = 256.0*fragCoord.xy/iResolution.x + iTime;\n\n    vec3 col = vec3(0.0);\n    for( int i=0; i<6; i++ ) \n    {\n        vec2 a = floor(pos);\n        vec2 b = fract(pos);\n        \n        vec4 w = fract((sin(a.x*7.0+31.0*a.y + 0.01*iTime)+vec4(0.035,0.01,0.0,0.7))*13.545317); // randoms\n                \n        col += w.xyz *                                   // color\n               2.0*smoothstep(0.45,0.55,w.w) *           // intensity\n               sqrt( 16.0*b.x*b.y*(1.0-b.x)*(1.0-b.y) ); // pattern\n        \n        pos /= 2.0; // lacunarity\n        col /= 2.0; // attenuate high frequencies\n    }\n    \n    col = pow( col, vec3(0.7,0.8,0.5) );    // contrast and color shape\n    \n    fragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}