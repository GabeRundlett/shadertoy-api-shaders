{
    "Shader": {
        "info": {
            "date": "1574145178",
            "description": "I know not what I have found but I really really like it.",
            "flags": 32,
            "hasliked": 0,
            "id": "WdySDm",
            "likes": 16,
            "name": "Branching things",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "scry",
            "viewed": 524
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).rgb;\n\tcol *= vec3(col.b+col.g);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define T(x,y) texture(iChannel0, tv+vec2(x,y)).rgb\n//#define iTime (iTime)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = -1. + 2. * uv;\n    vec2 R = iResolution.xy;\n    vec2 tv = fragCoord/iResolution.xy;;\n    vec2 px = vec2(1./R.x,1./R.y)*2.;\n    vec3 c = T(0.,0.);\n    px *= (1.-c.r)*(1.-c.r)*2.;\n    vec2 fc = fragCoord.xy;\n    vec3 col = vec3(0.);\n    vec3 u = T(0,px.y);\n    vec3 d = T(0.,-px.y);\n    vec3 l = T(px.x,0.);\n    vec3 r = T(-px.x,0.);\n\n    vec3 udlr = (u+d+l+r)/4.;\n    if (tv.x < .05 || tv.y < .05 || tv.x > 0.95 || tv.y > 0.95) {\n        col.r = sin(uv.x+uv.y+iTime*0.1)*.5+0.5;\n    }\n    if (u.r > d.r || d.r > u.r) {\n        col.b = ((u.r-d.r))*(20.);\n    }\n    if (l.r > r.r || l.r > r.r) {\n        col.g = ((l.r-r.r))*(20.);\n    }\n    vec3 c2 = T((col.b)*px.x,(col.g)*px.y);\n\n    col.r += c2.r*0.997;\n    col.r *= 0.99;\n    if (col.r > 1.) {\n    \tcol.r = 1.;\n    }\n\n    //col.r = mix(col.r,c.r,0.1);\n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}