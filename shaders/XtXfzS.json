{
    "Shader": {
        "info": {
            "date": "1512202466",
            "description": "flame",
            "flags": 0,
            "hasliked": 0,
            "id": "XtXfzS",
            "likes": 8,
            "name": "Flame attempt",
            "published": 3,
            "tags": [
                "flame"
            ],
            "usePreview": 0,
            "username": "harrisonvanderbyl",
            "viewed": 644
        },
        "renderpass": [
            {
                "code": "\nfloat random (in vec3 _st) {\n    return fract(sin(dot(_st.xyz,\n                         vec3(12.9898,78.233,82.19)))*\n        43758.5453123);\n}\nfloat noise (in vec3 _st) {\n    vec3 i = floor(_st);\n    vec3 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0,0.0));\n    float c = random(i + vec3(0.0, 1.0,0.0));\n    float d = random(i + vec3(1.0, 1.0,0.0));\n\n    float e = random(i + vec3(0.0, 0.0,1.0));\n    float g = random(i + vec3(1.0, 0.0,1.0));\n    float h = random(i + vec3(0.0, 1.0,1.0));\n    float j = random(i + vec3(1.0, 1.0,1.0));\n    f = (1.0-cos(f*3.1415))/2.0;\n   // f = pow(abs(f-0.5)*2.0,vec3(2.0,2.0,2.0))*0.5*sign(f-0.5)+0.5;\n   // f = (1.0-cos(clamp(f*2.0,0.0,1.0)*3.1415))/4.0+(1.0-cos(clamp(f*2.0-1.0,0.0,1.0)*3.1415))/4.0;\n    \n    // float a1 = mix(a, b, u.x) \n     //       (c - a)* u.y * (1.0 - u.x) +\n     //(d - b) * u.x * u.y;\n     float a1 = mix(a,b,f.x);\n     float a2 = mix(c,d,f.x);\n     float a3 = mix(e,g,f.x);\n     float a4 = mix(h,j,f.x);\n\n     float a5 = mix(a1,a2,f.y);\n     float a6 = mix(a3,a4,f.y);\n\n\n    return mix(a5,a6,f.z);\n}\n\nfloat fbm ( in vec3 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec3 shift = vec3(100.0,22.5,44.0);\n    float r = 1.0;\n    for (int i = 0; i < 4; ++i){\n        v += a * noise(_st);\n        r += a;\n        _st =  shift + _st*2.0;\n        _st = (sin(r)*_st+cos(r)*_st);\n        a *= 0.5;\n    }\n    return v;\n}\nvec3 getflame(in vec3 a){\n    vec3 acc = vec3(0.0);\n    float vf = 50.0;\n    for(float i = 0.0;i<vf;i++){\n float b = fbm(a+vec3(0.0,i/10.0,i/vf));\n        float cv = 1.0-i/vf;\n        float c = float(b>cv&&b<1.0);\n        acc+=c*pow(vec3(c*0.35*(1.0-i/vf),0.0,b*0.3*(i/vf)),vec3(2.0,1.0,2.0));\n    }\n   return acc;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy ;\n    vec3 coords = vec3(uv.x*10.0,uv.y*10.0,iTime);\n    vec2 fb1 = vec2(fbm(coords),fbm(coords.yxz));\n    vec2 fb = fb1*3.0+coords.xy;\n    vec3 coords2 = (vec3(floor(fb),iTime));\n    vec2 fb2 = vec2(fbm(coords2),fbm(coords2.zyx));\n    float diff = fbm(coords2) - fbm(coords);\n    \n    \n\tfragColor = vec4(dot(fb2,fb1));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}