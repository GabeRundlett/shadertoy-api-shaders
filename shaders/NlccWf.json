{
    "Shader": {
        "info": {
            "date": "1660628899",
            "description": "More simple patterns",
            "flags": 8,
            "hasliked": 0,
            "id": "NlccWf",
            "likes": 5,
            "name": "Iijtunnel music remix 4",
            "published": 3,
            "tags": [
                "music",
                "iij"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n  vec2 U =( 2.*fragCoord-iResolution.xy)/iResolution.y/4.;\n\n  float b=sqrt(length(U));\n  \n  U=fract(vec2(b,abs(atan(U.x,U.y))));\n\n  vec2 c=vec2(U.x-iTime,U.y)*100.;\n  \n  U=floor(mod((c),vec2(256)));\n\n  float d=b*mod(abs(U.x*U.x-U.y*U.y),abs(U.x-U.y))/256.;\n\n  fragColor=vec4(fract(d*U.x),fract(d*U.y),d,1.);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a,float b){    \n    /*\n    for(int i = 0; i < 4; i++){\n        a /= (1. + floor(mod(((a+1.)),2.)))*2.;\n    }\n    */\n    return\n        mod(floor(a),b)\n        //mod(mod(floor(a),b)*mod(floor(a/4.),b),b)\n        //mod(mod(4.+floor(a/b*2.),4.+floor(a+b)),b)\n        //ceil(mod(floor(a),b)-mod(floor(-a),b/2.))\n        //floor(sqrt(mod(floor(a*4./b/b)*floor(a),b*b)))\n        //mod(floor(a/b)*floor(a),b)\n    ;\n}\n\n//#define fmod(a,b) mod(mod(floor((a)),floor(1.+(a)/5.)),b)\n\n\nvec2 mainSound(int samp, float time){\n  //time *= (1.+fmod(time/4.,2.));\n  //time /= (1.+fmod(time*4.,2.));\n  \n  float t=\n      //time*(1.+fmod(time,2.))/2.\n      time\n  ;\n  \n  float m1 = fmod(t/4.,4.),\n  t1 = 2.+m1;\n  //t /= floor(1.+mod(t*2.,2.));\n  \n  t *= 8.;\n  //float m2 = ;\n  t /=\n      1. + fmod(t,2.)\n      //1. + fmod(t+floor(t/8.),2.)\n  ;\n  \n  //instruments\n  float a =\n      //64.*sqrt(1.-fract(t))*.2\n      32.*log(1.+fract(-t))\n      //pow(2.,2.-(fract(t)))\n      //pow(2.,2.-log(fract(t)))\n  ,\n  \n  nb = time*pow(2.,fmod(t/8.,8.)/4.+7.)*(1.-fmod(t/2.,t1)/t1);\n  //nb = pow(2.,fmod(t,8.)/2.+7.)*(1.-fmod(t/2.,t1)/t1);\n\n\n  return\n      //abs(.5-vec2(fract(nb*.998),fract(nb)))*a\n      abs(log(.5+abs(.5-vec2(fract(nb*.998),fract(nb)))*a))/2.\n  ;\n\n\n}\n\n/*\nvec2 mainSound(int samp, float time){\n  \n  float t = time*8.,\n  \n  t1 = 1.+fmod(t/8.,4.),\n  \n  a=sqrt(1.-fract(t))*.2,\n  \n  nb = pow(2.,fmod(t/8.,8.)/4.+8.)*(1.-fmod(t,t1)/t1);\n\n  return vec2(fract(time*nb*.998)*a\n\n   ,fract(time*nb)*a);\n}\n*/\n\n/*\n\n\nvec2 mainSound(int samp, float time){\n  \n  float t = time*8.,\n  \n  t1 = 1.+fmod(t/8.,4.),\n  \n  a=sqrt(1.-fract(t))*.2,\n  \n  nb = pow(2.,fmod(t/4.+t1,8.)/4.+8.)*(1.-mod(floor(t/2.)+floor(t/3.),t1)/t1);\n\n  return vec2(fract(time*nb*.998)*a\n\n   ,fract(time*nb)*a);\n}\n\n*/\n\n/*\nvec2 mainSound(int samp, float time){\n  \n  float t=(time);\n  \n  float m1 = fmod(t/4.,4.),\n  t1 = 2.+m1;\n  //t /= floor(1.+mod(t*2.,2.));\n  \n  t *= 8.;\n  float m2 = 1. + fmod(t,2.);\n  float m3 = 1. + fmod(t*16.,2.);\n  t /= m2;\n  \n  float a=sqrt(1.-fract(t))*.2,\n  \n  nb = pow(2.,fmod(t/8.,8.)/4.+m3+7.)*(1.-fmod(t/2.,t1)/t1);\n  //nb = pow(2.,fmod(t,8.)/2.+7.)*(1.-fmod(t/2.,t1)/t1);\n\n\n  return vec2(fract(time*nb*.998)*a\n\n   ,fract(time*nb)*a);\n\n}\n*/\n\n/*\nvec2 mainSound(int samp, float time){\n  \n  float t=(time)*4.;\n  \n  float m1 = fmod(t/2.,4.),\n  t1 = 2.+m1;\n  //t /= floor(1.+mod(t*2.,2.));\n  \n  t *= 8.;\n  float m2 = 1. + min(fmod(t/2.,2.),m1);\n\n  t /= max(m2,m1+1.);\n  \n  float a=sqrt(1.-fract(t/4.))*.2,\n  \n  nb = pow(2.,fmod(t/8.,8.)/4.+m2/2.+7.)*(1.-fmod(t/2.,t1)/t1);\n  //nb = pow(2.,fmod(t,8.)/2.+7.)*(1.-fmod(t/2.,t1)/t1);\n\n\n  return vec2(fract(time*nb*.998)*a\n\n   ,fract(time*nb)*a);\n\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}