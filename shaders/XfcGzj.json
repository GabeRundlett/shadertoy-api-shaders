{
    "Shader": {
        "info": {
            "date": "1711876384",
            "description": "15 grids font v2",
            "flags": 0,
            "hasliked": 0,
            "id": "XfcGzj",
            "likes": 21,
            "name": "15 grids font v2",
            "published": 3,
            "tags": [
                "fonts",
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 1,
            "username": "yasuo",
            "viewed": 585
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),-antialiasing(1.5),d - b)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define BASE_FONT_SIZE 0.0714\n\n// 2:-225., 3:-45.\nint cA[15] = int[](2,1,1,0,0,1,1,1,1,1,0,1,1,1,3);\nint cB[15] = int[](2,1,1,1,0,1,1,1,3,1,0,1,1,1,3);\nint cC[15] = int[](2,1,3,1,0,0,1,0,0,1,0,0,1,1,3);\nint cD[15] = int[](1,1,0,1,0,1,1,0,1,1,0,1,1,1,3);\nint cE[15] = int[](2,1,3,1,0,0,1,3,0,1,0,0,1,1,3);\nint cF[15] = int[](2,1,3,1,0,0,1,3,0,1,0,0,1,0,0);\nint cG[15] = int[](2,1,3,1,0,0,1,2,1,1,0,1,1,1,3);\nint cH[15] = int[](2,0,2,1,0,1,1,1,1,1,0,1,1,0,1);\nint cI[15] = int[](0,2,3,0,0,0,0,1,0,0,1,0,0,1,0);\nint cJ[15] = int[](0,2,1,0,0,1,0,0,1,0,0,1,2,1,3);\nint cK[15] = int[](2,0,2,1,2,3,1,1,1,1,0,1,1,0,3);\nint cL[15] = int[](2,0,0,1,0,0,1,0,0,1,0,0,1,1,3);\nint cM[15] = int[](2,2,2,1,3,1,1,0,1,1,0,1,1,0,1);\nint cN[15] = int[](2,2,1,1,0,1,1,0,1,1,0,1,1,0,3);\nint cO[15] = int[](2,1,1,1,0,1,1,0,1,1,0,1,1,1,3);\nint cP[15] = int[](2,1,1,1,0,1,1,1,3,1,0,0,3,0,0);\nint cQ[15] = int[](2,1,1,1,0,1,1,0,1,1,0,1,1,1,2);\nint cR[15] = int[](2,1,1,1,0,1,1,1,3,1,0,1,3,0,3);\nint cS[15] = int[](2,1,3,1,0,0,1,1,1,0,0,1,2,1,3);\nint cT[15] = int[](2,1,3,0,1,0,0,1,0,0,1,0,0,1,0);\nint cU[15] = int[](2,0,2,1,0,1,1,0,1,1,0,1,1,3,1);\nint cV[15] = int[](2,0,2,1,0,1,1,0,1,1,0,1,0,1,3);\nint cW[15] = int[](2,0,2,1,0,1,1,0,1,1,2,1,3,3,3);\nint cX[15] = int[](2,0,2,1,0,1,2,1,3,1,0,1,1,0,1);\nint cY[15] = int[](2,0,2,1,0,1,3,1,3,0,1,0,0,1,0);\nint cZ[15] = int[](2,1,1,0,0,3,0,1,0,2,0,0,1,1,3);\nint c0[15] = int[](2,1,0,1,0,1,1,0,1,1,0,1,0,1,3);\nint c1[15] = int[](0,2,0,0,1,0,0,1,0,0,1,0,0,3,0);\nint c2[15] = int[](2,1,1,0,0,1,2,1,3,1,0,0,1,1,3);\nint c3[15] = int[](2,1,1,0,0,1,2,1,1,0,0,1,2,1,3);\nint c4[15] = int[](2,0,0,1,0,0,1,0,0,1,1,3,0,1,0);\nint c5[15] = int[](2,1,1,1,0,0,1,1,1,0,0,1,1,1,3);\nint c6[15] = int[](2,1,3,1,0,0,1,1,1,1,0,1,1,1,3);\nint c7[15] = int[](2,1,1,0,0,1,0,0,1,0,0,1,0,0,3);\nint c8[15] = int[](2,1,1,1,0,1,1,1,1,1,0,1,1,1,3);\nint c9[15] = int[](2,1,1,1,0,1,1,1,1,0,0,1,2,1,3);\n\nfloat grids(vec2 p){\n    float size = BASE_FONT_SIZE;\n    float line = 0.001;\n    \n    float s = size*2.;\n    vec2 l = vec2(3.,3.);\n    vec2 q = p - s*clamp(round(p/s),-l,l); // https://iquilezles.org/articles/distfunctions/\n    \n    float d = abs(B(q,vec2(size)))-line;\n    float d2 = B(q,vec2(size));\n    float a = radians(-45.);\n    d2 = abs(max(dot(q,vec2(cos(a),sin(a))),d2))-line;\n    d = min(d,d2);\n    return d;\n}\n\nfloat baseFontShape(vec2 p){\n    float size = BASE_FONT_SIZE-0.001;\n    float d = B(p,vec2(size));\n    return d;\n}\n\nfloat baseFontShape2(vec2 p, float deg){\n    float size = BASE_FONT_SIZE-0.001;\n    float d = B(p,vec2(size));\n    float a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    return d;\n}\n\nfloat chars(vec2 p, int[15] data){\n    vec2 prevP  = p;\n    float size = BASE_FONT_SIZE;\n    float d = 10.;\n    for(int i = 0; i<data.length(); i++){\n        p = prevP;\n        p.x-=(float(i%3)*(size*2.))-(size*2.);\n        p.y+=(float(i/3)*(size*2.))-(size*4.);\n        \n        if(data[i] == 1){\n            float d2 = baseFontShape(p);\n            d = min(d,d2);\n        } else if(data[i] == 2){\n            float d2 = baseFontShape2(p,-225.);\n            d = min(d,d2);\n        } else if(data[i] == 3){\n            float d2 = baseFontShape2(p,-45.);\n            d = min(d,d2);\n        }\n    }\n    return d;\n}\n\nfloat drawFont(vec2 p, int char){\n    float d = 10.;\n    if(char == 0) {\n        d = chars(p,c0);\n    } else if(char == 1) {\n        d = chars(p,c1);\n    } else if(char == 2) {\n        d = chars(p,c2);\n    } else if(char == 3) {\n        d = chars(p,c3);\n    } else if(char == 4) {\n        d = chars(p,c4);\n    } else if(char == 5) {\n        d = chars(p,c5);\n    } else if(char == 6) {\n        d = chars(p,c6);\n    } else if(char == 7) {\n        d = chars(p,c7);\n    } else if(char == 8) {\n        d = chars(p,c8);\n    } else if(char == 9) {\n        d = chars(p,c9);\n    } else if(char == 10) {\n        d = chars(p,cA);\n    } else if(char == 11) {\n        d = chars(p,cB);\n    } else if(char == 12) {\n        d = chars(p,cC);\n    } else if(char == 13) {\n        d = chars(p,cD);\n    } else if(char == 14) {\n        d = chars(p,cE);\n    } else if(char == 15) {\n        d = chars(p,cF);\n    } else if(char == 16) {\n        d = chars(p,cG);\n    } else if(char == 17) {\n        d = chars(p,cH);\n    } else if(char == 18) {\n        d = chars(p,cI);\n    } else if(char == 19) {\n        d = chars(p,cJ);\n    } else if(char == 20) {\n        d = chars(p,cK);\n    } else if(char == 21) {\n        d = chars(p,cL);\n    } else if(char == 22) {\n        d = chars(p,cM);\n    } else if(char == 23) {\n        d = chars(p,cN);\n    } else if(char == 24) {\n        d = chars(p,cO);\n    } else if(char == 25) {\n        d = chars(p,cP);\n    } else if(char == 26) {\n        d = chars(p,cQ);\n    } else if(char == 27) {\n        d = chars(p,cR);\n    } else if(char == 28) {\n        d = chars(p,cS);\n    } else if(char == 29) {\n        d = chars(p,cT);\n    } else if(char == 30) {\n        d = chars(p,cU);\n    } else if(char == 31) {\n        d = chars(p,cV);\n    } else if(char == 32) {\n       d = chars(p,cW);\n    } else if(char == 33) {\n       d = chars(p,cX);\n    } else if(char == 34) {\n       d = chars(p,cY);\n    } else if(char == 35) {\n       d = chars(p,cZ);\n    }\n    \n    return d;\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\nfloat numberAnim(vec2 p, float speed){\n    float morphVal = 0.;\n    float frame = mod(iTime*1.2+speed,10.0);\n    float time = frame;\n    \n    float duration = 0.5;\n    float d = drawFont(p,0);\n    if(frame>=0. && frame<1.){\n        time = getTime(time,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,0),drawFont(p,1),morphVal);\n    } else if(frame>=1. && frame<2.){\n        time = getTime(time-1.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,1),drawFont(p,2),morphVal);\n    } else if(frame>=2. && frame<3.){\n        time = getTime(time-2.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,2),drawFont(p,3),morphVal);\n    } else if(frame>=3. && frame<4.){\n        time = getTime(time-3.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,3),drawFont(p,4),morphVal);\n    } else if(frame>=4. && frame<5.){\n        time = getTime(time-4.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,4),drawFont(p,5),morphVal);\n    } else if(frame>=5. && frame<6.){\n        time = getTime(time-5.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,5),drawFont(p,6),morphVal);\n    } else if(frame>=6. && frame<7.){\n        time = getTime(time-6.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,6),drawFont(p,7),morphVal);\n    } else if(frame>=7. && frame<8.){\n        time = getTime(time-7.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,7),drawFont(p,8),morphVal);\n    } else if(frame>=8. && frame<9.){\n        time = getTime(time-8.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,8),drawFont(p,9),morphVal);\n    } else if(frame>=9. && frame<10.){\n        time = getTime(time-9.,duration);\n        morphVal = cubicInOut(time);\n        d = mix(drawFont(p,9),drawFont(p,0),morphVal);\n    }\n\n    return d;\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(234.56,789.34));\n    p+=dot(p,p+34.56);\n    return fract(p.x+p.y);\n}\n\nfloat plus(vec2 p){\n    float d = min(B(p,vec2(0.001,0.02)),B(p,vec2(0.02,0.001)));\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 prevP = p;\n    \n    p.x+=1.;\n    p.y+=1.;\n    p*=2.5;\n    p.y-=iTime*0.5;\n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n\n    float n = Hash21(id)*35.0;\n    int char = int(n);\n    \n    vec3 col = vec3(0.);\n    float d = 10.;\n    if(char < 10){\n        d = numberAnim(gv,float(n));\n        col = mix(col,vec3(1.),S(d,0.));\n    } else {\n        d = drawFont(gv,char);\n        col = mix(col,vec3(1.),S(d,0.));\n    }\n    \n    d = grids(gv);\n    col = mix(col,vec3(0.5),S(d,0.));\n    \n    p = prevP;\n    \n    p.y-=iTime*0.2;\n    p = mod(p,0.4)-0.2;\n    d = plus(p);\n    col = mix(col,vec3(1.),S(d,0.));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}