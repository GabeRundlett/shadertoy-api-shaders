{
    "Shader": {
        "info": {
            "date": "1720014721",
            "description": "Comparing gradient methods in RGB colourspace, left to right:\n1. Basic linear blend\n2. Normalised linear (preserves intensity)\n3. Linear plus gamma (2.2)\n4. 90º rotation through RG plane\n\nHold mouse button to see difference x10 from 90º rotation.",
            "flags": 0,
            "hasliked": 0,
            "id": "l3ySDw",
            "likes": 1,
            "name": "Red-green gradient comparison ",
            "published": 3,
            "tags": [
                "gradient",
                "colour"
            ],
            "usePreview": 0,
            "username": "Alie",
            "viewed": 104
        },
        "renderpass": [
            {
                "code": "#define r2d(p,a) p=cos(a)*p+sin(a)*vec2(-p.y,p.x);\n#define pi acos(-1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float x = uv.y;\n    // Col = rotation in RG space (should be ideal gradient)\n    vec3 col = vec3(1,0,0);\n    r2d(col.rg, x * pi / 2.);\n    \n    // Col2 = various gradients to compare\n    vec3 col2;\n    \n    const float segments = 4.;\n    \n    if (uv.x < 1./segments) {\n        // Linear RGB blend\n        col2 = mix(vec3(1,0,0), vec3(0,1,0), x);\n    } else if (uv.x < 2./segments) {\n        // Normalized linear RGB blend\n        col2 = mix(vec3(1,0,0), vec3(0,1,0), x);\n        col2 = normalize(col2);\n    } else if (uv.x < 3./segments) {\n        // Linear RGB blend with gamma\n        col2 = mix(vec3(1,0,0), vec3(0,1,0), x);\n        col2 = pow(col2, vec3(1./2.2));\n    } else {\n        // Rotation in RG space\n        col2 = vec3(1,0,0);\n        r2d(col2.rg, x * pi / 2.);\n    }\n    \n    if (iMouse.z > 0.) { \n        // Show difference from rotation in RG\n        col2 = abs(col - col2) * 10.;\n    }\n    fragColor = vec4(col2,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}