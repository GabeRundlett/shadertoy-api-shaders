{
    "Shader": {
        "info": {
            "date": "1625169733",
            "description": "Another variation of KilledByAPixel's Voxel Fractal:\n[url]https://www.shadertoy.com/view/NlB3Rz[/url]\nUse the mouse to fly around this endless fractal cityscape ... use w,s keys to move in/out.",
            "flags": 48,
            "hasliked": 0,
            "id": "slsSR8",
            "likes": 4,
            "name": "XOR Towers Explorer V2",
            "published": 3,
            "tags": [
                "3d",
                "fractal",
                "xor",
                "short",
                "2tc"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 336
        },
        "renderpass": [
            {
                "code": "// Use the mouse to move around the XOR Towers.\n// Use the 'w' & 's' keys to move in/out.\n// A big thanks to Fabrice Neyret for helping me figure out the Z motion algorithm.\nvoid mainImage(out vec4 o, vec2 u)\n{ \n    ivec4 b = ivec4(o -= o);\n    u = 2.*(u+u-R)/R.y;\n  \n    for (; (b.x^b.y^ b.z+int(T.z) ) % 99-int(T.z) > b.z-8 ; )\n        b = ivec4(u * o.a + T.xy, o+=.1 ); \n    \n    o = o/70. - .02*vec4(b%3);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define k(c) texelFetch(iChannel1,ivec2(c,0),0).x > 0.\nvoid mainImage( out vec4 o,vec2 u )\n{\n    o = T;\n    k(87) ? o++ : k(83) ? o-- : o;\n\n    o.xy =  abs(T.xy + iMouse.xy / R - .5);   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T texture(iChannel0,u)//\n#define R iResolution.xy//",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}