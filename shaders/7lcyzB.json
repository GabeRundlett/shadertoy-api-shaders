{
    "Shader": {
        "info": {
            "date": "1660029920",
            "description": "inspired by reference:  https://twitter.com/pickover/status/1556458766194835456\nvariant of https://shadertoy.com/view/fttcW7\nmouse controls camera\n",
            "flags": 0,
            "hasliked": 0,
            "id": "7lcyzB",
            "likes": 25,
            "name": "Carnival ride - hexa",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "reproduction",
                "funfair",
                "merrygoround"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 344
        },
        "renderpass": [
            {
                "code": "// hexa variant of https://shadertoy.com/view/fttcW7\n\n#define rot(a)      mat2(cos(a+vec4(0,11,33,0)))           // rotation \n#define C(q, r, l)  max(abs(q.y)-l,length(q.xz)-r)         // cylinder\n#define B(q,T)      r= q, r.xz *= rot(.52), t = min( t, C(r.zxy,.1,1.9) ), \\\n                    r= q, r.z = abs(r.z)-1.5, r.xy *= rot(T), t = min(t, C(r,.2,2.5))\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9., T=iTime;\n    vec3  R = iResolution,\n          D = vec3(U*.4 - R.xy*.2, -R.y) / R.y,            // ray direction\n          p = vec3(0,0,20), q, r,                          // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5\n              :  vec3(.1,0,0) * cos(T + vec3(0,11,0)); \n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01)           // march scene\n        q = p,\n        q.yz *= rot(.78-6.*M.y),                           // rotations\n        q.xz *= rot(.78-6.*M.x), \n        r = q, r.y+=2., t = min(t,C(r,.3,4.)),             // trunck\n                         B(q,   T), \n        q.xz*=rot(1.05), B(q,1.-T),                        // bars + handles\n        q.xz*=rot(1.05), B(q,1.+T),         \n        p += .5*t*D;                                       // step forward = dist to obj          \n\n   O *= O * 1.3;                                           // color scheme\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}