{
    "Shader": {
        "info": {
            "date": "1552397589",
            "description": "analyzing heart of algorithm in skaplun's [url]https://shadertoy.com/view/tdsSzs[/url] borrowed from diviaki's [url]https://www.shadertoy.com/view/4t3SWN[/url] , looking like Gabor noise or reaction-diffusion.\nSee first comment below (i.e. downest ).",
            "flags": 0,
            "hasliked": 0,
            "id": "3slXDf",
            "likes": 31,
            "name": "Gabor-noise / reac-diff like",
            "published": 3,
            "tags": [
                "noise",
                "texture",
                "diffusion",
                "short",
                "golf",
                "reaction",
                "fingerprint",
                "gabornoise",
                "ajax"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 2500
        },
        "renderpass": [
            {
                "code": "// simplified from skaplun's \"AFC Ajax\" https://shadertoy.com/view/tdsSzs\n// borrowing diviaki's \"fingerprint\" https://www.shadertoy.com/view/4t3SWN\n\n#define hash(p) (-1. + 2.* fract(sin( (p) * vec3(63.31,395.467,1) ) *43141.59265) )\n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 R = iResolution.xy;\n         U = 35.* ( 2.*U - R ) / R.y;\n    \n    float a = 0.;\n\n    for(float i=0.; i<100.; i++){\n        vec3 h = 30.*hash(i); \n      //h.xy += cos(iTime+vec2(0,11)+h.z*6.28) * vec2(5,1); // animation\n    \ta += sign(h.z) * atan(U.x-h.x, U.y-h.y);\n    }\n\n    O = vec4( .5+.5*sin( 3.14*length(U) +a ) );\n  //O.r = .5+.5*sin(a);                         // display perturbating field\n  //O =vec4(.5+.5*sin( 3.14*length(U) ), .5+.5*sin( 3.14*length(U) +a ) ,0,0);\n  //O = ( .6 + .6 * cos( a + vec4(0,23,21,0)  ) ); // https://www.shadertoy.com/view/ll2cDc\n}\n\n\n\n\n/* // the 190 chars golfed version\n\n#define mainImage(O,u)                             \\\n    vec3 R = iResolution, h;                       \\\n    vec2 U = 45.* ( u+u - R.xy ) / R.y;            \\\n    float a = 0., i = a;                           \\\n    for (; i++ < 1e2;                              \\\n    \t a += sign(h.z) * atan(U.x-h.x, U.y-h.y)   \\\n       ) h = 60.* fract( sin( i * R ) *4e4) - 30.; \\\n    O += .5+.5* sin( 3.*length(U) +a )  /*\n\n/* */",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}