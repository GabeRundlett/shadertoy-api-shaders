{
    "Shader": {
        "info": {
            "date": "1701840715",
            "description": "A fractal pattern that resembles a Persian rug.",
            "flags": 0,
            "hasliked": 0,
            "id": "DtKfzh",
            "likes": 11,
            "name": "Green and brown Persian rug",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "mosaic",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return abs(fract((a1)*(a2.x+a2.y))-.5);\n}\n\nconst float scale = 1.5;\n\nvoid transform(inout vec2 uv, inout vec2 t2){\n    uv.y += 1./4.;\n\n    uv = (uv+t2)/scale;\n\n\n    t2 = triangle_wave(uv+.5);\n    uv =\n        (t2-triangle_wave(uv.yx))\n\n        //WOW!\n        //(t2-triangle_wave(uv.yx)+fract(t2/1.5))\n    ;\n\n    uv.y -= 1./4.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.,c1=0.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv.xy += iTime/t1/12./2.;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    \n    vec2 t2 = vec2(0.);\n    vec3 col1 = col;\n    float warp_scale=16.;\n    for(int k = 0; k < 9; k++){\n        \n        vec2 warp =\n            vec2(0.)\n            //vec2(sin((t2.x)*warp_scale),cos((t2.y)*warp_scale))\n            //vec2(sin((uv.x)*warp_scale),cos((uv.y)*warp_scale))\n            //vec2(fract(uv/1.5)-.5)\n        ;\n        vec2 uv_1 = uv+warp,t2_1=t2+warp;\n        \n        transform(uv,t2);\n        transform(uv_1,t2_1);\n        \n        c1 =\n            max(abs(uv_1.y+uv_1.x*sign(t2_1.y-t2_1.x)),c1)\n        ;\n        c1 =\n            2.*abs(c1-1.)\n            \n            //even more colorful!\n            //2.-abs(2.*c1-2.)\n        ;\n        //uv = (fract(vec2(uv+vec2(.5,1.5))*2.)-.5)/2.;\n        col.x =\n            length(uv-t2-c1)/3.\n            \n            //purple rug\n            //2.-col.x\n\n            //more patterns!\n            //1.\n            //1.-length(uv-t2-c1)\n            //c1\n            //length(t2)\n            //1.-length(uv-t2-c1)/3.\n            //max(length(uv-t2-c1)/3.,col.x)\n            //max(max(length(uv-t2-c1),abs(uv.y-uv.x))/3.,col.x)\n        ;\n        //if(uv.x>-.25)\n        col =\n            abs(col-(1.-(c1*col.x)))/2.\n            //abs(col-(1.*sign(uv.y-uv.x)/2.-(c1*col.x)))/2.\n        ;\n        col1 =\n            abs(col1*c1-col-1.).yzx\n            //abs(col1*c1+col*sign(uv.y-uv.x)-1.).yzx\n        ;\n        \n    }\n    fragColor = vec4(col1/2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}