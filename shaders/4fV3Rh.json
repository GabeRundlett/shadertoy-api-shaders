{
    "Shader": {
        "info": {
            "date": "1712500079",
            "description": "Simple approximation of a Gaussian blur using multiple passes of a box blur with different filter kernel sizes.",
            "flags": 32,
            "hasliked": 0,
            "id": "4fV3Rh",
            "likes": 1,
            "name": "Multi-pass box blur",
            "published": 3,
            "tags": [
                "blur",
                "filter",
                "boxblur"
            ],
            "usePreview": 0,
            "username": "pwyr",
            "viewed": 132
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = boxFilter(iChannel0, fragCoord, iResolution.xy, 8);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 boxFilter(sampler2D tex, vec2 fragCoord, vec2 res, int hw)\n{\n    vec2 uv = fragCoord/res;\n    \n    vec4 color = vec4(0);\n    for (int u = -hw; u <= hw; ++u) {\n        for (int v = -hw; v <= hw; ++v) {\n            color += texture(tex, (fragCoord + vec2(u,v)) / res); \n        }\n    }\n    color /= float((2*hw+1)*(2*hw+1));\n    return color;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = boxFilter(iChannel0, fragCoord, iResolution.xy, 2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = boxFilter(iChannel0, fragCoord, iResolution.xy, 5);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}