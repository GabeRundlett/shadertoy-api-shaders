{
    "Shader": {
        "info": {
            "date": "1588175449",
            "description": " Hold left mouse button to enable the flipping\n\nI found this useful to improve the visual quality of blue noise dithered particles\nOn odd frames it flips the blue noise around 0, making the dithering looking smoother over time\n",
            "flags": 0,
            "hasliked": 0,
            "id": "WdlBDH",
            "likes": 1,
            "name": "FRC Blue Noise",
            "published": 3,
            "tags": [
                "dithering",
                "bluenoise",
                "temporal"
            ],
            "usePreview": 0,
            "username": "Dain",
            "viewed": 584
        },
        "renderpass": [
            {
                "code": "// Hold left mouse button to enable the flipping\n\n//I found this useful to improve the visual quality of blue noise dithered particles in the game I'm working on.\n//On odd frames it flips the blue noise around 0, making the dithering looking smoother over time\n//It doesn't work in screenshots or if you pause.. just in motion\n//It reminds me  FRC used in monitors https://en.wikipedia.org/wiki/Frame_rate_control (not sure how related it really is)\n\n\n//from: https://www.shadertoy.com/view/WtfSDS\nfloat VNoiseCell( in vec2 p ){\n\tvec2 uv = p;\n\n    //Fetch 4 value noises--\n    vec4 r = texture(iChannel0, uv/float(iChannelResolution[0])).rgba*2.0-1.0;\n    \n    //make some cells using geometric average\n    float t = abs(r.a*r.b*r.g*r.r);\n\n    float geo_avg = intBitsToFloat(798731503 + (floatBitsToInt(t)>>2)); \n    return geo_avg*2.0 -1.0;\n}\n//note: from https://github.com/Unity-Technologies/ScriptableRenderPipeline/blob/master/com.unity.render-pipelines.high-definition/Runtime/PostProcessing/Shaders/FinalPass.shader#L124\nfloat remap_pdf_tri_unity( float v )\n{\n    v = v*2.0-1.0;\n    return sign(v) * (1.0 - sqrt(1.0 - abs(v)));\n}\n\nvec2 GetFinalUV(vec2 uv){\n   return uv*.078 + 1.1;//(.13 + cos(iTime*.3)*.03)  + 1.1 + sin(iTime*.25)*.03; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n    \n    vec2 bn = texture(iChannel1, fragCoord/vec2(iChannelResolution[1].xy) ).rg;\n    \n    //2 seperate trianglar mapped blue noise samples for high quality dither\n\tvec2 blueNoiseDither = vec2(remap_pdf_tri_unity(bn.x), remap_pdf_tri_unity(bn.y));\n    \n\tfloat f = 0.0;\n    float split = .5;\n    float midPt = split*(iResolution.x/iResolution.y);\n  \n\n    bool mouseBtnPressed = (iMouse.z >= 1.0);\n\n    //8 bit fixed point so adjust sub pixel precision by 1/256\n    float ditherSize = (1.0/256.0);\n    if(mouseBtnPressed)\n    {\n        //On odd frames flip the dither value around 0\n        if(bool(iFrame&1)){\n           blueNoiseDither = -blueNoiseDither;\n        }\n    }\n\tf = VNoiseCell(GetFinalUV(uv) + blueNoiseDither*ditherSize);\n\t\n\n\tf = 2.0 + 2.0*f;\n\t\t\n\tfragColor = vec4( f, f, f, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}