{
    "Shader": {
        "info": {
            "date": "1718896757",
            "description": "Grid to calibrate your camera (or to measure the curvature of your screen).\n\nClick: x=pattern, y=negate",
            "flags": 0,
            "hasliked": 0,
            "id": "lXtSWr",
            "likes": 2,
            "name": "Camera Calibration Grid",
            "published": 3,
            "tags": [
                "camera",
                "calibration",
                "tsai"
            ],
            "usePreview": 0,
            "username": "pyBlob",
            "viewed": 79
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 C, vec2 O)\n{\n    C = vec4(1);\n\n    // pattern pixel width: multiple of 4\n    O /= 40.;\n\n    O = fract(O - .5);\n    O = abs(O * 4. - 2.);\n\n    float f;\n\n    float pattern = abs(iMouse).x / iResolution.x * 4.;\n    if (pattern < 1.)\n        f = min(O.x, O.y); // grid\n    else if (pattern < 2.)\n        f = O.x; // vertical\n    else if (pattern < 3.)\n        f = O.y; // horizontal\n    else\n        f = 0.; // white\n\n    if (abs(iMouse).y / iResolution.y * 2. >= 1.)\n        f = 2. - f;\n\n    C.xyz = vec3(f < 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}