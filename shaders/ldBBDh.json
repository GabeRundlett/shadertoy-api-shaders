{
    "Shader": {
        "info": {
            "date": "1500220576",
            "description": "to be seen in fullscreen.\n\nultra simplification of [url]https://www.shadertoy.com/view/XtlXRB[/url]\nwhich was compact simplified version of [url]https://www.shadertoy.com/view/MllXz7[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "ldBBDh",
            "likes": 3,
            "name": "[SH17A] crowded gyros",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "2tweets",
                "short",
                "spheremarching",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 564
        },
        "renderpass": [
            {
                "code": "// new simplification of https://www.shadertoy.com/view/XtlXRB\n// compact simplified version of https://www.shadertoy.com/view/MllXz7 (773 chars)\n// using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB#\n\nvoid mainImage(out vec4 f, vec2 w) { vec3 d,p=vec3(w/1e3,0)-.5,t,a;p.x-=.4;d=p;float j,x=iTime;f+=1.-f;p.z+=5.*x;while(f.x>0. && x>.01){t=mod(p,8.)-4.;for(j=3.;j>.8;j-=.4)t.zy*=mat2(sin(iTime+.79*vec4(2,0,4,2))),a=abs(t),x=min(x,max(max(a.x,max(a.y,a.z))-j*.8,abs(length(t)-j)));p-=d*x;f-=.01;}; }\n\n\n\n\n\n/**  // expended version, + commented enrichments\n\n// #define r(t) *= mat2(sin(t*iTime+1.57*vec4(1,0,2,1))) , // rotation\n\nvoid mainImage( out vec4 f, vec2 w ) \n{\n    vec3 // p = vec3(w/iResolution.y,0)-.5, \n         p = vec3(w/1e3,0)-.5, \n         d,t,a;    // ,u;\n    p.x-=.4; \n    //p.xz r(.13)   p.yz r(.2)                      // rotate camera\n    d = p;  \n    float j, x=iTime; f +=1.-f;\n    p.z += 5.*x;\n // float i=1e2, j, x=i; while ( --i>0.\n    while ( f.x>0. && x>.01 ) {                     // tracing rays\n\n     // u = sin(9.+ceil(p/8.));                     // current cell id (used as seed)\n        t = mod(p,8.)-4.;                           // local coords to def shapes in cell\n\n       // x=1e9;\n        for ( j=3.; j>.8; j-= .4)                   // oignon layers\n         // t.xy r(u.x)  t.xz r(u.y)                // rotate balls\n         // t.zy  *= mat2(sin(u.x*iTime+.79*vec4(2,0,4,2))),   // 45, + 21+2 for u=seed\n            t.zy  *= mat2(sin(iTime+.79*vec4(2,0,4,2))),       // 41, u no longer needed\n            a = abs(t),                                        // 9+2 chars\n            x = min(x, max( max(a.x,max(a.y,a.z))-j*.8,// cube\n                            abs(length(t)-j)           // minus sphere\n                   )      );             \n \n        p -= d*x;                                   // step through free space\n        f -= .01;\n    }\n\n // f += i*i/8e3 -f;                                // light at surface hit\n //   f += i/95. -f;                                  \n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}