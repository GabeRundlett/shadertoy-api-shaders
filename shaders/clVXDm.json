{
    "Shader": {
        "info": {
            "date": "1686269560",
            "description": "All year long I'm going to just focus on truchet tiles and the likes! \n",
            "flags": 0,
            "hasliked": 0,
            "id": "clVXDm",
            "likes": 25,
            "name": "Year of Truchets #033",
            "published": 3,
            "tags": [
                "2d",
                "warp",
                "truchet",
                "polar"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 318
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #033\n    06/10/2023  @byt3_m3chanic\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n#define PI         3.14159265359\n#define PI2        6.28318530718\nconst float scale = 10.;\n\nmat2 rot(float a) {return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 a) {return fract(sin(dot(a,vec2(27.609,57.583)))*43758.5453);}\nfloat box(vec2 p, vec2 a) {vec2 q=abs(p)-a;return length(max(q,0.))+min(max(q.x,q.y),0.);}\n\n//@iq of hsv2rgb\nvec3 hsv2rgb( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1., 0., 1.0 );\n    return c.z * mix( vec3(1), rgb, c.y);\n}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n\n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n    \n    // upscale\n    float scale = 2.545;   //7.//5.41//3.5;//2.545;//1.91;//1.2726;//.6365;\n \n    // @stb dual polar thing.. \n    uv.x -= .25;\n    uv /= uv.x*uv.x + uv.y*uv.y;\n    uv.x += 2.;\n    \n    // warp and turn\n    uv *= rot(-T*.035);\n    uv = vec2(log(length(uv)), atan(uv.y, uv.x))*scale;\n    uv.x -= T*.3;\n    \n    float px = fwidth(uv.x); \n    vec3 C = mix(vec3(.005),texture(iChannel1,uv).rgb,.5);\n    \n    // basic setup\n    vec4 id = vec4(floor(uv),floor(uv-.5));\n    vec4 q = vec4(fract(uv)-.5,fract(uv-.5)-.5);\n    vec2 ck = vec2(mod(id.x+id.y,2.)*2.-1.,mod(id.z+id.w,2.)*2.-1.);\n \n    float hs = hash21(id.xy);\n    float wd = .17;\n    \n    //rnd turn rnd\n    if(hs>.45) q.xy *= rot(1.5707);\n    hs = fract(hs*575.913);\n    \n    // closest corner\n    vec2 sp = vec2(length(q.xy-.5),length(q.xy+.5));\n    vec2 p = sp.x<sp.y? q.xy-.5 : q.yx+.5;\n\n    // main pattern\n    float d = abs(length(p)-.5)-wd;\n    float g = length(abs(q.xy)-.5)-(.425-wd);\n\n    if(hs<.15) d = min(length(abs(q.xy)-vec2(.5,0))-wd,length(q.x)-wd);\n    if(hs>.45) {\n        float tk = length(abs(q.x)-(wd*1.01))-(wd*.01);\n        d = max(min(length(q.y)-wd,length(q.x)-wd),-tk);\n    }\n    // accents\n    float b = length(q.zw)-.12;\n    float d2 = abs(max(abs(q.x),abs(q.y))-.5)-.0035;\n\n    // vectors for texture\n    vec2 arc = q.xy-sign(q.x+q.y+.001)*.5;\n    float angle = atan(arc.x, arc.y);\n    float ud = length(arc);\n    vec2 tuv = vec2(fract(4.*ck.x*angle/PI),(ud/.5)-.5);\n    // cross track changes\n    if (hs>.45) tuv = vec2(fract(2.*ck.x*abs(q.x)),q.y);\n    vec3 cf = texture(iChannel0,hs+tuv*2.).rgb;\n\n    // draw\n    if(ck.y>.5) {\n        d2=max(d2,-(b-.025));\n        C = mix(C,vec3(.05),smoothstep(px,-px,abs(b)-.015));\n    } else {\n        d2=max(d2,-(b-.025));\n        C = mix(C,vec3(.05),smoothstep(px,-px,b-.04)); \n        C = mix(C,hsv2rgb(vec3(uv.x*.1,.8,.35)),smoothstep(px,-px,b-.0125));    \n    }\n    \n    C = mix(C,vec3(.02),smoothstep(px,-px,d2));\n    C = mix(C,C*.25,smoothstep(.045+px,-px,d-.035));\n    C = mix(C,vec3(.001),smoothstep(px,-px,d));\n    C = mix(C,cf,smoothstep(px,-px,d+.045));\n\n\n    // gamma and output\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}