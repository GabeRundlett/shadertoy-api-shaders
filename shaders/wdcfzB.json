{
    "Shader": {
        "info": {
            "date": "1605428649",
            "description": "Learned about barycentric coordinates today.",
            "flags": 0,
            "hasliked": 0,
            "id": "wdcfzB",
            "likes": 7,
            "name": "Grid from 3 points",
            "published": 3,
            "tags": [
                "2d",
                "grid",
                "triangles",
                "barycentric"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 355
        },
        "renderpass": [
            {
                "code": "// Plento\n\n// Learned about barycentric coordinates today.\n\n#define R iResolution.xy\n#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n#define ss(a, b, t) smoothstep(a, b, t)\n\nfloat hash13(vec3 p3){\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    uv.x += iTime*.08 + 10.;\n    \n    vec3 col = vec3(1);\n    \n    // Triangle scale\n    float scl = 0.5;\n    \n    // The points of the triangle\n    vec2 A = vec2(0., .25)*scl;\n    vec2 B = vec2(-0.25, -0.25)*scl;\n    vec2 C = vec2(0.25, -0.25)*scl;\n    \n    // The point we want the barycentric coords of\n    vec3 M = vec3(uv.x, uv.y, 1.);\n    \n    // Matrix with the points\n    mat3 mat = mat3(vec3(A, 1.), vec3(B, 1.), vec3(C, 1.));\n    \n    // Inverse of the matrix * the point = barycentric coords\n    vec3 bc = inverse(mat) * M;\n    vec3 bid = floor(bc);\n    \n    // Offset position based on ID\n    bc.x -= cos(bid.z*80.+bid.y*90. + iTime*.03)*2.;\n    \n    // Set new ID \n    vec3 rbc = fract(bc-.5)-.5;\n    bid = floor(bc);\n    \n    // Color based on ID\n    float t = (bid.x*55.56 + bid.y*60.46 + bid.z*50.2);\n    col = .5+.3*cos(vec3(1.2, 0.3, 1.3) * t + vec3(1.4, 0.3, 3.3));\n    \n    // Pick random side to add shadow thing\n    int i = int(floor(hash13(bid*343.3)*3.));\n    col *= min(ss(.0, .1, abs(rbc[i]))+.42, 1.);\n    \n    // Grid lines\n    col *= ss(0.0, 0.0124, abs(rbc.x) - 0.02);\n    col *= ss(0.0, 0.0124, abs(rbc.y) - 0.02);\n    col *= ss(0.0, 0.0124, abs(rbc.z) - 0.02);\n    \n    \n    col += texture(iChannel0, vec3(cos(bc.y*3.),sin(bc.x*2.),cos(bc.z*3.))).xyz*.14;\n    \n    f = vec4(col, 1.0);\n}\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 27,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}