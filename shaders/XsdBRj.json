{
    "Shader": {
        "info": {
            "date": "1526176529",
            "description": "Experiment with something like a Vogel spiral. Can produce some cool spiral patterns and mess with your vision after a while. Really interesting to watch how it continues to develop over time.\n\nmouse.x = skip ahead\nmouse.y = zoom",
            "flags": 0,
            "hasliked": 0,
            "id": "XsdBRj",
            "likes": 36,
            "name": "Spiral of Spirals",
            "published": 3,
            "tags": [
                "spiral",
                "sunflower",
                "vogel"
            ],
            "usePreview": 0,
            "username": "KilledByAPixel",
            "viewed": 12202
        },
        "renderpass": [
            {
                "code": "//////////////////////////////////////////////////////////////////////////////////\n// Spiral of Spirals - Copyright 2018 Frank Force\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//////////////////////////////////////////////////////////////////////////////////\n\nconst float pi = 3.14159265359;\n\nvec3 hsv2rgb(vec3 c)\n{\n    float s = c.y * c.z;\n    float s_n = c.z - s * .5;\n    return vec3(s_n) + vec3(s) * cos(2.0 * pi * (c.x + vec3(1.0, 0.6666, .3333)));\n}\n\nvec3 GetSpiralColor(float a, float i, float t)\n{\n    \n    // fixed size\n    //t *= 1.0 - 0.9*mousePos.w;\n    //a *= 1.0 + mousePos.w*(floor(i)+p);\n    \n    a += 2.0*pi*floor(i);\n   \n    // apply color\n    float h = a;\n    h *= 1.003*t;\n    //h *= 0.1*(floor(i)+p);\n    h = 0.5*(sin(h) + 1.0);\n    h = pow(h, 3.0);\n    h += 1.222*t + 0.4;\n    \n    float s = a;\n    s *= 1.01*t;\n    s = 0.5*(sin(s) + 1.0);\n    s = pow(s, 2.0);\n    \n    float v = a;\n    v *= t;\n    v = sin(v);\n    v = 0.5*(v + 1.0);\n    v = pow(v, 3.0);\n    //v *= pow(sin(fract(i)*pi), 0.4);\n    \n    return vec3(h, s, v);\n}       \n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n    uv -= iResolution.xy / 2.0;\n    uv /= iResolution.x;\n   \n    vec4 mousePos = (iMouse.xyzw / iResolution.xyxy);\n \tuv *= 40.0;\n    if (mousePos.y > 0.0)\n    \tuv *= 4.0 * mousePos.y;\n    \n    float a = atan(uv.y, uv.x);\n    float d = length(uv);\n    \n    // apply slight pow so center is smaller\n    d = pow(10.0*d, 0.7);\n    \n    // make spiral\n    float i = d;\n    i -= a/(2.0*pi) + 0.5;\n    \n    // change over time\n    float t = .05*(iTime + 400.0*mousePos.x);\n    \n    vec3 c1 = hsv2rgb(GetSpiralColor(a, i, t));\n    vec3 c2 = hsv2rgb(GetSpiralColor(a, i+1.0, t));\n    \n    float p = fract(i);\n    vec3 c3 = mix(c1, c2, p);\n    \n\tfragColor = vec4(c3, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}