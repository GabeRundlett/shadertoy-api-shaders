{
    "Shader": {
        "info": {
            "date": "1635523856",
            "description": ".[url]https://inktober.com/[/url]\n#inktober2021 themes: [img]https://i.imgur.com/QjhAdpd.png[/img]\n\nMouse to move the patchwork\nreference: see below",
            "flags": 0,
            "hasliked": 0,
            "id": "sdGSDd",
            "likes": 15,
            "name": "Fab29 #inktober2021 \"patch\"",
            "published": 3,
            "tags": [
                "2d",
                "short",
                "reproduction",
                "inktober2021",
                "patchwork"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "// --- utils from http://www.shadertoy.com/view/llySRh\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n#define H(p)     fract(sin((p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123)\n#define S(v)     smoothstep( 60./R.y, 0., v ) \n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2   R =  iResolution.xy, \n           U = 10.* ( u - iMouse.xy ) / R.y - 3.,\n           I = floor(U), F = fract(U),                     // small tiles ( cut as 2 triangles )\n           I2 = floor(I/4.), F2 = I-I2*4.-1.5,             // super tiles 4x4\n           H, G;\n     float b = F.x + ((int(I.x+I.y)&1)>0 ? F.y : 1.-F.y ),l;// triangle halves: b < or > 1\n     H = H(I2);                                            // color seeds\n    \n#define t(U)  1.5* texture(iChannel0,U).r                  // weaving pattern\n//#define t(V)  1.5* textureGrad(iChannel0,V,dFdx(U),dFdy(U)).r  // to fix some motion aliasing ( thanks mla ! )\n#define T(U)  max( t(U) , max(t(U+.3) , t(U+.6) ) )        \n\n    l = H.y; G = fract(F*4.)-.5;                           // cloth patterns\n    l =  l < .25 ? length(G) - .2                                                 // #1\n       : l < .50 ? max(abs(fract(F.x*4.+floor(F.y*4.)/2.)-.5),abs(G.y*2.)) - .3   // #2\n       : l < .75 ? abs( fract(.1*sin(24.*F.y)+4.*F.x)-.5) -.15                    // #3\n       :           abs( fract(4.*(F.x-F.y))-.5 ) -.15;                            // #4\n                 \n    vec4 C0 = mix( hue(H.y*3.) * T(F),  hue(H.x) * T(F.yx) , S(l) ), // color pattern for each triangle halve\n           // variant: H.x+.5 for complementary colors\n         C1 = hue(H.x) * T(F.yx);\n\n    l = max(abs(F2.x),abs(F2.y));                          // crown rank in super tile\n    O = (    b>1. == F2.y > 0.          && l < 1.          // patches arrangement in super tile\n          || b>1. == F2.x+1.-F2.y <= 0. && fract(atan(F2.y,F2.x)/1.57) < .4  \n                  ? C0                                     // color patch 1\n         : l < 1. ? C1                                     // color patch 2\n         : vec4(1.2,1.1,1.1,1) * T(F)                      // background patch\n        ) * ( 1. -.1* S( min(min(F.x,F.y),abs(1.-b))) );   // patches border\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}