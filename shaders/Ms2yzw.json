{
    "Shader": {
        "info": {
            "date": "1491428684",
            "description": "cascading particles (with or without age inheritance ).\n\nChange parameters, uncomment choices, try fullscreen.",
            "flags": 32,
            "hasliked": 0,
            "id": "Ms2yzw",
            "likes": 12,
            "name": "maze worms / graffitis 5",
            "published": 3,
            "tags": [
                "automata",
                "worms",
                "maze",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 834
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, U/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define CS(a)  vec2(cos(a),sin(a))\n#define rnd(x) fract(456.68*sin(1e3*x+mod(iDate.w,100.))) // NB: mod(t,1.) for less packed pattern\n#define srnd(x) ( 2.* rnd(x) -1.)\n#define T(U) texture(iChannel0, (U)/R)\nconst float r = 1.5, N = 150.,T=5., da = .5; // width , number of leaves & trunk particles , turn angle at hit\n#define age true                             // inherit parent age\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    vec4 P;\n    \n    if (T(R).x==0.) { U = abs(U/R*2.-1.); O  = vec4(max(U.x,U.y)>1.-r/R.y); O.w=0.; return; } // frame\n    O = T(U);                                              // previous state\n\n    if (U.y==.5) { // --- particle zone\n        if (U.x<N && T(U).w==0.) {  // --- free particle.  initialize heads state: P, a, t\n          if (U.x< T)                                      // trunck particle                                  \n                O = vec4( R/2. + R/2.4* vec2(srnd(U.x),srnd(U.x+.1)) , 3.14 * srnd(U.x+.2), 1); // init\n            else {                                         // ordinary particle\n                vec4 P = T( vec2(floor(N*rnd(U.x+.3))+.5,.5) );  // seek a parent particle\n                if (mod(P.w+U.x-.5,20.)==19.)                     // valid parent & tick\n                    O = vec4( P.xy , P.z-1.*sign(mod(U.x,2.)-1.), age ? P.w : 1.),  // init\n                    O.xy += 3.*r*CS(O.z);\n               }\n            if (T(O.xy).x>0.) O.w = 0.;                    // invalid start position\n            P = O;\n        }        \n        else P = T(U);                                     // head state: P, a, t\n        // --- particle engine\n        if (P.w>0.) {                                      // if active\n            float a = P.z;\n            if (U.x<T) a += .0002*P.w * sign(sin(U.x));    // trunk particle\n            else       a += .0002*P.w * sign(sin(U.x));    // ordinary particle\n          //a += .01*P.w;\n          //a += 1./P.w;\n          //a += 1./sqrt(P.w);\n            if  ( T(P.xy+(r+2.)*CS(a)).w > 0. )  { O.w = 0.; return; } // hit: die\n            O = vec4(P.xy+CS(a),mod(a,6.2832),P.w+1.);     // move head\n        }\n        return;\n    }\n    \n    // --- plain screen: draw particles\n    \n    for (float x=.5; x<N; x++) {                           // draw heads\n     // if (R.y < 200. && x>5.) break;                     // less strand for icon\n        vec4 P = T(vec2(x,.5));                            // head state: P, a, t\n        if (P.w>0.) \n            O += smoothstep(r,0., length(P.xy-U))          // draw head if active\n                * ( x<T ? vec4(.5,.3,.3,1)                 // coloring scheme\n                   : vec4(0,.5,0,1) );\n                // : .5+.5*sin(6.3*P.w/100.+vec4(0,-2.1,2.1,0)) );\n       }    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}