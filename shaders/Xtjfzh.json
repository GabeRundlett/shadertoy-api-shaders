{
    "Shader": {
        "info": {
            "date": "1514584351",
            "description": "you can place voronoi cells by dragging with mouse, and you can hold space to draw.",
            "flags": 48,
            "hasliked": 0,
            "id": "Xtjfzh",
            "likes": 6,
            "name": "voronoi paint",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "abje",
            "viewed": 747
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    ivec2 coord = ivec2(fragCoord);\n    vec4 data = texelFetch(iChannel0, ivec2(0),0);\n\tfragColor = texelFetch(iChannel0,coord,0);\n    \n    bool draw = iMouse.z > 0.0;\n    \n    if (draw) {\n        float len = length(fragCoord.xy-iMouse.xy);\n        \n        if (fragColor.a > len) {\n            fragColor.a = len;\n            fragColor.xyz = fract(sin(vec3(data.x)*vec3(1,2,3))*9.);\n            if (len < 4.0) {\n                fragColor.xyz = vec3(1,0,0);\n            }\n        }\n        //fragColor = vec4(min(fragColor.x,len));\n    }\n    \n    if (iMouse == vec4(0)) {\n        float len = 1e10;\n        vec3 col = vec3(0);\n        for (int i = 0; i < 10; i++) {\n            float len2 = length(fragCoord.xy-iResolution.xy*(0.5+0.5*sin(iTime*0.01*vec2(1,2.563)*float(i)+float(i*i))));\n            \n            if (len2 < len) {\n                len = len2;\n                col = fract(sin((float(i)+0.5)*vec3(1,2,3))*9.);\n            }\n            \n        }\n        fragColor.xyz = col;\n        if (len < 4.0) {\n            fragColor = vec4(1,0,0,1);\n        }\n\t}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//line signed distance field by iq\nfloat line( vec2 p, vec2 a, vec2 b ) \n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 coord = ivec2(fragCoord);\n    fragColor = texelFetch(iChannel0,coord,0);\n    \n    vec4 data = texelFetch(iChannel0, ivec2(0),0);\n    \n    if (fragColor == vec4(0)) {\n        fragColor = vec4(1000000);\n        return;\n    }\n    \n    bool placecell;\n    bool draw = texelFetch(iChannel1,ivec2(32,0),0).x>0.5;\n    \n    if (draw) {\n        placecell = iMouse.z > 0.0;\n    } else {\n        placecell = iMouse.z < 0.0 && data.w > 0.0;\n    }\n    if (placecell) {\n        float len;\n        if (draw&&(abs((data.x+iTimeDelta)-iTime)>0.01))\n            len = line(fragCoord.xy,iMouse.xy,data.yz);\n        else\n            len = length(fragCoord.xy-abs(iMouse.xy));\n        if (fragColor.a > len) {\n            fragColor.a = len;\n            fragColor.xyz = fract(sin(data.x*vec3(1,2,3))*9.);\n            if (len < 4.0) {\n                fragColor.xyz = vec3(1,0,0);\n            }\n        }\n        //fragColor = vec4(min(fragColor.x,len));\n    }\n    \n    if (coord == ivec2(0)) {\n        if (iMouse.z > 0.0) {\n            fragColor.x = data.x;\n        } else {\n            fragColor.x = iTime;\n        }\n        fragColor.yzw = iMouse.xyz;\n    } else if (iFrame == 1) {\n        fragColor = vec4(1000000);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}