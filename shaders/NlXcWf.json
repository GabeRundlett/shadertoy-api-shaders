{
    "Shader": {
        "info": {
            "date": "1661983396",
            "description": "Mixes 2 colors with opacity",
            "flags": 0,
            "hasliked": 0,
            "id": "NlXcWf",
            "likes": 2,
            "name": "mixrgba",
            "published": 3,
            "tags": [
                "color",
                "alpha"
            ],
            "usePreview": 0,
            "username": "ArmandB",
            "viewed": 208
        },
        "renderpass": [
            {
                "code": "float sdfCircle(vec2 o, float r, vec2 uv){\n    return distance(o, uv) - r;\n}\n\nvec4 coloredCircle(vec2 o, float r, vec4 col, vec2 uv){\n    return vec4(col.rgb, mix(0.0, col.a, smoothstep(0.005, 0.0, sdfCircle(o, r, uv))));\n}\n\n//mixes 2 colors with opacity\nvec4 mixrgba(vec4 s, vec4 d){\n    float a = s.a + d.a*(1.0-s.a);\n    if (a == 0.0){\n        return vec4(0.0);\n    } \n    vec3 c = s.rgb*s.a + d.rgb*d.a*(1.0-s.a);\n    return vec4(c/a, a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec3 grid = mod(floor(uv.x*20.0), 2.0) + mod(floor(uv.y*20.0), 2.0) == 1.0 ? vec3(0.8) : vec3(1.0);\n    vec4 col = vec4(grid, 1.0);\n    \n    vec4 circle1 = coloredCircle(vec2(0.5, 0.4), 0.2, vec4(1, 0.5, 0, 0.5), uv);\n    vec4 circle2 = coloredCircle(vec2(0.5, 0.6), 0.2, vec4(0, 0.7, 0.7, 0.5), uv);\n    \n    col = mixrgba(circle1, mixrgba(circle2, col));\n\n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}