{
    "Shader": {
        "info": {
            "date": "1625114164",
            "description": "Julia set with distorted input coordinates. Use the mouse to change C.",
            "flags": 0,
            "hasliked": 0,
            "id": "stXSz8",
            "likes": 2,
            "name": "folding Julia set",
            "published": 3,
            "tags": [
                "fractal",
                "julia"
            ],
            "usePreview": 0,
            "username": "Shellderr",
            "viewed": 265
        },
        "renderpass": [
            {
                "code": "#define res iResolution\n#define thresh 20.\n#define stop 200\n\nvec3 rgb(float a){\n    a *=8.;\n    return(cos(4.+a+vec3(0.,2.,4.)*.7)*.5+.5);\n}\n\nvec2 cmul(vec2 a, vec2 b){\n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\nvec2 cdiv(vec2 v1, vec2 v2){\n    float a = (v1.x*v2.x+v1.y*v2.y)/(v2.x*v2.x+v2.y*v2.y);\n    float b = (v1.y*v2.x-v1.x*v2.y)/(v2.x*v2.x+v2.y*v2.y);\n    return vec2(a,b);\n}\n\nvec2 cexp(vec2 z){\n    return exp(z.x)*vec2(cos(z.y),sin(z.y));\n}\n\nvec2 clog(vec2 z){\n    return vec2(log(length(z)),atan(z.y,z.x));\n}\n\nvec2 cpow(vec2 z, float c){\n    return cexp(c*clog(z));\n}\n\n\nvec2 clerp(vec2 a, vec2 b, float m){\n    m = clamp(m,0.,1.);\n    return cmul(vec2(1.-m),a)+cmul(vec2(m),b);\n}\n\n\nvec2 rot(vec2 v, float t){\n    float a = (1.*atan(v.x,v.y))+t;\n    return vec2(cos(a),sin(a))*length(v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    vec2 z = .8*(2.*fragCoord.xy-res.xy)/res.y;\n    // z = rot(z,time);\n    //vec2 zz = vec2(0);\n    z = clerp(.3*clog(vec2(2)+z), (cdiv(vec2(.5),z)), .1);\n    // z = cexp(cmul(z,vec2(.4)));\n    z=rot(z,iTime*.3);\n    vec2 mouse = .5*iMouse.xy/res.xy;\n    vec2 c = mouse.xy==vec2(0)? vec2(-.77,-.22)/*vec2(cos(iTime*.4)-.3,-.66)*/: (2.*mouse.xy-1.);\n    int i = 0;\n    for(i; i < stop; i++){\n        z = cmul(z,z)+c;\n        if(length(z) > thresh)\n            break;\n    }\n    vec3 col = rgb(log(.9+float(i)/380.)*2.);\n    fragColor = vec4(col, 1.0 );\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}