{
    "Shader": {
        "info": {
            "date": "1640910354",
            "description": "Fractal with interference pattern",
            "flags": 32,
            "hasliked": 0,
            "id": "NlKSzG",
            "likes": 27,
            "name": "Microscopy 101",
            "published": 3,
            "tags": [
                "interference"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 414
        },
        "renderpass": [
            {
                "code": "\nMain \n{\n    R = iResolution.xy;\n    Q.x = length(A(U).xy);\n    Q.y = length(B(U).xy);\n    Q.z = length(C(U).xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Wavelengths of Each Color\n#define _A (10000./600.)\n#define _B (10000./500.)\n#define _C (10000./400.)\n// Depth of Bubbles\n#define D 1.\n// Iterations\n#define I 8.\n\n\n// Window of Samples\n#define W 80.\n// Number of Samples\n#define N 30.\n\n// Brightness Decay\n#define Z mix(0.,.999,step(.01,mod(T*.2,1.)))\n// Adjust for Brightness\n#define F .06\n\n\n\nvec2 R;\nfloat T;\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define ei(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define pi 3.14159265359\n#define _sin(a) sin(mod(a,2.*pi))\n#define _cos(a) cos(mod(a,2.*pi))\nfloat map (vec2 u) {\n    u = 4.*(u-.5*R)/R.y;\n    float d = 0.;\n    float s = 1.;\n    for (float i = 1.; i < I; i++)\n    {\n        \n        u *= (1.7+.5*sin(1.74*floor(.2*T)))*ei(1.-floor(.2*T));\n        u = abs(u)-2.;\n        \n        float l = 1.-length(u);\n        if (l>0.)\n            d += exp2(-i)*sqrt(l);\n        \n        \n    }\n    \n        \n    return D*d;\n}\n// Dave H\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main \n{\n    R = iResolution.xy;\n    T = iTime;\n    Q = A(U);\n    vec3 eye = vec3(U,R.y);\n    for (float i = 0.; i<N; i++)\n    {\n        vec2 v = U+W*(hash22(vec2(i,iFrame))-.5);\n        vec3 u = vec3(v,map(v));\n        float l = _A*(length(eye-u));\n        Q.xy += F*vec2(_cos(l),_sin(l))/N;\n    }\n    Q *= Z;\n    if (iFrame < 1) Q = vec4(0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main \n{\n    R = iResolution.xy;\n    T = iTime;\n    Q = A(U);\n    vec3 eye = vec3(U,R.y);\n    for (float i = 0.; i<N; i++)\n    {\n        vec2 v = U+W*(hash22(vec2(i,iFrame))-.5);\n        vec3 u = vec3(v,map(v));\n        float l = _B*length(eye-u);\n        Q.xy += F*vec2(_cos(l),_sin(l))/N;\n    }\n    Q *= Z;\n    if (iFrame < 1) Q = vec4(0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main \n{\n    R = iResolution.xy;\n    T = iTime;\n    Q = A(U);\n    vec3 eye = vec3(U,R.y);\n    for (float i = 0.; i<N; i++)\n    {\n        vec2 v = U+W*(hash22(vec2(i,iFrame))-.5);\n        vec3 u = vec3(v,map(v));\n        float l = _C*length(eye-u);\n        Q.xy += F*vec2(_cos(l),_sin(l))/N;\n    }\n    Q *= Z;\n    if (iFrame < 1) Q = vec4(0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}