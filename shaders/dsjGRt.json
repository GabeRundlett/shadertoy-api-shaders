{
    "Shader": {
        "info": {
            "date": "1668043605",
            "description": "followed this tuorial https://www.youtube.com/watch?v=ZlNnrpM0TRg&t=8s&ab_channel=TheArtofCode",
            "flags": 0,
            "hasliked": 0,
            "id": "dsjGRt",
            "likes": 2,
            "name": "smiley tutorial 2",
            "published": 3,
            "tags": [
                "smiley"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "// macro for smoothstep\n#define f_smstp(a,b,t) smoothstep(a,b,t)\nfloat f_n_remap1(\n    float a,\n    float b,\n    float t\n){\n    return clamp((t-a)/(b-a), 0.0, 1.0);\n}\nfloat f_n_remap2(\n    float a,\n    float b,\n    float c,\n    float d,\n    float t\n){\n    return (f_n_remap1(a,b,t)) * (d-c) + c;\n}\nvec2 f_o_within(\n    vec2 o_pixel_coord_norm, \n    vec4 o_rect\n){\n    return (o_pixel_coord_norm-o_rect.xy)/(o_rect.zw-o_rect.xy);\n}\nvec4 f_o_col_eye(\n    vec2 o_pixel_coord_norm\n){\n    // re normalize \n    o_pixel_coord_norm -= 0.5;\n    float n_dist = length(o_pixel_coord_norm);\n\n    vec4 o_col_iris = vec4(0.3, 0.5, 1., 1.0);\n    vec4 o_col = mix(vec4(1.0), o_col_iris, f_smstp(0.1, 0.5, n_dist)*0.5);\n    \n    o_col.rgb *= 1. - f_smstp(0.45, 0.5 , n_dist)*0.5*clamp(-o_pixel_coord_norm.y-o_pixel_coord_norm.x, 0.0, 1.0);\n    \n    o_col.rgb = mix(o_col.rgb, vec3(0.0), f_smstp(0.3, 0.25, n_dist));\n    o_col_iris.rgb *= 1. + f_smstp(0.3, 0.05, n_dist);\n    \n    \n    o_col.rgb = mix(o_col.rgb, o_col_iris.rgb, f_smstp(0.28, 0.25, n_dist));\n    \n    o_col.rgb = mix(o_col.rgb, vec3(0.0), f_smstp(0.16, 0.14, n_dist));\n\n    \n    float n_highlight = f_smstp(\n        0.1,\n        0.09,\n        length(\n            o_pixel_coord_norm\n            - vec2(-.15, .15)\n        )\n    );\n    n_highlight += f_smstp(\n        0.07,\n        0.05,\n        length(\n            o_pixel_coord_norm\n            + vec2(-.08, .08)\n        )\n    );\n    o_col.rgb = mix(o_col.rgb, vec3(1.0), n_highlight);\n    o_col.a = f_smstp(0.5, 0.48, n_dist);\n    \n    \n    return o_col;\n}\n\nvec4 f_o_col_mouth(\n    vec2 o_pixel_coord_norm\n){\n    o_pixel_coord_norm -= 0.5;\n    o_pixel_coord_norm.y *= 1.5;\n\n    o_pixel_coord_norm.y -= o_pixel_coord_norm.x * o_pixel_coord_norm.x*2.0;\n    vec4 o_col = vec4(0.5, 0.18, 0.05 , 1.0);\n    float n_dist = length(o_pixel_coord_norm);\n    o_col.a = f_smstp(0.5, 0.48, n_dist);\n    \n    vec3 o_col_tooth = vec3(1.0)*f_smstp(0.6, 0.35, n_dist);\n    float n_dist_teeth  = length(o_pixel_coord_norm-vec2(0., 0.55)); \n    o_col.rgb = mix(o_col.rgb, o_col_tooth, f_smstp(0.4, 0.37, n_dist_teeth));\n    \n    float n_dist_tounge = length(o_pixel_coord_norm+vec2(0., 0.5));\n    o_col.rgb = mix(o_col.rgb, vec3(1.0, 0.5, 0.5), f_smstp(0.5, 0.2, n_dist_tounge));\n\n    return o_col;\n}\n\nvec4 f_o_col_head(\n    vec2 o_pixel_coord_norm\n){\n    vec4 o_col = vec4(0.9, 0.66, 0.3, 1.0);\n    float n_dist = length(\n        vec2(0.0,0.0) - o_pixel_coord_norm\n    );\n    o_col.a = f_smstp(0.5, 0.49, n_dist);\n    float n_edge_shade = f_n_remap1(.35, .5, n_dist);\n    n_edge_shade = n_edge_shade*n_edge_shade;\n    o_col.rgb *= 1.-n_edge_shade * 0.3;\n    o_col.rgb = mix(o_col.rgb, vec3(0.7, 0.3, 0.1), f_smstp(0.47, 0.48, n_dist));\n    \n    float n_highlight = f_smstp(0.41, 0.405, n_dist)*0.5;\n    n_highlight *= f_n_remap2(0.41, 0.0, 0.76, 0., o_pixel_coord_norm.y);\n    o_col.rgb = mix(o_col.rgb, vec3(1.0), n_highlight);\n    \n    n_dist = length(o_pixel_coord_norm - vec2(0.25, -0.2));\n    float n_cheeck = f_smstp(0.2, 0.01, n_dist)*0.4;\n    n_cheeck *= f_smstp(.17, 0.15, n_dist);\n    o_col.rgb = mix(o_col.rgb, vec3(1.0, 0.1, 0.1), n_cheeck);\n    return o_col;\n}\n\nvec4 f_o_col_smiley(\n    vec2 o_pixel_coord_norm\n){\n    vec4 o_col = vec4(0.0);\n    //mirror x coordinate \n    o_pixel_coord_norm.x = abs(o_pixel_coord_norm.x);\n    \n    vec4 o_col_head = f_o_col_head(o_pixel_coord_norm);\n    \n    vec4 o_col_eye = f_o_col_eye(\n        f_o_within(\n            o_pixel_coord_norm, \n            vec4(0.03, -.1, 0.37, 0.25)\n        )\n    );\n\n    vec4 o_col_mouth = f_o_col_mouth(\n        f_o_within(\n            o_pixel_coord_norm, \n            vec4(-.3, -.4, 0.3, -0.1)\n        )\n    );\n    \n    o_col = mix(o_col, o_col_head, o_col_head.a);\n    o_col = mix(o_col, o_col_eye, o_col_eye.a);\n    o_col = mix(o_col, o_col_mouth, o_col_mouth.a);\n\n\n    \n    return o_col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_pixel_coord_norm = fragCoord.xy / iResolution.xy;\n    \n    o_pixel_coord_norm -= 0.5;\n    \n    o_pixel_coord_norm.x *= iResolution.x/iResolution.y;\n    \n    fragColor = f_o_col_smiley(o_pixel_coord_norm);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}