{
    "Shader": {
        "info": {
            "date": "1622202632",
            "description": "I wanted to try simulating the look of an LED wall where each pixel is a bit separate from it's neighbors.",
            "flags": 0,
            "hasliked": 0,
            "id": "flfGW8",
            "likes": 21,
            "name": "LED wall",
            "published": 3,
            "tags": [
                "abstract"
            ],
            "usePreview": 0,
            "username": "R3N",
            "viewed": 754
        },
        "renderpass": [
            {
                "code": "float rand(vec2 p) {\n\treturn fract(sin(dot(p, vec2(12.543,514.123)))*4732.12);\n}\n\nfloat noise(vec2 p) {\n\tvec2 f = smoothstep(0.0, 1.0, fract(p));\n\tvec2 i = floor(p);\n\t\n\tfloat a = rand(i);\n\tfloat b = rand(i+vec2(1.0,0.0));\n\tfloat c = rand(i+vec2(0.0,1.0));\n\tfloat d = rand(i+vec2(1.0,1.0));\n\t\n\treturn mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float n = 2.0;\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 uvp = fragCoord/iResolution.xy;\n\tuv += 0.75*noise(uv*3.0+iTime/2.0+noise(uv*7.0-iTime/3.0)/2.0)/2.0;\n    float grid = (mod(floor((uvp.x)*iResolution.x/n),2.0)==0.0?1.0:0.0)*(mod(floor((uvp.y)*iResolution.y/n),2.0)==0.0?1.0:0.0);\n    //float grid = (mod(mod(floor((uvp.y)*iResolution.y/n),2.0)+floor((uvp.x)*iResolution.x/n),2.0)==0.0?1.0:0.0);\n    vec3 col = mix(vec3(0), vec3(0.2, 0.4, 1), 5.0*vec3(pow(1.0-noise(uv*4.0-vec2(0.0, iTime/2.0)),5.0)));\n    col *= grid;\n    col = pow(col, vec3(1.0/2.2));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}