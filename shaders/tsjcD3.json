{
    "Shader": {
        "info": {
            "date": "1587466634",
            "description": "practice",
            "flags": 0,
            "hasliked": 0,
            "id": "tsjcD3",
            "likes": 0,
            "name": "glslpractice2",
            "published": 3,
            "tags": [
                "practice"
            ],
            "usePreview": 0,
            "username": "bigdra50",
            "viewed": 298
        },
        "renderpass": [
            {
                "code": "vec2 rot(vec2 p, float angle)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    return vec2(p.x*c - p.y*-s, p.x*s+p.y*c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 c = vec3(0);\n    vec2 p = ((fragCoord.xy/iResolution.xy)-.5)*2.;\n    \n    c.yz = vec2(.04/abs(.03-length(p)));\n    p+=rot(c.xy, iTime);\n\n    float t = atan(p.y, p.x)+iTime*2.5;\n    p = rot(rot(p, iTime), t);\n    vec2 q = p;\n    q*= p*(1.2+sin(t*7.))*.5;  // -1 ~ 1 -> 0 ~ 1\n    q*= p*(1.2+cos(t*3.5))*5.;  // -1 ~ 1 -> 0 ~ 1\n    vec2 v = vec2(1.+cos(t*10.), 1.+tan(iTime*10.));\n    c.x = dot(p, v) / abs(.5-(length(q)*abs(length(q))));\n    c = smoothstep(0., .1, c);\n    c.yz += p;\n\n    fragColor = vec4(vec3(abs(.5-length(c.x+q.y)), 1.-(c.y*p.x), c.z+q.x+p.y), 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}