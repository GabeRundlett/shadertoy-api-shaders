{
    "Shader": {
        "info": {
            "date": "1569274030",
            "description": "Just a writhing mass of cells",
            "flags": 32,
            "hasliked": 0,
            "id": "tdd3DS",
            "likes": 7,
            "name": "cellular mass",
            "published": 3,
            "tags": [
                "2d",
                "automata",
                "cellular"
            ],
            "usePreview": 0,
            "username": "khoba",
            "viewed": 506
        },
        "renderpass": [
            {
                "code": "// <--- Click to refresh\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = vec4(texture(iChannel0, uv).xyz, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define S 13\n#define O 6\n#define D 8\n\nconst int p[S*S] = int[S*S](\n\t0,0,0,0,0,7,7,7,0,0,0,0,0,\n    0,0,0,7,7,6,6,6,7,7,0,0,0,\n    0,0,7,6,6,5,5,5,6,6,7,0,0,\n    0,7,6,5,5,4,4,4,5,5,6,7,0,\n    0,7,6,5,4,3,3,3,4,5,6,7,0,\n    7,6,5,4,3,2,2,2,3,4,5,6,7,\n    7,6,5,4,3,2,1,2,3,4,5,6,7,\n    7,6,5,4,3,2,2,2,3,4,5,6,7,\n    0,7,6,5,4,3,3,3,4,5,6,7,0,\n    0,7,6,5,5,4,4,4,5,5,6,7,0,\n    0,0,7,6,6,5,5,5,6,6,7,0,0,\n    0,0,0,7,7,6,6,6,7,7,0,0,0,\n    0,0,0,0,0,7,7,7,0,0,0,0,0\n);\n\nint[D] sums(in vec2 fragCoord) {\n    int s[D];\n    int ij = 0;\n    for(int i = -O; i <= O; i++) {\n        for(int j = -O; j <= O; j++) {\n            float tex = texture(iChannel0, (fragCoord + vec2(i, j)) / iResolution.xy).w;\n            s[p[ij++]] += int(ceil(tex));\n        }\n    }\n    return s;\n}\n\nvec4 solu(in vec2 fragCoord, in vec2 uv) {\n    \n    int[8] s = sums(fragCoord);\n    bool alive = s[1] > 0;\n    \n    int s1 = s[2] + s[4];\n    int s2 = s[6] + s[7];\n    int s3 = s[4] + s[7];\n    if(s1 >= 10 && s1 <= 13) {\n    \talive = true;\n    }\n    if(s3 >= 20 || s2 <= 10 || s2 > 23) {\n    \talive = false;\n    }\n    \n    vec3 prev = texture(iChannel0, uv).xyz;\n    float avg = (4. * float(s[1]) + 2. * float(s[2]) + 10. * float(s[3])) / 32.;\n    return vec4(vec3(avg) * .1 + prev.x * .9, float(alive));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    if(iFrame <= 1 || iMouse.z > 0.) {\n        bool alive = fract(sin(fragCoord.x) * cos(fragCoord.y) * 43758.5453123) < .22;\n        fragColor = vec4(0., 0., 0., float(alive));\n    } else {\n        fragColor = solu(fragCoord, uv);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}