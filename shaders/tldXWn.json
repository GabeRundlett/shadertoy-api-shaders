{
    "Shader": {
        "info": {
            "date": "1580773277",
            "description": "confused...",
            "flags": 32,
            "hasliked": 0,
            "id": "tldXWn",
            "likes": 2,
            "name": "Accidental_z2",
            "published": 3,
            "tags": [
                "accidental"
            ],
            "usePreview": 0,
            "username": "hanabi",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M_PI 3.14159265358\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = (iResolution.xy) / 2.;\n    float L = iResolution.y;\n\n    if (distance(fragCoord, center) > L)\n        discard;\n    \n    float fFrame = float(iFrame);\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n\n    float K = 30.;\n    for (float i = 0.; i < K; i++) {\n        float R =  M_PI / 180. * (180. / K * i);\n        float P = fFrame + i * L / 10.;\n        float X = mod(P, L);\n        float T = floor(mod(P / L, 2.));\n        X = (1. - T) * X + T * (L - X);\n\n        vec2 line = center;\n        line.x -= (L / 2.);\n        line.x += X;\n\n        vec2 nline = line - center;\n        vec2 nlineR = nline;\n\n        nlineR.x = nline.x * cos(R) - nline.y * sin(R);\n        nlineR.y = nline.x * sin(R) + nline.y * cos(R);\n        line = nlineR + center;\n\n        if (distance(fragCoord, line) < 10.) {\n            fragColor.rgb = mix(fragColor.rgb,\n                                hsv2rgb(vec3(.9 / K * i, .9 / K * i, 0.8)),\n                                0.3);\n        }\n    }\n    \n    //if (abs(fragCoord.y - iResolution.y/2.) < 1.)\n    //    fragColor = vec4(1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}