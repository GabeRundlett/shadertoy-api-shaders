{
    "Shader": {
        "info": {
            "date": "1694534616",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "DtSBD3",
            "likes": 18,
            "name": "Point to line tangent to circle",
            "published": 3,
            "tags": [
                "line",
                "intersection",
                "circle",
                "sampling"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "/*\n    solve right triangle, formed by point (ro), circle center (C) and unknown point.\n    beta is the angle on ro.\n    \n    ro\n    rd\n    R\n    C\n\n\n    l = sqrt(dot(ro-C,ro-C))\n\n    l2 = R2 + u2\n\n    u = sqrt(l2 - r2)\n\n    sin(beta) = R/l\n    beta = asin(R/l)\n*/\n\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define pi acos(-1.)\n\n// From iq\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b ){\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 C, in vec2 U ){\n    vec2 uv = (U - 0.5*iResolution.xy)/iResolution.y;\n    vec2 muv = (iMouse.xy - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    vec2 ro = muv*1.;\n    if(iFrame == 0){\n        ro = vec2(0.4);\n    }\n    \n    float R = 0.25;\n    vec2 c = vec2(0.);\n    \n    float sd = 1000.0;\n    \n    sd = min(sd, length(ro - uv) - 0.02);\n    sd = min(sd, abs(length(uv - c) - R) - 0.001);\n    \n    \n    float l = length(c - ro);\n    float u = sqrt(l*l - R*R);\n    \n    float beta = asin(R/l);\n    float alpha = pi - pi/2.0 - beta;\n    \n    vec2 rd = normalize(c - ro);\n    rd *= rot(beta);\n    \n    float circ_circumf = 2. * pi * R;\n    float cone_circumf = circ_circumf * (2. * alpha / (2.*pi));\n    \n    \n    sd = min(sd, length(ro + rd*u - uv) - 0.01);\n    sd = min(sd,sdSegment( uv, ro, ro + rd*u ) - 0.004);\n    \n    rd *= rot(-beta*2.0);\n    \n    sd = min(sd, length(ro + rd*u - uv) - 0.01);\n    sd = min(sd,sdSegment( uv, ro, ro + rd*u ) - 0.004);\n    \n    \n    col += smoothstep(fwidth(uv.y),0.,sd);\n    \n    col = 1.-col;\n    col = pow(col,vec3(0.454545));\n    C = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}