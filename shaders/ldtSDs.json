{
    "Shader": {
        "info": {
            "date": "1462287902",
            "description": "two lines hue rotation",
            "flags": 0,
            "hasliked": 0,
            "id": "ldtSDs",
            "likes": 3,
            "name": "two lines hue rotation",
            "published": 3,
            "tags": [
                "hueshift",
                "huerotation"
            ],
            "usePreview": 0,
            "username": "BeRo",
            "viewed": 782
        },
        "renderpass": [
            {
                "code": "vec3 rgb2hsv(vec3 c){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 hueRotation(vec3 c, float hueRotationAngle){ // <= this is the two lines hue rotation routine  \n    // By Benjamin 'BeRo' Rosseaux, CC0 licensed \n    vec3 hueRotationValues = vec3(0.57735, sin(vec2(radians(hueRotationAngle)) + vec2(0.0, 1.57079632679)));\n    return mix(hueRotationValues.xxx * dot(hueRotationValues.xxx, c), c, hueRotationValues.z) + (cross(hueRotationValues.xxx, c) * hueRotationValues.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec3 c = texture(iChannel0, uv).xyz;\n   \n   \n  float hueRotationAngle = iTime * 180.0;\n      \n  c = (abs(fragCoord.x - (iResolution.x * 0.5)) < 1.0) ?\n        vec3(1.0) :\n        ((fragCoord.x < (iResolution.x * 0.5)) ?\n           hsv2rgb(rgb2hsv(c.xyz) + vec3(hueRotationAngle / 360.0, 0.0, 0.0)) : \n           hueRotation(c, hueRotationAngle));\n    \n  fragColor = vec4(c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}