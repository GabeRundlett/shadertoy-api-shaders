{
    "Shader": {
        "info": {
            "date": "1695555999",
            "description": "based on: https://www.youtube.com/watch?v=f4s1h2YETNY",
            "flags": 0,
            "hasliked": 0,
            "id": "cdccWf",
            "likes": 0,
            "name": "exp001",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "bszmihaly",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "vec3 palette(float t)\n{\n\tvec3 a = vec3(1.188, -0.062, 1.228);\n\tvec3 b = vec3(-0.483, 0.722, -0.775);\n\tvec3 c = vec3(1.090, -0.399, 0.457);\n\tvec3 d = vec3(0.498, 0.358, 1.028);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n  \tvec2 uv0 = uv;\n  \tvec3 finalColor = vec3(0.0);\n  \t\n  \tfor (float i = 0.0; i < 3.0; i++){\n  \t\n  \t\tuv = fract(uv * 1.75) - 0.5;\n  \t\n  \t\tfloat d = length(uv) * exp(-length(uv0));\n  \t\n  \t\tvec3 col = palette(length(uv0) + i*0.3 + iTime/2.0);\n  \t\n  \t\td = sin(d*8.0 + iTime)/8.0;\n  \t\td = abs(d);\n  \t\n  \t\td = pow(0.0075/d, 1.2);\n  \t\n   \t\tfinalColor += col * d;\n  \t}\n  \t\n  \t\n\tfragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}