{
    "Shader": {
        "info": {
            "date": "1725112566",
            "description": "test",
            "flags": 0,
            "hasliked": 0,
            "id": "4fjfzG",
            "likes": 1,
            "name": "shshshshshok",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "zannis",
            "viewed": 68
        },
        "renderpass": [
            {
                "code": "mat2 rot2D(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdSphere(vec3 p, float r) {\n    return length(p) - r;\n}\n\nfloat sdBox(vec3 p, vec3 box) {\n    vec3 q = abs(p) - box;\n    return length(max(q,0.)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\n\nfloat map2(vec3 p) {\n    p.z += iTime * 0.4; // move boxes towards the camera\n    \n    \n    //p.z = mod(p.z, .25) - .125;\n    p =  fract(p) - .5; // repeat through space\n    \n    float box = sdBox(p, vec3(.1));\n    \n    return box;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n     \n     // initialization\n     vec3 ro = vec3(0,0,0); // ray origin\n     vec3 rd = normalize(vec3(uv,1)); // ray direction\n     vec3 col = vec3(0);\n \n    float t = 0.;\n    \n    // ray marching\n    for (int i = 0; i < 80; i++) {\n    \n    vec3 p = ro + rd * t; // position along the ray\n    \n    p.xy *= rot2D(t*.2);\n    p.y -= cos(t) * 0.5;\n    \n    float d = map2(p); // current distance to the scene\n    \n    t += d;  // marching\n    \n    if (d < 0.001) break; // early exit if close enough to an object\n    if (t > 100.) break;  // early exit if too far\n }\n\n    col = palette(t, vec3(.5), vec3(0.5), vec3(0.5), vec3(0.5));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}