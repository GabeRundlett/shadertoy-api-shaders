{
    "Shader": {
        "info": {
            "date": "1641767804",
            "description": "some shift set interferences",
            "flags": 0,
            "hasliked": 0,
            "id": "NdfczN",
            "likes": 5,
            "name": "sin * cos & sin + cos",
            "published": 3,
            "tags": [
                "interference"
            ],
            "usePreview": 0,
            "username": "samuelotherion",
            "viewed": 302
        },
        "renderpass": [
            {
                "code": "#define V1 float\n#define V2 vec2\n#define V3 vec3\n#define V4 vec4\n\n#define T iTime\n#define R iResolution.xy\n#define D ( 1. / R )\n\nV1\n  amp   = .4,\n  count = 4.,\n  A     = 40.,\n  S     = .010,\n  C     = .011;\nV4 rct = V4( -6.28, -3., 2. * 6.28, 5. );\n\nV2 cvt( V2 p ) { return rct.xy + ( p * D ) * rct.zw; }\n\n\nV1 fct( V1 x, int id, float count ) {\n    \n    V1\n    s1 = sin(S * T),\n    c1 = cos(C * T),\n    s2 = sin(A * x * s1),\n    c2 = cos(A * x * c1);\n    \n    return\n        id < 2\n        \t? id < 1\n        \t\t? +0.5 + amp * c2\n        \t\t: -0.5 + amp * s2\n        \t: id < 3\n        \t\t? -2.0 + amp * (c2 + s2)\n                : +1.5 + amp * c2 * s2;\n}\n\nV4 plt( V2 p, int id, float count ) {\n    \n    V1 f0 = fct( p.x ,id, count );\n    \n    V2 df = V2( D.x, .125 * ( fct( p.x + 4. * D.x, id, count ) - fct( p.x - 4. * D.x, id, count ) ) ),\n       dy = V2( 0, p.y - f0 ),\n       p1 = p - V2( p.x, f0 ) - df * dot( df, dy ) / dot( df, df );\n    \n    V1 l = length( p1 );\n    \n    return smoothstep( 1., 0., l * .1 * R.y ) * (\n        id < 2\n        \t? id < 1\n        \t\t? V4( 1., 0.0, 0.0,  1. )\n        \t\t: V4( 0.0, 1., 0.0,  1. )\n        \t: id < 3\n        \t\t? V4( 1., .75, .0,  1. )\n        \t\t: V4( 0.1, 0.3, 1.,  1. )\n    \t);\n}\n\n\nvoid mainImage( out V4 o, V2 i ) {\n    \n    i = cvt( i );\n    \n    o = plt( i, 0, count );\n        \n    for( int j = 1; j < int( count ); ++ j ) {\n        \n        o += plt( i, j, count );\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}