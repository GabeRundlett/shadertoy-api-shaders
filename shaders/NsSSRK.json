{
    "Shader": {
        "info": {
            "date": "1620523568",
            "description": "Apply least-squares fitting to Wolfram language color schemes.\n[url]https://harry7557558.github.io/Graphics/UI/color_functions/[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "NsSSRK",
            "likes": 29,
            "name": "Mathematica Color Schemes",
            "published": 3,
            "tags": [
                "color",
                "palette",
                "cosine",
                "polynomial",
                "leastsquare"
            ],
            "usePreview": 0,
            "username": "harry7557558",
            "viewed": 600
        },
        "renderpass": [
            {
                "code": "// Wolfram Language Color Schemes (least square fitting)\n\n// Apply least square fitting to color images downloaded from\n// https://reference.wolfram.com/language/guide/ColorSchemes.html\n\n// Curve fitting code (check the .py files):\n// https://github.com/harry7557558/Graphics/tree/master/UI/color_functions\n\n// Each color scheme is fitted to three functions:\n\n// `P`: Polynomial functions of varying degree;\n// `T`: Functions in the form color(x)=c₀+c₁⋅x+a₀⋅cos(π⋅x-u₀)+∑ₖ[aₖ⋅cos(2kπ⋅x-uₖ)];\n// `C`: Functions in the form color(t)=a+b*t+c*cos(d*t+e), inspired by iq's cosine color palette article;\n\n// Coefficients for `cosine` are computed numerically and may not be optimal. \n\n// For a better visual comparison of the three color functions,\n// go to https://harry7557558.github.io/Graphics/UI/color_functions/\n\n// Disclaimer: I’m not related to Wolfram in anyway. Wolfram reserves the rights of these color schemes.\n\n\n/* ====================== polynomial color functions ====================== */\n\nvec3 AlpineColorsP(float t) {\n    return clamp((((vec3(0,0,-2.66)*t+vec3(0,0,4.45))*t+vec3(.61,.5,-.91))*t+vec3(.15,.09,-.5))*t+vec3(.27,.4,.51),0.,1.);\n}\nvec3 LakeColorsP(float t) {\n    return clamp(((vec3(0,0,1.02)*t+vec3(-.21,-.93,-2.57))*t+vec3(.85,1.81,1.9))*t+vec3(.29,.02,.49),0.,1.);\n}\nvec3 ArmyColorsP(float t) {\n    return clamp(((vec3(0,1.1,0)*t+vec3(.13,-1.17,.65))*t+vec3(.18,.29,-.5))*t+vec3(.45,.58,.51),0.,1.);\n}\nvec3 MintColorsP(float t) {\n    return clamp((vec3(-.58,-.37,-.55)*t+vec3(1.04,.01,.7))*t+vec3(.46,.97,.63),0.,1.);\n}\nvec3 AtlanticColorsP(float t) {\n    return clamp((((vec3(-.97,0,0)*t+vec3(1.5,-.85,-1.25))*t+vec3(-1.4,-.25,.41))*t+vec3(1.26,1.48,1.33))*t+vec3(.1,.12,.13),0.,1.);\n}\nvec3 NeonColorsP(float t) {\n    return clamp((((vec3(0,-3.39,-3.65)*t+vec3(0,5.26,7.87))*t+vec3(-.33,-1.04,-4.42))*t+vec3(.44,-1.62,.7))*t+vec3(.69,.95,.27),0.,1.);\n}\nvec3 AuroraColorsP(float t) {\n    return clamp((((vec3(6.62,2.78,-8.72)*t+vec3(-12.68,-9.91,17.42))*t+vec3(7.58,9,-10.1))*t+vec3(-.87,-1.95,2.11))*t+vec3(.25,.31,.24),0.,1.);\n}\nvec3 PearlColorsP(float t) {\n    return clamp((((vec3(-4.27,-4.24,-6.53)*t+vec3(10.54,10.44,14.12))*t+vec3(-7.15,-7.65,-9.04))*t+vec3(.94,1.44,1.66))*t+vec3(.89,.82,.76),0.,1.);\n}\nvec3 AvocadoColorsP(float t) {\n    return clamp(((vec3(-1.86,1.04,0)*t+vec3(3.64,-2.34,.03))*t+vec3(-.83,2.33,.17))*t+vec3(.03,-.03,.01),0.,1.);\n}\nvec3 PlumColorsP(float t) {\n    return clamp(((vec3(3.19,0,-2)*t+vec3(-4.92,.8,2.23))*t+vec3(2.7,.03,.17))*t+vec3(-.03,.04,0),0.,1.);\n}\nvec3 BeachColorsP(float t) {\n    return clamp((((vec3(4.55,3.94,-4.62)*t+vec3(-6.3,-5.4,7.53))*t+vec3(1.93,1.2,-2.6))*t+vec3(.01,.8,.42))*t+vec3(.86,.5,.25),0.,1.);\n}\nvec3 RoseColorsP(float t) {\n    return clamp((((vec3(4.77,4.06,0)*t+vec3(-9.87,-8.77,0))*t+vec3(5.17,4.81,-1.2))*t+vec3(.48,-.29,1.24))*t+vec3(.16,.32,.04),0.,1.);\n}\nvec3 CandyColorsP(float t) {\n    return clamp((((vec3(2.68,0,0)*t+vec3(-3.42,-1.41,-2.02))*t+vec3(-.7,2.18,2.86))*t+vec3(1.75,-.12,-.32))*t+vec3(.38,.2,.35),0.,1.);\n}\nvec3 SolarColorsP(float t) {\n    return clamp(((vec3(.88,-1.16,0)*t+vec3(-2.29,1.87,.16))*t+vec3(1.97,.08,-.03))*t+vec3(.44,.01,.01),0.,1.);\n}\nvec3 CMYKColorsP(float t) {\n    return clamp((((vec3(-2.95,-8.11,-11.92)*t+vec3(2.91,8.04,21.96))*t+vec3(-2.1,1.3,-12.03))*t+vec3(2,-2.05,1.26))*t+vec3(.27,.82,.88),0.,1.);\n}\nvec3 SouthwestColorsP(float t) {\n    return clamp((((vec3(-1.65,5.87,16.25)*t+vec3(1.99,-14.14,-30.02))*t+vec3(-1.92,9.87,17.36))*t+vec3(1.45,-1.34,-2.91))*t+vec3(.43,.33,.27),0.,1.);\n}\nvec3 DeepSeaColorsP(float t) {\n    return clamp(((vec3(3.26,-1.4,0)*t+vec3(-3.94,2.65,-.74))*t+vec3(1.38,-.35,1.47))*t+vec3(.13,.02,.28),0.,1.);\n}\nvec3 StarryNightColorsP(float t) {\n    return clamp(((vec3(-1.92,-1.39,-.77)*t+vec3(2.68,1.18,-.3))*t+vec3(.07,.84,1.22))*t+vec3(.11,.15,.18),0.,1.);\n}\nvec3 FallColorsP(float t) {\n    return clamp((((vec3(0,-5,0)*t+vec3(-1.21,9.93,0))*t+vec3(1.97,-5.2,.44))*t+vec3(-.06,.67,-.54))*t+vec3(.29,.38,.38),0.,1.);\n}\nvec3 SunsetColorsP(float t) {\n    return clamp((((vec3(4.93,0,-14.8)*t+vec3(-8.68,-1.09,36.43))*t+vec3(2.56,1.85,-27.3))*t+vec3(2.25,.22,6.77))*t+vec3(-.02,.03,-.1),0.,1.);\n}\nvec3 FruitPunchColorsP(float t) {\n    return clamp((((vec3(0,3.2,-5.66)*t+vec3(.99,-4.45,7.54))*t+vec3(-.63,.35,-1.47))*t+vec3(-.39,.78,.09))*t+vec3(1.03,.49,-0),0.,1.);\n}\nvec3 ThermometerColorsP(float t) {\n    return clamp((((vec3(3.75,5.74,0)*t+vec3(-9.01,-10.57,1.63))*t+vec3(4.86,2.57,-3.87))*t+vec3(.78,2.25,1.61))*t+vec3(.15,.1,.77),0.,1.);\n}\nvec3 IslandColorsP(float t) {\n    return clamp((((vec3(7.05,0,0)*t+vec3(-18.07,0,1.42))*t+vec3(14.48,-1.38,-4.68))*t+vec3(-3.6,1.73,3.34))*t+vec3(.8,.4,.22),0.,1.);\n}\nvec3 WatermelonColorsP(float t) {\n    return clamp((((vec3(0,0,-4.28)*t+vec3(-1.21,-1.96,4.77))*t+vec3(1.21,.6,-1.17))*t+vec3(.78,1.6,.9))*t+vec3(.13,.11,.09),0.,1.);\n}\nvec3 BrassTonesP(float t) {\n    return clamp((((vec3(3.34,3.34,1.86)*t+vec3(-6.77,-6.91,-3.96))*t+vec3(1.16,1.73,1.2))*t+vec3(2.35,1.89,.93))*t+vec3(.09,.11,.03),0.,1.);\n}\nvec3 GreenPinkTonesP(float t) {\n    return clamp((((vec3(11.14,6.54,9.33)*t+vec3(-29.11,-6.8,-25.28))*t+vec3(21.17,-4.06,18.64))*t+vec3(-3.07,4.27,-2.6))*t+vec3(.08,.19,.11),0.,1.);\n}\nvec3 BrownCyanTonesP(float t) {\n    return clamp(((vec3(.97,-1.01,-1.33)*t+vec3(-3.47,-.32,.26))*t+vec3(2.52,1.78,1.77))*t+vec3(.3,.19,.07),0.,1.);\n}\nvec3 PigeonTonesP(float t) {\n    return clamp((((vec3(-4.68,-3.16,-3.96)*t+vec3(8.84,6.49,8.27))*t+vec3(-4.7,-3.97,-5.14))*t+vec3(1.36,1.5,1.65))*t+vec3(.17,.15,.19),0.,1.);\n}\nvec3 CherryTonesP(float t) {\n    return clamp(((vec3(2,0,0)*t+vec3(-4.02,1.15,1.12))*t+vec3(2.83,-.3,-.27))*t+vec3(.21,.19,.19),0.,1.);\n}\nvec3 RedBlueTonesP(float t) {\n    return clamp((((vec3(5.28,5.07,0)*t+vec3(-9.7,-11.42,-2.29))*t+vec3(3.1,5.87,1.99))*t+vec3(.99,.66,.6))*t+vec3(.46,.15,.21),0.,1.);\n}\nvec3 CoffeeTonesP(float t) {\n    return clamp((((vec3(0,0,-3.64)*t+vec3(0,.75,9.28))*t+vec3(-.31,-.86,-6.4))*t+vec3(.85,.79,1.53))*t+vec3(.43,.34,.24),0.,1.);\n}\nvec3 RustTonesP(float t) {\n    return clamp((((vec3(3.72,0,0)*t+vec3(-7.43,0,0))*t+vec3(3.71,-.49,.16))*t+vec3(1.02,.97,-.32))*t+vec3(.01,-.02,.2),0.,1.);\n}\nvec3 FuchsiaTonesP(float t) {\n    return clamp(((vec3(0,-1.11,0)*t+vec3(-.64,1.97,-.46))*t+vec3(1.55,-.04,1.38))*t+vec3(.07,.13,.07),0.,1.);\n}\nvec3 SiennaTonesP(float t) {\n    return clamp(((vec3(.93,-.8,-1.35)*t+vec3(-2.32,.94,2.5))*t+vec3(1.86,.56,-.44))*t+vec3(.44,.18,.09),0.,1.);\n}\nvec3 GrayTonesP(float t) {\n    return clamp((vec3(.39,.26,.11)*t+vec3(.47,.59,.68))*t+vec3(.1,.1,.11),0.,1.);\n}\nvec3 ValentineTonesP(float t) {\n    return clamp((vec3(-.07,.45,.3)*t+vec3(.56,.34,.44))*t+vec3(.51,.09,.18),0.,1.);\n}\nvec3 GrayYellowTonesP(float t) {\n    return clamp(((vec3(-1.57,-2.08,-3.17)*t+vec3(1.79,2.16,2.8))*t+vec3(.52,.42,.3))*t+vec3(.18,.22,.31),0.,1.);\n}\nvec3 DarkTerrainP(float t) {\n    return clamp((((vec3(0,2.38,4.4)*t+vec3(4.05,1.4,-3.2))*t+vec3(-5.9,-5.75,-1.04))*t+vec3(2.92,3,.48))*t+vec3(-.04,.04,.45),0.,1.);\n}\nvec3 LightTerrainP(float t) {\n    return clamp(((vec3(-1.35,-1.85,-1.86)*t+vec3(1.98,3.21,4.13))*t+vec3(-.29,-1.25,-2.23))*t+vec3(.54,.78,.86),0.,1.);\n}\nvec3 GreenBrownTerrainP(float t) {\n    return clamp((((vec3(5.66,6.03,0)*t+vec3(-9.79,-7.78,5.38))*t+vec3(4.02,.54,-7.66))*t+vec3(1.13,2.27,3.32))*t+vec3(-0,-.02,-.05),0.,1.);\n}\nvec3 SandyTerrainP(float t) {\n    return clamp((((vec3(3.48,4.39,0)*t+vec3(-7.65,-8.69,0))*t+vec3(3.48,3.53,-.49))*t+vec3(.27,.83,.43))*t+vec3(.68,.3,.2),0.,1.);\n}\nvec3 BrightBandsP(float t) {\n    return clamp((((vec3(-16.63,6.8,-8.13)*t+vec3(28.73,-14.81,26.66))*t+vec3(-12.13,8.23,-27.59))*t+vec3(-.11,.17,9.55))*t+vec3(.98,.23,-.04),0.,1.);\n}\nvec3 DarkBandsP(float t) {\n    return clamp((((vec3(17.15,-2.97,-5.17)*t+vec3(-33.07,6.52,5.24))*t+vec3(20.27,-3.03,2.06))*t+vec3(-3.87,-.41,-2.81))*t+vec3(.68,.81,1),0.,1.);\n}\nvec3 AquamarineP(float t) {\n    return clamp(((vec3(2.66,1.62,1.39)*t+vec3(-3.77,-2.42,-1.78))*t+vec3(1.1,.82,.41))*t+vec3(.67,.73,.84),0.,1.);\n}\nvec3 PastelP(float t) {\n    return clamp((((vec3(0,0,-6.39)*t+vec3(-1.54,-1.64,11.82))*t+vec3(.75,1.3,-4.98))*t+vec3(.41,.52,-.49))*t+vec3(.77,.5,.98),0.,1.);\n}\nvec3 BlueGreenYellowP(float t) {\n    return clamp((vec3(1.4,-.82,-.63)*t+vec3(-.63,1.69,.52))*t+vec3(.15,.01,.42),0.,1.);\n}\nvec3 RainbowP(float t) {\n    return clamp((((vec3(0,1.63,-8.06)*t+vec3(-4.42,-4.94,20.35))*t+vec3(7.09,1.89,-17.07))*t+vec3(-2.3,1.49,4.45))*t+vec3(.46,.04,.45),0.,1.);\n}\nvec3 DarkRainbowP(float t) {\n    return clamp((((vec3(2.62,6.12,-2.34)*t+vec3(-9.73,-15.58,2.43))*t+vec3(9.43,10.93,1.04))*t+vec3(-2.02,-1.77,-1.62))*t+vec3(.33,.41,.65),0.,1.);\n}\nvec3 TemperatureMapP(float t) {\n    return clamp((((vec3(5.84,0,11.29)*t+vec3(-11.36,-2.4,-19.02))*t+vec3(4.9,.36,7.83))*t+vec3(1.31,1.84,-.76))*t+vec3(.16,.28,.95),0.,1.);\n}\nvec3 LightTemperatureMapP(float t) {\n    return clamp((((vec3(4.11,0,5.78)*t+vec3(-8.72,0,-10.5))*t+vec3(4.23,-2.77,4.36))*t+vec3(1.04,2.85,-.37))*t+vec3(.18,.27,.95),0.,1.);\n}\n\n\n/* ====================== trigonometric series color functions ====================== */\n\nvec3 AlpineColorsT(float x) {\n    return clamp(vec3(.39,.2,.73)+vec3(.51,.98,-.01)*x+vec3(.18,.2,.35)*cos(3.14*x+vec3(2.18,.66,2.16)),0.,1.);\n}\nvec3 LakeColorsT(float x) {\n    return clamp(vec3(.25,.14,.27)+vec3(.74,.68,.8)*x+vec3(.06,.24,.34)*cos(3.14*x+vec3(-.92,-1.93,-.83)),0.,1.);\n}\nvec3 ArmyColorsT(float x) {\n    return clamp(vec3(.37,.33,.41)+vec3(.46,.71,.32)*x+vec3(.07,.27,.17)*cos(3.14*x+vec3(.44,.44,1.14)),0.,1.);\n}\nvec3 MintColorsT(float x) {\n    return clamp(vec3(.47,.99,.64)+vec3(.44,-.38,.14)*x+vec3(.14,.09,.13)*cos(3.14*x+vec3(-1.64,-1.67,-1.61)),0.,1.);\n}\nvec3 AtlanticColorsT(float x) {\n    return clamp(vec3(1.61,.32,.41)+vec3(-2.72,.01,-.05)*x+vec3(1.55,.42,.45)*cos(3.14*x+vec3(-2.94,-2.03,-2.23))+vec3(.28,0,0)*cos(6.28*x+vec3(-1.39,0,0)),0.,1.);\n}\nvec3 NeonColorsT(float x) {\n    return clamp(vec3(.83,-.12,.53)+vec3(-.15,1.19,-.19)*x+vec3(.14,.95,.34)*cos(3.14*x+vec3(-2.51,.08,2.89))+vec3(0,.26,.12)*cos(6.28*x+vec3(0,1.26,-.8)),0.,1.);\n}\nvec3 AuroraColorsT(float x) {\n    return clamp(vec3(1.18,1.25,.02)+vec3(-.83,-2.02,.71)*x+vec3(.83,1.01,.26)*cos(3.14*x+vec3(2.62,-2.87,-1.55))+vec3(.26,0,.24)*cos(6.28*x+vec3(-2.45,0,.01)),0.,1.);\n}\nvec3 PearlColorsT(float x) {\n    return clamp(vec3(.5,.16,.07)+vec3(.94,1.11,1.27)*x+vec3(.55,.56,.54)*cos(3.14*x+vec3(.64,-.11,-.29))+vec3(0,.11,.18)*cos(6.28*x+vec3(0,.22,.31)),0.,1.);\n}\nvec3 AvocadoColorsT(float x) {\n    return clamp(vec3(.43,-.25,-.11)+vec3(.14,1.48,.44)*x+vec3(.46,.3,.1)*cos(3.14*x+vec3(2.68,-.69,.06)),0.,1.);\n}\nvec3 PlumColorsT(float x) {\n    return clamp(vec3(-.73,-.19,.45)+vec3(2.37,1.27,-.47)*x+vec3(.71,.26,.48)*cos(3.14*x+vec3(-.05,.83,-2.75)),0.,1.);\n}\nvec3 BeachColorsT(float x) {\n    return clamp(vec3(.33,.03,.54)+vec3(1.52,1.69,-.06)*x+vec3(.78,.62,.41)*cos(3.14*x+vec3(.53,.36,-2.94))+vec3(.15,.12,.12)*cos(6.28*x+vec3(3.08,3.09,-.02)),0.,1.);\n}\nvec3 RoseColorsT(float x) {\n    return clamp(vec3(.3,.43,.11)+vec3(.49,-.48,-.07)*x+vec3(.12,.37,.3)*cos(3.14*x+vec3(-1.85,-1.98,-1.72))+vec3(.11,0,0)*cos(6.28*x+vec3(3.07,0,0)),0.,1.);\n}\nvec3 CandyColorsT(float x) {\n    return clamp(vec3(-.07,.51,.8)+vec3(1.17,.04,-.38)*x+vec3(.53,.31,.45)*cos(3.14*x+vec3(-.61,3.09,-3.05)),0.,1.);\n}\nvec3 SolarColorsT(float x) {\n    return clamp(vec3(.26,.27,.06)+vec3(.95,.29,.02)*x+vec3(.31,.26,.06)*cos(3.14*x+vec3(-.87,3.01,2.45)),0.,1.);\n}\nvec3 CMYKColorsT(float x) {\n    return clamp(vec3(1.55,-1.73,1.39)+vec3(-3.03,3.26,-2.95)*x+vec3(1.77,2.22,1.53)*cos(3.14*x+vec3(-2.51,-.53,-2.35))+vec3(.22,.85,.55)*cos(6.28*x+vec3(-.72,1.03,-.21))+vec3(0,.05,.06)*cos(12.57*x+vec3(0,.11,.46)),0.,1.);\n}\nvec3 SouthwestColorsT(float x) {\n    return clamp(vec3(-1.09,.99,-.13)+vec3(2.73,-.78,2.44)*x+vec3(1.51,.53,1.46)*cos(3.14*x+vec3(-.43,3.12,.93))+vec3(.34,.14,.51)*cos(6.28*x+vec3(1.29,3.14,3.02)),0.,1.);\n}\nvec3 DeepSeaColorsT(float x) {\n    return clamp(vec3(-.6,.32,.35)+vec3(2.14,.28,.6)*x+vec3(.76,.34,.19)*cos(3.14*x+vec3(.31,2.74,-1.85)),0.,1.);\n}\nvec3 StarryNightColorsT(float x) {\n    return clamp(vec3(.54,.47,.37)+vec3(-.01,.02,-.19)*x+vec3(.43,.38,.39)*cos(3.14*x+vec3(-3.04,-2.53,-2.02)),0.,1.);\n}\nvec3 FallColorsT(float x) {\n    return clamp(vec3(.56,.27,.48)+vec3(.16,.39,-.31)*x+vec3(.27,.01,.14)*cos(3.14*x+vec3(3,2.95,2.25))+vec3(0,.12,0)*cos(6.28*x+vec3(0,.01,0)),0.,1.);\n}\nvec3 SunsetColorsT(float x) {\n    return clamp(vec3(1,.27,.14)+vec3(-.81,.5,-.07)*x+vec3(.94,.25,.67)*cos(3.14*x+vec3(-2.85,2.92,-2.58))+vec3(.25,0,.58)*cos(6.28*x+vec3(-1.98,0,-.86))+vec3(0,0,.06)*cos(12.57*x+vec3(0,0,-1.68)),0.,1.);\n}\nvec3 FruitPunchColorsT(float x) {\n    return clamp(vec3(.81,.03,.74)+vec3(.4,.75,-1.31)*x+vec3(.3,.48,.97)*cos(3.14*x+vec3(.76,-.44,-2.78))+vec3(0,0,.17)*cos(6.28*x+vec3(0,0,-.08)),0.,1.);\n}\nvec3 ThermometerColorsT(float x) {\n    return clamp(vec3(.45,-.14,.43)+vec3(-.28,.38,.1)*x+vec3(.63,.86,.5)*cos(3.14*x+vec3(-2.12,-1.34,-.76)),0.,1.);\n}\nvec3 IslandColorsT(float x) {\n    return clamp(vec3(2.03,.25,-1.17)+vec3(-2.23,.69,2.65)*x+vec3(1.09,.36,1.51)*cos(3.14*x+vec3(2.86,-1.17,-.58))+vec3(.2,0,.21)*cos(6.28*x+vec3(-2.98,0,1.09)),0.,1.);\n}\nvec3 WatermelonColorsT(float x) {\n    return clamp(vec3(.25,.42,.81)+vec3(.26,-.66,-1.54)*x+vec3(.47,.96,1.13)*cos(3.14*x+vec3(-2.17,-2.07,-2.47))+vec3(.11,.12,.17)*cos(6.28*x+vec3(.01,-.03,-.05)),0.,1.);\n}\nvec3 BrassTonesT(float x) {\n    return clamp(vec3(-1.03,-.89,.07)+vec3(2.84,2.55,-.07)*x+vec3(1.45,1.3,.38)*cos(3.14*x+vec3(-.26,-.24,-1.7))+vec3(.36,.34,0)*cos(6.28*x+vec3(2.08,2.1,0))+vec3(.08,.07,0)*cos(12.57*x+vec3(2.19,2.17,0)),0.,1.);\n}\nvec3 GreenPinkTonesT(float x) {\n    return clamp(vec3(-3.25,3.08,-3.34)+vec3(6.9,-6.12,6.89)*x+vec3(3.37,3.09,3.41)*cos(3.14*x+vec3(-.17,-2.85,-.22))+vec3(1.01,.89,.99)*cos(6.28*x+vec3(1.7,-1.51,1.61))+vec3(.11,.08,.1)*cos(12.57*x+vec3(1.25,-.96,1.12)),0.,1.);\n}\nvec3 BrownCyanTonesT(float x) {\n    return clamp(vec3(.11,.44,.38)+vec3(.45,.01,.11)*x+vec3(.53,.5,.51)*cos(3.14*x+vec3(-1.15,-2.04,-2.18)),0.,1.);\n}\nvec3 PigeonTonesT(float x) {\n    return clamp(vec3(.72,.15,.66)+vec3(-.52,.94,-.32)*x+vec3(.67,.1,.56)*cos(3.14*x+vec3(-2.92,1.13,-2.92))+vec3(.17,0,.16)*cos(6.28*x+vec3(-.69,0,-.85)),0.,1.);\n}\nvec3 CherryTonesT(float x) {\n    return clamp(vec3(-.22,.34,.36)+vec3(1.7,.51,.47)*x+vec3(.51,.31,.31)*cos(3.14*x+vec3(-.5,2.03,2.1)),0.,1.);\n}\nvec3 RedBlueTonesT(float x) {\n    return clamp(vec3(-.19,1.25,.74)+vec3(1.15,-1.86,-.7)*x+vec3(.81,1.09,.62)*cos(3.14*x+vec3(-.46,-2.73,-2.54))+vec3(.14,.16,0)*cos(6.28*x+vec3(2.33,-2.13,0)),0.,1.);\n}\nvec3 CoffeeTonesT(float x) {\n    return clamp(vec3(.31,.17,-.16)+vec3(.8,1.03,1.66)*x+vec3(.13,.18,.55)*cos(3.14*x+vec3(-.61,.39,.61)),0.,1.);\n}\nvec3 RustTonesT(float x) {\n    return clamp(vec3(.12,-.01,.19)+vec3(.96,.47,-.15)*x+vec3(.06,.12,.04)*cos(3.14*x+vec3(-1.97,-1.59,1.54))+vec3(.09,0,0)*cos(6.28*x+vec3(-3.09,0,0)),0.,1.);\n}\nvec3 FuchsiaTonesT(float x) {\n    return clamp(vec3(.21,.38,.23)+vec3(.66,.33,.63)*x+vec3(.19,.26,.16)*cos(3.14*x+vec3(-2.17,2.84,-2.4)),0.,1.);\n}\nvec3 SiennaTonesT(float x) {\n    return clamp(vec3(.24,.36,.38)+vec3(.89,.34,.12)*x+vec3(.3,.19,.32)*cos(3.14*x+vec3(-.82,-2.8,2.77)),0.,1.);\n}\nvec3 GrayTonesT(float x) {\n    return clamp(vec3(.2,.16,.11)+vec3(.65,.74,.79)*x+vec3(.13,.08,.03)*cos(3.14*x+vec3(2.31,2.16,1.59)),0.,1.);\n}\nvec3 ValentineTonesT(float x) {\n    return clamp(vec3(.63,.28,.38)+vec3(.23,.41,.34)*x+vec3(.11,.19,.18)*cos(3.14*x+vec3(-2.98,2.54,2.73)),0.,1.);\n}\nvec3 GrayYellowTonesT(float x) {\n    return clamp(vec3(.53,.69,1.04)+vec3(.05,-.41,-1.48)*x+vec3(.38,.52,.85)*cos(3.14*x+vec3(-2.77,-2.68,-2.55)),0.,1.);\n}\nvec3 DarkTerrainT(float x) {\n    return clamp(vec3(-.93,-.95,-.09)+vec3(2.85,3.2,2.08)*x+vec3(.9,1.14,1.11)*cos(3.14*x+vec3(.04,.27,.83))+vec3(0,.1,.21)*cos(6.28*x+vec3(0,-2.62,-2.66)),0.,1.);\n}\nvec3 LightTerrainT(float x) {\n    return clamp(vec3(.84,1.18,1.26)+vec3(-.25,-.71,-.79)*x+vec3(.3,.42,.52)*cos(3.14*x+vec3(-3.1,2.89,2.48)),0.,1.);\n}\nvec3 GreenBrownTerrainT(float x) {\n    return clamp(vec3(-.46,-.72,-1.24)+vec3(2.2,2.76,3.41)*x+vec3(.59,.88,1.2)*cos(3.14*x+vec3(.15,.19,.08))+vec3(.15,.16,0)*cos(6.28*x+vec3(2.83,-3.03,0)),0.,1.);\n}\nvec3 SandyTerrainT(float x) {\n    return clamp(vec3(-.27,.24,.14)+vec3(1.57,.1,.09)*x+vec3(1.03,.48,.13)*cos(3.14*x+vec3(-.38,-1.53,-1.11))+vec3(.22,0,0)*cos(6.28*x+vec3(1.79,0,0)),0.,1.);\n}\nvec3 BrightBandsT(float x) {\n    return clamp(vec3(-10.69,-13.44,-14.93)+vec3(23.11,28.36,31.5)*x+vec3(11.44,13.75,15.46)*cos(3.14*x+vec3(.02,0,.02))+vec3(2.54,2.84,2.76)*cos(6.28*x+vec3(1.49,1.66,1.68))+vec3(.2,.19,.36)*cos(12.57*x+vec3(1.91,1.75,2.05)),0.,1.);\n}\nvec3 DarkBandsT(float x) {\n    return clamp(vec3(19.05,22.62,-12.71)+vec3(-36.56,-43.6,26.79)*x+vec3(18.26,21.63,13.6)*cos(3.14*x+vec3(3.13,3.13,.01))+vec3(3.78,4.47,3.04)*cos(6.28*x+vec3(-1.6,-1.56,1.56))+vec3(.32,.41,.31)*cos(12.57*x+vec3(-1.2,-1.57,1.66)),0.,1.);\n}\nvec3 AquamarineT(float x) {\n    return clamp(vec3(.08,.37,.54)+vec3(1.16,.74,.63)*x+vec3(.59,.36,.32)*cos(3.14*x+vec3(.09,.01,.23)),0.,1.);\n}\nvec3 PastelT(float x) {\n    return clamp(vec3(1.13,.89,-1.28)+vec3(-1.06,-.57,3.61)*x+vec3(.51,.47,1.84)*cos(3.14*x+vec3(-2.31,-2.49,-.2))+vec3(0,0,.54)*cos(6.28*x+vec3(0,0,.87))+vec3(0,0,.07)*cos(12.57*x+vec3(0,0,.6)),0.,1.);\n}\nvec3 BlueGreenYellowT(float x) {\n    return clamp(vec3(.01,-.09,.22)+vec3(1,1.09,.31)*x+vec3(.35,.22,.23)*cos(3.14*x+vec3(1.29,-1.14,-.72)),0.,1.);\n}\nvec3 RainbowT(float x) {\n    return clamp(vec3(1.42,1.64,-.15)+vec3(-1.57,-3.2,.38)*x+vec3(.99,1.76,.77)*cos(3.14*x+vec3(3.03,-2.71,-1.05))+vec3(0,.24,.28)*cos(6.28*x+vec3(0,-1.44,-.39)),0.,1.);\n}\nvec3 DarkRainbowT(float x) {\n    return clamp(vec3(-2.48,-1.09,-1.47)+vec3(6.03,3.61,3.66)*x+vec3(2.74,1.88,2)*cos(3.14*x+vec3(-.01,.18,.02))+vec3(.73,.6,.49)*cos(6.28*x+vec3(1.65,2.19,1.47))+vec3(0,.06,0)*cos(12.57*x+vec3(0,-2.77,0)),0.,1.);\n}\nvec3 TemperatureMapT(float x) {\n    return clamp(vec3(1.23,.85,2.05)+vec3(-1.23,-1.25,-3.22)*x+vec3(.96,.95,1.27)*cos(3.14*x+vec3(-2.87,-2.17,-2.84))+vec3(.23,0,.39)*cos(6.28*x+vec3(-2.13,0,-1.56))+vec3(0,0,.09)*cos(12.57*x+vec3(0,0,-.03)),0.,1.);\n}\nvec3 LightTemperatureMapT(float x) {\n    return clamp(vec3(-.33,.27,1.48)+vec3(1.85,.15,-1.54)*x+vec3(.62,.67,.39)*cos(3.14*x+vec3(-.42,-1.52,-3.01))+vec3(.15,0,.18)*cos(6.28*x+vec3(2.12,0,-2.43)),0.,1.);\n}\n\n\n/* ====================== cosine color plaettes ====================== */\n\nvec3 AlpineColorsC(float t) {\n    return clamp(vec3(.34,.26,.43)+vec3(.56,.75,.3)*t+vec3(.15,.09,.17)*cos(vec3(3.47,4.56,4.86)*t+vec3(1.97,.16,1.11)),0.,1.);\n}\nvec3 LakeColorsC(float t) {\n    return clamp(vec3(.25,.13,.34)+vec3(.73,.67,.73)*t+vec3(.06,.25,.3)*cos(vec3(3.28,3.07,3.36)*t+vec3(-1,-1.9,-.98)),0.,1.);\n}\nvec3 ArmyColorsC(float t) {\n    return clamp(vec3(.43,.43,.89)+vec3(.3,.43,2.69)*t+vec3(.02,.14,3.54)*cos(vec3(12.93,4.13,.85)*t+vec3(.41,.06,1.68)),0.,1.);\n}\nvec3 MintColorsC(float t) {\n    return clamp(vec3(-.97,.7,.07)+vec3(.09,-.49,.08)*t+vec3(1.81,.45,.74)*cos(vec3(.82,1.32,1.24)*t+vec3(-.67,-.9,-.7)),0.,1.);\n}\nvec3 AtlanticColorsC(float t) {\n    return clamp(vec3(-.36,.31,.46)+vec3(-4.38,-.07,-.51)*t+vec3(7.37,.48,.75)*cos(vec3(.73,2.92,2.48)*t+vec3(-1.51,-1.96,-2.03)),0.,1.);\n}\nvec3 NeonColorsC(float t) {\n    return clamp(vec3(.77,.83,.14)+vec3(.07,-.79,.51)*t+vec3(.04,.14,.13)*cos(vec3(5.93,5.94,5.69)*t+vec3(2.73,.76,.06)),0.,1.);\n}\nvec3 AuroraColorsC(float t) {\n    return clamp(vec3(.21,.51,.17)+vec3(.59,-.23,.7)*t+vec3(.05,.28,.12)*cos(vec3(10.52,5.46,7.58)*t+vec3(1.43,2.47,-.64)),0.,1.);\n}\nvec3 PearlColorsC(float t) {\n    return clamp(vec3(.72,.78,.71)+vec3(.13,-.07,.15)*t+vec3(.2,.11,.11)*cos(vec3(5.4,6.57,7.19)*t+vec3(-.18,-.89,-.77)),0.,1.);\n}\nvec3 AvocadoColorsC(float t) {\n    return clamp(vec3(.65,-.68,-.01)+vec3(-.2,2.05,.25)*t+vec3(.65,.66,.02)*cos(vec3(2.76,2.28,5.9)*t+vec3(2.92,-.1,-1.25)),0.,1.);\n}\nvec3 PlumColorsC(float t) {\n    return clamp(vec3(-1.02,-2.84,2.04)+vec3(2.94,17.04,-4.71)*t+vec3(1.01,30.48,3.86)*cos(vec3(2.77,.544,1.48)*t+vec3(.15,1.478,-2.12)),0.,1.);\n}\nvec3 BeachColorsC(float t) {\n    return clamp(vec3(-40.16,.56,.15)+vec3(87.82,.36,.8)*t+vec3(202.13,.08,.1)*cos(vec3(.4371,7.61,6.82)*t+vec3(1.3668,-2.56,.38)),0.,1.);\n}\nvec3 RoseColorsC(float t) {\n    return clamp(vec3(.32,.48,.22)+vec3(.54,-.21,0)*t+vec3(.17,.17,.16)*cos(vec3(5.63,5.38,4.87)*t+vec3(-2.92,-2.92,-2.52)),0.,1.);\n}\nvec3 CandyColorsC(float t) {\n    return clamp(vec3(.43,19.47,.48)+vec3(.47,-36.59,.3)*t+vec3(.21,79.3,.17)*cos(vec3(4.93,.474,4.66)*t+vec3(-1.75,-1.816,2.53)),0.,1.);\n}\nvec3 SolarColorsC(float t) {\n    return clamp(vec3(-.33,.03,.17)+vec3(1.62,.73,-.13)*t+vec3(.78,.08,.16)*cos(vec3(2.09,5.13,2.13)*t+vec3(-.13,1.92,3.14)),0.,1.);\n}\nvec3 CMYKColorsC(float t) {\n    return clamp(vec3(21.34,.96,.86)+vec3(-109.66,-.7,-.54)*t+vec3(274.8,.36,.1)*cos(vec3(.4044,6.26,9.08)*t+vec3(-1.6474,1.69,-1.02)),0.,1.);\n}\nvec3 SouthwestColorsC(float t) {\n    return clamp(vec3(2.15,.44,.17)+vec3(-26.75,.3,.38)*t+vec3(51.14,.17,.12)*cos(vec3(.542,6.24,11.28)*t+vec3(-1.604,2.53,1.02)),0.,1.);\n}\nvec3 DeepSeaColorsC(float t) {\n    return clamp(vec3(-.45,.39,.22)+vec3(1.77,.17,.37)*t+vec3(.59,.4,.47)*cos(vec3(3.48,2.95,1.93)*t+vec3(.17,2.86,-1.41)),0.,1.);\n}\nvec3 StarryNightColorsC(float t) {\n    return clamp(vec3(.19,.49,.39)+vec3(.74,-.07,-.02)*t+vec3(.12,.43,.27)*cos(vec3(5.25,2.99,3.94)*t+vec3(2.27,-2.48,-2.33)),0.,1.);\n}\nvec3 FallColorsC(float t) {\n    return clamp(vec3(.21,.26,6.5)+vec3(.81,.4,-7.17)*t+vec3(.04,.12,12.76)*cos(vec3(8.62,6.28,.571)*t+vec3(-.26,.02,-2.069)),0.,1.);\n}\nvec3 SunsetColorsC(float t) {\n    return clamp(vec3(.14,-.05,-.07)+vec3(1.15,1.07,.73)*t+vec3(.27,.04,.32)*cos(vec3(5.06,7.88,7.07)*t+vec3(-2.21,.1,-1.2)),0.,1.);\n}\nvec3 FruitPunchColorsC(float t) {\n    return clamp(vec3(.89,.57,-.04)+vec3(-.02,-.09,.68)*t+vec3(.11,.14,.14)*cos(vec3(5.77,5.77,6.99)*t+vec3(-.21,-2.09,1.02)),0.,1.);\n}\nvec3 ThermometerColorsC(float t) {\n    return clamp(vec3(.45,.28,.46)+vec3(.12,.14,.05)*t+vec3(.39,.55,.48)*cos(vec3(4.18,4.18,3.22)*t+vec3(-2.51,-1.92,-.81)),0.,1.);\n}\nvec3 IslandColorsC(float t) {\n    return clamp(vec3(.67,-8.59,-35.37)+vec3(.12,8,32.87)*t+vec3(.14,12.2,68.16)*cos(vec3(7.54,.712,.508)*t+vec3(1.45,.746,1.022)),0.,1.);\n}\nvec3 WatermelonColorsC(float t) {\n    return clamp(vec3(8.38,6.22,80.01)+vec3(-23.7,-56.24,-209.12)*t+vec3(45.9,127.22,639.31)*cos(vec3(.542,.4551,.3292)*t+vec3(-1.752,-1.6188,-1.696)),0.,1.);\n}\nvec3 BrassTonesC(float t) {\n    return clamp(vec3(.16,.24,.12)+vec3(.07,0,-.04)*t+vec3(.73,.6,.31)*cos(vec3(3.31,3.49,3.55)*t+vec3(-1.67,-1.8,-1.89)),0.,1.);\n}\nvec3 GreenPinkTonesC(float t) {\n    return clamp(vec3(.53,.21,.6)+vec3(-.05,.51,-.21)*t+vec3(.55,.62,.57)*cos(vec3(5.5,4.82,5.27)*t+vec3(2.78,-1.55,2.86)),0.,1.);\n}\nvec3 BrownCyanTonesC(float t) {\n    return clamp(vec3(.2,-1.14,.59)+vec3(.37,-14.82,-3.1)*t+vec3(.47,26.53,3.44)*cos(vec3(3.37,.626,1.41)*t+vec3(-1.29,-1.521,-1.72)),0.,1.);\n}\nvec3 PigeonTonesC(float t) {\n    return clamp(vec3(.12,.13,.17)+vec3(.86,.84,.79)*t+vec3(.06,.04,.06)*cos(vec3(7.66,7.9,7.72)*t+vec3(-.48,-.99,-.96)),0.,1.);\n}\nvec3 CherryTonesC(float t) {\n    return clamp(vec3(-33.95,11.9,13.78)+vec3(52.15,-9.82,-12.63)*t+vec3(107.83,19.47,25.21)*cos(vec3(.4822,.588,.562)*t+vec3(1.2484,-2.214,-2.139)),0.,1.);\n}\nvec3 RedBlueTonesC(float t) {\n    return clamp(vec3(.65,.46,.91)+vec3(-.25,.01,-1.3)*t+vec3(.33,.39,.96)*cos(vec3(4.74,4.49,2.62)*t+vec3(-2.17,-2.54,-2.37)),0.,1.);\n}\nvec3 CoffeeTonesC(float t) {\n    return clamp(vec3(-2.68,.32,.06)+vec3(4.95,.64,.86)*t+vec3(5.69,.04,.2)*cos(vec3(.8,7.86,5.28)*t+vec3(1,-1.39,-.16)),0.,1.);\n}\nvec3 RustTonesC(float t) {\n    return clamp(vec3(.12,.06,.17)+vec3(1.02,.47,-.16)*t+vec3(.12,.06,.02)*cos(vec3(5.86,5.84,5.85)*t+vec3(-2.93,-2.93,.2)),0.,1.);\n}\nvec3 FuchsiaTonesC(float t) {\n    return clamp(vec3(.39,.03,1.44)+vec3(-3.14,.91,-4.92)*t+vec3(5.33,.05,8.11)*cos(vec3(.83,7.86,.75)*t+vec3(-1.63,-.06,-1.74)),0.,1.);\n}\nvec3 SiennaTonesC(float t) {\n    return clamp(vec3(-.41,.33,.4)+vec3(1.68,.42,.09)*t+vec3(.86,.15,.34)*cos(vec3(2.03,3.42,3.09)*t+vec3(-.04,-2.91,2.8)),0.,1.);\n}\nvec3 GrayTonesC(float t) {\n    return clamp(vec3(.04,.06,.09)+vec3(.84,.84,.79)*t+vec3(.04,.03,.02)*cos(vec3(7.06,7.43,9)*t+vec3(-.08,-.36,-1.35)),0.,1.);\n}\nvec3 ValentineTonesC(float t) {\n    return clamp(vec3(2.39,.14,.17)+vec3(-3.68,.6,.66)*t+vec3(5.19,.1,.05)*cos(vec3(.82,4.26,5.68)*t+vec3(-1.94,1.82,1.15)),0.,1.);\n}\nvec3 GrayYellowTonesC(float t) {\n    return clamp(vec3(.6,22,40.32)+vec3(-.13,-61.93,-135.25)*t+vec3(.47,141.55,364.05)*cos(vec3(2.89,.4457,.3746)*t+vec3(-2.67,-1.7253,-1.6809)),0.,1.);\n}\nvec3 DarkTerrainC(float t) {\n    return clamp(vec3(-119.59,-5.32,-180.09)+vec3(246.86,12.06,452.81)*t+vec3(786.34,7.19,1665.28)*cos(vec3(.3139,1.75,.27247)*t+vec3(1.4182,.74,1.4622)),0.,1.);\n}\nvec3 LightTerrainC(float t) {\n    return clamp(vec3(.59,27.29,39.02)+vec3(.26,-45.82,-51.94)*t+vec3(.09,94.81,114.12)*cos(vec3(5.12,.49,.4623)*t+vec3(2.23,-1.854,-1.9117)),0.,1.);\n}\nvec3 GreenBrownTerrainC(float t) {\n    return clamp(vec3(.12,.12,-205.56)+vec3(.95,.88,434.26)*t+vec3(.12,.18,1593.1)*cos(vec3(6.76,6.8,.27279)*t+vec3(-2.89,-2.34,1.44143)),0.,1.);\n}\nvec3 SandyTerrainC(float t) {\n    return clamp(vec3(.9,.48,.26)+vec3(-.54,.07,-.03)*t+vec3(.32,.27,.06)*cos(vec3(4.28,4.7,5.68)*t+vec3(-2.37,-2.32,-2.62)),0.,1.);\n}\nvec3 BrightBandsC(float t) {\n    return clamp(vec3(.63,.52,-577.52)+vec3(.13,.31,1052.6)*t+vec3(.31,.29,4334.34)*cos(vec3(7.39,5.46,.24336)*t+vec3(-.03,-3.02,1.43714)),0.,1.);\n}\nvec3 DarkBandsC(float t) {\n    return clamp(vec3(.52,.62,1.08)+vec3(.31,.21,-.98)*t+vec3(.15,.26,.35)*cos(vec3(11.59,4.3,5.11)*t+vec3(.78,.76,1.76)),0.,1.);\n}\nvec3 AquamarineC(float t) {\n    return clamp(vec3(-.3,.26,-.2)+vec3(1.96,.95,2.36)*t+vec3(1.04,.47,1.51)*cos(vec3(2.57,2.85,1.8)*t+vec3(.36,.15,.8)),0.,1.);\n}\nvec3 PastelC(float t) {\n    return clamp(vec3(5.99,1.69,.81)+vec3(-30.91,-3.63,-.07)*t+vec3(57.32,2.89,.22)*cos(vec3(.549,1.56,5.58)*t+vec3(-1.662,-1.99,.59)),0.,1.);\n}\nvec3 BlueGreenYellowC(float t) {\n    return clamp(vec3(2.08,-.47,-1.06)+vec3(4.68,1.41,1.97)*t+vec3(6.45,.5,1.61)*cos(vec3(.82,2.07,1.48)*t+vec3(1.88,-.42,.45)),0.,1.);\n}\nvec3 RainbowC(float t) {\n    return clamp(vec3(132.23,.39,-142.83)+vec3(-245.97,-1.4,270.69)*t+vec3(755.63,1.32,891.31)*cos(vec3(.3275,2.39,.3053)*t+vec3(-1.7461,-1.84,1.4092)),0.,1.);\n}\nvec3 DarkRainbowC(float t) {\n    return clamp(vec3(.25,.65,.52)+vec3(.64,-.34,-.4)*t+vec3(.16,.28,.11)*cos(vec3(7.89,5.83,6.93)*t+vec3(1.19,2.69,.6)),0.,1.);\n}\nvec3 TemperatureMapC(float t) {\n    return clamp(vec3(.37,.89,1.18)+vec3(.71,-2.12,-.94)*t+vec3(.26,1.56,.2)*cos(vec3(5.2,2.48,8.03)*t+vec3(-2.51,-1.96,2.87)),0.,1.);\n}\nvec3 LightTemperatureMapC(float t) {\n    return clamp(vec3(.38,-5.49,1.11)+vec3(.62,.96,-.73)*t+vec3(.24,6.09,.17)*cos(vec3(4.9,.97,6.07)*t+vec3(-2.61,-.33,-2.74)),0.,1.);\n}\n\n\n/* ====================== main ====================== */\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (vec2(0,1)-(fragCoord/iResolution.xy))*vec2(-4, 13);\n    int i = int(uv.x)*13+int(uv.y);\n    float t = fract(uv.x);\n    vec3 col = vec3(0);\n    // align them so one can Alt+select to change the suffix\n    if (i== 0) col=        AlpineColorsP(t);\n    if (i== 1) col=          LakeColorsP(t);\n    if (i== 2) col=          ArmyColorsP(t);\n    if (i== 3) col=          MintColorsP(t);\n    if (i== 4) col=      AtlanticColorsP(t);\n    if (i== 5) col=          NeonColorsP(t);\n    if (i== 6) col=        AuroraColorsP(t);\n    if (i== 7) col=         PearlColorsP(t);\n    if (i== 8) col=       AvocadoColorsP(t);\n    if (i== 9) col=          PlumColorsP(t);\n    if (i==10) col=         BeachColorsP(t);\n    if (i==11) col=          RoseColorsP(t);\n    if (i==12) col=         CandyColorsP(t);\n    if (i==13) col=         SolarColorsP(t);\n    if (i==14) col=          CMYKColorsP(t);\n    if (i==15) col=     SouthwestColorsP(t);\n    if (i==16) col=       DeepSeaColorsP(t);\n    if (i==17) col=   StarryNightColorsP(t);\n    if (i==18) col=          FallColorsP(t);\n    if (i==19) col=        SunsetColorsP(t);\n    if (i==20) col=    FruitPunchColorsP(t);\n    if (i==21) col=   ThermometerColorsP(t);\n    if (i==22) col=        IslandColorsP(t);\n    if (i==23) col=    WatermelonColorsP(t);\n    if (i==24) col=          BrassTonesP(t);\n    if (i==25) col=      GreenPinkTonesP(t);\n    if (i==26) col=      BrownCyanTonesP(t);\n    if (i==27) col=         PigeonTonesP(t);\n    if (i==28) col=         CherryTonesP(t);\n    if (i==29) col=        RedBlueTonesP(t);\n    if (i==30) col=         CoffeeTonesP(t);\n    if (i==31) col=           RustTonesP(t);\n    if (i==32) col=        FuchsiaTonesP(t);\n    if (i==33) col=         SiennaTonesP(t);\n    if (i==34) col=           GrayTonesP(t);\n    if (i==35) col=      ValentineTonesP(t);\n    if (i==36) col=     GrayYellowTonesP(t);\n    if (i==37) col=         DarkTerrainP(t);\n    if (i==38) col=        LightTerrainP(t);\n    if (i==39) col=   GreenBrownTerrainP(t);\n    if (i==40) col=        SandyTerrainP(t);\n    if (i==41) col=         BrightBandsP(t);\n    if (i==42) col=           DarkBandsP(t);\n    if (i==43) col=          AquamarineP(t);\n    if (i==44) col=              PastelP(t);\n    if (i==45) col=     BlueGreenYellowP(t);\n    if (i==46) col=             RainbowP(t);\n    if (i==47) col=         DarkRainbowP(t);\n    if (i==48) col=      TemperatureMapP(t);\n    if (i==49) col= LightTemperatureMapP(t);\n    fragColor = vec4(col, 0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}