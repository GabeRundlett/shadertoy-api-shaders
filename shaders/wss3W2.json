{
    "Shader": {
        "info": {
            "date": "1547568015",
            "description": "pattern",
            "flags": 0,
            "hasliked": 0,
            "id": "wss3W2",
            "likes": 1,
            "name": "[Ese] Pattern",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "Eseris",
            "viewed": 265
        },
        "renderpass": [
            {
                "code": "vec3 drawBrick(vec2 uv) {\n    vec3 col = vec3(.5);\n    \n    // shadow\n    vec2 mask2 = smoothstep(.1, .0, abs(uv - vec2(.52, .47)) - vec2(.8, .8) / 2.);\n    col = mix(col, vec3(.3), mask2.x * mask2.y);\n    \n    // brick\n    vec2 mask = smoothstep(.04, .0, abs(uv - .5) - vec2(.86, .8) / 2.);\n    vec3 brickCol = mix(vec3(.57, .42, .3), vec3(.9, .64, .4), pow(uv.y, .7));\n    col = mix(col, brickCol, mask.x * mask.y);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= vec2(5.3, 7.); // brick size\n    \n    // pattern repetition (with x offset on even rows) \n    vec2 index = floor(uv);\n    uv.x += step(.1, mod(index.y, 2.)) * .5;\n    uv = fract(uv);\n\n    vec3 col = drawBrick(uv);\n    //col = vec3(uv, 0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}