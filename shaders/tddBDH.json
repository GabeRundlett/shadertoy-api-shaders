{
    "Shader": {
        "info": {
            "date": "1605033575",
            "description": "215657845ccolor",
            "flags": 0,
            "hasliked": 0,
            "id": "tddBDH",
            "likes": 6,
            "name": "215657845 ccolor",
            "published": 3,
            "tags": [
                "215657845ccolor"
            ],
            "usePreview": 0,
            "username": "algoes",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "#define speed (20.2)\n#define k2PI (2.*3.14159265359)\n#define kStarDensity 0.0\n#define kMotionBlur 0.4\n#define kNumAngles 90. + sin(iTime)*30.\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse = vec2(sin(iTime) / 5. + .5, sin (2. * iTime) + 0.5);\n    vec2 position = ( fragCoord.xy -  iResolution.xy*.5 ) / iResolution.x; // use this for mouse panning\n    position -= 0.5*(mouse - 0.5)* vec2 (2., iResolution.y / iResolution.x);\n    float A = atan(position.y,position.x);\n    float angle0 = A / k2PI;\n    float angle = fract(angle0 + .002*iTime);\n    float rad = .3*length(position);\n    float angleFract = fract(angle*kNumAngles);\n    float angleStep = floor(angle*kNumAngles);\n    float angleToRandZ = 10.*fract(angleStep*fract(angleStep*.7535)*45.1);\n    float angleSquareDist = fract(angleStep*fract(angleStep*.82657)*13.724);\n    float t = speed * iTime - angleToRandZ;\n    float angleDist = (angleSquareDist+0.1);\n    float adist = angleDist/rad*kStarDensity;\n    float dist = abs(fract((t*.1+adist))-.5);\n    float white1 = max(0.,1.0 - dist * 100.0 / (kMotionBlur*speed+adist));\n    float white2 = max(0.,(.5-.5*cos(k2PI * angleFract))*1./max(0.6,2.*adist*angleDist));\n    float white = white1*white2;\n    vec3 color;\n    color.r = .03*white1 + white*(0.3 + 5.0*angleDist);\n    color.b = white*(0.1 + .5*angleToRandZ);\n    color.g = 30.2*white;\n   \n    float nebD1 = 1.0/rad + 4.5*(1.0 + sin(1.1 + 3.0*A + 0.71*cos(2.0*A)));\n    float nebD2 = 1.0/rad + 3.7*(1.0 + sin(3.7 + 2.0*A + 0.46*sin(3.0*A)));\n    float R1 = 1.0 * rad * (1.0 + sin(0.3+3.0*A + 2.4 * cos(0.2+3.0*A)*sin(2.1+0.42*(nebD1+speed*iTime)) + sin(2.0*6.283*position.x) ));\n    float R2 = 1.0 * rad * (1.0 + sin(1.1+4.0*A + 3.2 * cos(0.7+4.0*A)*sin(1.7+0.27*(nebD2+speed*iTime)) + cos(3.0*6.283*position.y) ));\n    float P1 = 0.5 + .5*sin(5.7*position.x+.22*(speed*iTime));\n    float P2 = 0.5 + .5*sin(4.44*position.y+.17*(speed*iTime)) ;\n    color.r += 0.6*R1 + 0.3*R2 + 0.1*P1*P2 ;\n    color.b += 0.3*R1 + 0.8*R2 + .1*P2*R1;\n    color.g += 1.1*R1*R2*P2;\n    \n    \n    \n    fragColor = vec4( (color.grb+ vec3(texture(iChannel0, (fragCoord.xy / iResolution.xy))))/1.1, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}