{
    "Shader": {
        "info": {
            "date": "1614190368",
            "description": "Everyone knows the spider, monkey and now that crazy cat but there are also geometric Nazca Lines. I would love to find a diagram for katari (pi) which the Inca calculated as sqrt(10) but this looks like my bogus math. Any ideas what it refers to?",
            "flags": 8,
            "hasliked": 0,
            "id": "3lVfWz",
            "likes": 14,
            "name": "katari??",
            "published": 3,
            "tags": [
                "nazca"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "//katari by eiffie\n//The Nazca Lines on hills were for people but those on plains were prayers to the gods.\n//This looks like the kind of prayer I would make.\n//Hey God I squared the circle give me magic powers! No you didn't.\n//I doubled the cube. Not even close.\n//Its a trig table. Only the easy ones are correct. What do the 22.5 degrees even point to?\n//Its a chakana! Nope.\n//Its the world's biggest corn hole game. Fine whatever.\n\n#define tim iTime*.3\n#define rez iResolution.xy\n// Based on a simple 2d noise algorithm contributed by Trisomie21 (Thanks!) \nfloat noyz(vec2 v){ \n  vec4 h=fract(sin(vec4(floor(v.x)+floor(v.y)*1000.)+vec4(0,1,1000,1001))*1000.); \n  v=smoothstep(0.,1.,fract(v));return mix(mix(h.x,h.y,v.x),mix(h.z,h.w,v.x),v.y); \n}\nfloat bumpz(vec2 p, float d){\n  return (noyz(p)+noyz(vec2(p.x+p.y,p.x-p.y)))*d;\n}\nfloat box(vec2 p){p=abs(p);return max(p.x,p.y);}\nfloat tbox(vec2 p){p=abs(p);return min(abs(max(p.x,p.y)-.5),abs(p.x-p.y));}\nfloat DE(vec2 p){\n  float b=box(p),r=length(p);\n  float d=abs(b-4.);\n  d=min(d,abs(-abs(p.x)*3.-(p.y+p.x*.2)+20.));//randoms\n  d=min(d,abs(box(vec2(p.x-p.y,p.x+p.y)*.707)-4.));\n  for(float i=1.;i<=4.;i+=1.)d=min(d,abs(r-i));\n  vec2 ap=abs(p);\n  if(ap.y>ap.x)ap=ap.yx;\n  if(r<1.5){d=min(d,min(abs(ap.x-ap.y),abs(ap.x-ap.y*3.5)));}\n  if(r>2.5){ap-=1.62;ap*=.83;}\n  float t=tbox(fract(ap)-.5);\n  ap=floor(ap);\n  if(ap.x==1. && (ap.y==0. || (r>2.5 && ap.y==1.)))d=min(d,t);\n  return d;\n}\nvec2 rotate(vec2 v, float angle) {return cos(angle)*v+sin(angle)*vec2(v.y,-v.x);}\nvoid mainImage(out vec4 O, in vec2 U){\n  vec2 uv=(2.0*U-rez)/rez;\n  uv.xy*=(1.75+.5*sin(tim)+uv.y*.2);\n  uv+=vec2(sin(tim*.7),sin(tim*.5))*.2;\n  uv=rotate(uv,(tim+sin(tim))*1.3);\n  float d=DE(uv*5.);\n  d=.75-.4*pow(bumpz(uv*(30.+3.*sin(uv.yx*2.)),d),.25);\n  O=vec4(d,d,d*.9,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float ntof(int n){return pow(2.,float(n)/12.);}\nint scale(int n0){\n  int n=n0%12;\n  if(n==0||n==2||n==3||n==5||n==7||n==10)return n0;\n  return 0;\n}\nfloat rand(float time){return fract(sin(time*313.234+sin(time*23.12))*4534.125);}\nint N[8]=int[8](0,7,10,7,5,3,2,3);\nvec2 mainSound(int samp, float time){\n  vec2 a=vec2(0);\n  time+=.001*sin(time*20.);\n  time=mod(time,60.);\n  int t=int(time*2.);\n  int n=N[t%8]+N[(t/4)%8]+N[(t/8)%8],n1=scale(n);\n  n=scale(n+7);\n  a+=mix(vec2(rand(time)),sin(time*vec2(ntof(n),ntof(n1))*3141.59/2.),fract(time*2.));\n  return a*.125;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}