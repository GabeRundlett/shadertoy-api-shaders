{
    "Shader": {
        "info": {
            "date": "1649714087",
            "description": "Another ornate mosaic pattern.",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl2yDD",
            "likes": 3,
            "name": "Metal branch mosaic 2",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 238
        },
        "renderpass": [
            {
                "code": "vec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\treturn mat2(c, -s, s, c)*v;\n}\n\nvec2 triangle_wave(vec2 a,float num,int iters){\n    a = rotate(a,num*radians(180.));\n    vec2 to_return = abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n    return to_return/1.5;\n    //return to_return/(1.5+(iters > 0?1.:0.)*(a.x+a.y)/4.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    float time1 = iTime/64.;\n    uv += vec2(time1/2.0,time1/3.0)/t1/4.0+(vec2(cos(time1),sin(time1)))*8./t1;\n    float scale = 1.5;\n    float p1 = 1.;\n    vec2 t2 = vec2(0.);\n    vec2 t3 = vec2(0.);\n    float rotation_number = 0.;\n    for(int k = 0; k < 12; k++){\n        rotation_number = float(int(uv.x+uv.y)+1+k)/2.;\n        //rotation_number += float(int(uv.x+uv.y)+1+k)*.5;\n\n        uv += t2;\n        t2 = -p1*triangle_wave(uv-1.5,rotation_number,k);\n        t3 = p1*triangle_wave(uv.yx,rotation_number,k);\n        uv = t2-t3;\n        p1 *= -1.;\n        float multiplier = 1.25;\n        col.x = max(uv.y+uv.x-col.x,col.x);\n        //col.x = max(((uv.y+uv.x)-col.x)/multiplier,col.x*multiplier);\n        //col.x = max(uv.y*(1.25)+uv.x/(1.25)-col.x,col.x);\n        //col.x = max(uv.y+uv.x-col.x,col.x*multiplier)/multiplier;\n\n        col = abs(col.yzx-vec3(1.-col.x))/multiplier;\n        uv /= scale;\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}