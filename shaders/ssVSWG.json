{
    "Shader": {
        "info": {
            "date": "1635241723",
            "description": "I am an idiot and drank coffee at 8pm so here i am coding something to pass time and help me fall asleep",
            "flags": 0,
            "hasliked": 0,
            "id": "ssVSWG",
            "likes": 2,
            "name": "3am",
            "published": 3,
            "tags": [
                "sdf",
                "code",
                "nosleep",
                "3am"
            ],
            "usePreview": 0,
            "username": "lambmeow",
            "viewed": 242
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define resolution iResolution\nfloat ss(vec3 p)\n{\n\tvec2 xz = vec2(p.x, p.y + p.z * .05);\n\n\tp.xz = mod(p.xz + 1.,2.) - 1.; \n\treturn length(p + sin(time + xz.y *2. - xz.x *0.2)* vec3(0,1,0)) - 1.;\n}\n\nvec3 rt(vec3 ro, vec3 rd)\n{\n\tfloat dist = 0.0;\n\tfor(int i = 0; i < 255; i++)\n\t{\n\t\tfloat ll = ss(ro+rd*dist);\n\t\t\n\t\tif(ll < 0.01)\n\t\t\treturn (ro+rd*dist);\n\t\t\t\n\t\tdist += ll;\n\t\tif(dist > 130.)\n\t\t\tbreak;\n\t\t\n\t\t\n\t}\n\t\n\treturn vec3(200);\n}\n\n\nvec3 nn(vec3 p)\n{\n\tvec2 xx = vec2(0.001, 0);\n\treturn normalize(vec3(\n\t\tss(p + xx.xyy) - ss(p -  xx.xyy),\n\t\tss(p + xx.yxy) - ss(p - xx.yxy),\n\t\tss(p + xx.yyx) - ss(p - xx.yyx)));\n}\n\nvec4 cc(vec3 p, vec2 u)\n{\n\t\n\tvec4 amb =  mix(vec4(0.1,0,0,1), vec4(1,.2,.5,1), (u.y  + 1.) );\n\tif(p.z == 200.)\n\t\treturn amb;\n\tvec3 n = nn(p);\n\tvec4 col =  dot(n, normalize(vec3(0,1,-1)))* vec4(1,0.4,.5,1) * p.z /100. + abs(p.y) * vec4(1, 0,.4,1)  + amb * 0.1;\n\treturn col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 uv )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 r = resolution.xy, u = (2.* (uv) - r)/r.y;\n\t\n\tvec3 rd = normalize(vec3(u, 2.0)),\n\tro = vec3(0,4. + cos(time * 0.05) * 0.5,-10.);\t\n \t\n\tfragColor = cc(rt(ro,rd), u);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}