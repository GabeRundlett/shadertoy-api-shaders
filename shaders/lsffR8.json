{
    "Shader": {
        "info": {
            "date": "1494773438",
            "description": "HE CREADO DAW ISSA DAW HNIESH EL AÃ‘O 2017\nMASTER INFORMATICA GRAFICA JUEGOS Y RYALIDAD VIRTUAL LA UNIVERSIDAD REY JUAN CARLOS",
            "flags": 0,
            "hasliked": 0,
            "id": "lsffR8",
            "likes": 4,
            "name": "Love Invaders02",
            "published": 3,
            "tags": [
                "heart",
                "spaceinvaders",
                "valentine",
                "tetris",
                "love",
                "tags2d"
            ],
            "usePreview": 1,
            "username": "DAWISSA",
            "viewed": 1334
        },
        "renderpass": [
            {
                "code": "#define STEP 0.2\n#define PI 3.14159265359\n\n\nfloat rect(vec2 r, vec2 bottomLeft, vec2 topRight) {\n\tfloat ret;\n\tfloat d = 0.005;\n\tret = smoothstep(bottomLeft.x-d, bottomLeft.x+d, r.x);\n\tret *= smoothstep(bottomLeft.y-d, bottomLeft.y+d, r.y);\n\tret *= 1.0 - smoothstep(topRight.y-d, topRight.y+d, r.y);\n\tret *= 1.0 - smoothstep(topRight.x-d, topRight.x+d, r.x);\n\treturn ret;\n}\n\n\n\nvec3 piece (vec3 col, vec2 r, vec2 pos, vec3 mainColor, vec3 borderColor, vec3 shadowColor)\n{\n\tvec3 ret = col;\n\n\tvec2 bottomLeft = pos;\n\tvec2 topRight = pos + vec2(STEP, STEP);\n\tvec2 c = (bottomLeft+topRight)/2.0;\n\tfloat d = length(r - c);\n\t\n\t// Square border\n\tret = mix(ret, borderColor, rect(r, bottomLeft, topRight) );\n\n\t// Square color\n\tvec2 margin = vec2(0.01, 0.01);\n\tret = mix(ret, mainColor, rect(r, bottomLeft + margin, topRight - margin) );\n\n\t// Inner shadow\n\tret = mix(ret, shadowColor, (3.0*sin(d))*rect(r, bottomLeft + margin , topRight - margin));\n\n\t// Inner square\n\tmargin = vec2(0.035, 0.035);\n\tret = mix(ret, mainColor, rect(r, bottomLeft + margin , topRight - margin));\n\n\n\treturn ret;\n}\n\nvec2 up(vec2 pos)\n{\n\tvec2 up = pos + vec2(0.0, +STEP);\n\treturn up;\n}\n\nvec2 down(vec2 pos)\n{\n\tvec2 down = pos + vec2(0.0, -STEP);\n\treturn down;\n}\n\nvec2 left(vec2 pos)\n{\n\tvec2 left = pos + vec2(-STEP, 0.0);\n\treturn left;\n}\n\nvec2 right(vec2 pos)\n{\n\tvec2 right = pos + vec2(+STEP, 0.0);\n\treturn right;\n}\n\nvec3 piece1 (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colPurple = vec3(0.724, 0.324, 0.728);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colPurple, colBlack, colShadow);\n\tret = piece(ret, q, up(start), colPurple, colBlack, colShadow);\n\tret = piece(ret, q, left(up(start)), colPurple, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 piece2 (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colYellow = vec3(0.867, 0.910, 0.247);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colYellow, colBlack, colShadow);\n\tret = piece(ret, q, left(start), colYellow, colBlack, colShadow);\n\tret = piece(ret, q, up(start), colYellow, colBlack, colShadow);\n\tret = piece(ret, q, right(up(start)), colYellow, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 piece2i (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colPink = vec3(0.9, 0.15, 0.4);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colPink, colBlack, colShadow);\n\tret = piece(ret, q, left(up(start)), colPink, colBlack, colShadow);\n\tret = piece(ret, q, up(start), colPink, colBlack, colShadow);\n\tret = piece(ret, q, right(start), colPink, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 piece3 (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colGreen = vec3(0.151, 0.694, 0.337);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colGreen, colBlack, colShadow);\n\tret = piece(ret, q, up(start), colGreen, colBlack, colShadow);\n\tret = piece(ret, q, left(up(start)), colGreen, colBlack, colShadow);\n\tret = piece(ret, q, right(up(start)), colGreen, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 piecel (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colRed = vec3(0.95, 0.151, 0.2);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colRed, colBlack, colShadow);\n\tret = piece(ret, q, left(start), colRed, colBlack, colShadow);\n\tret = piece(ret, q, right(start), colRed, colBlack, colShadow);\n\tret = piece(ret, q, right(right(start)), colRed, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 pieceLi (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colOrange = vec3(0.9, 0.4, 0.0);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colOrange, colBlack, colShadow);\n\tret = piece(ret, q, down(start), colOrange, colBlack, colShadow);\n\tret = piece(ret, q, left(down(start)), colOrange, colBlack, colShadow);\n\tret = piece(ret, q, up(start), colOrange, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 pieceL (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colPurple = vec3(0.724, 0.324, 0.728);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colPurple, colBlack, colShadow);\n\tret = piece(ret, q, down(start), colPurple, colBlack, colShadow);\n\tret = piece(ret, q, right(down(start)), colPurple, colBlack, colShadow);\n\tret = piece(ret, q, up(start), colPurple, colBlack, colShadow);\n\n\treturn ret;\n}\n\nvec3 piece4 (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\tvec2 q = r - pos;\n\n\tfloat angle = rot;\n\tmat2 rotationMatrix = mat2(cos(angle), -sin(angle),\n                               sin(angle),  cos(angle));\n\t\n\tfloat height = 2.0*STEP;\n\tfloat width = 2.0*STEP;\n\n\tvec2 c = vec2(width/2.0, height/2.0);\n\n\tq =  rotationMatrix*q;\n\n\tvec3 colBlue = vec3(0.216, 0.471, 0.698);\n\n\tvec2 start = -c/2.0;\n\tret = piece(ret, q, start, colBlue, colBlack, colShadow);\n\t/*ret = piece(ret, q, up(start), colBlue, colBlack, colShadow);\n\tret = piece(ret, q, left(up(start)), colBlue, colBlack, colShadow);\n\tret = piece(ret, q, left(start), colBlue, colBlack, colShadow);*/\n\n\treturn ret;\n}\n\nvec3 invader (vec3 col, vec2 r, vec2 pos, float rot, vec3 colBlack, vec3 colShadow)\n{\n\tvec3 ret = col;\n\t\n\tret = piece3(ret, r, pos, rot + PI, colBlack, colShadow);\n\tret = piece3(ret, r, pos + vec2(0.0, 0.6), rot, colBlack, colShadow);\n\tret = pieceL(ret, r, pos + vec2(0.4, 0.6), rot + 3.0*PI/2.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(0.8, 1.0), 0.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(-0.8, 1.0), 0.0, colBlack, colShadow);\n\tret = piecel(ret, r, pos + vec2(-0.8, 0.4), rot + PI/2.0, colBlack, colShadow);\n\tret = pieceL(ret, r, pos + vec2(-1.2, 0.4), rot + PI, colBlack, colShadow);\n\tret = piece2(ret, r, pos + vec2(-1.0, -0.2), rot + PI/2.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(-0.6, -0.6), 0.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(-0.4, -0.6), 0.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(-0.6, -0.2), 0.0, colBlack, colShadow);\n\tret = piece3(ret, r, pos + vec2(-0.2, 0.0), rot, colBlack, colShadow);\n\tret = pieceLi(ret, r, pos + vec2(0.4, -0.2), rot + PI/2.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(0.6, -0.6), 0.0, colBlack, colShadow);\n\tret = piece4(ret, r, pos + vec2(0.4, -0.6), 0.0, colBlack, colShadow);\n\tret = piece2i(ret, r, pos + vec2(0.8, -0.2), rot + PI/2.0, colBlack, colShadow);\n\tret = pieceLi(ret, r, pos + vec2(1.2, 0.4), rot + PI, colBlack, colShadow);\n\tret = pieceLi(ret, r, pos + vec2(-0.4, 0.6), rot + PI/2.0, colBlack, colShadow);\n\tret = piecel(ret, r, pos + vec2(0.8, 0.4), rot + PI/2.0, colBlack, colShadow);\n\n\treturn ret;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 r = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n\tvec2 q = r;\n\tvec2 w = r;\n\tvec2 cursor = (2.0*iMouse.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n\t\n\tfloat xMax = iResolution.x/min(iResolution.y,iResolution.x);\n\tfloat yMax = iResolution.y/min(iResolution.y,iResolution.x);\n\tfloat distance = length(cursor);\n\tfloat cursorMod = (1.0-step(0.05*min(xMax,yMax), distance));\n\tfloat modif = 4.0 + ( cursorMod*sin(iTime*PI)*0.3 );\n\n\tr *= modif;\n\tcursor *= modif;\n\n\n\t// COLOR DEFINITIONS\n\tvec3 bgCol = vec3(1.0);\n\tvec3 colShadow = vec3(1.0) + ( 1.0-mod(length(cursor), max(iResolution.y, iResolution.x)) );\n\tvec3 colShadowInv = vec3(0.0);\n\tvec3 colBlack = vec3(0.0);\n\tvec3 colWhite = vec3(1.0);\n\tvec3 colGray = vec3(0.7);\n\t\t\n\t\n\t// GRID\n\tvec3 ret = colWhite;\n\n\n\t// BACKGROUND\n\tfloat t = iTime*0.05;\n\tvec2 br = r/modif;\n\n\tfloat v1 = sin(br.x +5.*t);\n    float v2 = sin(br.y +3.*t);\n    float v3 = sin(br.x+br.y +t);\n    float v4 = sin(sqrt(br.x*br.x+br.y*r.y) +3.*t);\n\tfloat v = v1+v2+v3+v4;\n\tv *= 3.0;\n\tret = vec3(0.2*sin(v), 0.1*sin(v+0.5*PI), 0.9*sin(v+1.0*PI));\n\tret += vec3(0.8*sin(v+1.0*PI), 0.1*sin(v+3.5*PI), 0.1*sin(v));\n\tret = 0.5*ret;\n\n\tbr = 0.5*vec2(br.x*v/3.0, br.y*v/3.0);\n\n\tret = mix(ret, texture(iChannel0, br).xyz, cursorMod*0.6*sin(iTime));\n\t\n\t// TETRIS PIECES\n\tfloat rot = 0.0;\n\tfloat factor = clamp(distance, 0.2, 1.0)-0.2;\n\n\tret = mix(piece3(ret, r, vec2(-0.2, -0.7), rot + 3.0*PI/2.0, colBlack, colShadow), ret, factor);\n\tret = mix(piece4(ret, r, vec2(-0.2, -0.5), 0.0, colBlack, colShadow), ret, factor);\n\tret = mix(piecel(ret, r, vec2(-0.4, -0.3), rot, colBlack, colShadow), ret, factor);\n\tret = mix(pieceLi(ret, r, vec2(0.2, -0.5), rot + PI, colBlack, colShadow), ret, factor);\n\tret = mix(piece4(ret, r, vec2(0.6, -0.3), 0.0, colBlack, colShadow), ret, factor);\n\tret = mix(piece4(ret, r, vec2(0.6, 0.1), 0.0, colBlack, colShadow), ret, factor);\n\tret = mix(piece4(ret, r, vec2(0.4, 0.5), 0.0, colBlack, colShadow), ret, factor);\n\tret = mix(piece4(ret, r, vec2(-0.6, 0.1), 0.0, colBlack, colShadow), ret, factor);\n\tret = mix(piece4(ret, r, vec2(-0.6, 0.3), 0.0, colBlack, colShadow), ret, factor);\n\tret = mix(pieceL(ret, r, vec2(-0.4, 0.3), rot + PI, colBlack, colShadow), ret, factor);\n\tret = mix(pieceLi(ret, r, vec2(-1.0, 0.7), rot + PI, colBlack, colShadow), ret, factor);\n\tret = mix(piece2i(ret, r, vec2(-0.4, 1.1), rot + PI, colBlack, colShadow), ret, factor);\n\tret = mix(piece2(ret, r, vec2(0.4, 1.1), rot + PI, colBlack, colShadow), ret, factor);\n\tret = mix(pieceL(ret, r, vec2(1.0, 0.7), rot + PI, colBlack, colShadow), ret, factor);\n\tret = mix(piece2i(ret, r, vec2(0.6, 0.3), rot + PI/2.0, colBlack, colShadow), ret, factor);\n\n\n\t// DECORATION PIECES\n\tfloat y;\n\tfloat x;\n\n\tw.y -= 1.5;\n\tw *= 4.0;\n\n\tfloat speed = 1.0;\n\tt = iTime*speed;\n\tfloat stopEveryAngle = PI/2.0;\n\tfloat stopRatio = 1.0;\n\trot = (floor(t) + smoothstep(0.0, 1.0-stopRatio, fract(t)) )*stopEveryAngle;\n\n\ty = -mod(iTime*0.2*PI - 2.0*PI, yMax*12.0);\n\tret = piece2i(ret, w, vec2(-0.45*xMax*4.0, y), rot + PI/2.0, colBlack, colShadowInv);\n\n\ty = -mod(iTime*0.8*PI + 3.0*PI/2.0, yMax*12.0);\n\tret = piece3(ret, w, vec2(0.8*xMax*4.0, y), rot + PI, colBlack, colShadowInv);\n\n\tt -= PI;\n\trot = (floor(t) + smoothstep(0.0, 1.0-stopRatio, fract(t)) )*stopEveryAngle;\n\ty = -mod(iTime*0.5*PI + PI, yMax*12.0);\n\tret = pieceL(ret, w, vec2(0.5*xMax*4.0, y), rot + PI, colBlack, colShadowInv);\n\n\ty = -mod(iTime*0.3*PI, yMax*12.0);\n\tret = piece2(ret, w, vec2(-0.3*xMax*4.0, y), rot + PI, colBlack, colShadowInv);\n\n\tt -= PI/2.0;\n\trot = (floor(t) + smoothstep(0.0, 1.0-stopRatio, fract(t)) )*stopEveryAngle;\n\ty = -mod(iTime*0.6*PI, yMax*12.0);\n\tret = piecel(ret, w, vec2(-0.7*xMax*4.0, y), rot + PI, colBlack, colShadowInv);\n\n\n\t// DECORATION INVADERS -> performance!!!\n\t/*q.y -= 1.5;\n\tq *= 8.0;\n\n\ty = -mod(iTime*PI - 2.0*PI, yMax*25.0);\n\tx = (-0.6*xMax)*8.0+1.5*sin(iTime*PI);\n\tret = invader(ret, q, vec2(x, y), PI, colBlack, colShadowInv);\n\n\ty = -mod(iTime*PI + 3.0*PI/2.0, yMax*25.0);\n\tx = (0.6*xMax)*8.0+1.5*sin(iTime*2.5*PI);\n\tret = invader(ret, q, vec2(x, y), PI, colBlack, colShadowInv);*/\n\n\n\t// MOUSE\n\tret = invader(ret, r, cursor, PI, colBlack, colShadow);\n\n\n\tvec3 pixel = ret;\n\tfragColor = vec4(pixel, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}