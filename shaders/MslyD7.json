{
    "Shader": {
        "info": {
            "date": "1488549303",
            "description": "switch #if line #67 for flow upon a texture\nvariant: just uncomment the last line",
            "flags": 0,
            "hasliked": 0,
            "id": "MslyD7",
            "likes": 11,
            "name": "LIC 2D / flow 2D stationary",
            "published": 3,
            "tags": [
                "noise",
                "flow",
                "flownoise",
                "lic"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 953
        },
        "renderpass": [
            {
                "code": "// see also the dynamic version: https://www.shadertoy.com/view/ldsyD7#\n// buf-A precomputed version: https://www.shadertoy.com/view/ldlcD7\n\n// --- Simplex noise 2D from  Makio64 / Ashima  https://www.shadertoy.com/view/4sdGD8\n\nvec3 permute( vec3 x) { return mod( x*x*34.+x, 289.); }\nfloat noise2( vec2 v) {\n    v *= 64./2.; // emulates 64x64 noise texture\n    vec2 i = floor((v.x+v.y)*.36602540378443 + v),\n        x0 = (i.x+i.y)*.211324865405187 + v - i;\n    float s = step(x0.x,x0.y);\n    vec2 j = vec2(1.-s,s),\n        x1 = x0 - j + .211324865405187, \n        x3 = x0 - .577350269189626; \n    i = mod(i,289.);\n    vec3 p = permute( permute( i.y + vec3(0, j.y, 1 ))+ i.x + vec3(0, j.x, 1 )   ),\n         m = max( .5 - vec3(dot(x0,x0), dot(x1,x1), dot(x3,x3)), 0.),\n         x = fract(p * .024390243902439) * 2. - 1.,\n         h = abs(x) - .5,\n        a0 = x - floor(x + .5);\n    return .5 + 65. * dot( pow(m,vec3(4.))*(- 0.85373472095314*( a0*a0 + h*h )+1.79284291400159 ), a0 * vec3(x0.x,x1.x,x3.x) + h * vec3(x0.y,x1.y,x3.y));\n}\n\nvoid mainImage( out vec4 O, vec2 U ) // -------------------------------------------\n{\n    float t = iTime; const float N=30.;\n    vec2 R = iResolution.xy;\n    U /= 8.*R.y; \n    vec2 D, P0 =  U, P = P0;\n    O = vec4(0);\n    \n    for (float i=0.; i<1.; i+=1./N) {\n                                                     // --- random field creation\n        float T = noise2(P);\n#define dnoise2(i,j) T - noise2(P-vec2(i,j)/8./R.y)\n      //D = vec2(dFdx(T), dFdy(T) );                 // hardware derivatives\n        D = vec2(dnoise2(1,0), dnoise2(0,1) );       // software derivatives\n        D = normalize(D)*5./R.y;                     // optional : no calm areas\n        D = vec2(-D.y,D.x);                          // invicid noise: grad(D)=0\n                                                               \n\n        P -= .1/200.* D*R.y/8.;                      // --- advection (to be LIC )\n          \n#if 1          \n\t    O +=   (.5+.5*vec4(P-P0,0,0)*200.*8./11.3)   // --- flow visualization \n             * pow(texture(iChannel1,P.xy*8.*R.y/R+.00*t).r*1.15,3.) *2.\n             * (1.+1.*sin(2.*6.2832*i+10.*t))\n            ;\n#else\n\t    O += pow(texture(iChannel2,P.xy*8.*R.y/R+.00*t)*1.15,vec4(3));\n#endif       \n    }\n    O /= N;\n    //O = .5+.5*vec4(D,0,0)*30.*.1* R.y /11.3; O=fract(O); // debug\n    //O = abs(2.*O-1.);\n    \n    //O = pow(texture(iChannel2,P.xy*8.*R.y/R+.00*t)*1.15,vec4(3));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}