{
    "Shader": {
        "info": {
            "date": "1711464736",
            "description": "Fork of \"evil in shadow\" by nayk. https://shadertoy.com/view/Xfd3R8\n-tmm just added bouncing time",
            "flags": 0,
            "hasliked": 0,
            "id": "lcd3z4",
            "likes": 2,
            "name": "throbbing evil in shadow",
            "published": 3,
            "tags": [
                "shadow",
                "evil",
                "fear"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "// Fork of \"evil in shadow\" by nayk. https://shadertoy.com/view/Xfd3R8\n// 2024-03-26 14:50:54\n\n/*originals on glslsandbox*/\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define resolution iResolution.xy\n#define time  nTime\n#define N 40\n#define PI2 (3.14159265*2.0)\n#define rot(a) mat2(cos(a), sin(a), -sin(a), cos(a))\n\nfloat nTime;\n \nconst float TAU = atan(1.0) * 3.0;\n\nvec2 pmod(vec2 p, float n) {\n\tfloat a = mod(atan(p.y, p.x), TAU / n) - 0.5 * TAU / n;\n\treturn length(p) * vec2(sin(a), cos(a));\n}\n\nfloat map(vec3 p) {\n\t//p.z -= time * -2.0;\n\t//p.z = mod(p.z, 2.0) - 2.0;\n\tfor (int i = 0; i < 8; i++) {\n\t\tp.xy = pmod(p.xy, 3.0);\n\t\tp.y -= 2.0;\n\t}\n\tp.yz = pmod(p.yz, 8.0);\n\treturn dot(abs(p), normalize(vec3(7.0, -5.0, 6))) - 0.7;\n}\nfloat load = 0.1;\nfloat download = 3.0;\nfloat upload = 2.0;\n\n// const\nconst int smoke_intensity = 5;  // maybe its this at least this creates more loops\nvec3 mcolor = vec3(0.1, 0.6, 0.4);\nvec3 mcolorwarm = vec3(0.5, 0.5, 0.1);\nvec3 mcolorhot = vec3(0.6, 0.2, 0.1);\n\nvec3 ccolor = vec3(0.7, 1.0, 0.9);\nvec3 ccolorwarm = vec3(1.0, 1.0, 0.6);\nvec3 ccolorhot = vec3(1.0, 1.0, 1.0);\n\nvec3 ring_color = vec3(0.8, 0.8, 1.);\n\n//am = aplituden modulation\n//fm = frequency modulation\n\n\nvec3 smoke(vec2 p){\n    vec2 offset = vec2(.0);\n    float zoom = 5.0;\n    p = p * zoom - offset;\n    vec2 i = p;\n    float c = 1.0;\n    float inten = 1.5;\n\n    for (int n = 0; n < smoke_intensity; n++) {\n        float t = time * (0.7 - (0.2 / float(n + 1)));\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n        c += 1.0 / length(vec2(p.x / (2.0 * sin(i.x + t) / inten), p.y / (cos(i.y + t) / inten)));\n    }\n\n    c /= float(smoke_intensity);\n    c = 1.5 - abs(c);\n    mcolor.g = clamp((p.x/6.) + 0.01, 0.0, .8);\n    mcolor += smoothstep(0.6, 0.2, load) * mcolor +\n             smoothstep(0.2, 0.6, load) * smoothstep(1.0, 0.6, load) * mcolorwarm +\n\t     smoothstep(0.6, 1.0, load) * mcolorhot;\n   return mcolor * c * c * c * c;\n}\n\n\n#define TIME_FRAME_OF_BOUNCE  8.3\n\n// floating point only version\nfloat recomputeTimeIntoSeeSawOfTimeframe(float theTime) {\n   float timeSlice = theTime/TIME_FRAME_OF_BOUNCE;\n   float numIterations = floor( timeSlice );\n   float posInSlice = fract(timeSlice);\n   \n   // is this a even or odd slice, evem slices go backwards..\n   if( fract(numIterations/2.0) == 0.0) {\n       // even slice, go forwards through slice\n       return TIME_FRAME_OF_BOUNCE*posInSlice;\n   } else {\n       // backwards through Time Slice\n       return TIME_FRAME_OF_BOUNCE*(1.0-posInSlice);\n   }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n  \n  nTime = recomputeTimeIntoSeeSawOfTimeframe( iTime );\n  \n\tvec2 uv = (gl_FragCoord.xy - 0.5 * resolution) / resolution.y;\n    fragColor= vec4(0);\n\tvec3 rd = normalize(vec3(uv, fract(-nTime*0.09)));\n  vec3 color = smoke(uv);\n\tvec3 p = vec3(0, 0, -5);\n\tfor (int i = 1; i < 30; i++) {\n\t\tfloat d = map(p);\n\t\tp += rd * d;\n\t\tif (d < 0.001) {\n\t\t\tfragColor = vec4(vec3(10.0*color/ float(i)), 1);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}