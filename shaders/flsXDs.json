{
    "Shader": {
        "info": {
            "date": "1626834188",
            "description": "Fork of https://www.shadertoy.com/view/fllSWl\n\nInstead of using the mouse coordinates to indicate the origin, it just uses simple sin and cos functions.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "flsXDs",
            "likes": 5,
            "name": "Rainbow Spiral (bouncy!)",
            "published": 3,
            "tags": [
                "rainbow",
                "fork"
            ],
            "usePreview": 0,
            "username": "froggynotacon",
            "viewed": 304
        },
        "renderpass": [
            {
                "code": "\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/vec2(iResolution.y, iResolution.y);\n    vec2 m = vec2(abs(sin(iTime /4.))* iResolution.x, abs(cos(iTime *.95)) * iResolution.y)/vec2(iResolution.y, iResolution.y);\n    vec2 v = st - m;\n    v = v / 0.01;\n    float tau = 6.283185;\n    float hue = atan(v.x, v.y)/tau;\n    hue = hue + length(v)/80. - iTime/2.;\n    vec3 rgb = hsl2rgb ( vec3(hue, 1., \n                              cos(2.0-length(v)*3.5)));\n    fragColor = vec4(rgb.r,rgb.g,rgb.b,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}