{
    "Shader": {
        "info": {
            "date": "1691338404",
            "description": "natron plugins",
            "flags": 0,
            "hasliked": 0,
            "id": "ddXXzn",
            "likes": 4,
            "name": "circle blur from natron plugins",
            "published": 3,
            "tags": [
                "blur"
            ],
            "usePreview": 0,
            "username": "axiomgraph",
            "viewed": 172
        },
        "renderpass": [
            {
                "code": "//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_lens_blur Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_lens_blur Matchbox for Autodesk Flame\n\n\n// setting inputs names and filtering options\n// iChannel0: pass1_result , filter = linear , wrap = clamp\n// BBox: iChannel0\n\n\n// based on https://www.shadertoy.com/view/ldXBzB by luluco250\n\n\n\n\n//uniform vec2 direction;\n\nint SAMPLES = 10; // Samples : \n float amount =2.0; // Amount : ,min=0.0\n float aspect = 1.0; // Aspect : ,min=0.01, max=2.0\n\nint ANGLE_SAMPLES = 45; // samples divide\nint OFFSET_SAMPLES = 6 ; // offset samples\n\n\nfloat degs2rads(float degrees) {\n    return degrees * 0.01745329251994329576923690768489;\n}\n\nvec2 rot2D(float offset, float angle) {\n    angle = degs2rads(angle);\n    return vec2(cos(angle) * offset, sin(angle) * offset);\n}\n\nvec3 circle_blur(sampler2D sp, vec2 uv, vec2 scale) {\n    vec2 ps = (1.0 / iResolution.xy) * scale * amount;\n    vec3 col = vec3(0.0);\n    float accum = 0.0;\n\n    for (int a = 0; a < 360; a += 360 / ANGLE_SAMPLES) {\n        for (int o = 0; o < OFFSET_SAMPLES; ++o) {\n\t\t\tcol += texture(sp, uv + ps * rot2D(float(o), float(a))).rgb * float(o * o);\n            accum += float(o * o);\n        }\n    }\n\n    return col / accum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  /*\n  if ( aspect > 1.0 )\n    direction.x = (direction.x - 1.0) * 10.0 + 1.0; */\n  vec2 dir = vec2(1.0);\n  dir = vec2(dir.x / aspect, dir.y * aspect);\n  vec2 uv = ( fragCoord.xy / iResolution.xy);\n  vec3 col = circle_blur(iChannel0, uv, dir);\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}