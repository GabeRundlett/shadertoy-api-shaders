{
    "Shader": {
        "info": {
            "date": "1571274503",
            "description": "Like clamp, but soft...\nComes in two flavors: \"smooth\" reaches the limit inside the domain bounds, but has slope 2 at the midpoint; \"soft\" approaches the limit more slowly with slope <= 1 everywhere\n",
            "flags": 0,
            "hasliked": 0,
            "id": "Ws3Xzr",
            "likes": 11,
            "name": "soft clamp",
            "published": 3,
            "tags": [
                "smooth",
                "smoothmin",
                "clamp",
                "smoothmax",
                "smoothclamp"
            ],
            "usePreview": 0,
            "username": "jaybird",
            "viewed": 1988
        },
        "renderpass": [
            {
                "code": "//#define USE_SMOOTHSTEP\n\n#ifdef USE_SMOOTHSTEP\n\nfloat smoothClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (x - a)/(b - a))*(b - a) + a;\n}\n\nfloat softClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (2./3.)*(x - a)/(b - a) + (1./6.))*(b - a) + a;\n}\n\n#else\n\nfloat smoothClamp(float x, float a, float b)\n{\n    float t = clamp(x, a, b);\n    return t != x ? t : b + (a - b)/(1. + exp((b - a)*(2.*x - a - b)/((x - a)*(b - x))));\n}\n\nfloat softClamp(float x, float a, float b)\n{\n \tfloat mid = (a + b)*0.5;\n    return mid + smoothClamp((x - mid)*0.5, a - mid, b - mid);\n}\n\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n\tfloat low = 0.1;\n    float high = (iMouse.z == 0.) ? 0.7 : iMouse.y/iResolution.y;\n    \n    fragColor.r = 1. - 0.5*abs(uv.y - smoothClamp(uv.x, low, high))*iResolution.y;\n    fragColor.g = 1. - 0.5*abs(uv.y -   softClamp(uv.x, low, high))*iResolution.y;\n    fragColor.b = 1. - 0.5*abs(uv.y -       clamp(uv.x, low, high))*iResolution.y;\n    fragColor.a = 1.;   \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}