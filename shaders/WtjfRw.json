{
    "Shader": {
        "info": {
            "date": "1598547167",
            "description": "trippy",
            "flags": 64,
            "hasliked": 0,
            "id": "WtjfRw",
            "likes": 7,
            "name": "Trippy 2 By MareeBree",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "mareebree",
            "viewed": 1450
        },
        "renderpass": [
            {
                "code": "#define S(x,y,z) smoothstep(x,y,z)\n#define PI (3.1415)\n\n// UTIL FUNCTIONS //////////////////////////////////////\n\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\n// All components are in the range [0â€¦1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 inverseColor(vec3 col)\n{\n    return vec3(1.0-col.r,1.0-col.g,1.0-col.b);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand(float c){\n    vec2 co = vec2(c,c);\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat xor(float a,float b)\n{\n    return a*(1.0-b)+b*(1.0-a);\n}\n\nvec3 xor(vec3 a,vec3 b)\n{\n    return vec3(xor(a.x,b.x),xor(a.y,b.y),xor(a.z,b.z));\n}\n\n// -------------b\n// |\t\t\t|\n// |\t\t\t|\n// a-------------\nfloat inRect(vec2 x ,vec2 a, vec2 b)\n{\n    return x.x > a.x && x.x < b.x && x.y > a.y && x.y < b.y ? 1.0 : 0.0;\n}\n\n////////////////////////////////////////\n\n// Wraps uv around tunnel\n// https://www.shadertoy.com/view/4djBRm\nvec2 tunnel(vec2 uv, float size, float time)\n{\n    vec2 p  = -1.0 + (2.0 * uv);\n    float a = atan(p.y, p.x);\n    float r = sqrt(dot(p, p));\n    return vec2(a / PI, time + (size / r));\n}\n\nvec2 rotate(vec2 uv, float angle)\n{\n    uv -= 0.5;\n    mat2 mat = mat2(vec2(cos(angle), sin(angle)),vec2(-sin(angle), cos(angle)));\n    return mat*uv + 0.5;\n}\n\nfloat diamondMask(vec2 uv,float ds,float lb)\n{\n    vec2 iuv = vec2(1.0-uv.x,1.0-uv.y); // inverse uv\n    \n    float db1 = S(0.5+ds,0.5+ds-lb,(iuv.x+uv.y)/2.0);\n    float db2 = S(0.5+ds,0.5+ds-lb,(uv.x+iuv.y)/2.0);\n    float db3 = S(0.5+ds,0.5+ds-lb,(uv.x+uv.y)/2.0);\n    float db4 = S(0.5+ds,0.5+ds-lb,(iuv.x+iuv.y)/2.0);\n    return min(min(min(db1,db2),db3),db4);\n}\n\nfloat shapeMask(vec2 uv,float layer,float t)\n{\n    // Rotation\n    float rotAngle = 3.0*sin(t*0.5 + 2.0*PI*rand(layer));\n    rotAngle = min(PI/2.0,rotAngle);\n    rotAngle = max(0.0,rotAngle);\n    \n    uv = rotate(uv,rotAngle);\n    \n    // Some variables\n   \tfloat lt = 0.1; // line thickness\n    float lt2 = lt/2.0;\n    float lb = 0.01; // line blur\n    \n    // Vertical line\n    float vl = S(0.5-lt2-lb,0.5-lt2,uv.x);\n    vl = min(vl,S(0.5+lt2,0.5+lt2-lb,uv.x));\n    \n    // Horizontal line\n    float lta = lt2; // line thickness with AR\n    float lba = lb;\n    float hl = S(0.5-lta-lba,0.5-lta,uv.y);\n    hl = min(hl,S(0.5+lta,0.5+lta-lba,uv.y));\n    \n    float c = max(hl,vl); // Cross\n    \n    // Center shape\n    float bds = 0.2; // big diamond size\n    float sds = bds-lt; // small diamond size\n    float bd = diamondMask(uv,bds,lb); // Big diamond\n    float sd = diamondMask(uv,sds,lb); // Small diamoind\n    float cs = clamp(bd-sd,0.0,1.0); // center shape\n    \n    float rs = 0.25;//center size\n    vec4 cr = vec4(rs,rs,1.0-rs,1.0-rs);  // center rect (a,b)\n    float inCenter = inRect(uv,cr.xy,cr.zw);\n    \n    float m = mix(c+cs,cs,inCenter);\n    \n    m = clamp(m,0.0,1.0);\n    \n    return m;\n}\n\nvec3 shapeColor(vec2 uv,float t,float layer)\n{\n    vec3 hsv = vec3(rand(layer)+ 0.3*sin(0.1*t),0.7/(layer/2.0),0.8+0.3*sin(t));\n    return hsv2rgb(hsv);\n}\n\nvec3 drawLayer(vec2 uv,vec2 suv,float layer, float opacity,float t)\n{\n    float mask = shapeMask(uv,layer,t);\n    vec3 color = shapeColor(suv*layer,t,layer);\n    return color*mask*opacity;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Sound data\n    int tx = int(0.8*512.0);\n\tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x;\n    float wave = texelFetch( iChannel0, ivec2(tx,1), 0 ).x;\n    \n    vec2 suv = fragCoord/iResolution.xy; // screen uv\n\n    \n    vec2 guv = suv;\n    float t = 0.3*iTime;\n   \tguv = rotate(guv,0.5*atan(sin(.5*t),suv.x+suv.y));\n    guv.x += 0.05*sin(0.3*iTime);\n    guv.y += 0.05*cos(0.3*iTime);\n    \n    float dc = sqrt(length(guv-vec2(0.5,0.5))); // distance to center\n    \n    guv = tunnel(guv,0.1*(1.0+sin(t)),0.2*t-0.5*(1.0+sin(t)));\n    \n    vec2 uv = 5.0*guv;\n    vec2 id = floor(uv);\n    uv = fract(uv);\n    \n    vec3 col = vec3(0.0);\n    \n    \n    for(float i=1.0;i<=4.0;i++)\n    {\n        vec2 layerUV = fract(uv + rand(i));\n        layerUV = fract(layerUV+0.1*iTime*rand(i));\n        //col = xor(col,inverseColor(col)*drawLayer(layerUV,suv,i,2.0/i,iTime));\n        col += inverseColor(col)*drawLayer(layerUV,suv,i,2.0/i,iTime);\n    }\n\t\n    vec3 icol = inverseColor(col);\n    float bgMask = S(0.8,0.85,max(max(icol.r,icol.g),icol.b));\n   \tvec3 bgColor = hsv2rgb(vec3(0.7+0.2*sin(t*0.1 + 0.1*wave),0.9,0.8));\n    \n    \n    float fadeEffect = (1.0+sin(0.2*t))/2.0;\n    fadeEffect = min(3.0*fadeEffect,1.0);\n    \n    float distanceShadow = clamp(2.0*dc,0.0,1.0);\n    col = mix(bgMask*bgColor,bgMask*bgColor+col,fadeEffect)*distanceShadow;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23808,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/rainbowtripmusic/psychedelicmushroomstripexperience"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}