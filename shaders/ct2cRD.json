{
    "Shader": {
        "info": {
            "date": "1691531489",
            "description": "Learning how the math behind bokeh works. \n\nXor's shader https://www.shadertoy.com/view/fldfWH helped a ton. Thanks!",
            "flags": 32,
            "hasliked": 0,
            "id": "ct2cRD",
            "likes": 7,
            "name": "bokeh͏",
            "published": 3,
            "tags": [
                "blur",
                "bokeh"
            ],
            "usePreview": 1,
            "username": "01000001",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "const float power = 3.;\nconst float phi = 1.61803398875;\nconst float pi = 3.1415926;\nconst float tau = pi*2.;\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n//hash by IQ https://www.shadertoy.com/view/XlXcW4\n\n/*\nvec2 circleSample(uvec3 x){\n    vec2 v = hash(x).xy;\n    return sin(v.x * tau + vec2(0,11))*sqrt(mod(v.x*1e2,1.));\n}\n/*/\nvec2 circleSample(uvec3 x){\n    vec2 v,z;\n    for(int i = 0;v=hash(x+uint(v*1e9)).xy, z=v*2.-1., i++<9 && length(z) > 1.;);\n    return z;\n}\n\n//*/\n\n\n//*\nvec2 bokehSample(int i, int s)\n{\n    float t = float(i)*2.*pi/(phi*phi);\n    float r = sqrt(float(i)/float(s));    \n    return sin(t + vec2(0,11)) * r;\n}/*/\n\nvec2 bokehSample(int i, int s){\n    float v = float(i)*pi / float(s);\n    return sin(v*tau + vec2(0,11))*sqrt(fract(v*pi*10.));\n    // (1./fisqrt(v.y)) is slower. I tried.\n}\n\n\n//*/\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;    \n    O=O-O;\n    \n    float b = .1*pow(abs(uv.y - .5 - sin(iTime)*.3),2.);\n    int s = int(ceil(float(2<<8)*sqrt(b))),i=s;\n    \n    for(;i-->0;){\n        //*\n        vec2 p = circleSample(uvec3(iFrame+i, int(U.x)+i, int(U.y)*i));/*/\n        vec2 p = bokehSample(i,s);//*/\n        p.y *= r.x/r.y;\n        vec4 c = texture(iChannel0, uv+p*b);\n        c *= c*2.;\n\t\tO += pow(c,power+O-O);\n\t}\n\tO /= float(s);\n    O = pow(O, 1./power+O-O);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, in vec2 U )\n{\n    int s = int(mod(iTime*0.4, 4.));\n    vec2 uv = U/iResolution.xy;\n    \n    float d = 0.5;\n    uv.x = uv.x * (mix(1., uv.y, d)) + (1.-uv.y)*d*.5;\n    \n    O = \n     s < 1?texture(iChannel0,uv.yx)\n    :s < 2?texture(iChannel1,uv.yx)\n    :s < 3?texture(iChannel2,uv)\n    :      texture(iChannel3,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}