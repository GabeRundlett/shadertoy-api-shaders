{
    "Shader": {
        "info": {
            "date": "1553885150",
            "description": "tutorial",
            "flags": 0,
            "hasliked": 0,
            "id": "tsjSDD",
            "likes": 2,
            "name": "Hexagon (layout)",
            "published": 3,
            "tags": [
                "tutorial",
                "artofcode"
            ],
            "usePreview": 0,
            "username": "deerfeeder",
            "viewed": 474
        },
        "renderpass": [
            {
                "code": "float skew = 1.73;\nfloat blur = 0.05;\nfloat scale = 10.;\nfloat HexDist(vec2 p) {\n    // vertical mirror\n\tp = abs(p);\n    \n    // hex skew;\n    float c = dot(p, normalize(vec2(1,skew)));\n    // vertical sides\n    c = max(c, p.x);\n    \n    return c;\n}\n\n\nvec4 HexCoords(vec2 uv){\n    \t//skew\n    vec2 r = vec2(1,skew);\n    vec2 h = r * 0.5;\n    \n    vec2 a = mod(uv, r)-h;\n\t\n    \n    //basegrid midpoints\n    vec2 b = mod(uv-h, r )-h;\n    \n    \n    vec2 gv = dot(a,a) < dot(b,b) ? a : b;\n    vec2 id = uv - gv;\n    return vec4(gv.x, gv.y,id.x,id.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \t// middle & squared \n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0);\n\tuv = uv * scale;\n    \n   \n    \n\tcol.gb = HexCoords(uv).xy;\n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}