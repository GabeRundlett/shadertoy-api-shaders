{
    "Shader": {
        "info": {
            "date": "1700604956",
            "description": "CC0: Simplistic skyline\nor my own secret purposes created this simple city skyline\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ctVyDy",
            "likes": 14,
            "name": "CC0: Simplistic skyline",
            "published": 3,
            "tags": [
                "2d",
                "city"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "// CC0: Simplistic skyline\n// For my own secret purposes created this simple city skyline\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n\nfloat mod1(inout float p, float size) {\n  float halfsize = size*.5;\n  float c = floor((p + halfsize)/size);\n  p = mod(p + halfsize, size) - halfsize;\n  return c;\n}\n\nfloat hash1(float co) {\n  co += 123.4;\n  return fract(sin(co*12.9898) * 13758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = vec3(1.0-q.y);\n  float t = 1.0;\n  for (float i = 0.; i < 4.; ++i) {\n    vec2 cp = p;\n    cp /= 10.0/(10.0+i);\n    float cn = mod1(cp.x, 0.05);\n    float ch = hash1(cn+123.4*float(i))*smoothstep(32.0, 4.0, abs(cn))*step(1.0, abs(cn));\n    t = min(t,mix(i*0.125, 1.0, step(0.7*ch, p.y)));\n  }\n  col *= t;\n  col = sqrt(col);\n  \n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}