{
    "Shader": {
        "info": {
            "date": "1646805759",
            "description": "#2 for hypnosis set",
            "flags": 0,
            "hasliked": 0,
            "id": "ss2fR3",
            "likes": 2,
            "name": "hypnosis2",
            "published": 3,
            "tags": [
                "hypnosis"
            ],
            "usePreview": 0,
            "username": "ufffd",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "float smoothedge(in float val, in float edge) {\n    float pxl = 1./iResolution.y;\n    return smoothstep(edge-pxl*1.,edge,val);\n}\n\nfloat nsin(in float val) {\n    return sin(val)*0.5+0.5;\n}\n\nfloat drawline(in float val, in float edge, in float width) {\n    return smoothedge(val,edge+width) - smoothedge(val,edge-width);\n}\n\nfloat bluredge(in float val, in float edge, in float blur) {\n    float pxl = 1./iResolution.y;\n    return smoothstep(edge-pxl*blur,edge,val);\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvc = vec2(iResolution.x/iResolution.y * (uv.x - 0.5) + 0.5,uv.y);\n    \n    vec2 warp = uvc;\n    \n    float mono = 1.;\n    \n    float flower = 0.;\n    \n    for (int i=0;i<58;i++){\n    for (int j=0;j<14;j++) {\n        // hex grid\n        float fi = float(i);\n        float row = floor(fi/6.);\n        vec2 cp = vec2(\n            0.5 * (mod(fi,6.) + mod(row,2.) / 2.),\n            row / 12. * sqrt(3.)\n        );\n        // magic numbers\n        cp.y += 0.2225;\n        cp.x -= 0.2;\n        float cs = float(j) / 22.5;\n        cs /= 4.; // toggle\n        cs = 1./6. - cs;\n        // draw circle\n        float circle = distance(uvc+cp-0.8, vec2(0.5));\n        // mono += circle * noise(cp * 200. + iTime * .01);\n        // mono += noise(cp * 200. + iTime * .001);\n        mono += bluredge(circle,cs,iResolution.y * .1 * sin(\n            distance(uvc,vec2(0.5)) + iTime * 0.5\n        ));\n        if (j==0)\n            flower += drawline(circle,cs,0.001);\n    }\n    }\n    \n    \n    flower = mod(flower,3.0) * nsin(3.14 + iTime*0.5);\n    \n    mono += flower * .1;\n    \n    mono = mod(mono,2.);\n    \n    float bw = smoothedge(mono,0.5);\n    \n    // bw = noise(uvc * 20. + iTime * .01);\n    // bw = flower;\n    \n    vec3 col = vec3(bw);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}