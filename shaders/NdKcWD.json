{
    "Shader": {
        "info": {
            "date": "1654881421",
            "description": "reproducing https://twitter.com/gsarcone/status/1535030655817601039\n",
            "flags": 0,
            "hasliked": 0,
            "id": "NdKcWD",
            "likes": 22,
            "name": "concentric circles (233 chars)",
            "published": 3,
            "tags": [
                "2d",
                "illusion",
                "fake3d",
                "2tweets",
                "perception",
                "short",
                "golf",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 410
        },
        "renderpass": [
            {
                "code": "// vec2 p;   // --- Shane octogon variant\n// #define length(q) ( p = abs(q), max(max(p.x, p.y), (p.x + p.y)*.7) )\n\n\n\n#define C(I,J,n)                                                  \\\n    for (float i=0.; ++i < n; )                                   \\\n        O = min(O, abs( length(  ( u+u - R ) / R.y                \\\n                               + (.5-I/20.)*cos(iTime+vec2(0,33)) \\\n                              ) -J/20.                            \\\n                      ) *R.y/2. );\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy;\n    O = 1.-O*0.;                // O += 1.-O; no longer work on some machines\n    C(    i,     i , 6.)\n    C(.25+i, .25-i , 6.)\n    C(    i, .5 -i ,11.)\n    O = sqrt(O);\n}\n\n\n\n\n\n\n/**\n\n// --- 239 chars\n\n#define C(i,j) O = min(O, abs( length(  ( u+u - R ) / R.y                \\\n                                      + (.5-i/20.)*cos(iTime+vec2(0,33)) \\\n                                     ) -j/20.                            \\\n                             ) *R.y/2. )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy;\n    O += 1.-O;\n    for (float i=0.; ++i < 6.; )\n         C(    i,     i ),\n         C(.25+i, .25-i ),\n         C(    i, .5 -i ),\n         C(.25-i, .75-i );\n        \n    O = sqrt(O);\n}\n\n/**/\n\n\n\n\n\n\n/* // --- 247 chars\n\n#define C(i,j) O = min(O, abs( length(U+(.5-i/20.)*D) -j/20. ) *R.y/2. )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u+u - R ) / R.y,\n         D = cos(iTime+vec2(0,33));\n\n    O += 1.-O;\n    for (float i=0.; ++i < 6.; )\n         C(    i,     i ),\n         C(.25+i, .25-i ),\n         C(    i, .5 -i ),\n         C(.25-i, .75-i );\n        \n    O = sqrt(O);\n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}