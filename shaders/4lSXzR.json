{
    "Shader": {
        "info": {
            "date": "1440955127",
            "description": "experiment math painting :)",
            "flags": 0,
            "hasliked": 0,
            "id": "4lSXzR",
            "likes": 59,
            "name": "Flower at night",
            "published": 3,
            "tags": [
                "flower",
                "pattern"
            ],
            "usePreview": 0,
            "username": "yibojiang",
            "viewed": 3105
        },
        "renderpass": [
            {
                "code": "//yibojiang, 2015-8-30\n#define pi 3.1415926\n#define flyCount 40\n\nfloat pingPong(float v) {\n\n  const float amplitude = 1.;\n  const float t = pi * 2.0;\n  float k = 4.0*amplitude / t;\n  float r = mod( v  , t);\n  float d = floor(v / (0.5 * t) );\n  return mix(k * r - amplitude ,  amplitude * 3. - k * r , mod(d, 2.0));\n\n}\n\nfloat getRad(vec2 q) {\n  return atan(q.y, q.x);\n}\n\nvec2 hash(vec2 p)\n{\n  p = vec2( dot(p, vec2(127.1, 311.7)),\n            dot(p, vec2(269.5, 183.3)) );\n  return -1. + 2.*fract(sin(p) * 53758.5453123);\n}\n\nvec2 noise(vec2 tc) {\n  return hash(tc);\n}\n\nfloat firefly(vec2 p, float size) {\n  return smoothstep(0.0, size, length(p) );\n\n}\n\nconst float pow = 1.0;\nconst float flySpeed = 0.1;\nconst float duration = 1.0;\n\nvec3 drawFlower(vec3 col, vec2 p, vec2 flowerP, float t, float count, float ratio)\n{\n  \n  vec2 q = p - flowerP - vec2( pow * 0.008 * cos(3.0*iTime) , pow * 0.008 * sin(3.0*iTime) ) ;\n  vec2 rootP = p - flowerP - vec2( pow * 0.02 * cos(3.0*iTime) * p.y , -0.48 + pow * 0.008 * sin(3.0*iTime) );\n  q.y *= ratio;\n  //draw stem\n  float width = 0.01;\n  float h = 0.5;\n  float w = 0.0005;\n\n  col = mix(vec3(0.5, 0.7, 0.4), col, \n            1.0 - (1.0 - smoothstep(h, h + width, abs(rootP.y)))\n            * (1.0 - smoothstep(w, w + width, abs(rootP.x - 0.1 * sin(4.0 * rootP.y + pi * 0.35)))));\n\n  //draw flower\n  vec3 flowerCol = mix(vec3(0.7, 0.7, 0.2), vec3(0.7, 0.9, 0.7), smoothstep(0.0, 1.0, length(q) * 10.0));\n\n  float r = 0.1 + 0.05 * ( pingPong( getRad( q ) * count  + 2.*q.x * (t - duration)  )  );\n\n  col = mix(flowerCol, col, smoothstep(r, r + 0.02,  length(q)));\n\n  //draw buds\n  float r1 = 0.04;\n  vec3 budCol = mix (vec3(.3, .4, 0.), vec3(.9, .8, 0.), length(q) * 10.0);\n  col = mix(budCol, col, smoothstep(r1, r1 + 0.01,  length(q)));\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n  float t = duration * (1. + sin(3.0 * iTime ) );\n\n  vec2 p = fragCoord.xy / iResolution.xy;\n\n  float ratio = iResolution.y / iResolution.x;\n\n  vec2 uv = p;\n  uv.y *= ratio;\n\n  //vec2 flowerP = ;\n  \n  //sky\n  vec3 col = mix( vec3(0.1, 0.6, 0.5), vec3(0.2, 0.1, 0.2), sqrt(p.y) * .6 );\n  col = mix(drawFlower(col, p, vec2(0.618, 0.518), t, 7.0, ratio), col, 1.0 - smoothstep(0.0, 0.01, length(p)));\n  col = mix(drawFlower(col, p, vec2(0.418, 0.418), t*4.0, 6.0, ratio), col, 1.0 - smoothstep(0.0, 0.01, length(p)));\n  col = mix(drawFlower(col, p, vec2(0.818, 0.318), t*2.0, 8., ratio), col, 1.0 - smoothstep(0.0, 0.01, length(p)));\n\n  for (int ii = 0; ii < flyCount; ii++) {\n    float i = float(ii);\n    float seed = i / float(flyCount);\n    float t1 = 1.0*(1. + sin(noise(vec2(seed) ).x * iTime));\n    vec2 fireflyP = uv - vec2(noise(vec2(seed) ).x + noise(vec2(seed) ).y * t1 * flySpeed, noise(vec2(seed) ).y + noise(vec2(seed) ).y * t1 * flySpeed);\n    float fly = firefly( fireflyP, 0.002 + 0.008 * seed );\n    vec3 flyCol = mix(vec3(0.1, 0.9, 0.1) * t1, vec3(0.0), fly );\n    col += flyCol;\n  }\n  fragColor = vec4(col, 0.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}