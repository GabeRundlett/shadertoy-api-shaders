{
    "Shader": {
        "info": {
            "date": "1498806422",
            "description": "Visualizing max/min pooling downsampling filters.\nClick on left side of screen for min pooling, right side for max.\nMouse y axis controls amount of downsampling (possible modes are 1x1, 2x2, 4x4, 8x8, 16x16, 32x32, 64x64)",
            "flags": 34,
            "hasliked": 0,
            "id": "MdXfDs",
            "likes": 2,
            "name": "max and min pooling",
            "published": 3,
            "tags": [
                "filter",
                "max",
                "cnn",
                "downsample",
                "pooling"
            ],
            "usePreview": 0,
            "username": "tehsauce",
            "viewed": 994
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float squash = exp2(floor(iMouse.y/iResolution.y*6.0));\n    vec3 tex = texelFetch(iChannel0, ivec2(fragCoord/squash),0).rgb;\n\tfragColor = vec4(tex,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float xSize = uv.x/iResolution.x; //pixel size\n    float ySize = uv.y/iResolution.y;\n\n    float squash = exp2(floor(iMouse.y/iResolution.y*6.0));\n    \n   \tbool mouse = iMouse.x/iResolution.x > 0.5;\n\n    if (uv.x<1.0/squash && uv.y < 1.0/squash) {\n        uv *= squash;\n        int p = int(squash);\n        vec3 pixV = mouse ? vec3(0.0) : vec3(1.0);\n        for (int i=0; i<p; ++i) {\n            for (int j=0; j<p; ++j) {\n                vec3 current = \n                    texelFetch(iChannel0, ivec2(fragCoord*squash) \n                                   +ivec2(i,j), 0).rgb;\n                pixV = mouse ? max(pixV, current) : min(pixV, current);\n                \n            }\n        }\n\n        fragColor = vec4( (pixV), 1.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}