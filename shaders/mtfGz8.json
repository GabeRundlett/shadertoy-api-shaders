{
    "Shader": {
        "info": {
            "date": "1671268449",
            "description": "Optimized",
            "flags": 32,
            "hasliked": 0,
            "id": "mtfGz8",
            "likes": 3,
            "name": "Fork optimized Faknsnjd6 226",
            "published": 3,
            "tags": [
                "spirograph",
                "rollingfractal",
                "orbitfractal"
            ],
            "usePreview": 0,
            "username": "Faknsnjd6",
            "viewed": 188
        },
        "renderpass": [
            {
                "code": "//More Spirograph by eiffie\n//Trying (and failing) to make a better DE for parameterized curves.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec3 col=texture(iChannel0,fragCoord/iResolution.xy).rgb;\n    fragColor=vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define S 25\n#define I 7\nfloat s;\nfloat C(float t){\n    float sgn=1.0;if(mod(t,54.0)>27.0)sgn=-1.0;t=floor(mod(t,27.0));if(t<10.0)return(2.0+t*0.25)*sgn;t-=10.0;if(t<10.0)return(2.0+t*0.33333)*sgn;t-=10.0;if(t<1.0)return 3.82845*sgn;if(t<2.0)return 3.64575*sgn;if(t<3.0)return 3.44955*sgn;if(t<4.0)return 2.7913*sgn;if(t<5.0)return 2.5616*sgn;if(t<6.0)return 2.4495*sgn;return 2.30275*sgn;\n}\nvec2 F(float t){\n    float a=t,r=1.0;vec2 q=vec2(0.0);for(int j=0;j<I;j++){q+=vec2(cos(a),sin(a))*r;a*=s;r/=abs(s);}return q;\n}\nvec2 DF(vec2 p, float t){\n    float d1=length(p-F(t)),dt=0.1*d1,d2=length(p-F(t+dt));dt/=max(dt,d1-d2);return vec2(min(d1,d2),0.4*log(d1*dt+1.0));\n}\nvoid mainImage(out vec4 f,in vec2 g){\n    vec3 c=texture(iChannel0,g/iResolution.xy).rgb;vec2 p=(2.0*g-iResolution.xy)/iResolution.y;p*=1.75;float t=iTime*100.0,d=100.0;\n    float t1=(iTime+99.0)*0.2,t2=t1+1.0,l=smoothstep(0.5,1.0,fract(t1));s=mix(C(t1),C(t2),l);\n    for(int i=0;i<S;i++){vec2 v=DF(p,t);d=min(d,v.x);t+=v.y;}d=smoothstep(0.0,0.01,d);\n    c=mix(min(c,vec3(d*d*d,d*d,d)),vec3(1.0),0.01);f=vec4(c,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}