{
    "Shader": {
        "info": {
            "date": "1451947882",
            "description": "2D Multi Pass Motion Blur 2",
            "flags": 32,
            "hasliked": 0,
            "id": "MdcGWS",
            "likes": 22,
            "name": "2D Multi Pass Motion Blur 2",
            "published": 3,
            "tags": [
                "2d",
                "blur",
                "motion",
                "2",
                "multi",
                "pass"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 1382
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 f, in vec2 g )\n{\n    vec2 s = iResolution.xy;\n    \n    f = texture(iChannel0, g / s);\n    //f = 1.-smoothstep(f,f+0.01, vec4(1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 f, in vec2 g )\n{\n    vec2 s = iResolution.xy;\n    \n    // central uv\n\tvec2 uv = (2. * g - s)/s.y*2.;\n    \n    // time\n    float t = iTime*0.5;\n    \n    // radius\n    float r = (sin(t*5.)+.7);\n    \n    // paths\n    vec2 d0 = vec2(cos(t), sin(t)) * r;\n    vec2 d1 = vec2(cos(t+1.57), sin(t+1.57)) * r; // +90Â°\n    \n    // metaballs\n    float m0 = 0.02/dot(uv-d0,uv-d0);\n    float m1 = 0.02/dot(uv+d0,uv+d0);\n    float m2 = 0.02/dot(uv-d1,uv-d1);\n    float m3 = 0.02/dot(uv+d1,uv+d1);\n    \n    // current color\n\tvec4 col = vec4(vec3(m0+m1+m2+m3),1);\n    \n    // last color\n    vec4 bufA = texture(iChannel0, g / s*0.995);\n    \n    // simple blending of new and last color\n    f = col * 0.2 + bufA * 0.8;\n    \n    // add some colored aura to the metaballs\n    f += smoothstep(bufA, bufA+0.01, vec4(.8,.2,.5,1))*0.01;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}