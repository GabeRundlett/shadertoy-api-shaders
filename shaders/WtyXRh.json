{
    "Shader": {
        "info": {
            "date": "1582128561",
            "description": "Started with a nice old skool effect, then everything went wrong, eventually gives something cool.",
            "flags": 0,
            "hasliked": 0,
            "id": "WtyXRh",
            "likes": 2,
            "name": "大龙猫 - Gloubi-boulga",
            "published": 3,
            "tags": [
                "nonsense"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 382
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592\n#define PI2 (PI*2.)\n#define mTime iTime\n#define fTime floor(mTime) + pow(fract(mTime),.5)\n#define fTime2 floor(mTime*4.) + pow(fract(mTime*4.),1.4)\nfloat fig(vec2 uv,float offset) {\n    uv +=sin(iTime*(2.) +offset)*.1;\n    return  step(0.01,0.02-min(0.02,abs(uv.y)));  \n}\nmat2 r(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nvec3 ball(vec2 uv,float offset) {\n    vec2 uuv = uv;\n    \n    uv.x+=sin(fTime+offset*sin(fTime))*.7;\n    uv.y+=cos(fTime2+offset)*.1;\n    uv*=20.*pow(1.-length(fract(uuv*5.)-.5),.5);\n      uv *= r(-fTime);\n    uv*=r(offset*iTime)*2.;\n    \n    vec2 b = vec2(1.09+cos(length(uv*2.)),1.09+sin(length(uv*1.))  );\n    \n    vec2 d = abs(uv)-b;\n    float di = length(max(d,0.0)) + min(max(d.x,d.y),0.0) -.0001;\n    di = abs(di-cos(-iTime*1.)*.5);\n    float ddi = di;\n  \n       di = 1.- ( smoothstep(0.801, 0.901,di) /smoothstep(0.510, 0.801,di) )  ;\n \n  \n    \n    vec3 vdi = vec3(di,di*.5*(1.-sin(floor(iTime*10.)+uuv.y*10.)),di*.5*(1.-cos(floor(iTime*10.)+uuv.x*10.)));\n    \n       di = smoothstep(0.910, 0.01,ddi);\n    vec3 vddi = vec3(di,di*.5*(1.-sin(floor(iTime*10.)+uuv.y*10.)),di*.5*(1.-cos(floor(iTime*10.)+uuv.x*10.)));\n             if(mod(length(floor(.5*iTime+(uuv*r(3.*PI/4.))*10.)),4.)>2.) { return vdi ; }\n    return vddi;\n    }\nvec3 master(vec2 uv,float r) {\n  \n    float qq = 9.;\n    vec3 col = vec3(0.1);\n    /*for(float i=0.;i<=qq; i++) {\n       \n        float id = mod(i,qq);\n        float ie = mod(i+1.,qq);\n        float iff = mod(i+1.,qq);\n        float d = fig(uv,r*PI2*(id/6.));\n        float e = fig(uv,r*PI2*(ie/6.));\n        float f = fig(uv,r*PI2*(iff/6.));\n        col[int(mod(i,3.))] = (d*.25+e*.5+f*.25);\n    }*/\n    float d = fig(uv,0.);\n    float e = fig(uv,r*PI2*(1.6/6.));\n    \n    float f = fig(uv,r*PI2*(2.5/6.));\n    float g = fig(uv,r*PI2*(3.4/6.));\n    \n    float h = fig(uv,r*PI2*(4.3/6.));\n    float i = fig(uv,r*PI2*(5.2/6.));\n    \n    \n    \n    //vec3 col = vec3(0.1);\n    col.r = (d*.25+e*.5+f*.25);\n    col.g = (f*.25+g*.5+h*.25);\n    col.b = (h*.25+i*.5+d*.25);\n    return col;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.y;\n    //uv +=cos(iTime+uv.x*2.)*.3+.3;\n    vec3 bb = vec3(0.);\n    float l =30.;\n    for(float i=0.;i <l;i++){\n            bb += ball(uv,PI*i/l);\n    }\n    vec3 col = (master(uv-.35,1.) + master(uv+.35,-1.)) + bb;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}