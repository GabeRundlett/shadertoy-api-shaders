{
    "Shader": {
        "info": {
            "date": "1675623804",
            "description": "gradient",
            "flags": 0,
            "hasliked": 0,
            "id": "WstGzX",
            "likes": 3,
            "name": "fruity pacman?",
            "published": 3,
            "tags": [
                "gradient"
            ],
            "usePreview": 0,
            "username": "jildert",
            "viewed": 127
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926538\n#define TWO_PI 6.28318530718\n\nfloat circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv - p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat triangle(vec2 uvin, vec2 p, float size, float blur, float angle) {\n    vec2 uv = uvin - p;\n    float scale = ((sin(iTime * PI)+ 1.0) * 4.0) + 1.0;\n    uv.y *= scale;\n    uv = rotate2d(angle * PI / 180.0) * uv;\n    float n = 3.0;\n    float a = atan(uv.x,uv.y) + PI;\n    float r = TWO_PI / n;\n    float d = cos(floor(0.5 + a / r) * r - a) * length(uv);\n    return smoothstep(size,size-blur*scale/10.0,d);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    //uv = rotate2d(iTime) * uv;\n    vec2 normaluv = fragCoord.xy / iResolution.xy;\n    vec4 m = iMouse;\n    float dis = distance(m.xy, fragCoord);\n    \n    uv -=.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 p = vec2(0.0,0.0);\n    float c = circle(uv, p, 0.4, 0.008);\n    \n    c -= circle(uv, vec2(.03, .15), 0.05, 0.008);\n    if (c < 0.0) c = 0.0;\n    if (c == 0.0) {\n            fragColor = vec4(uv.x * .5,uv.y,.2,0);\n            return;\n    }\n    \n    c -= triangle(uv, vec2(0.4, 0.0), 0.2, 0.1, 90.0);\n   \n    if (c < 0.0) c = 0.0;\n    \n    if (c == 0.0) {\n        if (dis < 50.0) {\n            fragColor = vec4(uv.x,uv.y,0,0);\n            return;\n        }\n        \n        fragColor = texture(iChannel0, vec2(normaluv.x, normaluv.y));\n        if (fragColor[1] > 0.3 && fragColor[2] < 0.4 && fragColor[0] < 0.3) {\n            fragColor = vec4(uv.y, uv.x, uv.y + 0.2, 1.0);\n        }\n    }\n    else {    \n        fragColor = vec4(c * (uv.x + 0.5), c * (uv.y + 0.5), 0, 1);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}