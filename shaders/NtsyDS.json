{
    "Shader": {
        "info": {
            "date": "1648646976",
            "description": "procedural texture",
            "flags": 0,
            "hasliked": 0,
            "id": "NtsyDS",
            "likes": 2,
            "name": "05 smiley ",
            "published": 3,
            "tags": [
                "smiley"
            ],
            "usePreview": 0,
            "username": "ccc9527",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "//将(a,b)范围的数t映射到(0,1)之间\nfloat Remap01(float a,float b,float t)\n{\n    return clamp((t-a)/(b-a),0.0,1.0);\n}\n//将(a,b)范围的数t映射到(c,d)之间\nfloat Remap(float a,float b,float c,float d,float t)\n{\n    return Remap01(a,b,t)*(d-c)+c;\n}\n//将uv限制在一个矩形中且映射到(0,1)之间,xy为矩形左下角点，zw为矩形右上角点\nvec2 within(vec2 uv,vec2 xy,vec2 zw)\n{\n    return (uv-xy)/(zw-xy);\n}\n//眉毛\nvec4 Brow(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    float y = uv.y+0.1;\n    uv.y += uv.x*0.8-0.2;\n    uv.x -= 0.1;\n    uv -= 0.5;//因为uv被重映射到一个矩形框内，所以要将中心移动到中间\n    \n    float d1 = length(uv);\n    float s1 = smoothstep(0.45,0.35,d1);\n    float d2 = length(uv-vec2(0.07,-0.14));\n    float s2 = smoothstep(0.5,0.4,d2);\n    \n    float browMask = clamp(s1-s2,0.0,1.0);//两个圆相减获得一段弧作眉毛\n    float colMask = Remap01(0.7,0.8,y)*0.75;\n    colMask *= smoothstep(0.6,0.9,browMask);//browMask缩小一些得到colMask\n    //colMask区域显示偏亮的颜色\n    vec4 browCol = mix(vec4(0.4, 0.2, 0.2, 1.0), vec4(1.0, 0.75, 0.5, 1.0), colMask); \n    \n    col = mix(col,browCol,smoothstep(0.2,0.4,browMask));\n    \n    return col;\n}\n//笑脸的眼睛\nvec4 Eye(vec2 uv)\n{\n    uv -= 0.5;//因为uv被重映射到一个矩形框内，所以要将中心移动到中间\n    \n    vec4 col = vec4(1.0);\n    float d = length(uv);\n    vec4 irisCol = vec4(0.3,0.5,1.0,1.0);//虹膜颜色\n    //混合虹膜颜色\n    col.rgb = mix(col.rgb,irisCol.rgb,smoothstep(0.1,0.7,d)*0.4);\n    //眼睛的外描边 eye's outline.\n    col.rgb = mix(col.rgb,vec3(0.0),smoothstep(0.45,0.5,d)*\n        clamp(uv.y+uv.x*0.5,0.0,1.0));\n    //混合眼珠颜色\n    col.rgb = mix(col.rgb,vec3(0.0),smoothstep(0.3,0.28,d));\n    //蓝色区域\n    irisCol.rgb *= 1.0+smoothstep(0.3,0.05,d);\n    col.rgb = mix(col.rgb,irisCol.rgb,smoothstep(0.28,0.25,d));\n    //黑色区域\n    col.rgb = mix(col.rgb,vec3(0.0),smoothstep(0.16,0.14,d));\n    //眼睛中的高光,highLight\n    float highLight = smoothstep(0.1,0.09,length(uv-vec2(-0.15,0.15)));\n    highLight += smoothstep(0.07,0.06,length(uv-vec2(0.08,-0.08)));\n    col.rgb = mix(col.rgb,vec3(1.0),highLight);\n    \n    col.a = smoothstep(0.5,0.48,d);\n    \n    return col;\n}\n//嘴巴\nvec4 Mouth(vec2 uv)\n{\n    vec4 col = vec4(0.5,0.18,0.05,1.0);  //偏深红色\n    uv -= 0.5;        //因为uv被重映射到一个矩形框内，所以要将中心移动到中间\n    uv *= 1.5;        //缩小矩形\n    uv.y -= uv.x*uv.x*2.0;  //将椭圆变为所需嘴巴性,通过将uv.y按uv.x的大小进行偏移\n    float d = length(uv);\n    \n    col.a = smoothstep(0.5,0.48,d);\n    //牙齿，teeth\n    float teeth = length(uv-vec2(0.0,0.6));\n    vec3 tooth = vec3(1.0)*smoothstep(0.6,0.35,d);\n    col.rgb = mix(col.rgb,tooth,smoothstep(0.4,0.37,teeth));\n    //舌头，tongue\n    float tg = length(uv-vec2(0.0,-0.5));\n    col.rgb = mix(col.rgb,vec3(1.0,0.5,0.5),smoothstep(0.5,0.3,tg));\n    \n    return col;\n}\n//头部\nvec4 Head(vec2 uv)\n{\n    vec4 col = vec4(0.9,0.65,0.1,1.0);\n    \n    float d = length(uv);\n    col.a = smoothstep(0.5,0.49,d);//小于0.49为1，(0.49,0.5)是(1.0,0.0)，大于0.5是0\n    \n    float edgeShade = Remap01(0.35,0.5,d);//将距离中心(0.35,0.5)范围的值映射为(0,1)\n    edgeShade *= edgeShade;//变化更缓慢\n    col.rgb *= 1.0-edgeShade*0.5;\n    \n    //outline color\n    col.rgb = mix(col.rgb,vec3(0.6,0.3,0.1),smoothstep(0.47,0.48,d));\n    \n    //highLight,半圆\n    float highLight = smoothstep(0.41,0.405,d);\n    highLight *= Remap(0.41,-0.1,0.75,0.0,uv.y);\n    highLight *= smoothstep(0.18,0.19,length(uv-vec2(0.21,0.075)));//眼睛外的一圈深黄色，加深眼睛深度感\n    col.rgb = mix(col.rgb,vec3(1.0),highLight);\n    \n    //cheek,脸颊\n    d = length(uv-vec2(0.28,-0.2));\n    float cheek = smoothstep(0.2,0.01,d)*0.4;\n    cheek *= smoothstep(0.17,0.16,d);\n    col.rgb = mix(col.rgb,vec3(1.0,0.1,0.1),cheek);\n    \n    return col;\n}\n//笑脸\nvec4 Smiley(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    \n    uv.x = abs(uv.x);//镜像生成另一半眼睛和淡红脸颊\n    \n    vec4 head = Head(uv);\n    col = mix(col,head,head.a);\n    \n    vec4 eye = Eye(within(uv,vec2(0.03,-0.1),vec2(0.37,0.25)));\n    col = mix(col,eye,eye.a);\n    //这里的within将左下角为vec2(-0.3,-0.4)右上角为vec2(0.3,-0.1)的矩形uv映射为(0,0)-(1,1)\n    vec4 mouth = Mouth(within(uv,vec2(-0.3,-0.4),vec2(0.3,-0.1)));\n    col = mix(col,mouth,mouth.a);\n    //这里的within将左下角为vec2(0.03,0.2)右上角为vec2(0.4,0.45)的矩形uv映射为(0,0)-(1,1)\n    vec4 brow = Brow(within(uv,vec2(0.03,0.2),vec2(0.4,0.45)));\n    col = mix(col,brow,brow.a);\n    \n    return col;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    // Output to screen\n    fragColor = Smiley(uv);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}