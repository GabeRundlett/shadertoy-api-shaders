{
    "Shader": {
        "info": {
            "date": "1501332579",
            "description": "mouse.xy does stuff\n\nnot what i wanted. not too useful but i am keeping it\n\nchanging line 38 to \nreturn min(a,b);\nis likely more useful, but i am not doing the extra calculations to get it as signed distance.",
            "flags": 0,
            "hasliked": 0,
            "id": "XdSfR3",
            "likes": 0,
            "name": "instant drop",
            "published": 3,
            "tags": [
                "water",
                "drop"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 579
        },
        "renderpass": [
            {
                "code": "//sidetrack from:\n// https://www.shadertoy.com/view/Ms2BzV\n\n#define aa 10./iResolution.y\n//view zoom\n#define viewZoom 7.\n//view scaling\n#define fr(u) (u-.5*iResolution.xy)*viewZoom/iResolution.y\n#define mainImage(o,u)o=vec4(co(u),1.);\n\n\nfloat stretch(float a,float b){\n b=clamp(b,0.,1.);\n if(a<b)return a/b;\n return a/b;\n}\n\n//return __signed distance of [u] to line trough (0,0) and [m], m must be normalized.\nfloat line(vec2 u,vec2 m){u.x=-u.x;float k=dot(m,u.yx);return k;}\nfloat lineN(vec2 u,vec2 m){return line(u,normalize(m));}\n\nfloat lsa(vec2 u,vec2 m){return abs(line(u,m));}\nfloat lsaN(vec2 u,vec2 m){return abs(line(u,normalize(m)));}\n\n//return distance of [u] to ray from (0,0) trough [m], m must be normalized.\nfloat ils(vec2 u,vec2 m){\n //return mix(length(u),abs(dot(m,vec2(-u.y,u.x))),step(0.,dot(m,u)));//branchless\n if(dot(m,u)<0.)return length(u);return abs(dot(m,vec2(-u.y,u.x)));}\nfloat ilsN(vec2 u,vec2 m){return ils(u,normalize(m));}\n\nfloat daf(vec2 u,vec2 m){\n //float s=sign(m.x-m.y);\n   //s=0.;\n //if(s==0.)return (u.y-u.x)/sqrt(2.);//discontinuity resolver.\n \n float a=ilsN(u-m,-m+vec2(1));\n float b=ilsN(u-m,-m);\n return max(a,b);\n}\n\nfloat ssc(float a){\n a=clamp(a,0.,1.);\n return cos(a);\n}\n\n\nfloat map(vec2 u, vec2 m){\n return ssc(u.x)-u.y;\n return smoothstep(aa,-aa,abs(length(u-m))-1.);\n return 0.;\n    \n}\n\n// uv to color is the new \"main\"\nvec3 co(vec2 u){\n vec2 m=fr(iMouse.xy);u=fr(u);\n vec3 c;\n c.g=daf(u,m);\n //c.g=fract(c.g);\n c.g=smoothstep(aa,-aa,abs(c.g-1.)-.3);\n     \n \n c.rb=fract(u);\n return c;}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}