{
    "Shader": {
        "info": {
            "date": "1381365529",
            "description": "It's a drill. It's drilling.\n\nMaybe I kind of ripped off mrdiv a bit here.",
            "flags": 0,
            "hasliked": 0,
            "id": "XdfGDs",
            "likes": 3,
            "name": "Drill #1",
            "published": 3,
            "tags": [
                "drill"
            ],
            "usePreview": 0,
            "username": "WAHa_06x36",
            "viewed": 636
        },
        "renderpass": [
            {
                "code": "const float epsilon=0.02;\nconst float pi=3.141592;\n\nfloat dist(vec3 pos)\n{\n\tpos.z-=0.2;\n\tfloat d=abs(pos.x)+abs(pos.y)+abs(0.5*pos.z)-sqrt(3.0);\n\tpos.xy=mat2(cos(pi/8.0),sin(pi/8.0),-sin(pi/8.0),cos(pi/8.0))*pos.xy;\n\td=min(d,abs(pos.x)+abs(pos.y)+abs(0.5*pos.z)-sqrt(3.0));\n\tpos.xy=mat2(cos(pi/8.0),sin(pi/8.0),-sin(pi/8.0),cos(pi/8.0))*pos.xy;\n\td=min(d,abs(pos.x)+abs(pos.y)+abs(0.5*pos.z)-sqrt(3.0));\n\tpos.xy=mat2(cos(pi/8.0),sin(pi/8.0),-sin(pi/8.0),cos(pi/8.0))*pos.xy;\n\td=min(d,abs(pos.x)+abs(pos.y)+abs(0.5*pos.z)-sqrt(3.0));\n\treturn d/2.0;\n}\n\nint intersect_object(vec3 dir,vec3 pos,out float t,out vec3 normal)\n{\n\tt=0.0;\n\tfor(int i=0;i<128;i++)\n\t{\n\t\tfloat d=dist(pos+dir*t);\n\t\tt+=d;\n\t\tif(d<0.0001)\n\t\t{\n\t\t\tnormal=normalize(vec3(\n\t\t\t\tdist(pos+dir*t+vec3(epsilon,0.0,0.0))-d,\n\t\t\t\tdist(pos+dir*t+vec3(0.0,epsilon,0.0))-d,\n\t\t\t\tdist(pos+dir*t+vec3(0.0,0.0,epsilon))-d\n\t\t\t));\n\t\t\treturn 1;\n\t\t}\n\t\tif(t>7.0) return 0;\n\t}\n\treturn 0;\n}\n\nvec3 environment(vec3 dir)\n{\n\tvec3 rgb=texture(iChannel0,vec3(dir.x,dir.y,-dir.z)).xzz;\n\treturn pow(rgb,vec3(1.0,2.0,4.0))*(1.0+0.1*sin(iTime*32.3));\n}\n\nmat3 inv;\n\nmat3 _transpose(mat3 m)\n{\n\t\treturn mat3(m[0][0],m[1][0],m[2][0],\n\t\t\t    m[0][1],m[1][1],m[2][1],\n\t\t\t    m[0][2],m[1][2],m[2][2]);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position=(2.0*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n//\tfloat a=sin(iTime*0.3*2.0);\n//\tfloat b=iTime*0.2*2.0;\n\tfloat a=0.5+sin(iTime*39.0)*0.015;\n\tfloat b=-0.5+sin(iTime*21.0)*0.015;\n\tmat3 rot=mat3(\n\t\t       cos(iTime*3.0),sin(iTime*3.0),0.0,\n\t\t      -sin(iTime*3.0),cos(iTime*3.0),0.0,\n\t          0.0,    0.0,   1.0);\n\trot*=mat3( cos(b),0.0,-sin(b),\n\t\t          0.0,1.0,    0.0,\n\t\t       sin(b),0.0, cos(b));\n\trot*=mat3(1.0,    0.0,   0.0,\n\t\t      0.0, cos(a),sin(a),\n\t\t      0.0,-sin(a),cos(a));\n\n\tconst int sqrtsamples=8;\n\tconst float camdistance=5.0;\n\t float focaldistance=4.0+0.0*sin(iTime*5.0);\n\tconst float lensfactor=0.2;\n\tconst float camfactor=1.0;\n\n\tvec3 col=vec3(0.0);\n\tfloat samples=0.0;\n\n\tfor(int y=0;y<sqrtsamples;y++)\n\tfor(int x=0;x<sqrtsamples;x++)\n\t{\n\t\tvec2 lens=2.0*(vec2(float(x),float(y))+0.5)/float(sqrtsamples)-1.0;\n\n\t\tif(dot(lens,lens)>1.0) continue;\n\t\t\n\t\tsamples+=1.0;\n\n\t\tvec3 pos=vec3(lens*lensfactor,-camdistance);\n\t\tvec3 focalpoint=vec3(position*focaldistance*camfactor,focaldistance-camdistance);\n\t\tvec3 dir=normalize(focalpoint-pos);\n\n\t\tinv=transpose(rot);\n\t\tvec3 localdir=rot*dir;\n\t\tvec3 localpos=rot*pos;\n\n\t\tfloat t;\n\t\tvec3 localnormal;\n\t\tint hit=intersect_object(localdir,localpos,t,localnormal);\n\t\tif(hit!=0)\n\t\t{\n\t\t\tvec3 localreflecteddir=localdir-localnormal*2.0*dot(localdir,localnormal);\n\t\t\tvec3 reflecteddir=inv*localreflecteddir;\n\t\t\tcol+=environment(reflecteddir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcol+=environment(dir);\n\t\t}\n\t}\n\tfloat vignette=pow(1.0-0.1*dot(position,position),2.0);\n\tfragColor=vec4(col/samples*vignette*1.2,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}