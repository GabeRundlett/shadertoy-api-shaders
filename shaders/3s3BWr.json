{
    "Shader": {
        "info": {
            "date": "1604751380",
            "description": "Check out: https://ai.googleblog.com/2019/08/turbo-improved-rainbow-colormap-for.html\n\nFor comparison: https://www.shadertoy.com/view/tddBR7\n\nhttps://shadertoy.com/view/Wd3BWr\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3s3BWr",
            "likes": 7,
            "name": "Google TurboColormap dimmed",
            "published": 3,
            "tags": [
                "color",
                "gradient",
                "turbocolormap"
            ],
            "usePreview": 0,
            "username": "morisil",
            "viewed": 490
        },
        "renderpass": [
            {
                "code": "// Fork of \"Google TurboColormap color study\" by morisil. https://shadertoy.com/view/Wd3BWr\n// 2020-11-07 12:07:43\n\n// Fork of \"Google TurboColormap grad. study\" by morisil. https://shadertoy.com/view/3dcfDn\n// 2020-11-07 12:04:55\n\n// Fork of \"spectral_zucconi6 gradient study\" by morisil. https://shadertoy.com/view/wsdBR7\n// 2020-11-07 10:50:52\n\n// Fork of \"spectral_zucconi6 color study\" by morisil. https://shadertoy.com/view/tddBR7\n// 2020-11-07 01:33:41\n\nfloat dim(float x) {\n\treturn -4. * pow(x - .5, 2.) + 1.;    \n}\n\nvec3 dimmedTurbo(float x) {\n    return TurboColormap(x) * dim(x);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\tvec3 color = mix(\n        dimmedTurbo(mod(uv.x - iTime * .04, 1.)),\n        dimmedTurbo(1. - mod(uv.x + iTime * .15, 1.)),\n        uv.y\n    );\n    fragColor = vec4(color, 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Copyright 2019 Google LLC.\n// SPDX-License-Identifier: Apache-2.0\n\n// Polynomial approximation in GLSL for the Turbo colormap\n// Original LUT: https://gist.github.com/mikhailov-work/ee72ba4191942acecc03fe6da94fc73f\n\n// Authors:\n//   Colormap Design: Anton Mikhailov (mikhailov@google.com)\n//   GLSL Approximation: Ruofei Du (ruofei@google.com)\n\n\nfloat saturate (float x) {\n    return min(1.0, max(0.0,x));\n}\n\nvec3 TurboColormap(in float x) {\n  const vec4 kRedVec4 = vec4(0.13572138, 4.61539260, -42.66032258, 132.13108234);\n  const vec4 kGreenVec4 = vec4(0.09140261, 2.19418839, 4.84296658, -14.18503333);\n  const vec4 kBlueVec4 = vec4(0.10667330, 12.64194608, -60.58204836, 110.36276771);\n  const vec2 kRedVec2 = vec2(-152.94239396, 59.28637943);\n  const vec2 kGreenVec2 = vec2(4.27729857, 2.82956604);\n  const vec2 kBlueVec2 = vec2(-89.90310912, 27.34824973);\n  \n  x = saturate(x);\n  vec4 v4 = vec4( 1.0, x, x * x, x * x * x);\n  vec2 v2 = v4.zw * v4.z;\n  return vec3(\n    dot(v4, kRedVec4)   + dot(v2, kRedVec2),\n    dot(v4, kGreenVec4) + dot(v2, kGreenVec2),\n    dot(v4, kBlueVec4)  + dot(v2, kBlueVec2)\n  );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}