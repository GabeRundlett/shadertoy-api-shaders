{
    "Shader": {
        "info": {
            "date": "1623951662",
            "description": "simple shader, generates bricks pattern with a bit of randomness.",
            "flags": 0,
            "hasliked": 0,
            "id": "flBGWw",
            "likes": 5,
            "name": "brick generator",
            "published": 3,
            "tags": [
                "procedural",
                "pattern",
                "bricks"
            ],
            "usePreview": 0,
            "username": "Sp3cim4n",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "#define ANIMATED_SEED       floor(iTime * 2.0)\n#define FIXED_SEED          32.4\n#define BRICK_SIZE          0.1\n#define BRICK_ASPECT        3.0\n#define BRICK_PADDING       0.1\n#define BRICK_PADDING_BLUR  0.1\n#define BRICK_COLOR_A       vec3(0.88,0.32,0.28)\n#define BRICK_COLOR_B       vec3(0.70,0.15,0.1)\n#define BRICK_COLOR_C       vec3(0.1,0.1,0.25)\n\nfloat r11(float seed)\n{\n    return fract(sin(42.11*seed + 90.33)*1277.3);\n}\n\nfloat r21(vec2 seed)\n{\n    return fract(sin(82.33*seed.x + 72.3 * seed.y)*5432.677);\n}\n\nvoid makeBrick(vec2 uv, out vec2 id,out vec2 lv)\n{\n    vec2 brickUV = vec2(uv.x/BRICK_ASPECT,uv.y);\n    id = floor(brickUV / BRICK_SIZE);\n    if(int(id.y)%2 == 0)\n    {\n        brickUV.x += BRICK_SIZE*0.5;\n        id = floor(brickUV / BRICK_SIZE);\n    }\n    lv = fract(brickUV / BRICK_SIZE);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.0*fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    float seed = ANIMATED_SEED;\n    //float seed = FIXED_SEED;\n    \n    vec2 id;\n    vec2 lv;\n    makeBrick(uv, id, lv);\n    \n    //color brick randomly\n    float x1 = smoothstep(0.0,BRICK_PADDING/BRICK_ASPECT,lv.x);\n    float x2 = smoothstep(1.0,1.0-BRICK_PADDING/BRICK_ASPECT,lv.x);\n    float y1 = smoothstep(0.0,BRICK_PADDING,lv.y);\n    float y2 = smoothstep(1.0,1.0-BRICK_PADDING,lv.y);\n    float brickInsideMask = x1 * x2 * y1 * y2;\n    \n    float colMixParam = r21(id * seed);\n    vec3 col = mix(BRICK_COLOR_A, BRICK_COLOR_B, colMixParam);\n    \n    col = mix(BRICK_COLOR_C,col ,brickInsideMask);\n \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}