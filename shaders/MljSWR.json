{
    "Shader": {
        "info": {
            "date": "1442957430",
            "description": "Simple line flame created by using Perlin noise",
            "flags": 0,
            "hasliked": 0,
            "id": "MljSWR",
            "likes": 29,
            "name": "Line flame",
            "published": 3,
            "tags": [
                "perlin"
            ],
            "usePreview": 0,
            "username": "davidm",
            "viewed": 1429
        },
        "renderpass": [
            {
                "code": "\nvec2 rand(vec2 co){\n    return texture(iChannel0, co).rg;\n    float x=fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    float y=fract(sin(dot(co.xy+vec2(3223.21323,-3323.312323) ,vec2(12.9898,78.233))) * 43758.5453);\n    return vec2(x,y);\n}\n\nvec3 hash( vec3 p ){\n\tp = vec3( dot(p,vec3(127.1,311.7, 234.6)),\n\t\t\t  dot(p,vec3(269.5,183.3,198.3)),\n              dot(p,vec3(169.5,283.3,156.9)));\n\n\tvec3 h = (fract(sin(p)*43758.5453123));\n    float alpha = acos(2.*h.x-1.);\n    float beta = 2.*3.1416*h.y;\n    return vec3(cos(beta)*sin(alpha), sin(beta)*cos(alpha), cos(alpha));\n}\n\nfloat blend(float x){\n\tfloat x2=x*x;\n\tfloat x3=x*x2;\n\treturn 6.*x3*x2-15.*x2*x2+10.*x3;\n}\n\n//https://iquilezles.org/articles/palettes\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat fnoisePerlin(float amp, float freq, float x, float y, float z){\n\tx=x*freq;\n\ty=y*freq;\n\tfloat fx=floor(x);\n\tfloat fy=floor(y);\n\tfloat fz=floor(z);\n\tfloat cx=ceil(x);\n\tfloat cy=ceil(y);\n\tfloat cz=ceil(z);\n    \n\tvec3 v000=hash(vec3(fx, fy, fz));\n\tvec3 v100=hash(vec3(cx, fy, fz));\n\tvec3 v010=hash(vec3(fx, cy, fz));\n\tvec3 v110=hash(vec3(cx, cy, fz));\n\tvec3 v001=hash(vec3(fx, fy, cz));\n\tvec3 v101=hash(vec3(cx, fy, cz));\n\tvec3 v011=hash(vec3(fx, cy, cz));\n\tvec3 v111=hash(vec3(cx, cy, cz));\n\n    \n\tfloat a000=dot(v000, vec3(x-fx,y-fy, z-fz));\n\tfloat a100=dot(v100, vec3(x-cx,y-fy, z-fz));\n\tfloat a010=dot(v010, vec3(x-fx,y-cy, z-fz));\n\tfloat a110=dot(v110, vec3(x-cx,y-cy, z-fz));\n\t\n    float a001=dot(v001, vec3(x-fx,y-fy, z-cz));\n\tfloat a101=dot(v101, vec3(x-cx,y-fy, z-cz));\n\tfloat a011=dot(v011, vec3(x-fx,y-cy, z-cz));\n\tfloat a111=dot(v111, vec3(x-cx,y-cy, z-cz));\n    \n    \n    float mx=blend(x-fx);\n    float my=blend(y-fy);\n    float mz=blend(z-fz);\n    \n    \n    float ix00=mix(a000, a100, mx);\n    float ix10=mix(a010, a110, mx);\n    float ix01=mix(a001, a101, mx);\n    float ix11=mix(a011, a111, mx);\n    \n    float iy0=mix(ix00,ix10, my);\n    float iy1=mix(ix01,ix11, my);\n    \n    float iz=mix(iy0, iy1, mz);\n    \n   \n\treturn (amp*iz);\n}\n\nfloat pt(float t){\n    vec2 uv = gl_FragCoord.xy/iResolution.y;\n    float f=0.;\n    float freq=2.5;\n    float amp=2.5;\n    for (float i=0.; i<3.; i+=1.0){\n    \tf+=(fnoisePerlin(amp, freq, uv.x,uv.y, t));\n        amp*=0.15;\n        freq*=2.0;\n    }\n    return 0.3*max(exp(1.-1.1*abs(f+uv.y*10.-5.)), 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = gl_FragCoord.xy/iResolution.xy;\n    float t=0.4*iTime;\n    vec3 c = vec3(0.);\n    c     += 0.99*pt(t+0.0)*pal(uv.x+iTime*0.2,  vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.3,0.20,0.20));\n    c     += 0.99*pt(t+0.2)*pal(uv.x+iTime*0.1,vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25));\n    fragColor.rgb = c;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}