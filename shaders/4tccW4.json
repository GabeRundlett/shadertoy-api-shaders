{
    "Shader": {
        "info": {
            "date": "1532534627",
            "description": "I've been making a lot of fluids lately but Im just guessing at how it should work. Some people on this website seem like they're like college educated experts on stuff. So I just want to know if I'm taking creative liberties or if this is physics\nThanks!",
            "flags": 32,
            "hasliked": 0,
            "id": "4tccW4",
            "likes": 30,
            "name": "Is this realistic ?",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1812
        },
        "renderpass": [
            {
                "code": "vec2 hash22(vec2 p)\n{//https://www.shadertoy.com/view/4djSRW\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy)*2.-1.;\n\n}\nvec2 vf (vec2 v) {\n\treturn texture(iChannel0, v).xy-vec2(0.1,0);\n}\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nfloat ff (vec2 U, vec2 o) {\n    float q = 0.25*iResolution.x;\n\tvec2 V = floor(U*q+0.5 + o)/q;\n    V += 0.1*hash22(floor(V*iResolution.xy))/q;\n    \n    vec2 v;\n    v = vf(V);\n    float a = 1e3;\n    \n    for (int i = 0; i < 3; i++) {\n        v = 0.5*vf(V);\n        a = min(a,float(1+i)*ln(U, V, V+v));\n        V += v;\n    }\n    \n    return max(1.-iResolution.x*0.4*a,0.);\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    U = U/iResolution.xy;\n    \n    float c = 0.;\n    for (int x = -2; x <= 2; x++) {\n    for (int y = -2; y <= 2; y++) {\n        c += 0.3*ff(U,vec2(x,y));\n    }\n    }\n    \n    \n    vec4 g = texture(iChannel0,U);\n   \tC.xyz = vec3(c);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1 || U.x < 3.) {\n        \n        Co = vec4(0.1,0,0,0);\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        float to = 0.;\n        for (int i = 0; i < 2; i++) {\n            vec2 tmp = t(v).xy;\n           \n            v -= tmp;\n        }\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 me = t(v,0,0);\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.04,0.04,1,0.01));\n        me.w += 0.9*(100.*to-me.w);\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        if (length(U-vec2(0.2,0.5)*ur)<10.||length(iMouse.xy-U)<5.) me.xyw *= 0.;\n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1 || U.x < 3.) {\n        \n        Co = vec4(0.1,0,0,0);\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        float to = 0.;\n        for (int i = 0; i < 2; i++) {\n            vec2 tmp = t(v).xy;\n           \n            v -= tmp;\n        }\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 me = t(v,0,0);\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.04,0.04,1,0.01));\n        me.w += 0.9*(100.*to-me.w);\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        if (length(U-vec2(0.2,0.5)*ur)<10.||length(iMouse.xy-U)<5.) me.xyw *= 0.;\n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1 || U.x < 3.) {\n        \n        Co = vec4(0.1,0,0,0);\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        float to = 0.;\n        for (int i = 0; i < 2; i++) {\n            vec2 tmp = t(v).xy;\n           \n            v -= tmp;\n        }\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 me = t(v,0,0);\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.04,0.04,1,0.01));\n        me.w += 0.9*(100.*to-me.w);\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        if (length(U-vec2(0.2,0.5)*ur)<10.||length(iMouse.xy-U)<5.) me.xyw *= 0.;\n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1 || U.x < 3.) {\n        \n        Co = vec4(0.1,0,0,0);\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        float to = 0.;\n        for (int i = 0; i < 2; i++) {\n            vec2 tmp = t(v).xy;\n           \n            v -= tmp;\n        }\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 me = t(v,0,0);\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.04,0.04,1,0.01));\n        me.w += 0.9*(100.*to-me.w);\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        if (length(U-vec2(0.2,0.5)*ur)<10.||length(iMouse.xy-U)<5.) me.xyw *= 0.;\n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}