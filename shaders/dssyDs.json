{
    "Shader": {
        "info": {
            "date": "1687332555",
            "description": "mouse controls camera\n\nhttps://en.wikipedia.org/wiki/Truss",
            "flags": 0,
            "hasliked": 0,
            "id": "dssyDs",
            "likes": 28,
            "name": "truss: structured beams",
            "published": 3,
            "tags": [
                "short",
                "truss"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 242
        },
        "renderpass": [
            {
                "code": "\n#define rot(a)      mat2(cos(a+vec4(0,11,33,0)))                    // rotation\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.;\n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -R.y) - R),                       // ray direction\n          p = vec3(0,0,5), q,                                       // marching point along ray \n          C = iMouse.z > 0. ? 6.*iMouse.xyz/R -3.                   // camera control\n                            : 3.* cos(.3*iTime + vec3(0,11,0));     // demo mode\n\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )                  // march scene\n        q = p, \n        q.yz *= rot(-C.y),                                          // rotations\n        q.xz *= rot(-C.x),\n        q.xy = length(q.xy) * cos( mod(atan(q.y,q.x),2.1)-1. + vec2(0,11) ), // 3- rot symmetry\n        q.z = mod(q.z,2.) - 1.,                                     // z-repeat\n        q.x -= .5,                                                  // faces = 0yz plane\n        t = min( length(vec2(q.x,abs(q.y)-.87)) -.1,                // long tubes\n                 max(length(vec2(q.x,.87*abs(q.z)+.5*q.y-.5))-.1, abs(q.y)-.9) ), // short tubes\n        p += .3*t*D;                                                // step forward = dist to obj  \n    \n   O *= O*O*O*2.;                                                   // color scheme \n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}