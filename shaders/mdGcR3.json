{
    "Shader": {
        "info": {
            "date": "1696366827",
            "description": "Experimenting with polar coordinates and voronoi",
            "flags": 0,
            "hasliked": 0,
            "id": "mdGcR3",
            "likes": 4,
            "name": "Polar Swirl",
            "published": 3,
            "tags": [
                "swirl",
                "loop",
                "polar"
            ],
            "usePreview": 0,
            "username": "Lewie4",
            "viewed": 125
        },
        "renderpass": [
            {
                "code": "// Voronoi formula by iq - https://www.shadertoy.com/view/MslGD8\n\n#define TAU 6.28318530718\n\nvec2 hash( vec2 p )\n{\n    p = vec2(dot(p,vec2(127.1,311.7)),\n             dot(p,vec2(269.5,183.3)));\n    return fract(sin(p)*18.5453);\n}\n\nvec2 voronoi(in vec2 x)\n{\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    vec3 m = vec3(8.,8.,8.);\n    for(int j=-1; j<=1; j++)\n        for(int i=-1; i<=1; i++)\n        {\n            vec2 g = vec2(float(i), float(j));\n            vec2 o = hash(n + g);\n            vec2 r = g - f + o;\n            float d = dot(r, r);\n            if(d<m.x)\n                m = vec3(d, o);\n        }\n\n    return vec2(sqrt(m.x), m.y+m.z );\n}\n\nvec2 toPolar(vec2 p)\n{\n    return vec2(atan(p.y, p.x)/TAU,length(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord = (fragCoord+fragCoord-iResolution.xy)/iResolution.y;\n    fragColor -= fragColor;\n    \n    vec2 offset = vec2(iTime * -.2, iTime * -.13);\n    vec2 p = toPolar(fragCoord);\n    p += offset;    \n    float a = voronoi(p).x;\n\n    p = toPolar(-fragCoord);\n    float l = smoothstep(.5, 0., distance(p.x, 0.));\n    p += offset;\n    float b = voronoi(p).x;\n\n    float c = mix(a, b, l);\n\n    c = pow(c, 3.);\n    float s = smoothstep(0., .22, c);\n\n    vec3 col = vec3(iTime + length(fragCoord) * 2.);\n    col += vec3(0.,1.,2.);\n    col = cos(col) + 1.9;\n    \n    fragColor = vec4(s * col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}