{
    "Shader": {
        "info": {
            "date": "1719865596",
            "description": "/*originals https://www.shadertoy.com/view/4ljXRR*/",
            "flags": 0,
            "hasliked": 0,
            "id": "4XySz1",
            "likes": 1,
            "name": "field of lines",
            "published": 3,
            "tags": [
                "lines",
                "hash",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 209
        },
        "renderpass": [
            {
                "code": "\nfloat hash (float v) {\n  return smoothstep(0.1*cos(iTime), 0.9, abs(sin(v))) * 20.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * q;\n    p.x *= iResolution.x / iResolution.y;\n    float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(p.xy) + .07)) * 2.2;\nfloat si = sin(t);\nfloat co = cos(t);\nmat2 ma = mat2(co, si, -si, co);\n\n    vec3 col = vec3(0.2, 0.3, 0.4);\n    vec3 c = vec3(0.0);\n    vec3 c2 = vec3(0.0);\n     vec3 c3 = vec3(0.0);\n    c += col / (abs(tan(hash(p.x) + cos(iTime + p.y+p.x) )));\n    c2 += col / (abs(tan(hash(p.y) + cos(iTime + p.x +p.y )) ));\n      c3 += col / (abs(tan(hash(p.x) + cos(iTime - p.y+p.x))));\n    c += col / (abs(tan(hash(p.y) + cos(iTime - p.x+p.y) )));\n    c += col / (abs(cos(hash(p.x*p.y) + cos(iTime - p.x+p.y) )));\n      c += col / (abs(sin(hash(p.x*p.y) + sin(iTime - p.y+p.x) )));\n    c /= 15.0;\n\n    fragColor = vec4(c+c2*vec3(1.0,1.,0.)+c3*vec3(0.5,2.5,0.5) , 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}