{
    "Shader": {
        "info": {
            "date": "1639170007",
            "description": "Another lucky find, reminds me of Little Red Riding Hood fairytale in the enchanted forest.",
            "flags": 0,
            "hasliked": 0,
            "id": "NtcSWM",
            "likes": 10,
            "name": "Deep in the Woods",
            "published": 3,
            "tags": [
                "3d",
                "geometry"
            ],
            "usePreview": 0,
            "username": "xavierseb",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "// Deep in the Woods\n\n#define rot(a) mat2(cos(a), sin(a), -sin(a), cos(a))\nconst float TAU = 6.28;   //atan(1.0) * 8.0;\n#define A(u,w) \tk=length(p.xy);p.x=k*(mod(atan(p.y,p.x),TAU/u)-TAU/u/2.);p.y=k-w\t\t\n#define B(u,w) \tk=length(p.yz);p.y=k*(mod(atan(p.z,p.y),TAU/u)-TAU/u/2.);p.z=k-w\t\n\n// FabriceNeyret2's suggestion\n#define C(u,w) \tk=length(p.yz); p.y=k*(p.z/k-.5)*6.28/12., p.z=k-10.   \t\n\n// previously\n//#define C(u,w) \tk=length(p.yz); p.y=k*abs(sin(atan(p.z,p.y))-.5)*TAU/u;p.z=k-w\t\n\nvec3 map(vec3 p, float u, float v) {\n\tfloat k;\n\tp.xy *= rot(u);\n\tp.yz *= rot(v);\n\t\t\n\tA(10.,0.);   // 0 here makes a sphere, easier to control color according to p\n\tB(12.,10.);\n\tA(10.,2.7); //A(18.,.7); \n\tC(12.,10.0);\n\tA(10.,2.7); \n\tB(12.,-5.7);\n\tA(10.,1.97); // 1.97+.05*cos(p.z*20.-time*8.)\n\tB(12.,10.5);\n\tA(16.,2.7); //10,2.7\n\tB(12.,-10.);\n\tA(10.,2.7); \n\tB(12.,10.);\n\t\n\tp.x = dot(abs(p), normalize(vec3(6.9,5,2.2))) - 1.6 ;\n\treturn p; \n}\n\n// code from FabriceNeyret2 thanks!\nvoid mainImage( out vec4 O, vec2 U ) \n{\n\tvec3 R = iResolution,\n         M = iMouse.xyz / R,\n         rd= normalize(vec3(U - .5 * R.xy, R.y)), p, d=R;\n\tfloat v= -8.*iTime/66., u=M.x+.25, c=.11, x, i=0.; \n\t p = vec3(0, (50.+20.*M.y)*c+3., -5.25*c-3.);\n\n\tfor (; i++ < 160. && d.x > .001; p += rd * d.x )\n\t    d = map(p, u, v);\n\n    x = max(0.,length(p)-12.) *4e2;\n    O = vec4( 144.-x,100.+x,80.-x,10) /i/i;\t\t\t\n}\n\n\n\n/*\n// FabriceNeyret2 's golfing \n#define r(a)     mat2(cos(a+vec4(0,11,33,0)))                           //\n#define A(u)     k = length(p.xy), m(u,x,y)                             //\n#define B        k = length(p.yz), m(12.,y,z)                           //\n#define m(u,x,y) p.x = k*( mod(atan(p.y,p.x), 6.28/u) -6.28/u/2. ), p.y = k\n\nvoid mainImage( out vec4 O, vec2 U ) \n{\n    vec3 R = iResolution, M = iMouse.xyz / R , p, q,\n         D = normalize( vec3(U - .5 * R.xy, R.y) );\n    float c=.11, i=0.,k=c; \n\n    for (q = vec3(0, (50.+20.*M.y)*c+3., -5.25*c-3.) ; \n         i++ < 160. && k > .001; q += D * k )\n        p = q,\n        p.xy *= r(M.x+.25),\n        p.yz *= r(-8.*iTime/66.),\t\n        A(10.),     B-10.,       A(10.)-2.7, \n        k = length(p.yz), p.y = k*(p.z/k-.5)*.524, p.z = k-10.,\n        A(10.)-2.7, B+5.7,       A(10.)-1.97,\n        B-10.5,     A(16.)-2.7,  B+10.,\n        A(10.)-2.7, B-10.,\n        k = dot(abs(p), vec3(.78,.57,.25) ) - 1.6;\n\n    k = max(0.,length(q)-12.) *4e2;\n    O = vec4( 144.-k,100.+k,80.-k,10) /i/i;\t\t\t\n}\n*/\n\n\n// previous code for mainImage()\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y, mouse=iMouse.xy/iResolution.xy;\n\tvec3 rd = normalize(vec3(uv, 1));\n\tfloat v=-8.*mod(iTime/66.,TAU), u=mouse.x, c=.11; \n\tvec3 p = vec3(0, (45.+25.*mouse.y)*c+3., -5.25*c-3.); // +-171.+262.*mouse.y  <- y term\n\tfragColor = vec4(0);\n\tfor (int i = 1; i < 160; i++) {\n\t\tvec3 d = map(p, u, v); \t\t\t\n\t\tif (d.x < 0.001) {\n\t\t\t//float x=max(0.,length(p)-11.7)*300.;\n\t\t\t//gl_FragColor = vec4( 144.-x*20.,100.+x,80.-x*200.,100)/float(4*i*i);\t\t\t\n\t\t\tfloat x=max(0.,length(p)-12.)*400.;\n\t\t\tfragColor = vec4( 144.-x,100.+x,80.-x,10)/float(i*i);\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\tp += rd * d.x;\n\t}\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}