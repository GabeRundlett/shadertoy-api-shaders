{
    "Shader": {
        "info": {
            "date": "1610909244",
            "description": "Creating the movements of circles using matrices. ",
            "flags": 0,
            "hasliked": 0,
            "id": "tlGcDh",
            "likes": 0,
            "name": "circle circulation",
            "published": 3,
            "tags": [
                "circle",
                "fract",
                "cirulation"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 228
        },
        "renderpass": [
            {
                "code": "// Author @patriciogv - 2015\n\n\nfloat circle(in vec2 _st, in float _radius){\n    // vec2 l = _st-vec2(0.5);\n    vec2 l = _st-vec2(1.0*abs(sin(iTime)));\n    return 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dot(l/2.,l)*4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.726,0.855,0.013);\n    float rep = 10.;\n    \n    // why the if statement does not work\n    // how to create increments \n    if(rep<= 3.){\n        rep = 3.;       \n        rep++;\n\n    }\n    if (rep >= 10.){\n        rep = 10.; \n        rep--;\n    }\n    \n    st*=rep;\n\n    // Scale up the space by 3\n    st = fract(st); // Wrap around 1.0\n\n    // Now we have 9 spaces that go from 0-1\n\n    color += vec3(st,st.x);\n    color /= vec3(circle(st,0.5));\n    color += vec3(circle(st/0.5,0.5));\n    color -= vec3(circle(st/2.5,0.252));\n    color += vec3(circle(st/0.080,0.524));\n\n\tfragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}