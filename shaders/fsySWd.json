{
    "Shader": {
        "info": {
            "date": "1635465833",
            "description": "simple drawing, definitely not efficient",
            "flags": 0,
            "hasliked": 0,
            "id": "fsySWd",
            "likes": 0,
            "name": "triquetra",
            "published": 3,
            "tags": [
                "poi",
                "triquetra",
                "thirdordermotion"
            ],
            "usePreview": 0,
            "username": "ufffd",
            "viewed": 115
        },
        "renderpass": [
            {
                "code": "const float zoom = .8;\nconst vec2 shift = vec2(0.0,0.088);\nconst vec2 flower = vec2(\n    1.0, // arm spins\n    -2.0 // hand spins\n);\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x -= (iResolution.x - iResolution.y) / iResolution.x * 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    uv -= 0.5;\n    \n    uv *= zoom;\n    \n    uv += shift;\n    \n    float bw = 1.0;\n    \n    for (int i=0;i<1000;i++){\n    \n        vec2 center = vec2(0.,0.2);\n\n        center = rotate(center, iTime + float(i) * 0.0407) * flower.x;\n        center += rotate(vec2(0.,0.2), (iTime + float(i) * 0.0407) * flower.y);\n\n        bw *= smoothstep(.03,.031, distance(uv,center));\n\n    }\n    \n    // Output to screen\n    fragColor = vec4(vec3(bw),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}