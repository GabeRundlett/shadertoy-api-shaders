{
    "Shader": {
        "info": {
            "date": "1580825389",
            "description": "Had the idea of creating NASAs old logo using small algorithms and a lot of symmetry.\n(There are some hacks and stuff - i know ;))\n\nNASA used the \"worm\" logo from 1975 until 1992.",
            "flags": 64,
            "hasliked": 0,
            "id": "WttSzN",
            "likes": 10,
            "name": "NASA 'the worm'",
            "published": 3,
            "tags": [
                "2d",
                "logo",
                "worm",
                "symmetry",
                "nasa"
            ],
            "usePreview": 0,
            "username": "flemmingdjensen",
            "viewed": 842
        },
        "renderpass": [
            {
                "code": "/*\nNASA \"the worm\", 1975â€“1992\n\nIn 1974, as part of the Federal Graphics Improvement Program of the \nNational Endowment for the Arts, NASA hired Richard Danne and Bruce Blackburn \nto design a more modern logo. In 1975, the agency switched to the modernist \nNASA logotype, nicknamed \"the worm\", a red, stylized rendering of the letters \nN-A-S-A. The A's horizontal bar is removed in the worm logo. \n\nThe NASA logotype was retired from official use on Friday May 22, 1992.\n\nhttps://en.wikipedia.org/wiki/NASA_insignia\n*/\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord-.5*iResolution.xy) / iResolution.y;\n    uv *= 2.15; uv.x += .05; uv.y += .2;\n\n    float col = 0.;\n    N(col, uv - vec2(-1.19, .13));\n    A(col, uv - vec2(-.31, 0.));\n    S(col, uv - vec2(.45, .128));\n    A(col, uv - vec2(1.26, 0.));\n    vec3 logoColor = vec3(col, .0, .15*col); \n    \n    float star = star(rotate(-iTime/8.)*(uv-vec2(1., .7)), 1.);\n    vec3 starColor = vec3(star*cos(iTime), .6*star, star*sin(iTime/.7));\n    \n    fragColor = vec4(logoColor + starColor, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 21125,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/headphoneactivist/nasa"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define W .09\n#define B .005\n\n#define DEG .0174533\n#define _S smoothstep\n\nmat2 rotate(float angle) {\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid line(inout float col, vec2 uv, float len) {\n    if (abs(uv.y) <= len) {\n    \tcol = max(col, _S(-W, -W+B, uv.x) -\n                       _S(W-B, W, uv.x));\n    }\n}\n\nvoid arc(inout float col, vec2 uv, float r, float angle) {\n    if (atan(uv.x/uv.y) < angle && uv.y >= 0.) {\n    \tcol = max(col, _S(r+W, r+W-B, length(uv)) - \n                       _S(r-W+B, r-W, length(uv)));\n    }\n}\n\nvoid N(inout float col, vec2 uv) {\n    line(col, (vec2(-.0345, .1)-uv*sign(uv.y))*rotate(DEG*-19.), .15);\n    arc(col, (vec2(-.221, .194)-uv*sign(uv.y))*rotate(DEG*-180.), .146, DEG*71.);\n    line(col, (vec2(.367, .106)-uv*sign(uv.x+uv.y)), .3);\n}\n\nvoid A(inout float col, vec2 uv) {\n    uv.x = abs(uv.x); // Y-axis symmetry\n    \n    if (uv.y > -.29) {\n    \tline(col, (vec2(.28, .0)-uv)*rotate(DEG*-21.), .4);\n    \tarc(col, (vec2(0., .321)-uv)*rotate(DEG*-90.), .146, DEG*-20.);\n    }\n}\n\nvoid S(inout float col, vec2 uv) {\n    uv *= rotate(DEG * 90.);\n    uv.x = -uv.x; // X-axis flip\n    \n    line(col, (vec2(.0, .07)-uv*sign(uv.y)), .07);\n    arc(col, (vec2(-.166, .14)-uv*sign(uv.y))*rotate(DEG*-180.), .166, DEG*90.);\n    line(col, (vec2(.332, .105)-uv*sign(uv.x+uv.y)), .245);\n}\n\n// Star grabbed from BigWIngs Starfield shader\n// https://www.shadertoy.com/view/tlyGW3\nfloat star(vec2 uv, float flare) {\n\tfloat d = length(uv);\n    float m = .05/d;\n    \n    float rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*flare;\n    uv *= rotate(DEG*45.);\n    rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*.3*flare;\n    \n    m *= _S(1., .2, d);\n    return m;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}