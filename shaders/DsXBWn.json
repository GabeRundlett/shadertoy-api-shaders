{
    "Shader": {
        "info": {
            "date": "1688594973",
            "description": "learning circle and triangle",
            "flags": 0,
            "hasliked": 0,
            "id": "DsXBWn",
            "likes": 2,
            "name": "learning circle + Triangle ",
            "published": 3,
            "tags": [
                "triangle",
                "cirlce"
            ],
            "usePreview": 0,
            "username": "tondoa",
            "viewed": 125
        },
        "renderpass": [
            {
                "code": "float sdfCircle(vec2 uv, float r, vec2 offset) {\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n    \n    return length(vec2(x, y)) - r;\n}\n\nfloat sdfTriangle ( in vec2 p, in float r)\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    \n    return-length(p)*sign(p.y);\n}\n\nvec2 offset(float t, float r, float o) \n{\n    vec2 rv = vec2(sin(iTime*t - o), cos(iTime*t - o))*r;\n    return rv *(sin(iTime*t)* 0.4 + 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy -0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float eps = 4.  /iResolution.y;\n\n    vec3 col = vec3(0.15);\n    for (float i = 1.; i < 7.; i++) {\n        float circle = smoothstep(0., eps, sdfCircle(uv, 0.05, offset(2., 0.3, i)));\n        vec3 color = 0.5 + 0.5 * i * cos(iTime + uv.xyx + vec3(0,2,4));\n        col = mix(color, col, circle);\n    }\n    \n    float triangle = smoothstep(0., eps, sdfTriangle(uv,(2.+sin(iTime*2.))*0.1-0.05));\n    \n    vec3 color = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4));\n    \n    col = mix(color, col, triangle);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}