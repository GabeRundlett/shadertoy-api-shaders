{
    "Shader": {
        "info": {
            "date": "1614013667",
            "description": "My attempt at golfing a raymarcher",
            "flags": 0,
            "hasliked": 0,
            "id": "wlVBRD",
            "likes": 3,
            "name": "Reflection Tunnel (731 chars)",
            "published": 3,
            "tags": [
                "reflection",
                "tunnel",
                "raymarch",
                "short",
                "golf",
                "golfed"
            ],
            "usePreview": 0,
            "username": "TheNosiriN",
            "viewed": 357
        },
        "renderpass": [
            {
                "code": "#define v vec3\n#define n normalize\n#define T (iTime*7.)\n#define P(p) -vec2(sin((p+T)*.1), sin((p+T*.2)*.1))*10.\n\n// Tunnel sdf (try playing with it)\nfloat M(v p) {\n    p.xy-=P(p.z),\n    p.z = mod(p.z+T+1., 2.) - 1.,\n    p.yz = abs(p.yz)-.6, p.x = length(p.xy);\n    return max(max(p.x-2., -p.x+1.7), -max(p.y,p.z));\n}\n\n//ray marcher\nvec2 R(v s, v r) {\n    float t,i,d;\n    for (; i<1. && t<99. && (d=M(s + t * r))>.001*t; t+=d*.7, i+=.01);\n    return vec2(t, i);\n}\n\n//main\nvoid mainImage( out vec4 O, vec2 C ) {\n    //constructing the projection\n    v L = iResolution,\n    t = v(P(0.), 0),\n    f = n(t - v(P(2.), 2)),\n    s = n(cross(f, v(0,1,0))),\n    r = (\n        mat4(s,0,cross(s, f),0,-f,0,vec4(1)) * \n        vec4(n(v((C-L.xy*.5)/L.y, 1.)), 0)\n    ).xyz;\n    \n    //first hit\n    t += r * (C = R(t, r)).x;\n    \n    //first bounce for reflection\n    f = v(-4, 4, 0) * .005;\n    O.x = C.x<99. ? (\n        C = R(t, reflect(r, n(\n            M(t+f.xyy) * f.xyy + \n            M(t+f.yxy) * f.yxy + \n            M(t+f.yyx) * f.yyx + \n            M(t+f.xxx) * f.xxx\n        )))\n    ).y*C.y*4. : .5;\n\n    //color by lerping using the distance\n    O.xyz = sqrt(mix(v(.9,.65,.83), v(.94,.78,.92), C.x*.2)*O.x);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}