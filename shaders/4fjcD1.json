{
    "Shader": {
        "info": {
            "date": "1722268233",
            "description": "creates c/2 orthogonal spaceships, will probably take a very long time",
            "flags": 32,
            "hasliked": 0,
            "id": "4fjcD1",
            "likes": 1,
            "name": "spaceship maker",
            "published": 3,
            "tags": [
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "janpitokiala",
            "viewed": 81
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define P(x,y) neighborhood+=S(x,y)\n#define S(x,y) int(texelFetch(iChannel0,ivec2(fragCoord)+ivec2(x-int(iFrame%2==0),y),0).r)\n#define R(x) if(neighborhood==x){color=1.;}\n//from https://www.shadertoy.com/view/WttXWX\nfloat random(uint x)\n{\n    x ^= x >> 16;\n    x *= 0x7feb352dU;\n    x ^= x >> 15;\n    x *= 0x846ca68bU;\n    x ^= x >> 16;\n    return float(x)/float(0xffffffffU);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame%int(iResolution.x*2.)==0) {\n     if(fragCoord.x>iResolution.x/2.) {\n      fragColor = vec4(vec3(step(0.5,random(uint(float(iFrame)*(iResolution.x/2.)*iResolution.y/(iResolution.x*2.)+fragCoord.x+fragCoord.y*(iResolution.x/2.))))),1.);\n      return;\n     } else {\n      fragColor = vec4(vec3(S(0,0)|S(int(iResolution.x/2.),0)),0.);\n      return;\n     }\n    }\n    int neighborhood = 0;\n    P(-1,-1);P(0,-1);P(1,-1);\n    P(-1,0);         P(1,0);\n    P(-1,1); P(0,1); P(1,1);\n    float color = 0.;\n    if(S(0,0)==0) {\n      R(3)\n    } else {\n      R(2) else R(3)\n    }\n    fragColor = vec4(vec3(color),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}