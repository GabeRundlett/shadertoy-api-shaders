{
    "Shader": {
        "info": {
            "date": "1502214602",
            "description": "yet another halftone effect, move mouse to change the size of element",
            "flags": 0,
            "hasliked": 0,
            "id": "lsSfWV",
            "likes": 13,
            "name": "Yet Another Halftone Effect",
            "published": 3,
            "tags": [
                "postprocessing",
                "halftone",
                "dotscreen",
                "comic",
                "greyscale"
            ],
            "usePreview": 1,
            "username": "starea",
            "viewed": 1255
        },
        "renderpass": [
            {
                "code": "// Ruofei Du\n// Dot Screen: https://www.shadertoy.com/view/4sBBDK\n// Yet Another Halftone Effect: https://www.shadertoy.com/view/lsSfWV\n// Golf version: https://www.shadertoy.com/view/XsjBWK\n\n// refracted by Dr. Neyret (https://www.shadertoy.com/user/FabriceNeyret2)\n#define greyScale(col)  dot( col, vec4( .2126, .7152, .0722, 0) )\n\nvoid mainImage( out vec4 fragColor, vec2 U )\n{\n\tvec2 R = iResolution.xy, \n         M = iMouse.xy / R;\n         U /= R;\n    \n    float eleSize = M.y < 1e-3 ? 6.\n                               : 5. + mix(-2., .5, M.x / M.y);\n    \n    vec2 uniformEleSize = eleSize / R,\n         d = mod( U, uniformEleSize) - uniformEleSize * .5; \n    \n    float grey = greyScale(texture(iChannel0, U - d)),\n          dist = length(d), \n         scale = 1. + .3 * sin(iTime),\n           rad = grey * uniformEleSize.x * scale; \n    \n    fragColor = vec4(dist < rad);\n}\n\n// original\n/*\nfloat greyScale(in vec3 col) {\n    return dot(col, vec3(0.2126, 0.7152, 0.0722));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float eleSize = iMouse.y < 1e-3 ? 6.0 : 5.0 + mix(-2.0, 0.5, iMouse.x / iMouse.y * iResolution.y / iResolution.x);\n    vec2 numEles = iResolution.xy / eleSize; \n    vec2 uniformEleSize = 1.0 / numEles; \n    vec2 d = mod(uv, uniformEleSize) - uniformEleSize * 0.5; \n    vec3 col = texture(iChannel0, uv - d).rgb; \n    float grey = greyScale(col); \n    float dist = length(d); \n    float scale = 1.0 + 0.3 * sin(iTime); \n    float rad = grey * uniformEleSize.x * scale; \n    col = mix(vec3(0.0), vec3(1.0), step(dist, rad));\n    fragColor = vec4(col, 1.0);\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}