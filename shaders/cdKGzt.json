{
    "Shader": {
        "info": {
            "date": "1678954811",
            "description": "Some plasma classic FX mixxed with hex tiling.",
            "flags": 0,
            "hasliked": 0,
            "id": "cdKGzt",
            "likes": 4,
            "name": "Plasma Hexagonal Trip",
            "published": 3,
            "tags": [
                "uv",
                "hexagon",
                "tiling"
            ],
            "usePreview": 0,
            "username": "rge15",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "float HexDist(in vec2 p)\n{\n    p = abs(p);\n    float d = dot( p, normalize(vec2(1.,1.73))); \n    d = max(d,p.x);\n    //d = step(d, 0.3);\n\n    return d;\n}\n\nvec4 HexUv( in vec2 uv )\n{\n    vec2 triSide = vec2(1.,1.73);\n    vec2 hSide = triSide*0.5;\n\n    vec2 gva = mod(uv,triSide) - hSide;\n    vec2 gvb = mod(uv-hSide,triSide) - hSide;\n\n    vec2 gv;\n    if(length(gva)<length(gvb))\n        gv = gva;\n    else\n        gv = gvb;\n    \n    \n    vec2 id = uv - gv;\n    \n    float hexDist = HexDist(gv);\n    \n    vec4 values = vec4(gv,id);\n    \n    return vec4(hexDist, 0.5-hexDist ,id);\n}\n\nvec2 Plasma(in vec2 uv)\n{\n    float len = length(uv);    \n    float x = uv.x*sin(.5*iTime);\n    float y = uv.y*sin(.2*iTime);\n    vec2 uv2 = vec2(x,y);\n    float len2 = length(uv2-sin(iTime));\n    \n    float final = sin(uv.x*3.+iTime);\n    final += sin(uv.y*2.+iTime);\n    \n    final += cos(sqrt(50.*len2+iTime));\n    vec2 point = vec2(sin(iTime*2.),cos(iTime*3.));\n    final += sin(sqrt(0.1+length(uv-point))-iTime);\n    \n    final = final*3.14;\n    \n    float val1 = sin(final);\n    float val2 = cos(final);\n    \n    return vec2(val1,val2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= .5*sin(iTime)+2.;    \n    float rot = iTime*0.5;\n    mat2 rot2D = mat2(cos(rot),-sin(rot),sin(rot),cos(rot));\n\n    vec4 hex = HexUv(uv*rot2D);\n    vec2 hexUV = (hex.xy)*3.;\n    \n    vec2 plasma = Plasma(hexUV);\n    \n    vec3 col = vec3(plasma.x*sin(iTime),plasma.y*sin(iTime*1.5),sin(iTime*0.5));\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}