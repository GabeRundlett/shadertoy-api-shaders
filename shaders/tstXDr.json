{
    "Shader": {
        "info": {
            "date": "1571828746",
            "description": "refraction",
            "flags": 0,
            "hasliked": 0,
            "id": "tstXDr",
            "likes": 7,
            "name": "refraction concept",
            "published": 3,
            "tags": [
                "refraction",
                "concept"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 609
        },
        "renderpass": [
            {
                "code": "float sphere(vec2 ray, vec2 dir, vec2 center, float radius, float n)\n{\n\tvec2 rc = ray-center;\n\tfloat c = dot(rc, rc) - (radius*radius);\n\tfloat b = dot(dir, rc);\n\tfloat d = b*b - c;\n\tfloat t = -b - n*sqrt(abs(d));\n\tfloat st = step(0.0, min(t,d));\n\treturn mix(-1., t, st);\n}\nfloat line(vec2 uv, vec2 p, vec2 p2){\n\tvec2 n=uv-p;\n\tvec2 w=p2-p;\n\tfloat r=clamp(dot(n,w)/dot(w,w),0.,1.);\n\tr=length(n-w*r);\n\n    return clamp(smoothstep(0.01,0.004,r)*(smoothstep(0.6,1.,1.)),0.,1.);\n}\nfloat point(vec2 uv, vec2 p){\n    p-=uv;\n\treturn 0.0001/dot(p,p);\n}\nconst float n_air=1.;\nconst float n_glass=1.2;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y*1.+vec2(0.7,0);\n    \n    vec2 ro=vec2(-1,0);\n    vec2 rd=normalize(vec2(-0.5,sin(iTime)*0.125)-ro);\n    vec2 c=vec2(1,0);\n    float r=0.5;\n    \n\n    float dist=sphere(ro,rd,c,r,1.);\n    vec2 surf=ro+rd*dist;\n    \n    vec2 norm=normalize(surf-c);\n    vec2 rd_refle=reflect(rd,norm);\n    vec2 rd_refra_1=refract(rd,norm,n_air/n_glass);\n    \n    float dist2=sphere(surf,rd_refra_1,c,r,-1.);\n    vec2 surf2=surf+rd_refra_1*dist2;\n    \n    vec2 norm2=normalize(c-surf2);\n    \n    vec2 rd_refra_2=refract(rd_refra_1,norm2,n_glass/n_air);\n    \n    \n    \n    float k=distance(c,uv)-r;\n    vec3 col = smoothstep(0.0001,0.,k*k)*vec3(0,0,1);\n    \n    \n\tcol+=point(uv,ro);\n    col+=point(uv,c);\n    col+=point(uv,rd*0.2+ro);\n    col+=point(uv,surf2);\n    col+=point(uv,surf);\n    col+=point(uv,surf+0.2*rd_refle);\n    col+=point(uv,surf+0.2*rd_refra_1);\n    col+=point(uv,surf2+0.2*rd_refra_2);\n    \n    col+=line(uv,ro,surf)*vec3(1,0,0);\n    col+=line(uv,surf,surf2)*vec3(1,0,0);\n    col+=line(uv,surf,surf+rd_refle)*vec3(1,0,0);\n    col+=line(uv,c,(surf-c)*2.+c)*vec3(0,1,0);\n\tcol+=line(uv,c,(surf2-c)*2.+c)*vec3(0,1,0);\n    col+=line(uv,surf2,surf2+rd_refra_2)*vec3(1,0,0);\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}