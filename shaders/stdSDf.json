{
    "Shader": {
        "info": {
            "date": "1639936131",
            "description": "example using this idea: \nhttps://www.shadertoy.com/view/7tdSDX\n\ni like the colors\n\nmore readable version: https://www.shadertoy.com/view/43GGDK",
            "flags": 0,
            "hasliked": 0,
            "id": "stdSDf",
            "likes": 55,
            "name": "random gallery",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 883
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nfloat rand(float val, vec2 ipos) {\n    float v = h21(floor(val) + 0.01 * ipos);\n    float v2 = h21(floor(val) + 1. + 0.01 * ipos);\n    float m = fract(val);\n    m = m * m * (3. - 2. * m); // could use different function here\n    return mix(v, v2, m);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n        \n    float sc = 7.;\n    uv.x += 0.04 * iTime;\n    uv.y -= cos(1.1 * floor(sc * uv.x) + 0.05 * iTime);\n     \n    vec2 ipos = floor(sc * uv) + 0.5;\n    vec2 fpos = sc * uv - ipos;\n    \n    // could use rand(,) instead of h21() here but it gets chaotic when u stack them\n    float a = 2. * pi * h21(ipos);\n    float val0 = h21(ipos) - 10. * (cos(a) * uv.x + sin(a) * uv.y) - 0.1 * iTime;\n    float v0 = rand(val0, ipos);\n    \n    float val = h21(ipos) - 2.5 * v0 * thc(4., v0 * 10. * length(fpos)) - 0.5 * iTime;\n    float v = rand(val, ipos);\n    \n    float rd = 0.5 * v;\n    float t = 10. * v + length(fpos) * 10. * v0 - iTime;\n    vec2 p = (0.5 - rd) * vec2(cos(t), sin(t));\n    \n    float d = length(fpos - p);\n    float k = 0.5;\n    float s = smoothstep(-k, k, -d + rd);\n    s = 2. * s * s * s;\n    vec3 col = vec3(s);\n    \n    vec3 e = vec3(1.);\n    col = s * pal(4. * v + d, e, e, e, 0.5 * vec3(0.,0.33,0.66));\n    col += 0.1;\n    \n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}