{
    "Shader": {
        "info": {
            "date": "1676272827",
            "description": "My experimenting with the Fuji shader",
            "flags": 0,
            "hasliked": 0,
            "id": "dtlXW4",
            "likes": 4,
            "name": "Mod Sunset",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "robstalone",
            "viewed": 212
        },
        "renderpass": [
            {
                "code": "float sun(vec2 uv, float battery)\n{\n \tfloat val = smoothstep(0.4, 0.39, length(uv));\n \tfloat bloom = smoothstep(0.65, 0.2, length(uv));\n    float cut = 3.0 * sin((uv.y + iTime * 0.05 * (battery + 0.02)) * 100.0) \n\t\t\t\t+ clamp(uv.y * 14.0 + 1.0, -6.0, 6.0);\n    cut = clamp(cut, 0.0, 1.0);\n    return clamp(val * cut, 0.0, 1.0) + bloom * 0.6;\n}\n\nfloat grid(vec2 uv, float battery)\n{\n    vec2 size = vec2(uv.y, uv.y * uv.y * 0.2) * 0.01;\n    uv += vec2(0.0, iTime * 4.0 * (battery - 0.15));\n    uv = abs(fract(uv) - 0.5);\n \tvec2 lines = smoothstep(size, vec2(0.0), uv);\n \tlines += smoothstep(size * 5.0, vec2(0.0), uv) * 0.4 * battery;\n    return clamp(lines.x + lines.y, 0.0, 3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy)/iResolution.y;\n    float battery = 0.95;\n    \n    {\n        // Grid\n       vec3 col = vec3(0.05, 0.05, 0.1);\n        if (uv.y < -0.2)\n        {\n            uv.y = 3.0 / (abs(uv.y + 0.2) + 0.05);\n            uv.x *= uv.y * 1.0;\n            float gridVal = grid(uv, battery);\n            col = mix(col, vec3(1.2, 0.9, 0.3), gridVal);\n        }\n        else\n        {\n            uv.y -= battery * 1.1 - 0.51;\n            vec2 sunUV = uv;\n            \n            // Sun\n            sunUV += vec2(0.75, 0.2);\n            col = vec3(1.2, 0.9, 0.3);\n            float sunVal = sun(sunUV, battery);\n            \n            col = mix(col, vec3(1.0, 0.4, 0.1), sunUV.y * 2.0 + 0.2);\n            col = mix(vec3(0.06, 0.05, 0.04), col, sunVal);\n            \n        }\n        col = mix(vec3(col.r, col.r, col.r) * 0.2, col, battery);\n        fragColor = vec4(col,1.0);\n    }   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}