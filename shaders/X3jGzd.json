{
    "Shader": {
        "info": {
            "date": "1708738540",
            "description": "bubbles",
            "flags": 0,
            "hasliked": 0,
            "id": "X3jGzd",
            "likes": 8,
            "name": "Bubbles or something",
            "published": 3,
            "tags": [
                "bubbles"
            ],
            "usePreview": 0,
            "username": "ianertson",
            "viewed": 196
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define T (iTime*1.25)\n#define M_PI 3.14159265358979323846264338327950288\n#define TAU (M_PI*2.0)\n#define FUI floatBitsToUint\n#define ZERO min(0, iFrame)\n\nmat2 rot(float a) { float s = sin(a); float c = cos(a); return mat2(c, s, -s, c); }\nvec3 aces(vec3 x) { return clamp((x*(2.51*x+0.03))/(x*(2.43*x+0.59)+0.14),0.0,1.0); }\nfloat luma(vec3 color) { return dot(color, vec3(0.299, 0.587, 0.114)); }\n\nfloat hash(vec2 ip, float seed) {\n  uvec2 p = FUI(ip); uint s = FUI(seed); uvec2 k = ~p + ~s;\n  p ^= p << 17U; p ^= p >> 13U; p ^= p << 5U;\n  p += (p ^ k) + p * k; p *= 1013U; p ^= (p >> 4U);\n  return float(p.x * k.y + p.y + p.y * k.x + k.y) / float(0xFFFFFFFFU);\n}\n\n\nvec3 bubb(vec2 p, float s) {\n    p *= 1.25;\n    float t = 40.0;\n    vec2 id = floor(p);\n    float r = hash(id*34.29195, 44.49593 + s);\n    p += vec2(sin(r+(T+10.0*r)), cos(r+(T+10.0*r)))*0.15*r;\n    vec2 lv = fract(p);\n    vec2 alv = abs(lv*2.0-1.0);\n    \n    \n    for (int i = -1; i < 1; i++) {\n        for (int j = -1; j < 1; j++) {\n            vec2 lat = vec2(i, j);\n            vec2 k = vec2(hash((id+lat), 11.1987 + s), hash(id+lat, 3.1295 + s));\n            vec2 diff = lat + k - lv;\n            float dist = dot(diff, diff);\n            t = min(t, dist + (1.0+4.0*r)*length(alv));\n            \n        }\n    }\n    \n    \n    float f = clamp((t/(1.0+t*t*t*t*t*t*t*t*t*t*t*t*t*t*t*t*t)), 0.0, 1.0);\n    \n    float h = hash(13.91*id+4.25, 12.312);\n    \n    float red = h;\n    float green = fract(h*10.29184);\n    float blue = fract(h*30.554324);\n    \n    vec3 col = vec3(red, green, blue);\n    \n    return col*exp(f*6.-4.);\n}\n\n////////////////////////////////////////////////////////\n\nvoid mainImage(out vec4 o, in vec2 fc) {\n  vec3 col = vec3(0.0);\n  vec2 uv = (fc-0.5*R.xy)/R.y;\n  vec4 m = vec4((iMouse.xy-0.5*R.xy)/R.y,iMouse.zw);\n  uv *= 3.3;\n  \n  float t = T/60.;\n  uv += 40.0*vec2(cos(t), sin(t));\n  \n  float z = 0.0;\n  float itau = 3.0*(1.0/TAU);\n  for (float i = 0.0; i < TAU; i += itau) {\n    col += bubb(uv*rot(i)*(1.0+z), z+i*3.492195);\n    z += 0.04*i;\n\n  }\n  col /= TAU;\n  col += col*luma(col);\n  col = aces(col);\n  col = pow(col, vec3(1.0 / 2.2));\n  o = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}