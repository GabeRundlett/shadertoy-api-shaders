{
    "Shader": {
        "info": {
            "date": "1697966950",
            "description": "inspiration: https://twitter.com/KeishiroUeki/status/1715924571180990920\nadapting + golfing from \"Hinged Squares\" by fad. https://shadertoy.com/view/DddBzM",
            "flags": 0,
            "hasliked": 0,
            "id": "cdyfzD",
            "likes": 12,
            "name": "Hinged Squares + truchets",
            "published": 3,
            "tags": [
                "grid",
                "texture",
                "uv",
                "animation",
                "square",
                "squares",
                "tesselation",
                "reproduction",
                "truchets",
                "hinged"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 246
        },
        "renderpass": [
            {
                "code": "// Fork of \"Hinged Squares\" by fad. https://shadertoy.com/view/DddBzM\n// + inspiration from https://twitter.com/KeishiroUeki/status/1715924571180990920\n\n// -6 by zlonka\n\n#define S(v) smoothstep( 12./R.y, 0., v )   \n\nvoid mainImage(out vec4 O, vec2 I) {\n    float P = 3.14, g=.5,\n          a = smoothstep(0.,1., smoothstep(g,0., abs( fract(iTime/4.) - g ) )) * P * g,\n          c = cos(a),\n          s = sin(a),\n          b = c + s;\n    vec2  R = iResolution.xy,\n          p = 8.* ( I+I - R ) / R.y / b,\n          d = mat2(c, s, -s, c)  * asin(cos(p)) * b / P,\n          D = abs(d),\n    q = cos(1e3*sin(dot(ceil(p/P),R-57.))) > .0 ? vec2(-d.y,d) : d;    // random PI/2 turn\n    O =  ( g + S( abs( length( q - g*sign(q.x+q.y) ) -g ) - .05 ) )    // truchet\n        * S( max(D.xxxx, D.y) - g );                                   // tile\n}\n\n\n\n\n\n/** // 390 chars\n\n#define S(v) smoothstep( 12./R.y, 0., v )   \n\nvoid mainImage(out vec4 O, vec2 I) {\n    float PI = 3.14,\n          a = smoothstep(0.,1., smoothstep(.5,0., abs( fract(iTime/4.) - .5 ) )) * PI/2.,\n          c = cos(a),\n          s = sin(a),\n          b = c + s;\n    vec2  R = iResolution.xy,\n          p = 8.* ( I+I - R ) / R.y / b,\n          d = mat2(c, s, -s, c)  * asin(cos(p)) * b / PI,\n          D = abs(d),\n    q = cos(1e3*sin(dot(ceil(p/PI),R-57.))) > .0 ? vec2(-d.y,d) : d;      // random PI/2 turn\n    O =  ( .5 + S( abs( length( q - .5*sign(q.x+q.y) ) -.5 ) - .05 ) )    // truchet\n        * S( max(D.xxxx, D.y) - .5 );                                     // tile\n}\n\n/**/\n\n\n\n\n\n\n/** // 414 chars\n\n#define S(v) smoothstep( 12./R.y, 0., v )   \n\nvoid mainImage(out vec4 O, vec2 I) {\n    float PI = 3.14,\n          a = smoothstep(0.,1., smoothstep(1.,0., abs( mod( iTime/2., 2.) - 1. ) )) * PI/2.,\n          c = cos(a),\n          s = sin(a),\n          b = c + s;\n    vec2  R = iResolution.xy,\n          p = 8.* ( I+I - R ) / R.y / b,\n          d = mat2(c, s, -s, c)  * asin(cos(p)) * b / PI,\n          D = abs(d),\n          q = ceil( p / PI ) + .5-d;   // q += .5 - d * cos(PI*q) for global mapping\n    q = fract( fract(1e4*sin(dot(ceil(q),R-57.))) > .5 ? vec2(-q.y,q) : q ); // random PI/2 turn\n    O =  ( .5 + S( abs( length( q.x+q.y > 1. ? 1.-q : q ) -.5 ) - .05 ) )    // truchet\n        * S( max(D.xxxx, D.y) - .5 );                                        // tile\n}\n\n\n\n\n\n\n/** // 422 chars\n\n#define S(v) smoothstep( 12./R.y, 0., v )      //\n#define L(q) S( abs( length(q) -.5 ) - .05 )\n\nvoid mainImage(out vec4 O, vec2 I) {\n    float PI = 3.14,\n          a = smoothstep(0.,1., smoothstep(1.,0., abs( mod( iTime/2., 2.) - 1. ) )) * PI/2.,\n          c = cos(a),\n          s = sin(a),\n          b = c + s;\n    vec2  R = iResolution.xy,\n          p = ( I+I - R ) / R.y * 8. / b,\n          d = mat2(c, s, -s, c)  * asin(cos(p)) * b / PI,\n          D = abs(d),\n          q = ceil( p / PI ) + .5-d;   // q += .5 - d * cos(PI*q) for global mapping\n    q = fract( fract(1e4*sin(dot(ceil(q),R-57.))) > .5 ? vec2(-q.y,q) : q );\n    O = ( .5 + L(q) + L(q-1.) ) * S( max(D.xxxx, D.y) - .5 );\n}\n\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}