{
    "Shader": {
        "info": {
            "date": "1605949508",
            "description": "for https://isohedral.ca/swirled-series/",
            "flags": 0,
            "hasliked": 0,
            "id": "Wd3BWj",
            "likes": 6,
            "name": "checkerboard animation 2",
            "published": 3,
            "tags": [
                "text",
                "checkerboard",
                "short",
                "ease",
                "messages"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 326
        },
        "renderpass": [
            {
                "code": "#define char(c) ( c < 65 ? 0. : textureLod( iChannel3, fract(u)/16. + fract( vec2(c, 15-c/16) / 16. ), log2(512./R.y) ).x )\n\nfloat ease( float x ) {                              // rewritten from https://shadertoy.com/view/3ddBWB\n\treturn x > .5 ? x = 1.-x, 1. - 4.* x*x*x         // stepier than smoothstep or .5-.5*cos\n                  :                4.* x*x*x ;\n}\n\n#define B(x)  mod( floor(x), 2. )\n\nvoid mainImage( out vec4 O, vec2 u )\n{   O-=O; \n    vec2 R = iResolution.xy,\n         U = u *= 8. / R.y, T;\n    if (U.x > 8.) { O += .5; return; }               // out of board\n \n                                                     // --- text\n    int _c;                                          // prepare draw text\n    { int a=1,b=2,c=3,d=4,e=5,f=6,g=7,h=8,i=9,j=10,k=11,l=12,m=13,n=14,o=15,p=16,q=17,r=18,s=19,t=20,u=21,v=22,w=23,x=24,y=25,z=26,\n          X=int(U.x), Y=7-int(U.y);                  // message\n     _c = 64 + int[]( c,h,e,s,s,b,o,a,r,d,s, 0, m,a,y, 0,  c,o,n,t,a,i,n, 0,\n                      s,e,c,r,e,t, 0,0, m,e,s,s,a,g,e,s, \n                      i,f, 0, o,n,l,y, 0, y,o,u, 0, c,o,u,l,d,0, s,w,e,e,p, 0\n                    ) [X+8*Y];\n    }\n    T = B(u);                                        // prepare text color\n\n    float t = ease( fract(iTime/2.) ),               // --- checker\n          f = B(iTime/2.);\n    int i = int(f);\n    U.x += f;                                        // for continuity of 2nd half anim\n    U[i] +=  t * ( B(U[1-i]) *2. - 1. );             // anim rows then columns\n    U = B(U);                                        // prepare cell color\n    O += mix( float( U.x == U.y ),                   // checker cell color\n              float( T.x == T.y ),                   // char color\n              char(_c) ) ;                           // blend\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}