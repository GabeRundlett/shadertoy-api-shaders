{
    "Shader": {
        "info": {
            "date": "1592479449",
            "description": "from bottom to top:\n - no filtering ( i.e. aliasing )\n - sub-pixel integration with box filter (note remaining aliasing)\n  - sub-pixel integration with smooth filters: polynomial ,  Sinc()\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wlfyzj",
            "likes": 6,
            "name": "antialiasing: comparisons",
            "published": 3,
            "tags": [
                "antialiasing"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 332
        },
        "renderpass": [
            {
                "code": "#define sinc(x)  sin(3.1416*(x)+1e-5) / (3.1416*(x)+1e-5)\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u - .5*R ) / R.y;\n    float v = 0.,\n          x = abs( 360.* dot( U, cos( .2*sin(iTime) + vec2(0,11)) ) ),\n          k = .003,\n          f = 6.28*k*x,           // v = sin(f.x)\n          X = 6.28*k*x*x/2.;      // integrating phase x with freq f from 0 to x\n    int y = int(4.*(U.y+.5));     // strip index\n    \n    if (y==0) v = cos(X);                                // bottom: no filtering ( thus aliased ) \n    else {\n        float h, w,wt=0., n = ceil(2.*f);\n        for( float d=-n; d <= n; d++)                     // --- sub-pixel integration\n            h = d/n,\n           w =  y==1 ?  step(abs(h),n/2.)                 // mid: Box filter Kernel\n              : y==2 ? ( h = max(0.,1.-h*h), w = h*h*h*h) // top: Polynomial filter Kernel\n          //  : y==2 ?   exp(-.5*h*h*9.)                  // top: Gaussian filter Kernel\n              : sinc(h),                                  // top+: Sinc filter Kernel\n            v  += w * cos(X+d),                           // weigthed sum\n            wt += w;                                      // sum of weigths\n        v /= wt;                                          // normalization\n    }\n    O = vec4( pow(.5+.5*v, 1./2.2 ) );                    // to sRGB\n    if ( int(4.*(u.y-.5))%int(R.y) < 1 ) O--;             // separators\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}