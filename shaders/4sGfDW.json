{
    "Shader": {
        "info": {
            "date": "1528797866",
            "description": "Click/drag to zoom/move\n\nTry messing around with the Nmod define. \nIt basically loops through as usual but only collecting every N samples (then shifting the offest by global time).\nIt's fun to see how the structure of the primes is shown by animation\n\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4sGfDW",
            "likes": 21,
            "name": "Logistic Map Chaos Explorer",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "mandelbrot",
                "attractor",
                "chaos",
                "logistic",
                "feigenbaum",
                "logisticmap"
            ],
            "usePreview": 0,
            "username": "teadrinker",
            "viewed": 1388
        },
        "renderpass": [
            {
                "code": "\n//#define Nmod 6      // Play around with this one!\n#define Samples 1200  // Adjust to your gpu resources\n\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Started from iq's https://www.shadertoy.com/view/4dSXWt\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aaSize = iResolution.x;\n    bool mouseDown = iMouse.z > 0.0;\n    vec2 mouse = !mouseDown ? vec2(1.0,1.0) : vec2(iMouse.x, iMouse.y)/vec2(iResolution.x, iResolution.y);\n    mouse.y = 1.0-(1.0-mouse.y)*(1.0-mouse.y);\n    vec2 p = vec2(0.5 * mouse.y,1.0)*fragCoord.xy/iResolution.xy+vec2(3.5+mouse.x*(1.0-mouse.y)*0.5, 0.0);\n\n    float x = 0.5;\n#ifdef Nmod\n    int preN = 160+(int(iTime*60.0)&15)*Nmod;\n#else\n    int preN = 160+(int(iTime*60.0)&63);    \n#endif\n    for( int i=0; i<preN; i++ ) x = p.x*x*(1.0-x);\n\n    float f = 0.0;\n    for(int i=0; i<Samples; i++ )\n    {\n        x = p.x*x*(1.0-x);\n#ifdef Nmod        \n        if(i%Nmod == int(iTime*2.0)%Nmod)\n        \tf += float(Nmod) * exp(-aaSize*1800.0*(p.y-x)*(p.y-x));\n#else\n        f += exp(-aaSize*1800.0*(p.y-x)*(p.y-x));\n#endif\n    }\n    \n    f = pow(20.0 * f / float(Samples)+0.001,1.0/3.2);\n\n\tfragColor = vec4( f, f, f, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}