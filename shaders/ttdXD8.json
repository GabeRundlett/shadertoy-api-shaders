{
    "Shader": {
        "info": {
            "date": "1580892983",
            "description": "video glitch color",
            "flags": 2,
            "hasliked": 0,
            "id": "ttdXD8",
            "likes": 37,
            "name": "Airsolid Glitch color 02",
            "published": 3,
            "tags": [
                "color",
                "glitch",
                "02",
                "airsolid"
            ],
            "usePreview": 1,
            "username": "airsolid",
            "viewed": 2193
        },
        "renderpass": [
            {
                "code": "\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n    float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nfloat blockyNoise(vec2 uv, float threshold, float scale, float seed)\n{\n\tfloat scroll = floor(iTime + sin(11.0 *  iTime) + sin(iTime) ) * 0.77;\n    vec2 noiseUV = uv.yy / scale + scroll;\n    float noise2 = texture(iChannel1, noiseUV).r;\n    \n    float id = floor( noise2 * 20.0);\n    id = noise(id + seed) - 0.5;\n    \n  \n    if ( abs(id) > threshold )\n        id = 0.0;\n\n\treturn id;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float rgbIntesnsity = 0.1 + 0.1 * sin(iTime* 3.7);\n    float displaceIntesnsity = 0.2 +  0.3 * pow( sin(iTime * 1.2), 5.0);\n    float interlaceIntesnsity = 0.01;\n    float dropoutIntensity = 0.1;\n\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n\tfloat displace = blockyNoise(uv + vec2(uv.y, 0.0), displaceIntesnsity, 25.0, 66.6);\n    displace *= blockyNoise(uv.yx + vec2(0.0, uv.x), displaceIntesnsity, 111.0, 13.7);\n    \n    uv.x += displace ;\n    \n    vec2 offs = 0.1 * vec2(blockyNoise(uv.xy + vec2(uv.y, 0.0), rgbIntesnsity, 65.0, 341.0), 0.0);\n    \n    float colr = texture(iChannel0, uv-offs).r;\n\tfloat colg = texture(iChannel0, uv).g;\n    float colb = texture(iChannel0, uv +offs).b;\n\n    \n    float line = fract(fragCoord.y / 3.0);\n\tvec3 mask = vec3(3.0, 0.0, 0.0);\n\t\tif (line > 0.333)\n\t\t\tmask = vec3(0.0, 3.0, 0.0);\n\t\tif (line > 0.666)\n\t\t\tmask = vec3(0.0, 0.0, 3.0);\n    \n    \n\tfloat maskNoise = blockyNoise(uv, interlaceIntesnsity, 90.0, iTime) * max(displace, offs.x);\n    \n    maskNoise = 1.0 - maskNoise;\n    if ( maskNoise == 1.0)\n        mask = vec3(1.0);\n    \n    float dropout = blockyNoise(uv, dropoutIntensity, 11.0, iTime) * blockyNoise(uv.yx, dropoutIntensity, 90.0, iTime);\n    mask *= (1.0 - 5.0 * dropout);\n\t\n    \n    fragColor = vec4(mask * vec3(colr, colg, colb), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}