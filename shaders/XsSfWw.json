{
    "Shader": {
        "info": {
            "date": "1500552335",
            "description": "A very basic Julia set renderer",
            "flags": 0,
            "hasliked": 0,
            "id": "XsSfWw",
            "likes": 0,
            "name": "Julia set sinus wave",
            "published": 3,
            "tags": [
                "juliafractal"
            ],
            "usePreview": 0,
            "username": "Balint",
            "viewed": 553
        },
        "renderpass": [
            {
                "code": "const int STEPS_INT = 500;\nconst float STEPS_FLOAT = float(STEPS_INT);\nconst vec4 BLACK = vec4(vec3(0.0), 1.0);\n\nfloat hue2rgb(float f1, float f2, float hue) {\n    if (hue < 0.0)\n        hue += 1.0;\n    else if (hue > 1.0)\n        hue -= 1.0;\n    float res;\n    if ((6.0 * hue) < 1.0)\n        res = f1 + (f2 - f1) * 6.0 * hue;\n    else if ((2.0 * hue) < 1.0)\n        res = f2;\n    else if ((3.0 * hue) < 2.0)\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n    else\n        res = f1;\n    return res;\n}\n\nvec3 hsl2rgb(vec3 hsl) {\n    vec3 rgb;\n    while(hsl.x > 1.0) {\n    \thsl.x -= 1.0;\n    }\n    if (hsl.y == 0.0) {\n        rgb = vec3(hsl.z); // Luminance\n    } else {\n        float f2;\n        \n        if (hsl.z < 0.5)\n            f2 = hsl.z * (1.0 + hsl.y);\n        else\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\n            \n        float f1 = 2.0 * hsl.z - f2;\n        \n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n        rgb.g = hue2rgb(f1, f2, hsl.x);\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n    }   \n    return rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 z = ((fragCoord / iResolution.yy * 2.0 - vec2(1.0 * iResolution.x / iResolution.y, 1)));\n    vec2 c = vec2(mod(iTime / 10.0, 4.0) - 2.0 + sin(iTime / 10.0) * 0.5);\n    bool escaped = false;\n    for (int i = 0; i < STEPS_INT; i++) \n    {\n\t\tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (length(z) > 2.0) {\n\t\t\t// Escaped\n            escaped = true;\n            fragColor = vec4(hsl2rgb(vec3(float(i) / STEPS_FLOAT * 10.0, 1.0, 0.8)), 1.0);\n            break;\n\t\t}\n\t}\n    if (!escaped)\n        fragColor = BLACK;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}