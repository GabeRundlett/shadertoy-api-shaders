{
    "Shader": {
        "info": {
            "date": "1727569773",
            "description": "Minimal surfaces",
            "flags": 0,
            "hasliked": 0,
            "id": "X32czG",
            "likes": 35,
            "name": "Minimal surfaces gyroid",
            "published": 3,
            "tags": [
                "mouse",
                "tree",
                "keyboard",
                "garden",
                "brunch"
            ],
            "usePreview": 0,
            "username": "shadertoyjiang",
            "viewed": 224
        },
        "renderpass": [
            {
                "code": "// 20240927\n\n#define Shadow 1     // 0 or 1\n#define rot(t) mat2(cos(t), sin(t), -sin(t), cos(t))\n#define time (iTime*2.)\nint obj;\nfloat dist;\n\nfloat smin(float d1, float d2, float k)\n{\n        float h =clamp(.5 + .5 *(d2-d1)/k,0.,1.);\n        return mix(d2, d1, h)-k*h*(1.-h);\n}\n\nfloat smax(float d1, float d2, float k)\n{\n        return smin(d1,d2,-k);\n}\n\nfloat gyr(vec3 p){\n      obj=0;\n      float r=4.25;\n      float d1=length(p)-r;\n      vec3 q=p ;\n      float d2= dot(cos(q.yzx*4.),sin(q*4.))/4.-.0;\n      //float k = 48.;//floor(iTime);  // 4 12 20 28 36 48\n      //float d6= dot(cos(p*k),sin(p.zxy*k))/k;    \n      \n      float k = 32.;//floor(iTime);  // 4 12 20 28 36 48\n      if(iMouse.x>iResolution.x*.55)k=12.;\n      float d6= dot(cos(p*k),sin(p.yzx*k))/k;       \n      \n      float d5 = length(max(abs(vec2(d2,d1)),0.))-.03;            \n      \n      dist = .5* smin(d5, length(smax(0.,smax(d1,smax(abs(d2),abs(d6)-.01,.03),.03),.01)-.001), .01);// 202409270516\n            \n      float flr = (100.+r)-length(p-vec3(0,100,0));\n      if(flr<dist)obj=1;\n      dist = min(dist,flr);\n      return dist;\n}\n\n\nfloat map(vec3 p)\n{\n        float t = time; // 2.54\n        \n        //p.yz *=rot(t*.4);\n        p.xz *=rot(t*.05);\n        //p.xy *=rot(t*.7);\n        return gyr(p);        \n}\n\n\nfloat calcSoftshadow( in vec3 ro, in vec3 rd  )\n{// https://www.shadertoy.com/view/lsKcDD - iq\n\tfloat res = 1.0;\n    float t = .001;\n    float ph = 1e10; // big, such that y = 0 on the first iteration\n    int technique=1;\n    float tmax=5., w=.2;\n    int j=0;\n    for( int i=0; i<32; i++ )\n    {   j++;\n\t\tfloat h = map( ro + rd*t );\n        \n        float dm = max(dist,.001);\n        \n        if( technique==0 )\n        {\n        \tres = min( res, dm/(w*t) );\n        }\n        // improved technique\n        else\n        {\n            // use this if you are getting artifact on the first iteration, or unroll the\n            // first iteration out of the loop\n            //float y = (i==0) ? 0.0 : h*h/(2.0*ph); \n\n            float y = dm*dm/(2.0*ph);\n            float d = sqrt(dm*dm-y*y);\n            res = min( res, d/(w*max(0.0,t-y)) );\n            ph = dm;\n        }\n       \n        t += h;//min(max(h,0.001),.5);\n        \n        if( res<0.0001 || t>tmax ) break;\n        \n    }\n    //if(j>32)return 0.;\n    res = clamp( res, 0.0, 1.0 );\n    return res*res*(3.0-2.0*res);\n}\n\n\nvoid mainImage(out vec4 O, vec2 v)\n{        \n        O = vec4(.5);\n        vec4 clr=vec4(1);\n        vec2 R = iResolution.xy,\n             u = 1. * (v+v+.1 - R) / R.y,       \n             m = 1. * (iMouse.xy*2. - R) / R.y; \n        vec3 o = vec3(0, 0, -9),                \n             r = normalize(vec3(u+vec2(0,-.0), 1.5)),        \n             e = vec3(0, 1e-3, 0),             \n             p,n,                                 \n             s = normalize(vec3(-1,2,-3));      \n        \n        float d,t,f,g,c ;\n        for(int i;i<256 && t < 8000.;i++)\n        {\n                p = o + r * t;\n                d = map(p);\n                if(d<.01)\n                {\n                        n = normalize(vec3(map(p+e.yxx),map(p+e),map(p+e.xxy))-d);\n                        \n                        f = .5 + .5 * dot(n, s);\n                        g = max(dot(n,s),0.);\n                        c = 1. + pow(f, 200.)-f*.3; \n                        //clr=vec4(1,0,0,0)*pow(dot(p,p)/16.,8.);\n                        if(obj==1)O = vec4(.5);\n                        else if(obj==2)clr=vec4(10);\n                        else      O = vec4(c*g)*clr; // äº²\n                        \n                        #if Shadow==1\n                        vec3 rf=normalize(s*100.-p);\n                        //\n                        float shd=   //pow(dot(p,p)/16.,8.);\n                                     calcSoftshadow(p-r*.001,rf);\n                        \n                        if(iMouse.x<iResolution.x*1.6 )   O   *= (shd+.2);\n                        #endif\n                        \n                        O *= smoothstep(600.,0.,length(p));\n                        \n                        O = pow(O, vec4(.8));\n                        return;\n                }\n                t += d * .95 ;\n        }\n}\n \n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}