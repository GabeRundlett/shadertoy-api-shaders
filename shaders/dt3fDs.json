{
    "Shader": {
        "info": {
            "date": "1701719781",
            "description": "self defined voronoi values with lines",
            "flags": 0,
            "hasliked": 0,
            "id": "dt3fDs",
            "likes": 1,
            "name": "line voronoi",
            "published": 3,
            "tags": [
                "voronoi",
                "line"
            ],
            "usePreview": 0,
            "username": "shuyuwang99",
            "viewed": 147
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 originalcol = vec3(uv.x, uv.y, 0.5);\n    \n    //vec2 origin = vec2(0, 50);\n    vec2 origin[3];\n    origin[0] = vec2(0,50);\n    origin[1] = vec2(1200,850);\n    origin[2] = vec2(500,500);\n    \n    vec2 nvec[3];\n    nvec[0] = vec2(0.6, 0.8);\n    nvec[1] = vec2(0.8, 0.6);\n    nvec[2] = vec2(-0.6, 0.8);\n    \n\n    float dis = 99999999999999.99;\n    int closer = -1;\n    float t0 = 20.0;\n    float t1 = 20.0;\n    float i_idx = 0.0;\n    float j_idx = 0.0;\n    int counts = 0;\n    while (i_idx < 1.0){\n        j_idx = 0.0;\n        while (j_idx < 1.0){\n            float x_idx = float(fragCoord.x) + i_idx;\n            float y_idx = float(fragCoord.y) + j_idx;\n            dis = 99999999999999.99;\n            for (int k = 0; k<3; k++){\n                float d = pow((pow(x_idx-origin[k].x,2.0)+pow(y_idx-origin[k].y,2.0)),0.5);\n                if (d < dis){\n                   dis = d;\n                   closer = k;\n                }\n            }\n            vec2 pminusp0 = vec2(x_idx-origin[closer].x, y_idx-origin[closer].y);\n            float T = 10.0;\n                    \n            float func = dot(nvec[closer],pminusp0)/T;\n            func = func - floor(func);\n            if (func < originalcol.x){\n                counts ++;\n            }\n            j_idx += 1.0/t1;\n        }\n        i_idx += 1.0/t0;\n    }\n\n    vec3 finalcol = vec3(float(counts)/t0/t1, float(counts)/t0/t1, float(counts)/t0/t1);\n    fragColor = vec4(finalcol,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}