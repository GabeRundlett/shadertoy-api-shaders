{
    "Shader": {
        "info": {
            "date": "1571262606",
            "description": "Growing vines",
            "flags": 0,
            "hasliked": 0,
            "id": "tsV3Wd",
            "likes": 4,
            "name": "Shadertober 14 - Overgrown",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "overgrown",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "#define MAX_DIST 100.\n#define T iTime/5.\n#define PI 3.1415927\n\nfloat cyl(vec3 p, vec3 d)\n{\n    return length(p.xz-d.xy)-d.z;\n}\n\nfloat vine(vec3 p, float r)\n{\n    return cyl(p+vec3(cos(p.y+r),0.,sin(p.y+r)),vec3(1.,1.,.5*cos(clamp(T-p.y/5.+1.,-2.,0.))));\n}\n\nvec2 map(vec3 p)\n{\n    vec3 cell = vec3(18.);\n    p.xz = mod(p.xz,cell.xz)-cell.xz/2.;\n    \n    float m=0.;\n    float c = cyl(p,vec3(1,1,1));\n    \n    float v1 = vine(p,0.);\n    float v2 = vine(p,PI*.5);\n    float v3 = vine(p,PI);\n    float v4 = vine(p,PI*1.5);\n        \n    float r=min(c,v1);\n    r=min(r,v2);\n    r=min(r,v3);\n    r=min(r,v4);\n    if(r==c)m=2.;\n    else m=1.;\n    return vec2(r,m);\n    \n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float m=0.,t=0.;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(s.x<0.00001)break;\n        t+=s.x/3.;\n        if(t>MAX_DIST){t=-1.; break;}\n    }\n    return vec2(t,m);\n}\n\n\nvec3 normal(vec3 p)\n{\n    vec2 e=vec2(0.0005,0.);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvoid mainImage( out vec4 c, in vec2 f)\n{\n    vec2 p = (2.*f-iResolution.xy)/iResolution.y;\n\n    float h = T*5.+6.;\n    vec3 ro = vec3(0.1,h-1.9,0);\n    vec3 ta = vec3(0,h-1.83,0);\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    vec3 rd = vec3(p.x*cu+p.y*cr+1.*cf);\n\n    vec2 r = ray(ro,rd);\n    \n    vec3 col =vec3(0.);\n    if(r.x>0.)\n    {\n        vec3 p = ro+rd*r.x;\n        vec3 n = normal(p);\n        \n        vec3 mate = vec3(1.0);\n        vec2 az=vec2(atan(p.y,p.x),length(p));\n        if(r.y<1.5)mate=vec3(0,1,0)+texture(iChannel1,vec2(az.y,p.x)).rgb/3.;\n        else if (r.y<2.5)mate=vec3(1,0.5,.4)+texture(iChannel0,vec2(abs(az.y),(-.6+p.x))).rgb;\n        \n        vec3 sun = normalize(vec3(3.,0.3,1.));\n        float dif = clamp(dot(sun,n),0.0,1.0);        \n        col = mate*vec3(0.2,0.4,0.5)*dif*(1.-r.x/MAX_DIST);\n    }\n    \n    c.rgb=col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}