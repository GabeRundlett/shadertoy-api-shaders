{
    "Shader": {
        "info": {
            "date": "1437833811",
            "description": "Trying to recreate this http://i.imgur.com/NJfyTAW.png. Also my first attempt at voronoise, thought it turned out pretty well.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tfSR2",
            "likes": 24,
            "name": "Voronoi Aura",
            "published": 3,
            "tags": [
                "2d",
                "voronoi",
                "aura"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 1052
        },
        "renderpass": [
            {
                "code": "//Ethan Alexander Shulman 2015     http://etahn.com/     https://twitter.com/EthanShulman\n//This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n//http://creativecommons.org/licenses/by-nc-sa/4.0/\n\n\nfloat voronoi(in vec2 uv) {\n    vec2 lp = abs(uv)*10.;\n    vec2 sp = fract(lp)-.5;\n    lp = floor(lp);\n    \n    float d = 1.;\n    \n    for (int x = -1; x < 2; x++) {\n        for (int y = -1; y < 2; y++) {\n            \n            vec2 mp = vec2(float(x),float(y));\n            vec2 p = lp+mp;\n            \n            d = min(d,length(sp+(cos(p.x+iTime)+cos(p.y+iTime))*.3-mp));\n            \n        }\n    }\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.y *= iResolution.y/iResolution.x;\n    \n    \n    float ang = atan(uv.y,uv.x);\n    float dst = length(uv);\n    float cfade = clamp(dst*40.-3.+cos(ang*1.+cos(ang*6.)*1.+iTime*2.)*.68,0.,1.);\n    \n    float a = 0.;\n    for (int i = 3; i < 6; i++) { \n        float fi = float(i);\n        vec2 luv = uv+cos((ang-dst)*fi+iTime+uv+fi)*.2;\n    \n    \ta += voronoi(luv)*(.7+(cos(luv.x*14.234)+cos(luv.y*16.234))*.4);\n    }\n    vec3 color = vec3(0.16, .57 ,.19);\n    \n\tfragColor = vec4(color*a*cfade,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}