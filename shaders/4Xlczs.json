{
    "Shader": {
        "info": {
            "date": "1726772948",
            "description": "Physics update grid for a falling sand engine.",
            "flags": 32,
            "hasliked": 0,
            "id": "4Xlczs",
            "likes": 0,
            "name": "Integer Grid - Pixelated Effect",
            "published": 3,
            "tags": [
                "displacement",
                "bit",
                "bithack"
            ],
            "usePreview": 0,
            "username": "jafam",
            "viewed": 47
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, in vec2 I) {\n    I = texelFetch(iChannel0,ivec2(I),0).xy; //displaced uv\n    O = vec4(I/iResolution.xy,0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Displacement shader\n\nconst uint n = 5u; //offset by 2^n pixels\n\nvoid mainImage(out vec4 O, in vec2 I) {\n    uint t = uint(iTime*4.0);\n    uvec2 phase = uvec2(0u,1u); //shift y offset 1 time unit\n    uvec2 offset = (t+phase)&2u;//mod 4\n    \n    uvec2 p = uvec2(I);\n    \n    //floor(p) to nth bit\n    p = (p >> n) << n;\n\n    //scale offset\n    offset = offset<<(n-1u);\n    \n    p += offset;\n    O = vec4(p,0,0); //could fit more data\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}