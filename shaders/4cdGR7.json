{
    "Shader": {
        "info": {
            "date": "1711505711",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "4cdGR7",
            "likes": 4,
            "name": "thunderint",
            "published": 3,
            "tags": [
                "a"
            ],
            "usePreview": 0,
            "username": "quantumphantom",
            "viewed": 151
        },
        "renderpass": [
            {
                "code": "float hash21(vec2 p) {\n    p = fract(p * vec2(123.34, 456.21));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat noise(vec2 p) {\n    return hash21(p);\n}\n\nfloat fbm(vec2 uv, int octaves) {\n    float value = 0.0;\n    float amplitude = 0.5;\n    float frequency = 0.0;\n\n    for (int i = 0; i < octaves; i++) {\n        value += amplitude * noise(uv);\n        uv *= 2.0;\n        amplitude *= 0.5;\n    }\n\n    return value;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0);\n\n    vec2 uvTopLeft = uv - vec2(-0.5, 0.5);\n    vec2 uvTopRight = uv - vec2(0.5, 0.5);\n    vec2 uvBottomLeft = uv - vec2(-0.5, -0.5);\n    vec2 uvBottomRight = uv - vec2(0.5, -0.5);\n\n    uvTopLeft += fbm(uvTopLeft + iTime * 0.5, 20);\n    uvTopRight += fbm(uvTopRight + iTime * 0.5, 20);\n    uvBottomLeft += fbm(uvBottomLeft + iTime * 0.5, 20);\n    uvBottomRight += fbm(uvBottomRight + iTime * 0.5, 20);\n\n    float distTopLeft = length(uvTopLeft);\n    float distTopRight = length(uvTopRight);\n    float distBottomLeft = length(uvBottomLeft);\n    float distBottomRight = length(uvBottomRight);\n\n    vec3 baseColor = vec3(1.2, 0.2, 0.3);\n\n    if (iMouse.xy != vec2(0.0)) {\n        vec2 mouseUV = iMouse.xy / iResolution.xy;\n        vec3 mouseColor = hsv2rgb(vec3(mouseUV.x, mouseUV.y, 1.0));\n        baseColor = mouseColor;\n    }\n\n    col += baseColor * mix(0.0, 0.05, hash21(vec2(iTime))) / distTopLeft;\n    col += baseColor * mix(0.0, 0.05, hash21(vec2(iTime))) / distTopRight;\n    col += baseColor * mix(0.0, 0.05, hash21(vec2(iTime))) / distBottomLeft;\n    col += baseColor * mix(0.0, 0.05, hash21(vec2(iTime))) / distBottomRight;\n\n    fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}