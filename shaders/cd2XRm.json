{
    "Shader": {
        "info": {
            "date": "1670266777",
            "description": "Day 12 of Codevember 2022\n\nInstagram : https://www.instagram.com/etidouu/\nTwitter : https://twitter.com/EPEtidou",
            "flags": 0,
            "hasliked": 0,
            "id": "cd2XRm",
            "likes": 2,
            "name": "Codevember #12 Vasarely",
            "published": 3,
            "tags": [
                "motion",
                "vasarely",
                "codevember",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "Etidou",
            "viewed": 155
        },
        "renderpass": [
            {
                "code": "// Inspiration: https://www.shadertoy.com/view/WlX3Rl\n\n#ifndef PI\n#define PI 3.1415926535897932384626433832795\n#endif\n#ifndef TAU\n#define TAU 6.2831853071795864769252867665590\n#endif\n\nuniform float u_time;\nuniform vec2 u_resolution;\n\nconst float grid = 9.;\n#define pixel_width 2./iResolution.y*grid\n#define slowt iTime/5.\n\nfloat easeInOut(float t) {\n    if ((t *= 2.0) < 1.0) {\n        return 0.5 * t * t;\n    } else {\n        return -0.5 * ((t - 1.0) * (t - 3.0) - 1.0);\n    }\n}\n\nfloat linearstep(float begin, float end, float t) {\n    return clamp((t - begin) / (end - begin), 0.0, 1.0);\n}\n\nvec2 rotate(vec2 _uv, float _angle){\n    _uv =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _uv;\n    return _uv;\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    uv *= grid;\n    uv.y += mod(grid,20.)* .5;\n    vec2 id = floor(uv);\n    vec2 gv = fract(uv);\n    \n    float a = floor(random(id*floor(slowt))*4.)/4.;\n    float next_a = floor(random(id*(floor(slowt)+1.))*4.)/4.;\n    float angle = mix(a,next_a,easeInOut(linearstep(.5,1.,fract(slowt))));\n    gv = rotate(gv,angle*TAU);\n\n    vec3 color = vec3(0.);\n    vec3 c1 = vec3(1.0, 0.9333, 0.0157);\n    vec3 c2 = vec3(0.4, 0.0235, 0.0235);\n\n    float col = smoothstep(pixel_width,0.,.5-gv.y);\n\n    vec3 gradient = mix(\n        vec3(col),\n        c2,\n        1.25\n    );\n    \n    fragColor = vec4(vec3(col),1.0);\n\n    fragColor = vec4(gradient,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}