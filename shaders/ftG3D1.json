{
    "Shader": {
        "info": {
            "date": "1637579910",
            "description": "example of how to go to fractal city",
            "flags": 0,
            "hasliked": 0,
            "id": "ftG3D1",
            "likes": 37,
            "name": "KIFS City",
            "published": 3,
            "tags": [
                "kifs",
                "city"
            ],
            "usePreview": 0,
            "username": "leon",
            "viewed": 3245
        },
        "renderpass": [
            {
                "code": "\n// KIFS City by leon denise 2021/11/22\n// example of how to go to fractal city\n// which is a cubic kaleidoscopic shape carving volume\n// using code from Inigo Quilez, LJ, Fabrice Neyret and many others\n// licensed under hippie love conspiracy\n\nmat2 rot (float a) { return mat2(cos(a),-sin(a),sin(a),cos(a)); }\n\nfloat map (vec3 p)\n{\n  float scene = 100.;\n  float t = floor(iTime/5.);\n  float falloff = 1.0;\n  for (float index = 0.; index < 8.; ++index)\n  {\n    p.xz *= rot(t/falloff);\n    p = abs(p)-0.5*falloff;\n    scene = min(scene, max(p.x, max(p.y, p.z)));\n    falloff /= 1.8;\n  }\n  return -scene;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = 2.*(fragCoord.xy-0.5*iResolution.xy)/iResolution.y;\n  vec3 pos = vec3(0);\n  vec3 ray = normalize(vec3(uv, 1));\n  float shade = 0.;\n  const float count = 30.;\n  for (float index = count; index > 0.; --index)\n  {\n    float dist = map(pos);\n    if (dist < 0.001)\n    {\n      shade = index/count;\n      break;\n    }\n    pos += ray * dist;\n  }\n  fragColor = vec4(shade);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}