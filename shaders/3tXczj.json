{
    "Shader": {
        "info": {
            "date": "1592431342",
            "description": "This example demonstrates lens distortion effect. While not physically accurate, the parameters can be tweaked to reach something aesthetically pleasing.",
            "flags": 0,
            "hasliked": 0,
            "id": "3tXczj",
            "likes": 28,
            "name": "Lens Distortion Example",
            "published": 3,
            "tags": [
                "lensdistortionfisheye"
            ],
            "usePreview": 0,
            "username": "peterekepeter",
            "viewed": 1828
        },
        "renderpass": [
            {
                "code": "#define DARK_EDGES\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n   \tvec2 disorsion = uv-.5;\n    \n    disorsion.x*=aspect; // aspect correction\n    \n    // take distance from center\n   \tfloat len = length(disorsion);\n    \n    // these are the lens parameters\n    float k1 = 1.2;\n    float k2 = 1.0;\n    float k3 = -3.2;\n    \n    disorsion \n        = disorsion*k1 \n        + disorsion*len*k2 \n        + disorsion*len*len*k3;\n        // higher powers may be added if necessary\n    \n    \n    disorsion.x/=aspect; // aspect correction\n    \n    vec4 col = texture(iChannel0, disorsion+.5);\n    \n    #ifdef DARK_EDGES\n    {\n        float edge = 0.7;\n        float dispersion = 0.03;\n    \tcol *= vec4(\n            pow(max(edge-len, 0.0), 0.2),\n            pow(max(edge-dispersion-len, 0.0), 0.2),\n            pow(max(edge-dispersion*2.0-len, 0.0), 0.2),\n        1)*1.2;\n    }\n    #endif\n\n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}