{
    "Shader": {
        "info": {
            "date": "1619476668",
            "description": "high traffic area. ",
            "flags": 0,
            "hasliked": 0,
            "id": "ssfXDl",
            "likes": 15,
            "name": "Cubic Transport Wormhole",
            "published": 3,
            "tags": [
                "raymarching",
                "cubes"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 711
        },
        "renderpass": [
            {
                "code": "#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pi 3.1415926535\n#define STEPS 150.0\n#define MDIST 400.0\n#define pmod(p,x) (mod(p, x) - (x)*0.5)\n#define rotR 0.01\nfloat box( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nvec3 glow = vec3(0);\nvec2 map(vec3 p){\n    float t = mod(iTime,50.0)+15.0;\n    float t2 = t*1.5;\n    t2 = pow(fract(t2),2.5)+floor(t2);\n    //t2=t*2.0;\n    \n    vec3 po = p;\n    vec3 p2 = p;\n    \n    //Center Cubes\n    p2.z -= t2*120.0;\n    \n    float id2 = floor(p2.z/50.0)+2.0;\n    p2.z = pmod(p2.z,50.0);\n    \n    vec3 ccol = vec3(0);\n    \n    if(mod(id2,3.0)==0.0) ccol = vec3(1.000,0.412,0.059);\n    if(mod(id2,3.0)==1.0) ccol = vec3(0.392,0.102,1.000);\n    if(mod(id2,3.0)==2.0) ccol = vec3(0.118,0.224,0.992);\n    p2.yx*=rot(0.5*pi*t2*(mod(id2,2.0)*2.0-1.0));\n    \n    float scl = 0.7;\n    \n    p2 = abs(p2)-(4.5*abs(1.0+sin(id2*20.0)))*scl;\n    p2.xz*=rot(pi/4.0);\n    float cb = box(p2,vec3(2.5*scl));\n    p2 = abs(p2)-5.0*scl;\n    cb = min(cb,box(p2,vec3(2.5*scl)))-0.5;\n    \n\n    glow+=vec3(0.0085/(0.01+cb*cb))*ccol;\n    \n    vec2 a = vec2(cb,1.0);\n    \n    \n    //Outer Cubes\n    p.yx*=rot(p.z*rotR*pi/3.);\n    float modd = 12.0;\n    vec2 id = floor(p.xz/modd);\n    \n    p.z+=t*48.0*(mod(id.x,2.0)*2.0-1.0);\n    \n    \n    p.y = abs(p.y)-30.0;\n    \n    id.y = floor(p.z/modd);\n    p.xz=pmod(p.xz,modd);\n    \n    p.xy*=rot(t*pi/3.333);\n    \n    vec2 b = vec2(box(p, vec3(3.7)),mod(id.y,2.0)+2.0);\n    \n    a = (a.x<b.x)?a:b;\n    \n    glow+=vec3(0.01/(0.01+b.x*b.x));\n    \n    return a*vec2(0.5,1.0);\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    float t = mod(iTime,50.0)*2.0+7.5;\n    \n    //Uncomment to stop camera movement\n    //t=9.0;\n    \n    vec2 off = vec2(25,-3.0)*rot(t*pi*10.*rotR);\n    \n    vec3 ro = vec3(off,t*30.0);\n    vec3 lk = vec3(0,0,999999.0);\n    vec3 f = normalize(lk-ro);\n    vec3 ra = normalize(cross(vec3(0,1,0),f));\n    vec3 rd = normalize(f*0.8+uv.x*ra+uv.y*cross(f,ra));\n    float dO = 0.0;\n    vec3 p = vec3(0);\n    vec2 d = vec2(0);\n    for(float i =0.0; i<STEPS; i++){\n    \n        p = ro+rd*dO;\n        d = map(p);\n        dO+=d.x;\n        if(d.x<0.0001||dO>MDIST){\n            break;\n        }\n    }\n    //vec3 mix1 = mix(vec3(0.012,0.180,0.745),vec3(0.502,0.000,0.690),sin(p.z*0.2));\n    \n    if(d.y==2.0){\n        glow*=vec3(0.012,0.180,0.745);\n        //glow*=mix1;\n        col+=glow*0.14;\n    }\n    if(d.y==3.0){\n        glow*=vec3(0.502,0.000,0.690);\n        //glow*=mix1;\n        col+=glow*0.14;\n    }\n    if(d.y==1.0){\n        col+=glow*0.14;\n    }\n    col=mix(col,vec3(0.000,0.161,0.459),(clamp(dO/MDIST,0.0,1.0)));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}