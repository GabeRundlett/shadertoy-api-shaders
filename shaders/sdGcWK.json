{
    "Shader": {
        "info": {
            "date": "1655604385",
            "description": "This represents how the present is influenced by our past experiences. \nI dont know if this really makes any sense, don't take it seriously, it's just an artistic representation.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdGcWK",
            "likes": 10,
            "name": "Time and Memory",
            "published": 3,
            "tags": [
                "time",
                "perception",
                "memory",
                "mind"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 292
        },
        "renderpass": [
            {
                "code": "#define animate\nfloat line(vec2 p,vec2 p2,vec2 uv){\n    vec2 n=uv-p;\n\tvec2 w=p2-p;\n\treturn smoothstep(40.*AA,0.0,length(n-w*clamp(dot(n,w)/dot(w,w),0.,1.)));\n}\n\nfloat point(vec2 p,vec2 uv){\n\treturn 10.*AA/dot2(uv-p);\n}\n\nfloat circle(vec2 p,float r,vec2 uv){\n    return smoothstep(30.*AA,0.0,abs(length(uv-p)-r));\n}\nconst float th=0.1;\n\nvoid mainImage( out vec4 O, in vec2 U){\n    vec2 uv = (U*2.-R)/R.y;\n    uv*=10.;\n    vec2 uv2=uv;\n    O=vec4(0);\n    if(uv.y<0.){\n        uv.y=fract(uv.y)-0.5;\n        O = vec4(point(vec2(0),uv));\n    }\n    float sec=fract(iTime);\n    float radi=2.;\n    #ifdef animate\n    radi*=sqrt(max(0.,sec-0.5)*2.);\n    #endif\n    O+=circle(vec2(0,5),radi,uv2);\n    O+=point(vec2(0,5),uv2);\n    O+=line(vec2(0,-10),vec2(0,-0.5),uv2);\n    float circles=0.;\n    if(uv2.x<0.){\n        for(int i=0;i<100;i++){\n            float p1=-0.5-float(i);\n            float p2=5.;\n            vec2 c=vec2(0,(p1+p2)*0.5);\n            float r=(p2-p1)*0.5;\n            float k=hash12(vec2(float(i),floor(iTime)));\n            k=pow(k,float(i+1)*0.5);\n            if(k>th)circles+=circle(c,r,uv2)*(k-th)/(1.-th);\n        }\n    }\n    #ifdef animate\n    circles*=smoothstep(1.,-1.,uv2.y+10.-(min(0.5,sec))*30.);\n    #endif\n    \n    O+=circles;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define AA (1./R.y)\n\nfloat dot2(vec2 x){return dot(x,x);}\n\nfloat hash13(vec3 p3){\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}