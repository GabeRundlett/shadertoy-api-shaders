{
    "Shader": {
        "info": {
            "date": "1401365213",
            "description": "inside an homogeneous sphere, only the mass closer to center than you contributes to your gravity.\nWhat about an heterogeneous bag of stars ?\n(illustrated with 2D gravity in 1/r).   Mouse.x to force colormap. Clamps stars out of mouse.y radius.",
            "flags": 16,
            "hasliked": 0,
            "id": "4slSWN",
            "likes": 104,
            "name": "gravity field - 2",
            "published": 3,
            "tags": [
                "gravity"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 6265
        },
        "renderpass": [
            {
                "code": "#define POINTS 100  \t\t // number of stars\n\n// --- GUI utils\n\nfloat t;\n\nbool keyToggle(int ascii) {\n\treturn (texture(iChannel2,vec2((.5+float(ascii))/256.,0.75)).x > 0.);\n}\n\n\n// --- math utils\n\nfloat dist2(vec2 P0, vec2 P1) { vec2 D=P1-P0; return dot(D,D); }\n\nfloat hash (float i) { return 2.*fract(sin(i*7467.25)*1e5) - 1.; }\nvec2  hash2(float i) { return vec2(hash(i),hash(i-.1)); }\nvec4  hash4(float i) { return vec4(hash(i),hash(i-.1),hash(i-.3),hash(i+.1)); }\n\t\n\n\n// === main ===================\n\n// motion of stars\nvec2 P(float i) {\n\tvec4 c = hash4(i);\n\treturn vec2(   cos(t*c.x-c.z)+.5*cos(2.765*t*c.y+c.w),\n\t\t\t\t ( sin(t*c.y-c.w)+.5*sin(1.893*t*c.x+c.z) )/1.5\t );\n}\n\n// ---\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    t = iTime;\n\tvec2 uv    = 2.*(fragCoord.xy / iResolution.y - vec2(.8,.5));\n\tfloat m = (iMouse.z<=0.) ? .1*t/6.283 : .5*iMouse.x/iResolution.x;\n\tfloat my = (iMouse.z<=0.) ? .5*pow(.5*(1.-cos(.1*t)),3.) : iMouse.y/iResolution.y;\n\tint MODE = int(mod( (iMouse.z<=0.) ? 100.*m : 6.*m ,3.));\n\tfloat fMODE = (1.-cos(6.283*m))/2.;\n\n\tconst int R = 1;\n\t\n\tfloat v=0.; vec2 V=vec2(0.);\n\tfor (int i=1; i<POINTS; i++) { // sums stars\n\t\tvec2 p = P(float(i));\n\t\tfor (int y=-R; y<=R; y++)  // ghost echos in cycling universe\n\t\t\tfor (int x=-R; x<=R; x++) {\n\t\t\t\tvec2 d = p+2.*vec2(float(x),float(y)) -uv; // pixel to star\n\t\t\t\tfloat r2 = dot(d,d);\n\t\t\t\tr2 = clamp(r2,5e-2*my,1e3);\n\t\t\t\tV +=  d / r2;  // gravity force field\n\t\t\t}\n\t\t}\n\t\n\tv = length(V);\n\tv *= 1./(9.*float(POINTS));\n\t//v = clamp(v,0.,.1);\n\t\n\tv *= 2.+100.*fMODE;\n\tif (MODE==0) fragColor = vec4(.2*v)+smoothstep(.05,.0,abs(v-5.*my))*vec4(1,0,0,0);\n\tif (MODE==1) fragColor = vec4(.5+.5*sin(2.*v));\n\tif (MODE==2) fragColor = vec4(sin(v),sin(v/2.),sin(v/4.),1.);\n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}