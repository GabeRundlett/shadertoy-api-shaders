{
    "Shader": {
        "info": {
            "date": "1488000977",
            "description": "Campfire.:/",
            "flags": 32,
            "hasliked": 0,
            "id": "4slyWH",
            "likes": 4,
            "name": "Campfire Dance",
            "published": 3,
            "tags": [
                "2d",
                "fire",
                "grass",
                "star",
                "buffer",
                "stone"
            ],
            "usePreview": 0,
            "username": "Ivanshir",
            "viewed": 723
        },
        "renderpass": [
            {
                "code": "vec4 DrawStone(vec2 uv,vec2 po,float r){\n    if(distance(uv,po)<=r)return vec4(texture(iChannel3,uv).rgb*distance(uv,po)*8.,1.);\n    else return vec4(0);\n}\n\nvec4 DrawCampfire(vec2 uv){\n    vec4 CampfireTexture = vec4(0.);\n    uv.x+=sin(iTime)*sin(uv.y*9.)/48.;\n    if(uv.x>=0.35)if(uv.x<=0.65)\n\tCampfireTexture = texture(iChannel1,uv);\n    uv.x-=sin(iTime)*sin(uv.y*9.)/48.;\n    vec4 StoneTexture = DrawStone(uv,vec2(0.5 + 0.15,0.),0.1);\n    if(StoneTexture.a>=0.5)\n    CampfireTexture=StoneTexture;\n    StoneTexture = DrawStone(uv,vec2(0.5 - 0.15,0.),0.1);\n    if(StoneTexture.a>=0.5)\n    CampfireTexture=StoneTexture;\n    StoneTexture = DrawStone(uv,vec2(0.5,0.),0.15);\n    if(StoneTexture.a>=0.5)\n    CampfireTexture=StoneTexture;\n    return CampfireTexture;\n}\n\nvec2 rotate(vec2 uv,float angle){\n    return vec2(uv.x*cos(angle)-uv.y*sin(angle),uv.x*sin(angle)+uv.y*cos(angle));\n}\n\nvec4 SpaceShader(vec4 color,float bass){\n    float bright=color.x*color.y*color.z;\n    if(bright<bass)return vec4(0);\n    return vec4(bright);\n}\n\nvec4 DrawBackground(vec2 uv){\n    vec4 BackgroundTexture=vec4(0.);\n    uv.x/=2.;uv.x+=0.25;\n    if(distance(uv,vec2(0.5,0.))<=0.7) BackgroundTexture =  ((vec4(0.,0.5,0.,1.)+texture(iChannel3,uv*12.))/2.)*(1.-distance(uv,vec2(0.5,0.))*2. );\n    if(BackgroundTexture.a<0.0001)BackgroundTexture=SpaceShader(texture(iChannel2,rotate(uv,iTime/64.)*4.),0.);\n    return BackgroundTexture;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 CampfireTexture = DrawCampfire(uv);\n    fragColor=DrawBackground(uv);\n    if(CampfireTexture.a>0.1)fragColor=CampfireTexture;\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 renderFlame(vec2 uv){\n    vec4 orange = vec4(255./256.,105./256.,0.,1.);\n    vec2 sound = texture(iChannel0,vec2(uv.x)).rg;\n    float level = (sound.x+sound.y)/2.;\n    \n    level+=texture(iChannel2,vec2(uv.x)).x/4.;\n    level/=2.;\n    level-=abs(0.5-uv.x);\n    level*=3.;\n    if(uv.y<level)\n    return orange*(uv.y/level);\n    else\n    return vec4(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float copies=12.;\n\tfragColor = (texture(iChannel1,uv)*copies+renderFlame(uv))/(copies+1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 20,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}