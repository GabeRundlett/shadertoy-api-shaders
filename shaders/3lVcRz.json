{
    "Shader": {
        "info": {
            "date": "1610363112",
            "description": "Bug: the grey background on right half should not be there, and disappear at the least code change.\n( maybe Mat M play a crucial role. not sure ).\nCompilation is suspectfully wrong (especially when errors)",
            "flags": 0,
            "hasliked": 0,
            "id": "3lVcRz",
            "likes": 0,
            "name": "strange GLSL bug (on OpenGL)",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 347
        },
        "renderpass": [
            {
                "code": "// Fork of \"graph message\" https://shadertoy.com/view/tldyWs\n\n#define S(v)  smoothstep( 5./R.y, -5./R.y, v ) // smoothstep necessary. even using  5./R.y rather than .1\n//#define S(v)  clamp(.5 - R.y/10.*(v), 0.,1.) // no bug using this instead\n\n#define L(V)   max( abs(V).x , abs(V).x ) -.1  // no bug if just abs(V).x !\n\n// float T(vec2 U,float X) { vec2 A = (U    ) * mat2(1,-.3,0,1) - vec2(X,0); return  L(A); } // no bug with func instead of macro\n#define T(U,X)   ( A = (U    ) * mat2(1,-.3,0,1) - vec2(X,0),  L(A) )\n#define R(U,X)   ( B = (U -.1) * mat2(1,-.3,1,1) - X ,         L(B) )\n#define F(U,X)   ( D = (U -.2) * mat2(1, .3,0,1) - vec2(X,.2), L(D) )\n\n//  bug disappear if this turned into float expression, despites .y not used\n#define v(U,X) V =   S( T(U,X) )               \\\n                   + S( R(U,X) ) * vec2(.6,1)  \\\n                   + S( F(U,X) ) * vec2(.3,1), \\\n               C += V          // no bug if do directly C += above\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( 2.*u - R ) / R.y, V, A,B,D, C=R-R; // no bug with C=vec2(0) !\n    O = vec4(0);\n    \n// all this code should be ignored by later * min(0.,iTime) but each element still necessary for the bug\n    v(U,-1.); v(U,- .7); v(U,- .7); v(U,-.7);\n    v(U, 0.); v(U,  .2); v(U,  .2); v(U, .4); \n    v(U, 1.); v(U, 1.2); v(U, 1.2); v(U,1.4); v(U,1.4);\n    v(U, 2.); v(U, 2.2); v(U, 2.2);\n    O += C.x; // no bug if min(0.,iTime) * is put there rather than later\n\n// only this code should display\n    U.x = .4-U.x;   C=R-R;     // no bug with C=vec2(0) !\n    mat2 M = mat2(1);\n // vec2 M = vec2(1);          // no bug this way \n \n    v(U*M, -.4); v(M*U, 0.);   // M* , *M is  crucial\n    v(U,1.); v(U,1.); v(U,1.); v(U,1.); v(U,1.); v(U,1.); v(U,1.); v(U,1.); v(U,1.); v(U,1.); // all necessary for the bug\n    O += (1.-O.a) *  C.x;\n    \n    O = min(0.,iTime)*O + C.x;  // is thus C.x\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}