{
    "Shader": {
        "info": {
            "date": "1638765382",
            "description": "A fractal with mosaic-like patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "ft3XzN",
            "likes": 11,
            "name": "Mosaic fractal 2",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 412
        },
        "renderpass": [
            {
                "code": "//change these constants to get different patterns!\n#define c1 vec3(2.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;  \n    float t1 = 36.*16.;\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    for(int i=0;i<6;i++)\n    {\n        vec2 t2 = vec2(0.);\n        for(int k = 0; k < 9; k++){    \n            uv += (t2.yx)/(scale);\n            //uv += (t2.yx)/(scale-col.x/scale);\n            t2 = triangle_wave(uv.yx-.5,scale)*scale;\n            vec2 t3 = triangle_wave(uv,scale)/scale;\n            uv.yx = -(t2+t3);\n        }\n        col.x = abs(uv.y-uv.x+col.x);\n        col = col.yzx;\n    }\n    fragColor = vec4(col,1.0);   \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}