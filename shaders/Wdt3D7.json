{
    "Shader": {
        "info": {
            "date": "1603063139",
            "description": "music",
            "flags": 8,
            "hasliked": 0,
            "id": "Wdt3D7",
            "likes": 3,
            "name": "Music 1",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "woz",
            "viewed": 268
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653589793238\n\nfloat circle(float size, vec2 uv) {\n    float x = sin (iTime  * (2. * PI) * 0.5) * 0.25;\n    float y = cos (iTime  * (2. * PI) ) * 0.25;\n    \n    vec2 p = vec2(x, y);\n    return smoothstep(size, size - .01, length(uv - p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float mask = circle(.03, uv);\n    vec3 col = vec3(mask);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": " #define C0 16.35 \n #define Db0 17.32 \n #define D0 18.35 \n #define Eb0 19.45 \n #define E0 20.60 \n #define F0 21.83 \n #define Gb0 23.12 \n #define G0 24.50 \n #define Ab0 25.96 \n #define A0 27.50 \n #define Bb0 29.14 \n #define B0 30.87 \n #define C1 32.70 \n #define Db1 34.65 \n #define D1 36.71 \n #define Eb1 38.89 \n #define E1 41.20 \n #define F1 43.65 \n #define Gb1 46.25 \n #define G1 49.00 \n #define Ab1 51.91 \n #define A1 55.00 \n #define Bb1 58.27 \n #define B1 61.74 \n #define C2 65.41 \n #define Db2 69.30 \n #define D2 73.42 \n #define Eb2 77.78 \n #define E2 82.41 \n #define F2 87.31 \n #define Gb2 92.50 \n #define G2 98.00 \n #define Ab2 103.83 \n #define A2 110.00 \n #define Bb2 116.54 \n #define B2 123.47 \n #define C3 130.81 \n #define Db3 138.59 \n #define D3 146.83 \n #define Eb3 155.56 \n #define E3 164.81 \n #define F3 174.61 \n #define Gb3 185.00 \n #define G3 196.00 \n #define Ab3 207.65 \n #define A3 220.00 \n #define Bb3 233.08 \n #define B3 246.94 \n #define C4 261.63 \n #define Db4 277.18 \n #define D4 293.66 \n #define Eb4 311.13 \n #define E4 329.63 \n #define F4 349.23 \n #define Gb4 369.99 \n #define G4 392.00 \n #define Ab4 415.30 \n #define A4 440.00 \n #define Bb4 466.16 \n #define B4 493.88 \n #define C5 523.25 \n #define Db5 554.37 \n #define D5 587.33 \n #define Eb5 622.25 \n #define E5 659.25 \n #define F5 698.46 \n #define Gb5 739.99 \n #define G5 783.99 \n #define Ab5 830.61 \n #define A5 880.00 \n #define Bb5 932.33 \n #define B5 987.77 \n #define C6 1046.50 \n #define Db6 1108.73 \n #define D6 1174.66 \n #define Eb6 1244.51 \n #define E6 1318.51 \n #define F6 1396.91 \n #define Gb6 1479.98 \n #define G6 1567.98 \n #define Ab6 1661.22 \n #define A6 1760.00 \n #define Bb6 1864.66 \n #define B6 1975.53 \n #define C7 2093.00 \n #define Db7 2217.46 \n #define D7 2349.32 \n #define Eb7 2489.02 \n #define E7 2637.02 \n #define F7 2793.83 \n #define Gb7 2959.96 \n #define G7 3135.96 \n #define Ab7 3322.44 \n #define A7 3520.00 \n #define Bb7 3729.31 \n #define B7 3951.07 \n #define C8 4186.01 \n #define Db8 4434.92 \n #define D8 4698.63 \n #define Eb8 4978.03 \n #define E8 5274.04 \n #define F8 5587.65 \n #define Gb8 5919.91 \n #define G8 6271.93 \n #define Ab8 6644.88 \n #define A8 7040.00 \n #define Bb8 7458.62 \n #define B8 7902.13  \n\nfloat _sin(float hz, float time)\n{\n    return sin(6.2831 * hz * time);\n}\n\nfloat _square(float hz, float time)\n{\n    return sign(_sin(hz, time));\n}\n\nfloat _squareRich(float hz, float time, float offset)\n{\n    float sound = _square(hz, time) * 0.3;\n    sound += _square(hz * 2. + offset, time) * 0.1;\n    sound += _square(hz * 3. - offset, time) * 0.15;\n    sound += _square(hz * 4. + offset, time) * 0.06;\n    return sound;\n}\n\nvec2 playSin(float hz, float time, float startTime, float volume)\n{\n    float falloff = time - startTime;\n    return vec2(_sin(hz, time)*exp(-3.0*falloff)) * volume;\n}\n\nfloat playSquare(float hz, float time, float startTime, float volume)\n{\n    return _square(hz, time) * volume;\n}\n\nvec2 sineLoop(float time)\n{\n    float[] notes = float[] (\n        440.,\n        660.,\n        440.,\n        330.\n    );\n    \n    int note = int(time) % 4;\n    return playSin(notes[note], time, float(int(time)), 1.);\n}\n\nvec2 squareLoop(float[4] notes, float time)\n{\n    int note = int(time / 4.) % 4;\n    float hz = notes[note];\n    float t = sin(time/ 100.) * 0.01;\n    float l = _squareRich(hz, time, t);\n    float r = _squareRich(hz, time, -t);\n    return vec2(l, r);\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    float volume = 0.05;\n    vec2 sound = vec2(0.);\n    \n    sound += sineLoop(time);\n    \n    //sound += playSin(440., time, 1.);\n    \n    \n    sound += squareLoop(float[] (A2, E2, D2, F2), time); \n    sound += squareLoop(float[] (E2, G2, F2, C3), time) * 0.75; \n    sound += squareLoop(float[] (C3, D2, A2, A2), time) * 0.65;\n    \n    return sound * volume;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}