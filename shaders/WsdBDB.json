{
    "Shader": {
        "info": {
            "date": "1605905093",
            "description": "An experiment with feedback buffers",
            "flags": 32,
            "hasliked": 0,
            "id": "WsdBDB",
            "likes": 7,
            "name": "Colour streamers",
            "published": 3,
            "tags": [
                "2d",
                "feedback"
            ],
            "usePreview": 0,
            "username": "FreeFull",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 col, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv*2.0 - 1.0;\n\n\n    uv2.x += sin(uv.y*130.0)/10.0;\n    uv2.y += sin(uv.x*130.0)/10.0;\n    uv2 *= mat2(cos(0.3), -sin(0.3), sin(0.3), cos(0.3));\n    \n    if(iFrame == 0) {\n        col = texture(iChannel1, uv);\n        return;\n    } else if (length(uv2*vec2(1, iResolution.y/iResolution.x)) < 0.1) {\n        col = texture(iChannel1, uv + vec2(iTime/10.2, iTime/24.53));\n        return;\n    }\n\n    col = texture(iChannel0, uv - uv2/150.0)*0.998;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}