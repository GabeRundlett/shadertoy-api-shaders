{
    "Shader": {
        "info": {
            "date": "1602839132",
            "description": "[url]https://inktober.com/[/url]\n#inktober2020 themes: [img]https://i.imgur.com/b3gMiu0.png[/img]",
            "flags": 0,
            "hasliked": 0,
            "id": "tsyyWW",
            "likes": 3,
            "name": "Fab17 #inktober2020 \"storm\"",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "inktober2020",
                "differentialscrolling"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 528
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n\n#define S(v)     smoothstep( 3., -3., (v)/min(.05,fwidth(v)) ) // AA draw\n#define C(p,r)   S( length(p) - (r) )                          // circle\n#define b(p,w,h) S( max( abs(p).x - (w), abs(p).y - (h) ) )    // box\n#define B(C,A)   O =  mix( O, vec4((C)*(C),1), A )             // blend back to front\n\nfloat s; // for seeding\n#define hash(p,op)  fract(sin((p+s)*op(127.1,311.7, 269.5,183.3)) *43758.5453123)\n#define rand(p)     hash(p,vec4) //  hash(p,mat2)\n#define pol(p)   sqrt((p).x) * cos( 6.3*(p).y + vec2(0,11) )   // rand in disk\n#define psin(x) ( .5 + .5* sin(6.3*(x)) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = ( u+u - R ) / R.y, V=U;   \n    float T, t = .3*iTime+10.,                 // wind and scroll timers\n          j = floor(-5.*(U.y+.2)), y;          // --- differential scrolling strips\n    O = j <= 0. ? max( vec4(.8*exp(-.5*U.y),1,1,1),  // sky + clouds\n                       1.5*texture(iChannel0,U/vec2(7,1)+vec2(t*j/10.-.1*t,0),2.).r )\n                : .3-j/6. + vec4(0,.7,(3.-j)/5.,1)   // ground\n                           *(.8+.2*texture(iChannel0,U+vec2(t*j/2.,0),3.-j).r);\n    O*=O; // because I accounted for gamma too late. Do it before tuning colors ;-)\n\n    for( j=1.; j<4.; j++)                      // --- strips\n    {                                                // --- sky strips\n        U = 2.*V - vec2(6.*t*(j+1.),.3);             // strip frame\n        s = 17.531*floor(U.x/4.);                    // seed per leave\n        vec4 r = rand(.3);                           \n        U.x = mod(U.x+.5+r.z,4.)-2.; U.y -= j-.7-r.w;// flying leave\n        B( vec3(0,.5+.5*r.y,0), C(U+.05*cos(20.*t+vec2(0,11)),.03*j) );\n                                                     // --- ground strips\n        U = 2.*V + vec2(t*j,.3);                     // strip frame\n        s = 17.531*floor(U.x/4.);                    // seed per tree\n         r = rand(.3);\n        U.x = mod(U.x+1.,4.)-2.4;                    // horizontal recycling\n        B( .3-j/6. + .9*vec3(0,.7,(3.-j)/5.),        // bushes\n           C(vec2(mod(U.x,.25)-.125,(U.y+.4*j+.1)*2.), .1) );\n        y = (j+r.x)/4.;                       \n        U.y +=  1.5*(y-.3); U.x += r.y-.5;           // depth + rand offset\n        U.y+=.5; U *= 3. - 2.3*y; U.y-=.5;           // scale with depth\n        T = iTime + .025*U.x;                        // elasticity & delay\n        U.x -= (U.y+1.)* .3* ( psin(T) + .5*psin(3.7*T) )/1.5; // wind\n        U.y+=.2; y = .8-y; \n        B( vec3( .2+.3*r.y, 0, y ), b(U,.1,.5));     // trunk\n        U.y-=.5;\n        for (float k=0.; k++ < 40.; )                // leaves\n            r = rand(k),\n            B( vec3( 0, .2+.6*r.w ,y ) +.2*r.xyz,    //     color\n               C(U -.5*pol(r=rand(k+.5)), .18-.1*r.x));//   mask\n    }\n    O = sqrt(O);                                     // to sRGB\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}