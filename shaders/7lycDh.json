{
    "Shader": {
        "info": {
            "date": "1661363013",
            "description": "it is base of mendalbrot",
            "flags": 0,
            "hasliked": 0,
            "id": "7lycDh",
            "likes": 2,
            "name": "Mouse Complex",
            "published": 3,
            "tags": [
                "line",
                "complex",
                "fractalbase"
            ],
            "usePreview": 0,
            "username": "Behzod",
            "viewed": 217
        },
        "renderpass": [
            {
                "code": "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#define fit(func) 1. - smoothstep(0., 0.007, func)\n#define Red     vec3(1, 0, 0)\n#define Blu     vec3(.3, .5, .7)\n#define Orn     vec3(1, 0.5, 0)\n#define t       iTime\n\nstruct complex{\n vec2 v;\n};\n\nvec2 mul(vec2 v1, vec2 v2){\n return vec2(v1.y*v2.y - v1.x*v2.x,\n         v1.x*v2.y + v2.x*v1.y);\n}\n\nfloat Line(in vec2 p, in vec2 a, in vec2 b) {\n  vec2 ba = b - a;\n  vec2 pa = p - a;\n  float h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n  return length(pa - h * ba);\n}\n\nfloat cycl(in vec2 uv){\n uv.y *= (iResolution.y/iResolution.x);\n return length(uv) - 0.01;\n}\n\nvoid mainImage(out vec4 FragColor, in vec2 FragCoord) {\n vec2 uv = FragCoord/iResolution.xy;\n vec2 ms = iMouse.xy /iResolution.xy;\n vec3 col = vec3(.5, .25, .2)/1.2;\n \n float R = 0.37;\n if(ms == vec2(0, 0)){\n     ms.x = R * cos(t);\n     ms.y = R * sin(t);\n }\n\n float line;\n complex point;\n vec2 tempP;\n\n point.v = vec2(0);\n\n float cycP0 = cycl(uv - point.v);\n cycP0 = fit(cycP0);\n col = mix(col, Red, cycP0);\n tempP = point.v;\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP1 = cycl(uv - point.v);\n cycP1 = fit(cycP1); // below point\n col = mix(col, Red, cycP1);\n // fst line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n\n\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP2 = cycl(uv - point.v);\n cycP2 = fit(cycP2);\n col = mix(col, Red, cycP2);\n // scnd line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP3 = cycl(uv - point.v);\n cycP3 = fit(cycP3);\n col = mix(col,Red, cycP3);\n // thrd line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP4 = cycl(uv - point.v);\n cycP4 = fit(cycP4);\n col = mix(col, Red, cycP4);\n // fourth line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP5 = cycl(uv - point.v);\n cycP5 = fit(cycP5);\n col = mix(col, Red, cycP5);\n // fifth line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP6 = cycl(uv - point.v);\n cycP6 = fit(cycP6);\n col = mix(col, Red, cycP6);\n // sixth line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n\n point.v = mul(point.v, point.v);\n point.v += ms;\n float cycP7 = cycl(uv - point.v);\n cycP7 = fit(cycP7);\n col = mix(col, Red, cycP7);\n // fifth line\n line = Line(uv, tempP, point.v);\n line = fit(line);\n col = mix(col, Blu, line);\n tempP = point.v;\n // uv = step(vec2(0.5), uv);\n FragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}