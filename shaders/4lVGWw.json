{
    "Shader": {
        "info": {
            "date": "1474939243",
            "description": "A vignette shader with options for colorizing and gamma correction.\n\nFeel free to use it however you wish.",
            "flags": 0,
            "hasliked": 0,
            "id": "4lVGWw",
            "likes": 1,
            "name": "Colored Vignette",
            "published": 3,
            "tags": [
                "2d",
                "color",
                "vignette"
            ],
            "usePreview": 0,
            "username": "luluco250",
            "viewed": 861
        },
        "renderpass": [
            {
                "code": "//uncomment to disable timely fade\n//otherwise the mouse will control the intensity\n#define TimeFade\n\n//uncomment to colorize vignette\n#define UseColor\n\n//vignette color modifier, if enabled, in RGB (0.0-1.0)\n#define Color vec3(0.25, 0.0, 0.125)\n\n//uncomment to disable gamma correction\n#define UseGammaCorrection\n\n//uncomment to use a white background\n//#define Debug\n\nvoid mainImage( out vec4 fragColor, in vec2 uv) {\n\tuv /= iResolution.xy;\n    vec3 col = vec3(1.0);\n    \n    float mouse = iMouse.x / iResolution.x;\n    \n    #ifdef TimeFade\n    float amount = (1.0 + 0.5 * sin(iTime));\n    #else\n    float amount = mouse;\n    #endif\n    \n    #ifndef Debug\n    col = texture(iChannel0, uv).rgb;\n    #endif\n    \n    #ifdef UseGammaCorrection\n    col = pow(col, vec3(1.0 / 2.2));\n    #endif\n    \n    float vignette = distance(uv, vec2(0.5));\n    vignette = mix(1.0, 1.0 - amount, vignette);\n    \n    #ifdef UseColor\n    col = mix(col * Color, col, vignette);\n    #else\n    col *= vignette;\n    #endif\n    \n    #ifdef UseGammaCorrection\n    col = pow(col, vec3(2.2));\n    #endif\n    \n\tfragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}