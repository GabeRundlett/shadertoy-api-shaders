{
    "Shader": {
        "info": {
            "date": "1624672356",
            "description": "Features from Accelerated Segment Test demo to show it can run in real time, there is no non-maxima supression.",
            "flags": 32,
            "hasliked": 0,
            "id": "flBGWK",
            "likes": 6,
            "name": "FAST feature detector",
            "published": 3,
            "tags": [
                "fast",
                "edge",
                "computervision",
                "corner",
                "detector"
            ],
            "usePreview": 0,
            "username": "Cewein",
            "viewed": 413
        },
        "renderpass": [
            {
                "code": "//sensibility of the FAST detector\nfloat eps = .03;\nfloat n = 11.0;\n\n//circle need to perform POI detection\nvec2 circle[16] = vec2[](vec2(0.0,3.0),\n            vec2(-1.0,3.0),\n            vec2(-2.0,2.0),\n            vec2(-3.0,1.0),\n            vec2(-3.0,0.0),\n            vec2(-3.0,-1.0),\n            vec2(-2.0,-2.0),\n            vec2(-1.0,-3.0),\n            vec2(0.0,-3.0),\n            vec2(1.0,-3.0),\n            vec2(-2.0,2.0),\n            vec2(-1.0,3.0),\n            vec2(0.0,3.0),\n            vec2(1.0,3.0),\n            vec2(2.0,2.0),\n            vec2(1.0,3.0)\n           );\n           \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvStep = vec2(1.0)/iResolution.xy;\n    \n    float pixelColor = texture(iChannel0,uv).x;\n    \n    float poiVal = 0.0;\n            \n    //fast bail out if nothing found in the four corner\n    for(int i = 0; i < 16; i+=4)\n    {\n        if(abs(texture(iChannel0,uv + circle[i]*uvStep).x - pixelColor) >= eps)\n            poiVal += 1.0;\n        \n    }\n    if( poiVal < 3.0)\n    {\n        fragColor = vec4(texture(iChannel0,uv));\n        return;\n    }\n\n    //reset counter and add total for NMS\n    poiVal = 0.0;\n\n    //check in a cirlce of raduis 3 around the pixel\n    for(int i = 0; i < 16; i++)\n    {\n        if (abs(texture(iChannel0,uv + circle[i]*uvStep).x - pixelColor) >= eps)\n            poiVal += 1.0;\n        else\n        {\n            if(poiVal >= n) continue;\n            poiVal = 0.0;\n        }\n    }\n\n\n    if(poiVal >= n)\n        fragColor = vec4(vec3(1.0,0.0,0.0),1.0);\n    else\n        fragColor = vec4(texture(iChannel0,uv));\n     \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float toGrayscale(vec3 rgb)\n{\n    return dot(rgb,vec3(0.2989, 0.5870, 0.1140));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0,uv).xyz;\n    fragColor = vec4(toGrayscale(col));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}