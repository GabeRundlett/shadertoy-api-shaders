{
    "Shader": {
        "info": {
            "date": "1706678315",
            "description": "Pixel filters for camera and video textures",
            "flags": 2,
            "hasliked": 0,
            "id": "MfBXRt",
            "likes": 3,
            "name": "Camera Pixel Filters",
            "published": 3,
            "tags": [
                "video",
                "pixel",
                "filter",
                "camera",
                "ichannel"
            ],
            "usePreview": 0,
            "username": "OnyxWingman",
            "viewed": 302
        },
        "renderpass": [
            {
                "code": "// FILTERS IN COMMON\n\n#define mirror uv.x = 1. - uv.x;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; //mirror\n    vec4 frag = texture(iChannel1,uv); // ^ uncomment if using camera\n\n    fragColor = grain\n    (frag);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 duotone( in vec4 frag )\n{\n    vec4 color;\n    float value = (frag.r + frag.g + frag.b) / 3.;\n    if (value < 0.5) color = vec4(0,0,0,1);\n    else color = vec4(1,1,1,1);\n    return color;\n}\n\n\n\nvec4 grain( in vec4 frag )\n{\n    return vec4(frag.b, frag.b, frag.b, 1); // no idea why this doesn't work with \"r\" and \"g\", but anyways\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}