{
    "Shader": {
        "info": {
            "date": "1572804498",
            "description": "Winning shader made at COOKIE party 2019 Shader Showdown Round 1\nLive coded on stage in 25 minutes.",
            "flags": 0,
            "hasliked": 0,
            "id": "3sdXWB",
            "likes": 58,
            "name": "Shader Showdown COOKIE-19 Round1",
            "published": 3,
            "tags": [
                "time",
                "demoscene",
                "tree",
                "glow",
                "goo",
                "organic",
                "laser",
                "monster",
                "limit",
                "live",
                "battle",
                "lazer",
                "shadershowdown",
                "guts"
            ],
            "usePreview": 1,
            "username": "evvvvil",
            "viewed": 1925
        },
        "renderpass": [
            {
                "code": "// Winning shader made at COOKIE Party 2019 Shader Showdown 1st round \n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"I'm a marvelous housekeeper: every time I leave a man, I keep his house.\" Zaza Gabor\n\nvec2 z,e=vec2(.0035,-.0035);float tt,g,bb,noi,mm;vec3 al,po,no,ld;vec4 np;\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat smin(float a,float b,float h){float k=clamp((a-b)/h*.5+.5,0.,1.);return mix(a,b,k)-k*(1.-k)*h;}\nvec2 smin2(vec2 a,vec2 b,float h){float k=clamp((a.x-b.x)/h*.5+.5,0.,1.);return mix(a,b,k)-k*(1.-k)*h;}\n// rough shadertoy approximation of the bonzomatic noise texture by yx https://www.shadertoy.com/view/tdlXW4\nvec4 texNoise(vec2 uv){ float f = 0.; f+=texture(iChannel0, uv*.125).r*.5;\n    f+=texture(iChannel0,uv*.25).r*.25;f+=texture(iChannel0,uv*.5).r*.125;\n    f+=texture(iChannel0,uv*1.).r*.125;f=pow(f,1.2);return vec4(f*.45+.05);\n}\nvec2 synapse(vec3 p){\n  p.x-=sin(p.y*15.+tt*10.)*0.03;\n  noi=texNoise(vec2(.1,.2)*vec2(p.y,dot(p.xz,vec2(.7)))).r;\n  bb=cos(p.y*.25+tt*2.)*.5+.5;\n  float  h,t=length(p.xz-(sin(p.xz*1.5-tt)*.5+cos(p.y*2.+noi*5.-tt)*.3))-(1.+bb*2.);\n  p=abs(p)-(1.+bb*2.);\n  p.xy*=r2(-.5);\n  p.yz*=r2(.5);\n  p+=cos(p.y)*.2;\n  h=length(p.xz)-(.4+.3*sin(p.y*.5+noi*3.)+.3*(.5+.5*sin(p.y*2.-tt*3.)));\n t=smin(t,h,.5);\n  return vec2(t*.5,bb+.15);\n}\nvec2 mp( vec3 p )\n{\n  np=vec4(p,1);\n  vec2 h,t=synapse(p);\n  mm=sin(tt-p.y*.5)*2.;\n  for(int i=0;i<2;i++){\n    np*=2.;\n    np.xyz=abs(np.xyz)-vec3(8.5+mm,8.5,8.5+mm);\n    np.xy*=r2(-.4);\n    np.yz*=r2(.2);\n    h=synapse(np.xyz);\n    h.x/=np.w;\n    t=smin2(t,h,0.5);\n  }\n  np.xz*=r2(.785);\n  h=vec2(bo(abs(np.xyz)-3.*mm,vec3(0,100,0)),1.);\n  g+=.1/(.1+h.x*h.x*.2);\n  h.x=.7*h.x/np.w;\n  t=t.x<h.x?t:h;\n  bb=texNoise(p.xz*.05).r*.5;\n  h=vec2(0.45*length(p+vec3(0,81.5,0)-mm+bb*3.)-32.,1.-bb*3.);\n  t=smin2(t,h,.5);\n  h=vec2(length(cos(np.xyz*.2-tt))-.0,1);\n  g+=.1/(.1+h.x*h.x*50.);\n  t=t.x<h.x?t:h;\n  return t;\n}\nvec2 tr( vec3 ro,vec3 rd )\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n    if(h.x<.0001||t.x>30.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>30.) t.y=0.;\n  return t;\n}\n#define a(d) clamp(mp(po+no*d).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n  tt=mod(iTime+8.,62.83);\n  vec3 ro=vec3(cos(tt*.2)*14.,-5.+cos(tt*.2)*5.,sin(tt*0.2)*14.),\n  cw=normalize(vec3(0,sin(tt*.4)*10.,0)-ro),\n  cu=normalize(cross(cw,vec3(0,1,0))),\n  cv=normalize(cross(cu,cw)),\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo;\n  ld=normalize(vec3(.1,.3,0));\n  vec2 v=vec2(abs(atan(rd.x,rd.z)),rd.y);\n  co=fo=vec3(.17,.2,.2)+texNoise(v*.4).r*.5;\n  z=tr(ro,rd);\n  if(z.y>0.){\n    po=ro+rd*z.x;\n    no=normalize(e.xyy*mp(po+e.xyy).x+\n    e.yyx*mp(po+e.yyx).x+\n    e.yxy*mp(po+e.yxy).x+\n    e.xxx*mp(po+e.xxx).x),al=vec3(.4+bb*.5,.4,.4-bb*.1);\n    al=mix(vec3(.3,.6,.9),vec3(.6,.3,.2),z.y);\n    float di=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),30.);\n    co=mix(sp+al*(a(.2)*a(.4)+.2)*(di+s(.4)+s(2.)),fo,min(fr,.5));\n    co=mix(fo,co,exp(-.0002*z.x*z.x*z.x));\n  }\n  fragColor = vec4(pow(co+g*.1,vec3(.45)),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}