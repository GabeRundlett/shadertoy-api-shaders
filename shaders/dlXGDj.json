{
    "Shader": {
        "info": {
            "date": "1672408204",
            "description": "Optimized mirror repeat methods I wrote myself. Range is 0 (inclusive) to size (exclusive).\nI added the integer version to Blender (developer.blender.org/D16432)",
            "flags": 0,
            "hasliked": 0,
            "id": "dlXGDj",
            "likes": 0,
            "name": "Mirrored Repeat / Ping Pong",
            "published": 3,
            "tags": [
                "triangle",
                "mirror",
                "mirrored",
                "repeat",
                "pingpong",
                "flipped"
            ],
            "usePreview": 0,
            "username": "MysteryPancake",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "// VARIANT 1: Floating point coordinates\n// For float, vec2, vec3, vec4, etc.\nvec2 mirror(vec2 p, vec2 size) {\n    return abs(mod(p + size, 2.0 * size) - size);\n}\n\n// VARIANT 2: Integer coordinates\n// My derivation: developer.blender.org/D16432\nint mirror(int p, int size) {\n    p = abs(p + int(p < 0)) % (2 * size);\n    return p >= size ? 2 * size - p - 1 : p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    float scale = sin(iTime) * 3.0 + 4.0;\n    ivec2 size = textureSize(iChannel0, 0);\n    \n    float mid = fragCoord.x / iResolution.x - 0.5;\n    if (mid > 0.0) {\n        // Integer demo\n        ivec2 p = ivec2(fragCoord * scale);\n        ivec2 uv = ivec2(mirror(p.x, size.x), mirror(p.y, size.y));\n        fragColor = texelFetch(iChannel0, uv, 0);\n    } else {\n        // Floating point demo\n        vec2 uv = mirror(fragCoord * scale / vec2(size), vec2(1.0));\n        fragColor = texture(iChannel0, uv);\n    }\n    \n    // Line down the center\n    fragColor *= smoothstep(0.0, 0.01, abs(mid));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}