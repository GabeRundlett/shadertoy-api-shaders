{
    "Shader": {
        "info": {
            "date": "1524942073",
            "description": "smooth fract, smooth floor, smooth modulo\n\nvariant:  [url]https://www.shadertoy.com/view/clB3zc[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "XddfWH",
            "likes": 14,
            "name": "smoothfract, smoothfloor, smod",
            "published": 3,
            "tags": [
                "interpolation",
                "utils",
                "sfract",
                "sfloor",
                "smoothmod"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 802
        },
        "renderpass": [
            {
                "code": "float w = .1;\n#define sf(x)     smoothstep( w, 1.-w -step(.5-w,abs(x-.5)) , x-step(1.-w,x) )\n#define sfract(x) sf(fract(x))\n//#define sfloor(x) ( x-.233 -.533*sfract(x) )   // ( x-.5 - .533*(sfrac-.5) )\n#define sfloor(x)  ( x-.5 - (1.-w-w)/1.5* ( sfract(x)-.5) )\n#define sround(x) sfloor(x+.5)\n#define smod(x,n) (sfract((x)/(n))*(n))\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U *= 8./R;\n    \n    O = vec4(   sfract(U.x) < U.y \n             && U.y < sfloor(U.x) );\n    if (fract(U.x) < 8./R.x ) O = vec4(1,0,0,1);\n    if (fract(U.y) < 8./R.y ) O = vec4(0,1,0,1);\n\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}