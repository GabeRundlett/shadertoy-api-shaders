{
    "Shader": {
        "info": {
            "date": "1699457487",
            "description": "Fooling around with integer logic and buffers",
            "flags": 96,
            "hasliked": 0,
            "id": "ct3czX",
            "likes": 26,
            "name": "xor 3d",
            "published": 3,
            "tags": [
                "3d",
                "xor",
                "feedback",
                "sierpinski",
                "integer"
            ],
            "usePreview": 0,
            "username": "Virgill",
            "viewed": 493
        },
        "renderpass": [
            {
                "code": "// Fooling around with integer logic and buffers\n// I always wonder how much beauty lies in simple integer math\n\n// Thx to Fabrice Neyret for reducing the code size of my mess <3\n\n// Music done with 4klang\n\n\nM   O =  (1.-U.y) * O * vec4(.8,1,.9,0)\n        +.1 - .1 * fract( 1e4* sin( dot(U*iTime, R-71.))); // noise\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "M   uvec2 I = uvec2( ( int(u.y) - iFrame ) *8 , u *4. ); \n    uint  a = ( I.x-I.y&I.x+I.y ) / uint( 7.+ iTime/6. );\n    a = ( int(u.y) & 1 ) > 0 \n          ? a |= uint( (1.01*O.y-.04) *256. )\n          : a ^= uint(       O.y      *256. );    \n    O = vec4( a & 255u )/256.;\n}\n\n  ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 35197,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/virgill/4klang-the-scientist"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define M                                        \\\nvoid mainImage( out vec4 O, vec2 u ) {           \\\n        u.y++;                                   \\\n        vec2 R = iResolution.xy, U = u / R;      \\\n        O = texture(iChannel0, U );",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}