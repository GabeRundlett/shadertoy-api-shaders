{
    "Shader": {
        "info": {
            "date": "1516994950",
            "description": " ",
            "flags": 0,
            "hasliked": 0,
            "id": "ltSfWy",
            "likes": 1,
            "name": "Glucozade",
            "published": 3,
            "tags": [
                "remix",
                "shaderclub"
            ],
            "usePreview": 0,
            "username": "jrsa",
            "viewed": 536
        },
        "renderpass": [
            {
                "code": "#define TAU 6.2831853071\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec3 hsv2rgb(vec3 color) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(color.xxx + K.xyz) * 6.0 - K.www);\n    vec3 rgb = vec3(color.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), color.y));\n\n    return rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n  \n    uv -= vec2(0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= rotate2d(distance(uv, vec2(sin(iTime * 0.1))));\n    uv += vec2(0.5);\n\n    float angleX = TAU*distance(vec2(0.666), vec2(uv.x));\n    float angleY = TAU*distance(vec2(0.333), vec2(uv.y));\n    \n    float g = (sin(angleX * cos(angleY)));\n    float r = sin(sin(angleY * angleX) + iTime);\n\n    fragColor = vec4( hsv2rgb( vec3( g * r * 0.23, 1.0 - g, r - g) ), 1.0 );\n    fragColor += vec4( hsv2rgb( vec3( g + r * 0.23 + 0.5, g, 0.5 - (r / 3.0)) ), 1.0 );\n    fragColor.rgb = sqrt(fragColor.rgb); \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}