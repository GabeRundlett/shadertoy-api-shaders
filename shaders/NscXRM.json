{
    "Shader": {
        "info": {
            "date": "1632818162",
            "description": "Distance to a line(represented by a point and direction)",
            "flags": 0,
            "hasliked": 0,
            "id": "NscXRM",
            "likes": 0,
            "name": "sdLine",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "Arthas_me",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "\nfloat sdLine(in vec2 p, in vec2 a, in vec2 d) {\n    return length((p - a) - dot((p - a), d) * d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n    vec2 a = vec2(1., 0.);\n    vec2 dir = vec2(sin(iTime), cos(iTime));\n\n\tfloat d =  sdLine(p, a, dir) - 0.2;\n    \n\t// coloring\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n    col *= 1.0 - exp(-3.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(150.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n    if( iMouse.z>0.001 )\n    {\n    d =  sdLine(p, a, dir) - 0.2;\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))-0.0025));\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)-0.015));\n    }\n\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}