{
    "Shader": {
        "info": {
            "date": "1518253061",
            "description": "This is the optimal packing of regular pentagons.\nDifferent implementation of [url]https://www.shadertoy.com/view/4stcRM[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "XsdyR7",
            "likes": 2,
            "name": "penta packing 2",
            "published": 3,
            "tags": [
                "tiling",
                "packing",
                "short",
                "pentagons"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 577
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/4stcRM\n\nvec2 M = vec2(1.275/2.,1), v, R;\n\n#define S(v) smoothstep(30./R.y,0.,abs(v))\n#define d .11\n\nvoid D(inout vec4 O, vec2 U) {\n    U = 2.*fract(U)-1.; U.y -= d; U /= M;         // local frame\n    O.r += max(0.,1.-length(U));                  // red disk\n\n    float a = atan(U.x,U.y), l=length(U), e=.628; // --- draw pentagon\n    a = mod(a+e,e+e)-e;                           // 5-fold symmetry\n    U = l * vec2(cos(a),sin(a));\n    O += S(U.x-.885);                             // draw 1 side\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5; O-=O;\n    R = iResolution.xy;\n    \n    U *= M *8./R.y ;\n    \n    U.x+=.25;\n    D(O,U);                                       // even columns\n    U.x+=.5; U.y = .47+d-U.y; \n    D(O,U);                                       // odd columns\n    \n        \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}