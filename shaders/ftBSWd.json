{
    "Shader": {
        "info": {
            "date": "1628852459",
            "description": "flying firebug particles.\nI don't know why CloudSound does not work now so I did not add a bgm for it...\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ftBSWd",
            "likes": 21,
            "name": "firebug particles",
            "published": 3,
            "tags": [
                "hash",
                "particle"
            ],
            "usePreview": 0,
            "username": "jcyuan",
            "viewed": 1206
        },
        "renderpass": [
            {
                "code": "// hash functions from https://www.shadertoy.com/view/4djSRW\nvec2 hash21(float p) {\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat hash11(float p) {\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n// ------------------------------------------------------------------------\n\nvec3 color(float t) {\n    // from IQ's color pattern formula\n    return .3 + .7 * cos(6.283 * (vec3(1., .5, .0) * (1. - t) + vec3(.7, .75, .3)));\n}\n// ------------------------------------------------------------------------\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy) / iResolution.y;\n    uv.y += .9;\n\t\n    vec3 col = vec3(0.);\n    float time = iTime * .5;\n\n    for (int i = 0; i < 30; i++) {\n        float sd = time + float(i) * 3303.1031;\n        float id = floor(sd);\n        float t = sd - id;\n        \n        float rnd = hash11(id);\n        vec2 p = hash21(id);\n        \n        p.y *= -t * (rnd + .5) - .5;\n        p.x *= rnd > .5 ? -1. : 1.;\n        \n        float size = rnd * .0075 + .00025;\n        float flicker = hash11(t * .5) * .0015;\n        \n        float cycle = rnd * 8.;\n        float w = p.x * .3 - p.x * p.y * .45;\n        float d = (size + flicker) / length(uv + vec2(cos(sd * cycle - abs(t) * 2.) * w, p.y));\n\n        col += color(rnd) * d;\n    }\n    \n    col = pow(col, vec3(1.9)); // bloom reduction\n    \n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}