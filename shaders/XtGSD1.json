{
    "Shader": {
        "info": {
            "date": "1484324091",
            "description": "you can schedule appointments by dragging the mouse, and label them by keyboard.\nrather useless somehow, except if you leave this shader running all the time ;-)\nalso wanted to do some hovering actions, but sadly there's no mouse data without buttonpress.",
            "flags": 48,
            "hasliked": 0,
            "id": "XtGSD1",
            "likes": 18,
            "name": "Scheduler Clock",
            "published": 3,
            "tags": [
                "clock",
                "calendar",
                "schedule",
                "appointment"
            ],
            "usePreview": 1,
            "username": "flockaroo",
            "viewed": 1048
        },
        "renderpass": [
            {
                "code": "// created by florian berger (flockaroo) - 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// you can schedule appointments by dragging the mouse from start day to end day\n// and label the appointment by keyboard (backspace is also working)\n// finally press enter to fix the appointment.\n// than drag another appointment\n// <shift+backspace> deletes last appointment\n// max 100 appointments allowed (change MaxAppointNum)\n// i know this is rather useless without persisiting the appointments...\n// ...this is more a conceptual study, and (as many things on shadertoy) was \n// done for the pure inspirational fun ;-)\n\n\nfloat getVal(vec2 pos)\n{\n    vec4 c=texture(iChannel0,pos/iResolution.xy);\n    return dot(c.xyz,vec3(.333));\n}\n\nvec2 getGrad(vec2 pos,float delta)\n{\n    vec2 d=vec2(delta,0);\n    return vec2(\n        getVal(pos+d.xy)-getVal(pos-d.xy),\n        getVal(pos+d.yx)-getVal(pos-d.yx)\n    )/delta/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 coord=fragCoord-iResolution.xy*.5;\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    vec4 dcol=clamp(texture(iChannel0,uv),0.,1.);\n    \n    vec3 n = vec3(getGrad(fragCoord,1.*iResolution.y/500.)*iResolution.y/500.,.5);\n    n=normalize(n);\n    vec3 light = normalize(vec3(1,-1,1));\n    float diff=clamp(dot(n,light),0.0,1.0)*.4+.6;\n    float spec=clamp(dot(reflect(light,n),vec3(0,0,-1)),0.0,1.0);\n    spec=pow(spec,10.0)*.7;\n    float vign=1.-dot(coord,coord)/iResolution.x/iResolution.y;\n    vign*=smoothstep(-.05,.05,uv.x-.05);\n    vign*=smoothstep(-.08,.08,uv.y);\n    vign*=smoothstep(-.05,.05,1.-uv.x-.05);\n    vign*=smoothstep(-.08,.08,1.-uv.y);\n\n    fragColor = vec4(1.2)*dcol*diff;\n    fragColor += spec;\n    fragColor *= vign;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// created by florian berger (flockaroo) - 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// you can schedule appointments by dragging the mouse from start day to end day\n// and label the appointment by keyboard (backspace is also working)\n// finally press enter to fix the appointment.\n// than drag another appointment\n// <shift+backspace> deletes last appointment\n// max 100 appointments allowed (change MaxAppointNum)\n// i know this is rather useless without persisiting the appointments...\n// ...this is more a conceptual study, and (as many things on shadertoy) was \n// done for the pure inspirational fun ;-)\n\n\n#define MaxAppointNum 100\n#define MaxAppointLen 16\n#define PI2 6.28318530717959\n#define TINT vec3(1.,.7,0)\n\nvec4 dayColor(int wday,float month,vec2 coord)\n{\n    //return(vec4(coord,0,0));\n    coord-=.5;\n    float r=.25;\n    vec4 bg = vec4(.5);\n    if(mod(month,2.)>=1.) bg.xyz=vec3(.3);\n    vec4 fg = vec4(0,0,0,1);\n    if(wday==0) { r=.4 ; fg=vec4(.85); }\n    if(wday==6) { r=.35; fg=vec4(.75); }\n    \n    return mix(fg,bg,smoothstep(r-.05,r+.05,length(coord.xy)));\n}\n\nfloat getMonthNumDays(float month,float year)\n{\n    float d=31.;\n    if(mod(month,2.)>=1.) d=30.;\n    if(floor(month)==1.) \n    {\n        d=28.;\n        if(mod(year,4.  )==0.) d=29.;\n        if(mod(year,100.)==0.) d=28.;\n        if(mod(year,400.)==0.) d=29.;\n    }\n    if(month>6.) d+=mod(month,2.)*2.-1.;\n    return d;\n}\n\nfloat getWDayStart(float year, float month)\n{\n    float wday=.5+(year-2017.)+month*2.5;\n    wday+=floor((year-2016.-1.)/4.);\n    wday-=floor((year-2016.-1.)/100.);\n    wday+=floor((year-2016.-1.)/400.);\n    if (month>1.) \n    { \n        wday-=2.;\n        if(mod(year,4.  )==0.) wday++;\n        if(mod(year,100.)==0.) wday--;\n        if(mod(year,400.)==0.) wday++;\n    }\n    if(month>7.) wday+=.5;\n    return mod(floor(wday),7.);\n}\n\nvec4 alphaBlend(vec4 dest,vec4 src) {return mix(dest,src,src.w);}\n\nfloat block(float e1, float e2, float w, float x)\n{\n    return smoothstep(e1-.5*w,e1+.5*w,x)*(1.-smoothstep(e2-.5*w,e2+.5*w,x));\n}\n\nvec4 markColor(vec2 coord)\n{\n    coord-=.5;\n    return block(.3,.5,.05,length(coord))*vec4(clamp(TINT*2.,0.,1.),.7);\n}\n\nbool isPixel(int x, int y, vec2 coord)\n{\n    return (floor(coord.x)==float(x) && floor(coord.y)==float(y));\n}\n\nvec4 getPixel(int x, int y)\n{\n    return texture(iChannel2,(vec2(x,y)+.5)/iResolution.xy);\n}\n\n#define LETTERS\n\n#define alpha_ 128.\n#define beta_ 129.\n#define gamma_ 130.\n#define psi_ 142.\n#define bo_ 40.\n#define bc_ 41.\n#define ebo_ 91.\n#define ebc_ 93.\n#define cbo_ 123.\n#define cbc_ 125.\n#define or_ 124.\n#define squared_ 178.\n#define space_ 32.\n#define doublepoint_ 58.\n#define minus_ 45.\n#define underscore_ 95.\n#define D0_ 48.\n#define A_ 65.\n#define B_ 66.\n#define C_ 67.\n#define D_ 68.\n#define E_ 69.\n#define F_ 70.\n#define G_ 71.\n#define H_ 72.\n#define I_ 73.\n#define J_ 74.\n#define K_ 75.\n#define L_ 76.\n#define M_ 77.\n#define N_ 78.\n#define O_ 79.\n#define P_ 80.\n#define Q_ 81.\n#define R_ 82.\n#define S_ 83.\n#define T_ 84.\n#define U_ 85.\n#define V_ 86.\n#define W_ 87.\n#define X_ 88.\n#define Y_ 89.\n#define Z_ 90.\n#define a_ (A_+32.)\n#define b_ (B_+32.)\n#define c_ (C_+32.)\n#define d_ (D_+32.)\n#define e_ (E_+32.)\n#define f_ (F_+32.)\n#define g_ (G_+32.)\n#define h_ (H_+32.)\n#define i_ (I_+32.)\n#define j_ (J_+32.)\n#define k_ (K_+32.)\n#define l_ (L_+32.)\n#define m_ (M_+32.)\n#define n_ (N_+32.)\n#define o_ (O_+32.)\n#define p_ (P_+32.)\n#define q_ (Q_+32.)\n#define r_ (R_+32.)\n#define s_ (S_+32.)\n#define t_ (T_+32.)\n#define u_ (U_+32.)\n#define v_ (V_+32.)\n#define w_ (W_+32.)\n#define x_ (X_+32.)\n#define y_ (Y_+32.)\n#define z_ (Z_+32.)\n\n#define ENTER_ 13.\n#define BACKSPACE_ 8.\n#define DEL_ 46.\n#define SHIFT_ 16.\n\n\nvoid writeChar(vec2 pos, float s, float thick, vec3 color, float c, inout vec4 col, vec2 coord)\n{\n    float x=pos.x;\n    float y=pos.y;\n    vec2 res2=iChannelResolution[2].xy;\n    //float dist=texture(iChannel2,vec2(c/16.,mod(c,16.)/16.)).x;\n    //col=mix(vec4(1,1,0,1),col,clamp(dist*dist*dist,0.,1.));\n    if( coord.x>x && coord.y>y && coord.x<x+s && coord.y<y+s )\n    {\n        vec2 dc = coord-vec2(x,y);\n        dc.y=s-dc.y;\n        vec2 uv=\n            vec2(floor(mod(c,16.))/16.,floor(c/16.)/16.)\n            +dc/s/16.;\n        uv.y=1.-uv.y/*+1./16.*/;\n        float acc=1./24.;\n        thick*=1./24.;\n        vec4 charCol=vec4(smoothstep(.5-acc-thick,.5+acc-thick,1.-texture(iChannel1,uv,-100.).w));\n        col=mix(col,1.*vec4(color,1),charCol);\n        //col+=vec4(0,1,0,1);\n    }\n}\n\nvoid writeChar(vec2 pos, float s, vec3 color, float c, inout vec4 col, vec2 coord)\n{\n    writeChar(pos,s,0.,color,c,col,coord);\n}\n\nvoid write(vec2 pos, float s, float thick, vec3 color, mat4 txt,inout vec4 col, vec2 coord)\n{\n    pos.x-=s*.25; // shift into field to compensate for the dist sourrunding of ecery letter\n    for(int i=0;i<4;i++)\n    {\n    \tfor(int j=0;j<4;j++)\n    \t{\n            float c=txt[i][j];\n            if(c==0.) return;\n    \t\twriteChar(pos,s,thick,color,c,col,coord); pos.x+=s*.5;\n        }\n    }\n}\n\nvoid write(vec2 pos, float s, vec3 color, mat4 txt,inout vec4 col, vec2 coord)\n{\n\twrite(pos,s,0.,color,txt,col,coord);\n}\n\nvoid writeBuffStr(vec2 pos, float s, vec3 color, int px, int py, inout vec4 col, vec2 coord)\n{\n    pos.x-=s*.25; // shift into field to compensate for the dist sourrunding of ecery letter\n    for(int i=0;i<100;i++)\n    {\n        float c=getPixel(px+i,py).x;\n        if(c==0.) return;\n    \twriteChar(pos,s,color,c,col,coord); pos.x+=s*.5;\n    }\n}\n\nvoid writeC(vec2 pos, float s, float thick, vec3 color, mat4 txt, inout vec4 col, vec2 coord)\n{\n    float cnt=0.;\n    for(int i=0;i<4;i++)\n    {\n        bool br=false;\n    \tfor(int j=0;j<4;j++)\n    \t{\n            if(txt[i][j]==0.) { br=true; break; }\n            cnt+=1.;\n        }\n        if(br) break;\n    }\n    write(pos-vec2(s*cnt*.25,s*.5),s,thick,color,txt,col,coord);\n}\n\nvoid writeC(vec2 pos, float s, vec3 color, mat4 txt, inout vec4 col, vec2 coord)\n{\n    writeC(pos,s,0.,color,txt,col,coord);\n}\n\nmat4 getMonthName(float month)\n{\n    if     (month<1. ) return mat4(J_,A_,N_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<2. ) return mat4(F_,E_,B_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<3. ) return mat4(M_,A_,R_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<4. ) return mat4(A_,P_,R_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<5. ) return mat4(M_,A_,Y_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<6. ) return mat4(J_,U_,N_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<7. ) return mat4(J_,U_,L_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<8. ) return mat4(A_,U_,G_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<9. ) return mat4(S_,E_,P_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<10.) return mat4(O_,C_,T_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<11.) return mat4(N_,O_,V_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<12.) return mat4(D_,E_,C_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else return mat4(0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n}\n\nvec4 writeMonthCent(float month, vec2 coord)\n{\n#ifdef LETTERS\n    mat4 m=getMonthName(month);\n    vec4 col;\n\t//write(vec2(0,0),1.,vec3(1),m,col,(coord*vec2(1,-1)+vec2(0,1))*vec2(5.,1.));\n\twriteC(vec2(2.5,.5),1.,vec3(.9),m,col,coord*vec2(5.,1.));\n    return vec4(col.xyz,col.x);\n#else\n    return vec4(0);\n#endif\n}\n\n#define IDLE         0.\n#define APPOINT_START 1.\n#define APPOINT_DRAG  2.\n#define APPOINT_LABEL 3.\n#define WriteAtPixel(x,y,c,val) { if (isPixel(x,y,fragCoord)) c=val; }\nfloat getActKey()\n{\n    float shift=0.;\n    if(texture(iChannel3,vec2((SHIFT_+.5)/256.,(0.+.5)/3.)).x>.5) shift=1.;\n    if(texture(iChannel3,vec2((BACKSPACE_+.5)/256.,(1.+.5)/3.)).x>.5) return BACKSPACE_+shift*256.;\n    if(texture(iChannel3,vec2((DEL_  +.5)/256.,(1.+.5)/3.)).x>.5) return DEL_;\n    if(texture(iChannel3,vec2((ENTER_+.5)/256.,(1.+.5)/3.)).x>.5) return ENTER_;\n    if(texture(iChannel3,vec2((space_+.5)/256.,(1.+.5)/3.)).x>.5) return space_;\n    for(float x=A_;x<A_+26.;x+=1.)\n    {\n        if(texture(iChannel3,vec2((x+.5)/256.,(1.+.5)/3.)).x>.5) return x+32.*(1.-shift);\n    }\n    for(float x=D0_;x<D_+10.;x+=1.)\n    {\n        if(texture(iChannel3,vec2((x+.5)/256.,(1.+.5)/3.)).x>.5) return x;\n    }\n    return 0.;\n}\n\nvoid getDateData(vec2 coord, \n            float mradiusI,float mradiusO,\n            float year,\n            out float ang,\n            out float ang01,  \n            out float ang12,  \n            out float dist,  \n            out float month,  \n            out float wday,  \n            out float mweek,  \n            out float mday )\n{\n    ang=atan(-coord.x,-coord.y)+PI2*.5;\n    ang01=ang/PI2;\n    dist=length(coord);\n    ang12=ang01*12.;\n    month=floor(ang12);\n    wday=fract(ang12)*7.;\n    mweek=6.*(dist-mradiusO)/(mradiusI-mradiusO);\n    mday=wday-getWDayStart(year,month)+floor(mweek)*7.;\n}\n\nvoid appendStr(mat4 src, inout mat4 dst)\n{\n    int i2=-1, j2=-1;\n    for(int i=0;i<4;i++)\n    {\n       for(int j=0;j<4;j++)\n       {\n           if(i2<0 && dst[i][j]==0.) { i2=i; j2=j; }\n           if(i2>=0){\n           if(i2==0 && j2==0) dst[i][j] = src[0][0];\n           if(i2==1 && j2==0) dst[i][j] = src[1][0];\n           if(i2==2 && j2==0) dst[i][j] = src[2][0];\n           if(i2==3 && j2==0) dst[i][j] = src[3][0];\n           if(i2==0 && j2==1) dst[i][j] = src[0][1];\n           if(i2==1 && j2==1) dst[i][j] = src[1][1];\n           if(i2==2 && j2==1) dst[i][j] = src[2][1];\n           if(i2==3 && j2==1) dst[i][j] = src[3][1];\n           if(i2==0 && j2==2) dst[i][j] = src[0][2];\n           if(i2==1 && j2==2) dst[i][j] = src[1][2];\n           if(i2==2 && j2==2) dst[i][j] = src[2][2];\n           if(i2==3 && j2==2) dst[i][j] = src[3][2];\n           if(i2==0 && j2==3) dst[i][j] = src[0][3];\n           if(i2==1 && j2==3) dst[i][j] = src[1][3];\n           if(i2==2 && j2==3) dst[i][j] = src[2][3];\n           if(i2==3 && j2==3) dst[i][j] = src[3][3];\n           j2++; if(j2>3){ j2=0; i2++; }\n           if (i2>3 || dst[i][j]==0.) return;\n           }\n       }\n    }\n}\n\nint imod(int a, int b)\n{\n    return a-(a/b)*b;\n}\n\nmat4 int2Str(int val)\n{\n    mat4 m;\n    int div=1000000;\n    int aval=val;\n    if(val<0) { m[0][0]=minus_; aval=-val; }\n    if(val==0) { m[0][0]=D0_; aval=-val; }\n    for(int i = 0;i<10;i++) { if(div>aval) div/=10; }\n    for(int i=0;i<4;i++)\n    {\n       for(int j=0;j<4;j++)\n       {\n           if( val<=0 && i==0 && j==0 ) continue;\n           \n           if (div<1) \n           {\n               //m[i][j]=0.; this wont work under windows and gives weird errors\n               // ...so i have to swizzle it\n               if (j==0) m[i].x=0.;\n               if (j==1) m[i].y=0.;\n               if (j==2) m[i].z=0.;\n               if (j==3) m[i].w=0.;\n               return m;\n           }\n           float d=D0_+float(imod(aval/div,10));\n           //m[i][j]=d; //this wont work under windows and gives weird errors\n           // ...so i have to swizzle it\n           if (j==0) m[i].x=d;\n           if (j==1) m[i].y=d;\n           if (j==2) m[i].z=d;\n           if (j==3) m[i].w=d;\n           div/=10;\n       }\n    }\n    return m;\n}\n\nmat4 getDayStr(float mday, float month)\n{\n    mat4 m = mat4(0);\n    //appendStr(int2Str(int(mday)+1),m);\n    m=int2Str(int(mday)+1);\n    //appendStr(getMonthName(month),m);\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 coord=fragCoord-iResolution.xy*.5;\n\tvec4 mouse=abs(iMouse)-iResolution.xyxy*.5;\n    float scale = 1.;\n    float appointNum = getPixel(1,0).x;                if(iFrame<60) appointNum=0.;\n    float appointLabelLen = getPixel(2,int(appointNum)).x;\n    \n    float actKey=getActKey();\n\t\n    if(iFrame<60) scale=1.;\n    \n    float appointStartDay=0.;\n    float appointEndDay=0.;\n                \n    float actYear=iDate.x;\n    float actMonth=iDate.y;\n    float actDay=iDate.z;\n    float actTime=iDate.w;\n    float year=actYear;\n    \n    // bg\n    vec4 col=vec4(.35+.05*clamp(sin(dot(fragCoord.xy,vec2(1,1)*sqrt(300./iResolution.y))),0.,1.));\n    \n    float mradiusO=iResolution.y*.5*.9;\n    float mradiusI=iResolution.y*.5*.6;\n    float ang,  ang01,  ang12,  dist,  month,  wday,  mweek,  mday   ;\n    float ang_m,ang01_m,ang12_m,dist_m,month_m,wday_m,mweek_m,mday_m ;\n    float ang_m2,ang01_m2,ang12_m2,dist_m2,month_m2,wday_m2,mweek_m2,mday_m2 ;\n    getDateData(coord,mradiusI,mradiusO,year,\n                ang,  ang01,  ang12,  dist,  month,  wday,  mweek,  mday  );\n    getDateData(mouse.xy,mradiusI,mradiusO,year,\n                ang_m,ang01_m,ang12_m,dist_m,month_m,wday_m,mweek_m,mday_m);\n    getDateData(mouse.zw,mradiusI,mradiusO,year,\n                ang_m2,ang01_m2,ang12_m2,dist_m2,month_m2,wday_m2,mweek_m,mday_m2);\n    float monthNumDays_m=getMonthNumDays(month_m,year);\n    float monthNumDays_m2=getMonthNumDays(month_m2,year);\n    \n    vec4 scol;\n    // decor rings\n    float iradius=iResolution.y*.5*.3;\n    float iW=iradius*.1;\n    scol = vec4(.1,.1,.1,.7)\n        *( \n            block(iradius-iW,iradius+iW,iW*.1,dist)\n           +block(iradius*1.17-iW*.2,iradius*1.17+iW*.2,iW*.1,dist)\n           +block(iradius*1.57-iW*.5,iradius*1.57+iW*.5,iW*.1,dist)\n           +block(iradius*2.-iW,iradius*2.+iW,iW*.1,dist)\n         );\n    col = alphaBlend(col,scol);\n \n    // calender\n    float wdayStart=getWDayStart(year,month);\n    float wdayStart_m=getWDayStart(year,month_m);\n    float monthNumDays=getMonthNumDays(month,year);\n    bool isValidDay = false;\n    if(mday>=0. && mday<monthNumDays )\n    {\n        isValidDay=true;\n    \tscol=dayColor(int(wday),month,vec2(fract(wday),fract(mweek)));\n\t\tcol = alphaBlend(col,scol);\n    }\n    if(floor(mday)==actDay-1. && floor(month)==actMonth)\n    {\n        scol=markColor(vec2(fract(wday),fract(mweek)));\n\t\tcol = alphaBlend(col,scol);\n    }\n    if(mweek<0. && mweek>-2.) \n    {\n        vec2 tcoord=vec2(fract(wday/7.),1.-fract(mweek*.5));\n        scol=writeMonthCent(month,tcoord);\n\t\tcol = alphaBlend(col,scol);\n        //col = vec4(tcoord,0,0);\n    }\n    \n    // clock\n    float secRadius = mradiusI*.96;\n    float secW=secRadius*.05;\n    float sec=mod(actTime,60.);\n    scol = vec4(TINT,.7)\n          *block(.0,sec,.1,ang01*60.)\n          *block(secRadius-.5*secW,secRadius+.5*secW,secW*.3,dist);\n\tcol = alphaBlend(col,scol);\n    \n    float minRadius = secRadius*.88;\n    float minW=minRadius*.12;\n    float minute=mod(actTime/60.,60.);\n    scol = vec4(.8,.8,.8,.45)\n          *block(.0,minute,.1,ang01*60.)\n          *block(minRadius-.5*minW,minRadius+.5*minW,minW*.1,dist);\n\tcol = alphaBlend(col,scol);\n    \n    float hrRadius = secRadius*.67;\n    float hrW=hrRadius*.35;\n    float hr=mod((actTime/3600.),12.);\n    float hr24=mod((actTime/3600.),24.);\n    scol = vec4(.8,.8,.8,.45)\n          *block(.0,hr,.1/60.*12.,ang01*12.)\n          *block(hrRadius-.5*hrW,hrRadius+.5*hrW,hrW*.05,dist);\n\tcol = alphaBlend(col,scol);\n    \n    scol=vec4(0);\n    mat4 clockTxt=mat4(floor(hr24/10.)+D0_,mod(hr24,10.)+D0_,doublepoint_,\n                       floor(minute/10.)+D0_,mod(minute,10.)+D0_,doublepoint_,\n                       floor(sec/10.)+D0_,mod(sec,10.)+D0_,\n                       0,0,0,0, 0,0,0,0);\n    \n    writeC(vec2(0),.053,.5,vec3(.9),clockTxt,scol,coord/iResolution.y);\n    col = alphaBlend(col,scol);\n\n    if(iMouse.x==0. && iMouse.y==0. && iTime<10.)\n    {\n        writeC(vec2(0,-.06),.053,.5,vec3(1,1,0),\n               mat4(S_,e_,l_,e_,c_,t_,space_,s_,o_,m_,e_,space_,d_,a_,y_,s_),\n               scol,coord/iResolution.y);\n        if( iTime<7. || fract(iTime)>.5 )\n        col = alphaBlend(col,scol);\n    }\n    \n    //draw appointments\n    for(int i=0;i<MaxAppointNum;i++)\n    {\n        if (i>int(appointNum)) break;\n        vec2 fromto = getPixel(0,i).xy;\n        if(month*32.+mday>fromto.x && month*32.+mday<=fromto.y+1. && isValidDay)\n        {\n            col.xyz+=TINT*.3;\n        }\n        vec2 appPos=getPixel(1,i).yz*iResolution.y+iResolution.xy*.5;\n        float s = .04*iResolution.y/sqrt(iResolution.y/300.);\n\t    vec3 color=TINT;\n        if(i==int(appointNum)) \n        {\n            s*=1.1;\n            color=clamp(TINT*2.,0.,1.);\n        }\n        writeBuffStr(appPos+.05*s*vec2(1,-1),s,vec3(0,.0,0),3,i,col,fragCoord);\n        writeBuffStr(appPos                 ,s,color*1.4,   3,i,col,fragCoord);\n    }\n    \n    // managing appointment data in lower left edge of fb\n    \n  \tappointStartDay = getPixel(0,int(appointNum)).x;\n  \tappointEndDay   = getPixel(0,int(appointNum)).y;\n    if(iMouse.z>0. && iMouse.w>0.)\n    {\n    \tappointStartDay = month_m2*32.+mday_m2;\n    \tappointEndDay   = month_m *32.+mday_m;\n        if(appointEndDay<appointStartDay) \n        {\n            float dummy=appointEndDay; appointEndDay=appointStartDay; appointStartDay=dummy;\n        }\n    }\n    if(   mday_m <=0. || mday_m >=monthNumDays_m\n       || mday_m2<=0. || mday_m2>=monthNumDays_m2\n       || iFrame<60)\n    {\n    \tappointStartDay = 1.;\n    \tappointEndDay   = 0.;\n    }\n    bool appointValid = (appointStartDay<=appointEndDay);\n    \n    if(appointValid)\n    {\n        write       (iResolution.xy*vec2(.09,.9),\n                     iResolution.y*.05,\n                     vec3(1,1,1)*1.5,\n                     mat4(L_,a_,b_,e_, l_,doublepoint_,0,0, 0,0,0,0, 0,0,0,0),\n                     col,fragCoord);\n        writeBuffStr(iResolution.xy*vec2(.18,.9),\n                     iResolution.y*.05,\n                     clamp(TINT*1.5,0.,1.)*1.5,\n                     3,int(appointNum),\n                     col,fragCoord);\n    }\n\n    // show actual day of month at mouse position while dragging\n    if(iMouse.z>0. && iMouse.w>0. && mday_m>=0. && mday_m<=monthNumDays_m)\n    \twrite(vec2(iMouse.xy),iResolution.y*.05,vec3(1),getDayStr(mday_m,month_m),col,fragCoord);    \n    \n\tvec4 oldCol=texture(iChannel2,fragCoord/iResolution.xy);\n    if(fragCoord.x<float(MaxAppointLen+3) && fragCoord.y<=float(MaxAppointNum) && col!=oldCol)\n      col=oldCol;\n    //for(int i=0;iMaxAppointNum;i++)\n    //{\n    //    if\n    //}\n    \n    WriteAtPixel(0,int(appointNum),col.x,floor(appointStartDay));\n    WriteAtPixel(0,int(appointNum),col.y,floor(appointEndDay));\n    WriteAtPixel(1,int(appointNum),col.yz,.5*(mouse.zw+mouse.zw)/iResolution.y);\n    \n\tif      (actKey==BACKSPACE_)\n    {\n        appointLabelLen=max(0.,appointLabelLen-1.);\n        WriteAtPixel(3+int(appointLabelLen),int(appointNum),col.x,0.);\n    }\n\telse if (actKey==BACKSPACE_+256.) // with shift\n    {\n        appointNum=max(0.,appointNum-1.);\n    }\n\telse if (actKey!=0.) \n    {\n        if(appointValid)\n        {\n\t     \tWriteAtPixel(3+int(appointLabelLen),int(appointNum),col.x,actKey==13.?0.:actKey);\n          \tappointLabelLen=min(appointLabelLen+1.,float(MaxAppointLen-2));\n\t     \t//WriteAtPixel(3+int(appointLabelLen),int(appointNum),col.x,0.);\n        }\n\t}\n    else\n    {\n\t\tWriteAtPixel(3+int(appointLabelLen),  int(appointNum),col.x,\n                     (fract(iDate.w)<.5 && appointValid)?underscore_:0.);\n\t \tWriteAtPixel(3+int(appointLabelLen)+1,int(appointNum),col.x,0.);\n    }\n    \n    WriteAtPixel(2,int(appointNum),col.x,appointLabelLen);\n    if (actKey==ENTER_)\n    { \n        appointNum=min(appointNum+1.,float(MaxAppointNum));\n        // init new appointment to invalid appointment (start>end)\n        WriteAtPixel(0,int(appointNum),col.x,1.); // start Day\n        WriteAtPixel(0,int(appointNum),col.y,0.); // end Day\n    }\n    WriteAtPixel(1,0,col.x,appointNum);\n    \n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}