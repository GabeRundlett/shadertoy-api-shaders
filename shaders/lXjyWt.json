{
    "Shader": {
        "info": {
            "date": "1727889905",
            "description": "source  https://www.shadertoy.com/view/fdy3WG",
            "flags": 0,
            "hasliked": 0,
            "id": "lXjyWt",
            "likes": 10,
            "name": "fractal breath",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 129
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n#define Q(p) p *= r(round(atan(p.x, p.y) * 4.) / 4.)\n#define r(a) mat2(cos(a + asin(vec4(0,1,-1,0))))\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    for(\n        float i=0.,g=0.,e,s;\n        ++i<99.;\n        O.rgb+=mix(r/r,H(log(s)),.7)*.08*exp(-i*i*e))\n    {\n        p=g*d;\n       \n        p.z-=.8;\n        p=R(p,normalize(vec3(1,0,-5)),iTime*.3);  s=4.;\n         Q(p.xy);\n        for(int j=0;j++<8;)\n            p=abs(p),\n            p=p.x<p.y?p.zxy:p.zyx,\n             p=p.z<p.y?p.zxy:p.zyx,\n            \n            s*=e=1.8/min(dot(p,p),1.3+0.1*cos(iTime)),\n            p=p*e-vec3(12,3,3);\n            \n            float c = mod(iTime,10.);\n            \n            if(c<2.5){\n        g+=e=length(p.xzzx)/s;\n  }\n         \n            if(c<5. && c>2.5){\n        g+=e=length(p.zzx)/s;\n  }\n      \n           \n            if(c>5.){\n        g+=e=length(p.xyzx)/s;\n  }\n  \n  \n    }\n    O=pow(O,vec4(5));\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}