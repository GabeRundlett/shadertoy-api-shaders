{
    "Shader": {
        "info": {
            "date": "1536448911",
            "description": "My first shader!   Uses trig functions to make a simple animation",
            "flags": 0,
            "hasliked": 0,
            "id": "4tyyDm",
            "likes": 1,
            "name": "wavy01",
            "published": 3,
            "tags": [
                "triganimation"
            ],
            "usePreview": 0,
            "username": "teraspora",
            "viewed": 411
        },
        "renderpass": [
            {
                "code": "// Wavy01 - My first OpenGL shader;\n// Author: John Lynch (teraspora);\n// Date: 09 SEP 2018.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    const float PI = 3.141592654;\n    const float TWO_PI = 6.283185307;\n    const vec4 colours[3] = vec4[3](vec4(1., 0.5, 0., 1.), vec4(0., 0.7, 1., 1.), vec4(0.8, 0., 1., 1.)); \n\n    float px = fragCoord.x;\n    float py = fragCoord.y;\n    float w = iResolution.x;\n    float h = iResolution.y;\n\n    vec2 wh2 = vec2(px - w / 2., py - h / 2.);\n\n    // rotate each point\n    float phi = mod(iTime, TWO_PI);\n    float c = cos(phi);\n    float s = sin(phi);\n    float x = wh2.x * c - wh2.y * s + w / 2.;\n    float y = wh2.x * s + wh2.y * c + h / 2.;\n    \n    wh2 = vec2(x - w / 2., y - h / 2.);\n    \n    fragColor = vec4(2. * cos(iTime * 0.2)  * x / w, 0., iMouse.y / h, 1.);\n    float factor = mod(iTime, 40.);\n    float yt = 100. + 50. * (sin(factor * x * 13. / w) * cos(factor * x * 1.3 / w));\n    float yu = h - yt;\n    \n    if (y < yt || y > yu) fragColor = vec4(sin(float(iFrame) / 100.), cos(iTime) / 4., 0.5, 1.);      \n    \n    float r2 = wh2.x * wh2.x + wh2.y * wh2.y;\n    // radius determined by elapsed time (cyclically) and angle\n    if (r2 < 20000. - mod(iTime * 8000., 40000.) + mod(atan(wh2.y, wh2.x), PI / 16.) * r2 * 6.) {\n    \tfragColor = colours[int(mod(float(iFrame) / 120., 3.))];\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}