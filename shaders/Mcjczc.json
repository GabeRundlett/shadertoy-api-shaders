{
    "Shader": {
        "info": {
            "date": "1722786643",
            "description": "Some anti-aliasing consideration. Some fake lighting.\nThe top middle one fades between input and outputs of fwidth, dFdx and dFdy. Still works even though many ifs.\nJust rehashed scribbles.",
            "flags": 0,
            "hasliked": 0,
            "id": "Mcjczc",
            "likes": 4,
            "name": "Doodle Patterns",
            "published": 3,
            "tags": [
                "2d",
                "patterns"
            ],
            "usePreview": 0,
            "username": "dray",
            "viewed": 81
        },
        "renderpass": [
            {
                "code": "\n// anti-alias sawtooth (1st derivative)\n#define TRI2(X,T,A)  ( mod(X,T) < (A) ? mod(X,T)*(T)/(A) : ((T)-mod(X,T))*(T)/((T)-(A))  )\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0);\n    if ( fragCoord.x < iResolution.x/3. )\n        if ( fragCoord.y > iResolution.y/2. ) // upper left\n            fragColor += vec4( TRI2( ( fragCoord.x*cos(iTime/8.)+fragCoord.y*sin(iTime/8.) ) / 50., 1., .5+.47*sin(iTime) )*.9 );\n        else // lower left\n            fragColor += vec4( \n              TRI2( ( fragCoord.x*cos(iTime/2.)+fragCoord.y*sin(iTime/2.) ) / 50., 1., .5+.47*sin(iTime) ),\n              TRI2( ( fragCoord.x*cos(iTime/4.)+fragCoord.y*sin(iTime/-4.) ) / 50., 1., .5+.47*sin(iTime) ), // head the other direction\n              TRI2( ( fragCoord.x*cos(iTime/3.)+fragCoord.y*sin(iTime/3.) ) / 50., 1., .5+.47*sin(iTime) ),\n              1. ) * .9;\n    else if ( fragCoord.x < iResolution.x*2./3. )\n        if ( fragCoord.y > iResolution.y/2. ) // upper middle\n        {\n            float v = ( 1. +  sin(fragCoord.x/10.) + sin(fragCoord.y/10.) ) * 8.;\n            fragColor = mix( vec4(\n                fwidth(v),\n                dFdx(v)+.5, // nicely extracts only the x variation\n                dFdy(v*2.)+.5, // nicely extracts only the y variation - blue needs a boost for me\n                1. ),\n                vec4(v/12.),\n                clamp(.2+.8*cos(iTime/2.),0.,1.) );\n        }\n        else // lower middle\n        {\n            float ang = 4.+sin(iTime)*4.;\n            fragColor += vec4( \n                TRI2(fragCoord.x/50.,1.,.97)*(.5+.5*sin(ang) + TRI2(fragCoord.y/50.,1.,.97)*(.5+.5*cos(ang)))\n                );\n        }\n        \n    else\n        if ( fragCoord.y > iResolution.y/2. ) // upper right\n        { // radial pattern 2\n            float dist = iResolution.y/4. * (1.+sin(iTime/2.));\n            fragCoord -= floor(vec2(iResolution.x*5./6.,iResolution.y*3./4.)); // recenter\n            fragCoord -= vec2(dist/2.);\n            fragColor =  .5+.5*cos( vec4(0,21,23,0) - iTime*5. + 300./(.001+length(fragCoord/5.)) );\n            fragCoord.x += dist;\n            fragColor +=  .5+.5*cos( vec4(0,21,23,0) - iTime*5. + 300./(.001+length(fragCoord/5.)) );\n            fragCoord.y += dist;\n            fragColor +=  .5+.5*cos( vec4(0,21,23,0) - iTime*5. + 300./(.001+length(fragCoord/5.)) );\n            fragCoord.x -= dist;\n            fragColor +=  .5+.5*cos( vec4(0,21,23,0) - iTime*5. + 300./(.001+length(fragCoord/5.)) );\n            fragColor = sqrt(fragColor / 5.);\n        }\n        else // lower right\n        { // radial pattern 1\n        fragCoord -= floor(vec2(iResolution.x*5./6.,iResolution.y*1./4.)); // recenter\n        vec2 uv = fragCoord/iResolution.xy*4.;\n        vec3 col=vec3(0);\n        for(float i=0.; i<3.;i+=.5) {\n            col += vec3(\n                .5+.5*sin(\n                    vec3(0,21,23)\n                    -4.*iTime\n                    +length(uv+vec2(i))*15.*(\n                         4.+vec3(0,sin(iTime*2.)*.1,cos(iTime*2.)*.1))));\n        }\n        fragColor = vec4(sqrt(col*.2),1.0);\n        }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}