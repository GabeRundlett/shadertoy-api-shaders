{
    "Shader": {
        "info": {
            "date": "1633006205",
            "description": "point distribution gradient, rather than pixel noise gradient as in https://shadertoy.com/view/fscSWH\nclick to see tiles.\ntop: pos = white noise  procedural ( float hash )\nmid: pos = white noise  texture\nbottom: pos = blue noise ( no effect here :-) ).",
            "flags": 0,
            "hasliked": 0,
            "id": "fdcXWH",
            "likes": 4,
            "name": "random point gradients:  h/t/b",
            "published": 3,
            "tags": [
                "gradient",
                "poisson",
                "hash",
                "dithering",
                "bluenoise",
                "whitenoise",
                "pointdistribution"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 411
        },
        "renderpass": [
            {
                "code": "// Lagrangian variant of https://shadertoy.com/view/fscSWH\n\n#define hash(p)  fract(sin((p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123)\n#define T(c)     texelFetch(c, ivec2(U) % textureSize(c,0).xy, 0).xy \n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, U, P = u/R, T,D,H;\n    u.x += float(iFrame);\n    T = u / 16.;\n    O-=O;\n    float d = 99.;\n    for ( float i=0.; i < 256.*(1.-P.x); i++ ) {\n        U = floor(T) + i*13.7;\n        H =   P.y > .66 ? hash(U)\n            : P.y > .33 ? T(iChannel0) \n            :             T(iChannel1);\n        D = fract(T) - H;\n        d = min(d, dot(D,D));\n     // O = max(O, 1.3 - 16.*sqrt(d) );\n     // O += (1.-O) * clamp( 1.3 - 16.*sqrt(d) , 0.,1.);\n    }\n        \n    O = vec4( 1.3 - 16.*sqrt(d) );   // draw closest point\n    if ( int(u.y) % (int(R.y)/3) == 0 ) O = vec4(1,0,0,1); // horizontal separator\n    u = fract((u-.5)/16.);\n    if ( iMouse.z>0. && u.x*u.y==0.) O = vec4(0,0,1,1);    // if click, draw grid\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}