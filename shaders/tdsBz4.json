{
    "Shader": {
        "info": {
            "date": "1587832126",
            "description": "figured out how to use buffers :)\n[url=https://www.shadertoy.com/view/3sfBzM]technically better version[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "tdsBz4",
            "likes": 14,
            "name": "Complementary Elements",
            "published": 3,
            "tags": [
                "interactive",
                "fire",
                "water"
            ],
            "usePreview": 0,
            "username": "izutionix",
            "viewed": 744
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 mouse = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n    float t = float(iFrame)/60.; //produces less gaps than iTime\n    \n    vec2 orbit = vec2(sin(t),cos(t));\n    \t\n\n    vec2 fuv = 1.25*uv + orbit;\n    vec2 wuv = 1.25*uv - orbit;\n    \n\tif(iMouse == texture(iChannel1, vec2(0.))){}\n    else\n    {\n\t\tfuv = uv - mouse;\n    \twuv = uv + mouse;\n    }\n    \n    vec3 fire = vec3(.7,.2,.1)/vec3(length(fuv));\n    vec3 water = vec3(.1,.2,.7)/vec3(length(wuv));\n    vec3 col = fire + water;\n    \n    //accumulate image\n    vec4 new = vec4(vec3(col*.1), 1.0);\n    vec4 old = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n    fragColor = mix(old,new,.1);//vec4(max(old,new));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 old = texture(iChannel1, vec2(0.));\n    vec4 new = iMouse;\n    fragColor = mix(old,new,.6);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}