{
    "Shader": {
        "info": {
            "date": "1726719191",
            "description": "originals https://www.shadertoy.com/view/MdXSzS",
            "flags": 0,
            "hasliked": 0,
            "id": "l3fcDX",
            "likes": 2,
            "name": "star and noise",
            "published": 3,
            "tags": [
                "fractal",
                "star",
                "galaxy",
                "universe"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 55
        },
        "renderpass": [
            {
                "code": "float ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\nfloat sdRhombus( in vec2 p, in vec2 b ) \n{\n    p = abs(p);\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\n}\n\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n\n}\n\nfloat Star(vec2 uv, float flare) {\n    float d = length(uv);\n    // the cirle of the star\n    float m = 0.05/d;\n    \n    float rays = max(0.,1.-abs(uv.x * uv.y*1000.));\n    m += rays;\n    uv *= Rot(3.1415/4.);\n    rays = max(0.,1.-abs(uv.x * uv.y*1000.));\n    m += rays * .3;\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-0.5;\nfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n    \n    \n    vec3 col = vec3(0);\n    \n    col += Star(uv, 0.5);\n   \n    \nvec2 R = iResolution.xy; \nvec4 o =fragColor;\nvec2 F =fragCoord;\n    o-=o;\n    for(float d,t = iTime*.1, i = 0. ; i > -1.; i -= .06 )          \t\n    {   d = fract( i -3.*t );                                          \t\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \t\n        for (int j=0 ; j++ <27; )                                      \t\n            c.xzyw = abs( c / dot(c,c)                                 \t\n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\t\n       o -= c * c.yzww  * d--*d  / vec4(3,5,1,1);                     \n    }\n\n\tfloat v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\t\n\tfloat s = 0.0;\n\tfor (int i = 0; i < 90; i++)\n\t{\n\t\tvec3 p = s * vec3(uv, 0.0);\n\t\n\t\tp += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1)+o.xyz;\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts  += .035;\n\t}\n\t\n\tfloat len = length(uv);\n\tv1 *= smoothstep(.7, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\t\n\tvec3 col6 = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) ;\n    \n    //Ensure we are independant of aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float d = length(uv);\n     vec3 col3 = palette( d + iTime, vec3(0.8,0.5,0.4),vec3(0.2,0.4,0.2),vec3(2.0,1.0,1.0),vec3(0.0,0.25,0.25) );\n\n    //d -= 0.5;\n    d = sin(d*8.0 + iTime)/8.0;\n    d = abs(d);\n\n    \n    vec3 col2 = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 color=vec3(0.0);\n    float d2=0.0;\n    \n    d=length(abs(uv.xy));\n    //glow effect\n    d = 0.02/d;\n    // add color\n    \n    \n    \n    \n    \n\n    \n    col *=d+col2+d2+col3;\n    \n    \n    // Output to screen\n    \n    fragColor = vec4(col*col6,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}