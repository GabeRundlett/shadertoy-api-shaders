{
    "Shader": {
        "info": {
            "date": "1635079592",
            "description": "[url]https://inktober.com/[/url]\n#inktober2021 themes: [img]https://i.imgur.com/QjhAdpd.png[/img]\n\nExtinction of light ( from left to right ) by an explicit (top) vs statistical (bottom) distribution of 1-pixel thick occluders.\nMouse.y controls density.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdKXzc",
            "likes": 7,
            "name": "Fab24 #inktober2021 \"extinction\"",
            "published": 3,
            "tags": [
                "2d",
                "short",
                "inktober2021"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "#define H(p)     fract(sin(floor(p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123)\n#define S        smoothstep(w+w,0., sqrt(l) )\n\nvoid mainImage(out vec4 O, vec2 u ) \n{\n    vec2  R = iResolution.xy;\n    float N = length(iMouse.xy)<10. ? 10.+8.*sin(iTime) : 20.*iMouse.y/R.y, \n          w = N/R.y,\n          l = 9.,v=1., y, d=l, x;\n    vec2  U = w* ( u+u - R ), D,P,\n          I = floor(U), F = fract(U)-.5;\n          \n    O-=O;\n    if (U.y<0.) {                                  // --- extinction by statistical distribution\n        O.r += pow( 1. - 3.14*w, U.x+w*R.x ); \n        O = sqrt(O);                               // to sRGB\n        return; \n    }                                              // ---  extinction by explicit extinction\n    \n    for( int k = 0; k < 9; k++ )                   // draw the random occluders\n        D = vec2( k%3, k/3 )-1.,\n        P = F - D - H(I+D),\n        l = min(l, dot(P,P)),\n        P.x > 0. ? d = min(d, P.y*P.y): y;    \n    O += S;\n    \n    l = 9.;    \n    for( x = -w*R.x; x < floor(U.x); x++ ) {       // compute ray energy decay from left to pos\n        l = 9.;\n        I.x = floor(x);\n        for( int k = -1; k < 2; k++ )\n            D = vec2(0,k),\n            y = ( F - D - H(I+D) ).y,\n            l = min(l, y*y);\n \n         v *= 1.-S;\n    }\n    l = d; v *= 1.-S;                              // contribution of current cell\n    O.r += v;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}