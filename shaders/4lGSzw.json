{
    "Shader": {
        "info": {
            "date": "1483465786",
            "description": "Reticle for VR",
            "flags": 0,
            "hasliked": 0,
            "id": "4lGSzw",
            "likes": 4,
            "name": "VR reticle",
            "published": 3,
            "tags": [
                "reticle"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 589
        },
        "renderpass": [
            {
                "code": "//Ethan Alexander Shulman 2016\n\n\n//units = pixels\n#define RETICLE_SIZE 100.\n#define BAR_DISTANCE 40.\n#define INDICATOR_BAR_THICKNESS 7.\n#define INDICATOR_BAR_FADE 8.\n#define PROGRESS_BAR_THICKNESS 10.\n#define TOTAL_SIZE (RETICLE_SIZE + BAR_DISTANCE + INDICATOR_BAR_THICKNESS*2.0 + PROGRESS_BAR_THICKNESS*2.0)\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord*2. - iResolution.xy);\n    float len = length(uv),\n          ang = 3.14-atan(uv.y,uv.x);\n    \n    float indicatorOn = mod(floor(iTime),2.),\n          progress = cos(iTime)*.5+.5;\n    \n    float blen = (RETICLE_SIZE+BAR_DISTANCE)-len;\n    \n    float d = max(RETICLE_SIZE-len,\n                  max(indicatorOn*(INDICATOR_BAR_THICKNESS-abs(blen))/INDICATOR_BAR_FADE,\n                     clamp(ang/(-6.28)+progress*2.,0.,1.)*(PROGRESS_BAR_THICKNESS-abs(blen+INDICATOR_BAR_THICKNESS+PROGRESS_BAR_THICKNESS))));\n\tfragColor = vec4(clamp(pow(max(0.,d/4.),1./1.3),0.,1.));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}