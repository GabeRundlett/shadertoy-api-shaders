{
    "Shader": {
        "info": {
            "date": "1607886997",
            "description": "We can't have completely uniform movement as the time increments change between frames and so we don't generate exactly the same pixels as neighboring from the previous frame.",
            "flags": 0,
            "hasliked": 0,
            "id": "3sKfDy",
            "likes": 1,
            "name": "Slow moving uniform noise",
            "published": 3,
            "tags": [
                "noise",
                "move",
                "slow"
            ],
            "usePreview": 0,
            "username": "rrrr",
            "viewed": 281
        },
        "renderpass": [
            {
                "code": "float random(vec2 fv, float d1, float d2, float r) {\n    return fract(sin(dot(fv, vec2(d1, d2))) * r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy * 1.0;\n    vec2 fv = uv + iTime * .005;\n    vec2 iv = floor(fv * 500.0);\n    vec2 iv2 = floor(fv * 30.0);\n    vec2 iv3 = floor(fv * 400.0);\n    \n    vec3 cell_noise1 = vec3(random(iv, 12.0, 80.0, 4000.0));\n    vec3 cell_noise2 = vec3(random(iv2, 12.333, 13.0, 5000.0));\n    vec3 cell_noise3 = vec3(random(iv3, 90.4325, 12.0, 2000.0));\n    vec3 cell_noise = (cell_noise2) * 1.0;\n\n    fragColor = vec4(cell_noise,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}