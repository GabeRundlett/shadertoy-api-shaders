{
    "Shader": {
        "info": {
            "date": "1517197499",
            "description": "Basic checkerboard generator for Assignment 1 of EGP-200",
            "flags": 0,
            "hasliked": 0,
            "id": "4ljfDG",
            "likes": 0,
            "name": "EGP200 checkerboard",
            "published": 3,
            "tags": [
                "beginner",
                "checkerboard",
                "shader",
                "assignment"
            ],
            "usePreview": 0,
            "username": "Awong200",
            "viewed": 518
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //number of rows and columns, can be changed by user\n    float numColumns = 5.0;\n    float numRows = 4.0;\n    \n    //determines the size of each column so they are all equal across the screen\n    float columnWidth = 2.0 / numColumns;\n    float rowHeight = 2.0 / numRows;\n    \n    //vec4s for the two colors/textures, can be modified. Code for  \n    vec4 tex1 = texture(iChannel0, uv); //vec4(1.0, 1.0, 1.0, 0.0);\n    vec4 tex2 = texture(iChannel1, uv); //vec4(0.0, 0.0, 0.0, 0.0);\n    \n\t//checks to see if the current x/y position is not on a line, and then \n    if (mod(uv.x, columnWidth) > 0.0 && mod(uv.x, columnWidth) < columnWidth / 2.0) \n    {\n        if (mod(uv.y, rowHeight) > 0.0 && mod(uv.y, rowHeight) < rowHeight / 2.0) \n    \t{\n        \tfragColor = tex1;\n    \t}\n    \telse\n    \t{\n        \tfragColor = tex2;\n    \t}\n    }\n    else\n    {\n        if (mod(uv.y, rowHeight) > rowHeight / 2.0 && mod(uv.y, rowHeight) < rowHeight) \n    \t{\n        \tfragColor = tex1;\n    \t}\n    \telse\n    \t{\n        \tfragColor = tex2;\n    \t}\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}