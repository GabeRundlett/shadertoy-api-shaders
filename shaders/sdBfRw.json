{
    "Shader": {
        "info": {
            "date": "1645966833",
            "description": "brush stroke generator\nused in https://www.shadertoy.com/view/fd2BRm",
            "flags": 0,
            "hasliked": 0,
            "id": "sdBfRw",
            "likes": 11,
            "name": "brush tex",
            "published": 3,
            "tags": [
                "texture",
                "paint",
                "brush"
            ],
            "usePreview": 0,
            "username": "mdb",
            "viewed": 400
        },
        "renderpass": [
            {
                "code": "//Random////////////////////////////////////////////////////////////////////////////\nfloat noise(vec2 x){\n    vec2 f = fract(x);\n    vec2 u = f*f*(3.0 - 2.0*f);\n    \n    vec2 p = floor(x);\n\tfloat a = texture(iChannel0, (p+vec2(0.0, 0.0))/256.0).x;\n\tfloat b = texture(iChannel0, (p+vec2(1.0,0.0))/256.0).x;\n\tfloat c = texture(iChannel0, (p+vec2(0.0,1.0))/256.0).x;\n\tfloat d = texture(iChannel0, (p+vec2(1.0,1.0))/256.0).x;\n\n    \n\treturn a+(b-a)*u.x+(c-a)*u.y+(a-b-c+d)*u.x*u.y;\n}\n\nvec2 seed = vec2(0.0);\n\nfloat rand(){\n    return (seed.x = fract(6.0*sin(344.0*seed.x + 0.4)));\n}\nfloat fbm(vec2 x, int detail){\n    float a = 0.0;\n    float b = 1.0;\n    float t = 0.0;\n    x += seed;\n    for(int i = 0; i < detail; i++){\n        float n = noise(x);\n        a += b*n;\n        t += b;\n        b *= 0.7;\n        x *= 2.0; \n    \n    }\n    return a/t;\n}\n//aux///////////////////////////////////////////////////////////////////////////////////\n\nvec3 colorRamp(vec3 col1, vec3 col2, vec3 col3, float t){\n    if (t < 0.5){\n        t*=2.0;\n        t = t*t*(3.0 - 2.0*t);\n        return mix(col1, col2, t);\n    }else{\n        t = (t-0.5)*2.0;\n        t = t*t*(3.0 - 2.0*t);\n        return mix(col2, col3, t);\n    }\n}\n\n//brush////////////////////////////////////////////////////////////////////////////////\n\n\nvec4 brush(vec2 uv){ //color && alpha\n    uv.y += 0.2*(fbm(vec2(uv.x*2.0, 0.5), 2) - 0.5);\n    //strength\n    float b = 1.0;\n    b *= pow(fbm(uv*vec2(1.0, 3.0), 8), 2.0);\n    b *= smoothstep(0.9, 0.5, 2.0*max(abs(uv.x - 0.5), abs(uv.y - 0.5)));\n    \n    \n    if (b <= 0.15) return vec4(0.0);\n    //color\n    float t = 0.3 + 0.4*fbm(uv*vec2(10.0, 60.0) + 10.0, 3);\n    t += 0.3*fbm(uv*2.0+20.0, 2)-0.15;\n    t += 0.2*noise(seed)-0.1;\n    t = 0.8*t+0.1;\n    \n    t *= b*0.5+0.5; \n    b = smoothstep(0.15, 0.2, b);\n    \n    return vec4(colorRamp(vec3(0.365,0.153,0.337), \n                     vec3(1.000,0.690,0.259),\n                     vec3(0.753,0.165,0.165), t), b);\n}\n\n//main//////////////////////////////////////////////////////////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    seed = vec2(floor(iTime));\n    \n    vec4 b = brush(uv);\n    vec3 col = mix(texture(iChannel1, uv).rgb*0.1+0.8, b.rgb, b.w);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}