{
    "Shader": {
        "info": {
            "date": "1713864969",
            "description": "usle",
            "flags": 0,
            "hasliked": 0,
            "id": "Xc3XD8",
            "likes": 2,
            "name": "the great pulse",
            "published": 3,
            "tags": [
                "pulse",
                "scaled",
                "fracts"
            ],
            "usePreview": 0,
            "username": "smoothstep",
            "viewed": 113
        },
        "renderpass": [
            {
                "code": "// the palette is good for dynamicity and creating patterns\n// check http://dev.thi.ng/gradients/\n\nvec3 palette( float t){\n    vec3 a = vec3(0.560, 0.138, 0.629);\n    vec3 b = vec3(0.934, 0.364, 0.347);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(0.1, 0.1, 4.1);\n    \n    return a - b*cos( 6.123123*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n     \n     for(float i = 0.; i<1.618; i++){\n         uv = fract(uv * 1.9) - .5;\n\n        // we make the distance multiply to a exponential function for the uv0 negative length\n        float d = length(uv) * exp(length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 - iTime*.5);\n\n\n        d = sin(d * 8. - iTime)/4.;\n        d = abs(d);\n\n        d = pow(.1/d, 1.1);\n\n        col *= d;\n    \n    \n        finalColor += col * d;\n     }\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}