{
    "Shader": {
        "info": {
            "date": "1590329674",
            "description": "Created just 10 emoji.",
            "flags": 0,
            "hasliked": 0,
            "id": "3dBBzK",
            "likes": 15,
            "name": "Emoji Roling",
            "published": 3,
            "tags": [
                "emoji"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 488
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdUnevenCapsule( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n    return dot(p, vec2(a,b) ) - r1;\n}\n\nvec3 faceBase(vec2 p, vec3 col) {\n    float d = length(p)-0.1;\n    col = mix(col,vec3(0.9,0.8,0.0),S(d,0.0));\n    d = length(p)-0.11;\n    col = mix(col,vec3(0.9,0.9,0.0),S(d,-0.03));\n    return col;\n}\n\nvec3 shades(vec2 p, vec3 col){\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.3;\n    d = length(p-vec2(0.0,0.02))-0.09;\n    float d2 = length(p-vec2(0.0,0.07))-0.13;\n    d = max(-d2,d);\n\n    p = prevUV;\n    p.y*=1.1;\n    p.x = abs(p.x);\n    p.x-=0.05;\n    d2 = sdBox((p-vec2(0.0,0.01))*Rot(radians(-10.0)),vec2(0.018,0.007))-0.025;\n    d = min(d,d2);\n    p.x+=0.007;\n    d2 = sdBox((p-vec2(0.0,0.04))*Rot(radians(-10.0)),vec2(0.06,0.01));\n    d = min(d,d2);\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 upsidedown(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.3;\n    d = length(p-vec2(0.0,-0.03))-0.09;\n    float d2 = length(p-vec2(0.0,-0.08))-0.13;\n    d = max(-d2,d);\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    p.y*=0.8;\n    d2 = length(p-vec2(0.0,-0.025))-0.01;\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 nomouth(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    p.y*=0.8;\n    d = length(p-vec2(0.0,0.015))-0.01;\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 expressionless(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x = abs(p.x);\n    p.x -= 0.03;\n    p.y*=1.8;\n    d = sdBox(p-vec2(0.0,0.02),vec2(0.01,0.005))-0.01;\n    p = prevUV;\n    p.y*=1.5;\n    float d2 = sdBox(p-vec2(0.0,-0.05),vec2(0.04,0.0001))-0.01;\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 neutral(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x = abs(p.x);\n    p.x -= 0.03;\n    p.y*=0.8;\n    d = length(p-vec2(0.0,0.015))-0.01;\n    \n    p = prevUV;\n    p.y*=1.5;\n    float d2 = sdBox(p-vec2(0.0,-0.05),vec2(0.04,0.0001))-0.01;\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 flowningface(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.5;\n    p.y+=0.19;\n    d = length(p-vec2(0.0,0.07))-0.09;\n    float d2 = length(p-vec2(0.0,0.02))-0.13;\n    d = max(-d2,d);\n\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    p.y*=0.8;\n    d2 = length(p-vec2(0.0,0.01))-0.01;\n    d = min(d,d2);\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 angly(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=2.0;\n    p.y+=0.2;\n    d = length(p-vec2(0.0,0.07))-0.08;\n    float d2 = length(p-vec2(0.0,0.02))-0.125;\n    d = max(-d2,d);\n\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.025;\n    p.y*=0.8;\n    d2 = length(p-vec2(0.0,-0.015))-0.01;\n    d = min(d,d2);\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.03;\n    d = sdBox((p-vec2(0.0,0.012))*Rot(radians(-30.0)),vec2(0.015,0.001))-0.003;\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    return col;\n}\n\nvec3 disapointed(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.y*=1.2;\n    p.x*=2.0;\n    p.y+=0.21;\n    d = length(p-vec2(0.0,0.07))-0.08;\n    float d2 = length(p-vec2(0.0,0.02))-0.125;\n    d = max(-d2,d);\n\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.04;\n    d = sdBox((p-vec2(0.0,-0.02))*Rot(radians(15.0)),vec2(0.02,0.001))-0.003;\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    return col;\n}\n\nvec3 flushed(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.5;\n    d = sdBox(p-vec2(0.0,-0.065),vec2(0.025,0.001))-0.003;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    p = prevUV;\n    \n    p.x = abs(p.x);\n    p.x -= 0.045;\n    d = sdBox((p-vec2(0.0,0.07))*Rot(radians(10.0)),vec2(0.015,0.001))-0.003;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.045;\n    d = length(p-vec2(0.0,0.005))-0.035;\n    col = mix(col,vec3(1.0),S(d,0.0));\n    d = length(p-vec2(0.0,0.005))-0.01;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 rolingEye(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.5;\n    d = sdBox(p-vec2(0.0,-0.065),vec2(0.025,0.001))-0.003;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.045;\n    d = length(p-vec2(0.0,0.005))-0.035;\n    col = mix(col,vec3(1.0),S(d,0.0));\n    d = length(p-vec2(0.0,0.028))-0.013;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 smile(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.3;\n    d = length(p-vec2(0.0,0.03))-0.09;\n    float d2 = length(p-vec2(0.0,0.08))-0.13;\n    d = max(-d2,d);\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    p.y*=0.8;\n    d2 = length(p-vec2(0.0,0.025))-0.01;\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 smile2(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=1.3;\n    p.y*=0.95;\n    d = length(p-vec2(0.0,0.02))-0.09;\n    float d2 = length(p-vec2(0.0,0.08))-0.12;\n    d = max(-d2,d);\n    d = max((prevUV.y+0.023),d);\n    col = mix(col,vec3(0.0),S(d,0.0));\n\t\n    p.y+=0.005;\n    p.x*=1.1;\n    p.y*=1.2;\n    d = length(p-vec2(0.0,0.03))-0.09;\n    d2 = length(p-vec2(0.0,0.09))-0.135;\n    d = max(-d2,d);\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    p = prevUV;\n    p.y-=0.02;\n    p.x = abs(p.x);\n    p.y = abs(p.y);\n    p.y+=0.021;\n    p.x -= 0.035;\n    p.y*=0.8;\n    d = sdBox((p-vec2(0.0,0.025))*Rot(radians(-20.0)), vec2(0.02,0.0001))-0.001;\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 openMouth(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    p.y*=0.8;\n    d = length(p-vec2(0.0,0.015))-0.01;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    p = prevUV;\n    p.x*=1.1;\n    d = length(p-vec2(0.0,-0.04))-0.02;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    return col;\n}\n\nvec3 tear(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p.x*=2.0;\n    p.y+=0.19;\n    d = length(p-vec2(0.0,0.07))-0.08;\n    float d2 = length(p-vec2(0.0,0.02))-0.125;\n    d = max(-d2,d);\n\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.03;\n    p.y*=0.8;\n    d2 = length(p-vec2(0.0,0.005))-0.01;\n    d = min(d,d2);\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.y-=0.03;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    d = sdBox((p-vec2(0.0,0.012))*Rot(radians(30.0)),vec2(0.015,0.001))-0.003;\n    \n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    d = sdUnevenCapsule(p-vec2(-0.045,-0.06),0.02,0.002,0.04);\n    col = mix(col,vec3(0.5,0.6,1.0),S(d,0.0));\n    \n    return col;\n}\n\nvec3 tongue(vec2 p, vec3 col) {\n    vec2 prevUV = p;\n                    \n    float d;\n    col = faceBase(p,col);\n\n    p = prevUV;\n    p.x = abs(p.x);\n    p.x -= 0.035;\n    p.y*=0.8;\n    d = length(p-vec2(0.0,0.015))-0.01;\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.x*=0.6;\n    d = length(p-vec2(0.0,-0.04))-0.03;\n    d = max(p.y+0.037,d);\n    col = mix(col,vec3(0.0,0.0,0.0),S(d,0.0));\n    \n    p = prevUV;\n    p.x*=1.4;\n    p.y*=0.7;\n    d = length(p-vec2(0.0,-0.03))-0.03;\n    d = max(p.y+0.03,d);\n    col = mix(col,vec3(0.8,0.0,0.0),S(d,0.0));\n    \n    return col;\n}\n\nvec3 drawEmoji(vec2 p, vec3 col, int num) {\n    if(num == 0) {\n        return smile(p,col);\n    } else if(num == 1){\n        return nomouth(p,col);\n    } else if(num == 2){\n        return shades(p,col);\n    } else if(num == 3){\n        return upsidedown(p,col);\n    } else if(num == 4){\n        return expressionless(p,col);\n    } else if(num == 5){\n        return neutral(p,col);\n    } else if(num == 6){\n        return flowningface(p,col);\n    } else if(num == 7){\n        return angly(p,col);\n    } else if(num == 8){\n        return disapointed(p,col);\n    } else if(num == 9){\n        return flushed(p,col);\n    } else if(num == 10){\n        return smile2(p,col);\n    } else if(num == 11){\n        return openMouth(p,col);\n    } else if(num == 12){\n        return tear(p,col);\n    } else if(num == 14){\n        return tongue(p,col);\n    }\n    \n    return rolingEye(p,col);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV =uv;\n   \n    vec3 col = vec3(1.0);\n\tfloat t = iTime*0.2;\n\n\tuv.y+=t;\n    uv.x = mod(uv.x,1.25)-0.625;\n\tuv.y = mod(uv.y,1.0)-0.5;\n\n    float speed = 2.0;\n    for(int i = 0; i<32; i++) {\n        int frame = int(mod(iTime*speed+float(i),15.0));\n        float x = float(i%8)*0.25-1.0;\n        float y = floor(float(i/8))*0.25-0.38;\n        col = drawEmoji(uv-vec2(x,y),col,frame);\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}