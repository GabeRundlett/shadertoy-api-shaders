{
    "Shader": {
        "info": {
            "date": "1684301393",
            "description": "trig stuff",
            "flags": 0,
            "hasliked": 0,
            "id": "DlKGRK",
            "likes": 0,
            "name": "RGB matrix",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "flylo",
            "viewed": 135
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float r2;\n\n    uv += .2*vec2(sin(.3*iTime));\n    r2 = length(uv)*length(uv);\n    for(int i = 0; i< 7; i++) {\n        uv = vec2(tan(uv.x), tan(uv.y));\n\n        r2 = length(uv)*length(uv);\n        uv = vec2(1./r2*uv.y, 1./r2*uv.x);\n\n        //uv = vec2(uv.x*sin(r2)-uv.y*cos(r2), uv.x*cos(r2)+uv.y*sin(r2));\n        //uv = vec2(cos(uv.x-uv.y), sin(uv.x-uv.y));\n        //uv = vec2(tan(uv.x), tan(uv.y));\n   \n    }\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\n\n    vec3 col = vec3(uv.x, uv.y, uv.y-uv.x);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}