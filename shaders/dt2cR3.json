{
    "Shader": {
        "info": {
            "date": "1692119920",
            "description": "wasted too many chars for according materials.",
            "flags": 0,
            "hasliked": 0,
            "id": "dt2cR3",
            "likes": 9,
            "name": "carton flower4",
            "published": 3,
            "tags": [
                "sdf",
                "flower",
                "cineshader",
                "carton"
            ],
            "usePreview": 0,
            "username": "chenxianming",
            "viewed": 901
        },
        "renderpass": [
            {
                "code": "#define I iResolution\n#define PI 3.1415926\n#define op min\n#define gd(p, no) clamp(dot(no, vec3(p, -.5)), 0.0, 1.0)\n#define T(a) fract(iTime * a) * PI * 4.\n#define fk .125 * cos( T( .125 ) )\n\n// smax\nfloat s(float a, float b, float c) {\n  float d = clamp(.5 + .5 * (-b + a) / c, 0., 1.);\n  return -(mix(-b, -a, d) - c * d * (1. - d));\n}\n\nmat2 rot(float a) {\n  float s = sin(a), c = cos(a);\n  return mat2(c, s, -s, c);\n}\n// repetition\nfloat rp(inout vec2 b, float e) {\n  float a = 6.28 / e, f = (atan(b.y, b.x) + a * .5) / a, c = floor(f),\n        h = a * c;\n  b *= rot(h);\n  return c;\n}\n// calcRoot\nfloat cr(vec3 p) {\n  float d = .1;\n\n  // p.xy *= rot(PI * .15);\n  p -= vec3(.1, -.6, .4);\n\n  d = max(\n      length(p.xz + vec2(.25 * pow(p.y, 2.) + .125 * -p.x - fk * ( p.y / 2. + .5 ), 0.)) -\n          .1,\n      ( p.y / 2. + .5) - 1. );\n      // ( p.y / 2. + .5) - .08 * T( .25 ) ); // grow up\n\n  return d;\n}\n// petalUnit\nfloat pt(vec3 p) {\n  p.xy *= rot(PI * -.5), p.yz *= rot(PI * -.1);\n\n  vec3 op = p;\n\n  p.y -= .25;\n\n  float t = s(s(abs(p.x) - .1, abs(p.z) - .1, .02), abs(p.y) - .1, .02);\n\n  p = op;\n\n  float py = p.y;\n  py = py > 0. ? py * 5. : py, py = py < 0. ? py * 2. : py,\n  py = clamp(py, -1., 1.), py = abs(abs(pow(py, 2.)) - 1.);\n\n  return s(max(s(abs(p.x) - .18 * py, abs(p.z) - .1 * py, .1), abs(p.y) - .5),\n           -t, .1);\n}\n// calcPetals\nfloat cp(vec3 p) {\n  p.x = p.x - fk;\n\n  p.y -= .3;\n  p.yz *= rot(PI * .15);\n  p.xz *= rot(PI * -.05);\n\n  float d = .1;\n\n  float r = rp(p.xy, 7.);\n\n  d = min(d, pt(p + vec3(-0.55, 0., 0.)));\n\n  return d;\n}\n// calcPistil\nfloat cs(vec3 p) { return length(p - vec3( fk, .25, .05)) - .2; }\n// leafsPos\nfloat g(vec2 p, float s) { return length(p + vec2(s, 0.)) - .3; }\n// calcLeafs\nfloat cl(vec3 p) {\n  \n  p.x -=  .125 * .6 * cos( T( .125 ) );\n  p += vec3(-.042, .6, 0.);\n  \n\n  float r = rp(p.xy, 2.);\n  p += vec3(-.25, .1, 0.);\n\n  p.xy *= rot(PI * -.5);\n  p.xz *= rot(PI * .4);\n\n\n  return max(max(max(g(p.xy, .06), g(p.xy, -.06)), abs(p.z) - .01),\n             -(p.y + .2));\n}\n// sdf\nfloat df(vec3 p) {\n  float d = .1;\n  d = op(d, cp(p));\n\n  d = op(d, cs(p));\n\n  d = op(d, cr(p));\n\n  d = op(d, cl(p));\n\n  return d;\n}\n// calcNormal (IQ)\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nvoid mainImage(out vec4 U, in vec2 V) {\n  vec2 u = ( V + V - I.xy ) / I.y;\n\n  vec3 c, p, n, o = vec3(0., 0., -5.), r = vec3(u * .28, 1.);\n  float t, d, i, d1, d2;\n\n  for (; i < 64.; i++) // raymarching\n    p = o + r * t, d = df(p), t += d;\n\n  if (d < 1e-3)\n    n = l(p), d1 = gd(vec2(-.4, 1), n), d2 = gd(vec2(-.2, .2), n), c = vec3(1.),\n    // map or shaded each item\n    c = df(p) == cp(p)                       ? vec3(.98, .56, .59) * d1\n        : df(p) == cs(p)                     ? vec3(3. * d2)\n        : (df(p) == cl(p) || df(p) == cr(p)) ? vec3(.45, .67, .18) * d1\n                                             : p;\n\n  U = vec4(c, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}