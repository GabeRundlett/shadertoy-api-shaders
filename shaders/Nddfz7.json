{
    "Shader": {
        "info": {
            "date": "1656259722",
            "description": "Simple Voronoi shaded",
            "flags": 0,
            "hasliked": 0,
            "id": "Nddfz7",
            "likes": 1,
            "name": "Simple Voronoi shaded",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "marvpaul",
            "viewed": 376
        },
        "renderpass": [
            {
                "code": "vec3 randColor(int number){\n    return fract(sin(vec3(number+1)*vec3(12.8787, 1.97, 20.73739)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0); \n    \n    int points_length = 6; \n    vec2 points_array[6] = vec2[6](\n        vec2(0.1+0.2*sin(iTime), 0.2), \n        vec2(0.3, 0.5+0.1*cos(iTime)),\n        vec2(0.9, 0.6),\n        vec2(0.7+0.1*sin(iTime), 0.1),        \n        vec2(0.2, 0.5),\n        vec2(0.1, 0.7)\n    ); \n    \n    float dmin = 1000.0; \n    int point = 0;\n    \n    for(int i = 0; i < points_length; i++){\n        vec2 uv_rounded = floor(uv*100.0)/100.0;\n        vec2 point_rounded = floor(points_array[i]*100.0)/100.0;\n        \n        if(uv_rounded == point_rounded){\n            col = vec3(1); \n        }\n        if(length(points_array[i] - uv) < dmin){\n            point = i; \n            dmin = length(points_array[i] - uv); \n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(randColor(point)-dmin+col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}