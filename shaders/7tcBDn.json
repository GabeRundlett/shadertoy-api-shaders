{
    "Shader": {
        "info": {
            "date": "1662929569",
            "description": "just one of an amazing variety of structures possible, play with #define t2",
            "flags": 0,
            "hasliked": 0,
            "id": "7tcBDn",
            "likes": 22,
            "name": "shiny kifs",
            "published": 3,
            "tags": [
                "fractal",
                "raymarch",
                "kifs"
            ],
            "usePreview": 0,
            "username": "pb",
            "viewed": 537
        },
        "renderpass": [
            {
                "code": "//philip.bertani@gmail.com\n//kifs dist func taken from Shane's - https://www.shadertoy.com/view/XsKXzc - and modified\n#define t2 4.2 + .1*sin(t1/5.) //modify this to get LOTS of different shapes\n#define cc2 vec2(cos(t2),sin(t2))\n#define dp vec2(1.,-1) \n#define dN(x) x*ff(p+.0001*(1.+totdist*20.)*x)\n#define t1 iTime\n#define cc vec2(cos(t1),sin(t1))\n#define t4 t2 + .1\n#define cc4 vec2(cos(t4),sin(t4))\n#define t3 iTime/7.\n#define cc3 vec2(cos(t3),sin(t3))\n#define FR  mat2(cc2.x,-cc2.y,cc2.y,cc2.x)\n#define FR1 mat2(cc4.x,-cc4.y,cc4.y,cc4.x)\n#define FR2 mat2(cc.x,-cc.y,cc.y,cc.x)\n#define FR3 mat2(cc3.x,-cc3.y,cc3.y,cc3.x)\n#define R(k,v) v*cc.x+cross(k,v)*cc.y+k*dot(k,v)*(1.-cc.x)\nvec3 ro,rd,ll=vec3(20.,-2.,-10.),kk=normalize(vec3(1.,-.5,-1.)),l2;float mi,dt,tt,totdist;\nfloat ff(vec3 p){p.xz=FR3*p.xz;float dist=1e6,sc=1.006,amp=1./sc,sz=.02,ew=.002;vec3 offs=vec3(1.,.75,.15);\nfor(float i=0.;i<100.;i++){if(i>mi)break;p.xy=FR*p.xy;p.yz=FR1*p.yz;p=abs(p);\np.xy+=step(p.x,p.y)*(p.yx-p.xy);p.xz+=step(p.x,p.z)*(p.zx-p.xz);p.yz+=step(p.y,p.z)*(p.zy-p.yz);\np=p*sc+offs*(1.-sc);p.z-=step(p.z,offs.z*(1.-sc)*.5)*offs.z*(1.-sc);p=abs(p);vec3 q=p*amp;float box=max(max(q.x,q.y),q.z)-sz;\nbox=max(box,-(min(min(max(q.x,q.y),max(q.x,q.z)),max(q.y,q.z))-sz+ew));dist=min(dist,box);amp/=sc;}return dist;}\nvec3 nn(vec3 p){return normalize(dN(dp.xxx)+dN(dp.yyx)+dN(dp.xyy)+dN(dp.yxy));}\nvec3 color(vec3 p){l2=normalize(l2-p);vec3 no=nn(p);return .4*(max(0.,dot(-nn(p),l2)))*vec3(.5,.6,.8)\n+.6*pow(max(0.,dot(reflect(-rd,no),l2)),4.)*vec3(.8,.6,2.);}\nvoid mainImage(out vec4 rgba,in vec2 xy){xy=(2.*xy-iResolution.xy)/iResolution.y;rgba.rgb=vec3(0.);rgba.a=1.;\nro=vec3(0.,0.,max(0.,0.37-max(.7*sin(t1/2.),0.)));rd=normalize(vec3(xy,-2.));vec3 p=ro;float dist=0.;totdist=0.;mi=28.;\nl2=R(kk,ll);for (float i=0.;i<100.;i++) {dist=ff(p)*.8;totdist+=dist;if(dist<(dt=.0001*(1.+totdist*70.))) \n{rgba.rgb=pow((1.-exp(-color(p-abs(dist-dt)*rd)))*2.5*exp(-totdist/2.),vec3(3.));break;}else if(totdist>3.)break;p+=dist*rd;}\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}