{
    "Shader": {
        "info": {
            "date": "1519341633",
            "description": "The words of these songs were composed without any human intervention whatever on an instrument known as a versificator. But the woman sang so tunefully as to turn the dreadful rubbish into an almost pleasant sound.",
            "flags": 0,
            "hasliked": 0,
            "id": "MdcyzB",
            "likes": 19,
            "name": "IRONICFLUX",
            "published": 3,
            "tags": [
                "raydance"
            ],
            "usePreview": 0,
            "username": "greendestruction",
            "viewed": 1006
        },
        "renderpass": [
            {
                "code": "/* it even comes with a little message */\n\nmat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat map(vec3 p) {\n    \n    p.z = abs(p.z) - 2.0;\n    p.z = abs(p.z) - 2.0;\n    \n    \n    float gt = iTime * 2.0;\n    p.x += gt;\n    float d = 1000.0;\n    const int n = 12;\n    for (int i = 1; i < n; ++i) {\n        float x = float(i) / float(n);\n        vec3 q = p;\n        q.x += x * 3.141592 * 1.0;\n        q.z = abs(q.z) - 1.0;\n        q.yz *= rot(x * q.x);\n        q.y = abs(q.y) - 2.0;\n        q.y += x * 3.141592 * 0.5;\n        float k = length(q.yz) - 0.125;\n        d = min(d, k);\n        d = max(d, 1.5 * x + gt - p.x);\n    }\n    return min(d, 5.0 + gt - p.x);\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t) * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.5));\n    vec3 o = vec3(0.0, 0.0, 0.0);\n    \n    r.xz *= rot(3.141592 * 0.5);\n    \n    float t = trace(o, r);\n    \n    vec3 w = o + r * t;\n    float fd = map(w);\n\n    float f = 1.0 / (1.0 + t * t * 0.1 + fd * 1000.0);\n\n    vec3 c = vec3(0.0, 0.5, 1.0) * f;\n    \n    c = mix(c, vec3(1.0), 1.0 / (1.0 + t * t * 0.1));\n    \n    c = mix(vec3(0.125), c, 1.0 / (1.0 + t * t * 0.1));\n    \n    vec3 fc = vec3(c);\n    \n    float b = sign((fract(uv.y * 16.0) - 0.5) / 16.0) * 0.5 + 0.5;\n    \n    float b2 = sign(0.8 - abs(uv.y)) * 0.5 + 0.5;\n    \n    fc = mix(fc * vec3(0.5, 0.5, 0.5), fc, b);\n    \n    fc *= b2;\n\n    fragColor = vec4(fc, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}