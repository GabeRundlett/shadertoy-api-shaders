{
    "Shader": {
        "info": {
            "date": "1636930044",
            "description": "A shader made in Material Maker using my raymarching lib for nodevember2021 - Use Mouse to change camera and twist\nIt takes some time to compile... A Realtime version here https://www.shadertoy.com/view/7ltGDl",
            "flags": 32,
            "hasliked": 0,
            "id": "st3GDs",
            "likes": 23,
            "name": "A green thing in a bathroom",
            "published": 3,
            "tags": [
                "materialmaker",
                "nodes",
                "nodevember2021"
            ],
            "usePreview": 1,
            "username": "PauloFalcao",
            "viewed": 909
        },
        "renderpass": [
            {
                "code": "// A green thing in a bathroom\n//\n// By https://twitter.com/paulofalcao\n//\n// https://twitter.com/paulofalcao/status/1460016767540019201\n//\n// Generated in Material Maker\n// Made for #nodevember2021 Day 13/14: Green\n//\n// This uses the MFSDF scene description technique\n// https://www.shadertoy.com/view/7dySRc\n//\n// To generate your own shaders you need:\n//\n// - Material Maker - https://rodzilla.itch.io/material-maker\n// - My Ray Marching library - https://github.com/paulofalcao/MaterialMakerRayMarching\n// \n// Here is a 2 hour video explaining how to use it - https://youtu.be/PvmIohbf93Q\n// \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 color = texture(iChannel0, fragCoord / iResolution.xy);\n    fragColor = vec4(pow(color.xyz/color.w,vec3(1.0/2.2)), 1.0f);\n     \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/* Generated by Material Maker */\n\n#define SEED_VARIATION 0.0\n\n//---\n\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat param_rnd(float minimum, float maximum, float seed) {\n\treturn minimum+(maximum-minimum)*rand(vec2(seed));\n}\n//Adapted from https://iquilezles.org/articles/distfunctions - Finite Repetition\n\nvec3 opRepLim(vec3 p,vec3 c,vec3 l){\n    p+=(c*l)/2.0;\n    return p-c*clamp(floor(p/c+0.5),vec3(0.0),l);\n}vec3 MFSDF_Obj_Maker_rotate3d(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nvec4 brick(vec2 uv, vec2 bmin, vec2 bmax, float mortar, float round, float bevel) {\n\tfloat color;\n\tvec2 size = bmax - bmin;\n\tfloat min_size = min(size.x, size.y);\n\tmortar *= min_size;\n\tbevel *= min_size;\n\tround *= min_size;\n\tvec2 center = 0.5*(bmin+bmax);\n    vec2 d = abs(uv-center)-0.5*(size)+vec2(round+mortar);\n    color = length(max(d,vec2(0))) + min(max(d.x,d.y),0.0)-round;\n\tcolor = clamp(-color/bevel, 0.0, 1.0);\n\tvec2 tiled_brick_pos = mod(bmin, vec2(1.0, 1.0));\n\treturn vec4(color, center, tiled_brick_pos.x+7.0*tiled_brick_pos.y);\n}\n\nvec3 brick_random_color(vec2 bmin, vec2 bmax, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\treturn rand3(fract(center + vec2(seed)));\n}\n\nvec3 brick_uv(vec2 uv, vec2 bmin, vec2 bmax, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\tvec2 size = bmax - bmin;\n\tfloat max_size = max(size.x, size.y);\n\treturn vec3(0.5+(uv-center)/max_size, rand(fract(center)+vec2(seed)));\n}\n\nvec3 brick_corner_uv(vec2 uv, vec2 bmin, vec2 bmax, float mortar, float corner, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\tvec2 size = bmax - bmin;\n\tfloat max_size = max(size.x, size.y);\n\tfloat min_size = min(size.x, size.y);\n\tmortar *= min_size;\n\tcorner *= min_size;\n\treturn vec3(clamp((0.5*size-vec2(mortar)-abs(uv-center))/corner, vec2(0.0), vec2(1.0)), rand(fract(center)+vec2(seed)+ceil(vec2(uv-center))));\n}\n\nvec4 bricks_rb(vec2 uv, vec2 count, float repeat, float offset) {\n\tcount *= repeat;\n\tfloat x_offset = offset*step(0.5, fract(uv.y*count.y*0.5));\n\tvec2 bmin = floor(vec2(uv.x*count.x-x_offset, uv.y*count.y));\n\tbmin.x += x_offset;\n\tbmin /= count;\n\treturn vec4(bmin, bmin+vec2(1.0)/count);\n}\n\nvec4 bricks_rb2(vec2 uv, vec2 count, float repeat, float offset) {\n\tcount *= repeat;\n\tfloat x_offset = offset*step(0.5, fract(uv.y*count.y*0.5));\n\tcount.x = count.x*(1.0+step(0.5, fract(uv.y*count.y*0.5)));\n\tvec2 bmin = floor(vec2(uv.x*count.x-x_offset, uv.y*count.y));\n\tbmin.x += x_offset;\n\tbmin /= count;\n\treturn vec4(bmin, bmin+vec2(1.0)/count);\n}\n\nvec4 bricks_hb(vec2 uv, vec2 count, float repeat, float offset) {\n\tfloat pc = count.x+count.y;\n\tfloat c = pc*repeat;\n\tvec2 corner = floor(uv*c);\n\tfloat cdiff = mod(corner.x-corner.y, pc);\n\tif (cdiff < count.x) {\n\t\treturn vec4((corner-vec2(cdiff, 0.0))/c, (corner-vec2(cdiff, 0.0)+vec2(count.x, 1.0))/c);\n\t} else {\n\t\treturn vec4((corner-vec2(0.0, pc-cdiff-1.0))/c, (corner-vec2(0.0, pc-cdiff-1.0)+vec2(1.0, count.y))/c);\n\t}\n}\n\nvec4 bricks_bw(vec2 uv, vec2 count, float repeat, float offset) {\n\tvec2 c = 2.0*count*repeat;\n\tfloat mc = max(c.x, c.y);\n\tvec2 corner1 = floor(uv*c);\n\tvec2 corner2 = count*floor(repeat*2.0*uv);\n\tfloat cdiff = mod(dot(floor(repeat*2.0*uv), vec2(1.0)), 2.0);\n\tvec2 corner;\n\tvec2 size;\n\tif (cdiff == 0.0) {\n\t\tcorner = vec2(corner1.x, corner2.y);\n\t\tsize = vec2(1.0, count.y);\n\t} else {\n\t\tcorner = vec2(corner2.x, corner1.y);\n\t\tsize = vec2(count.x, 1.0);\n\t}\n\treturn vec4(corner/c, (corner+size)/c);\n}\n\nvec4 bricks_sb(vec2 uv, vec2 count, float repeat, float offset) {\n\tvec2 c = (count+vec2(1.0))*repeat;\n\tfloat mc = max(c.x, c.y);\n\tvec2 corner1 = floor(uv*c);\n\tvec2 corner2 = (count+vec2(1.0))*floor(repeat*uv);\n\tvec2 rcorner = corner1 - corner2;\n\tvec2 corner;\n\tvec2 size;\n\tif (rcorner.x == 0.0 && rcorner.y < count.y) {\n\t\tcorner = corner2;\n\t\tsize = vec2(1.0, count.y);\n\t} else if (rcorner.y == 0.0) {\n\t\tcorner = corner2+vec2(1.0, 0.0);\n\t\tsize = vec2(count.x, 1.0);\n\t} else if (rcorner.x == count.x) {\n\t\tcorner = corner2+vec2(count.x, 1.0);\n\t\tsize = vec2(1.0, count.y);\n\t} else if (rcorner.y == count.y) {\n\t\tcorner = corner2+vec2(0.0, count.y);\n\t\tsize = vec2(count.x, 1.0);\n\t} else {\n\t\tcorner = corner2+vec2(1.0);\n\t\tsize = vec2(count.x-1.0, count.y-1.0);\n\t}\n\treturn vec4(corner/c, (corner+size)/c);\n}// https://www.shadertoy.com/view/XsX3zB\n//\n// The MIT License\n// Copyright Â© 2013 Nikita Miropolskiy\n// \n// ( license has been changed from CCA-NC-SA 3.0 to MIT\n//\n//   but thanks for attributing your source code when deriving from this sample \n//   with a following link: https://www.shadertoy.com/view/XsX3zB )\n//\n//\n// if you're looking for procedural noise implementation examples you might \n// also want to look at the following shaders:\n// \n// Noise Lab shader by candycat: https://www.shadertoy.com/view/4sc3z2\n//\n// Noise shaders by iq:\n//     Value    Noise 2D, Derivatives: https://www.shadertoy.com/view/4dXBRH\n//     Gradient Noise 2D, Derivatives: https://www.shadertoy.com/view/XdXBRH\n//     Value    Noise 3D, Derivatives: https://www.shadertoy.com/view/XsXfRH\n//     Gradient Noise 3D, Derivatives: https://www.shadertoy.com/view/4dffRH\n//     Value    Noise 2D             : https://www.shadertoy.com/view/lsf3WH\n//     Value    Noise 3D             : https://www.shadertoy.com/view/4sfGzS\n//     Gradient Noise 2D             : https://www.shadertoy.com/view/XdXGW8\n//     Gradient Noise 3D             : https://www.shadertoy.com/view/Xsl3Dl\n//     Simplex  Noise 2D             : https://www.shadertoy.com/view/Msf3WH\n//     Voronoise: https://www.shadertoy.com/view/Xd23Dh\n//\n//\n//\n\n// discontinuous pseudorandom constly distributed in [-0.5, +0.5]^3 */\nvec3 XsX3zB_oct_random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r-0.5;\n}\n\n// skew constants for 3d simplex functions\nconst float XsX3zB_oct_F3 =  0.3333333;\nconst float XsX3zB_oct_G3 =  0.1666667;\n\n// 3d simplex noise\nfloat XsX3zB_oct_simplex3d(vec3 p) {\n\t // 1. find current tetrahedron T and it's four vertices\n\t // s, s+i1, s+i2, s+1.0 - absolute skewed (integer) coordinates of T vertices\n\t // x, x1, x2, x3 - unskewed coordinates of p relative to each of T vertices\n\t \n\t // calculate s and x\n\t vec3 s = floor(p + dot(p, vec3(XsX3zB_oct_F3)));\n\t vec3 x = p - s + dot(s, vec3(XsX3zB_oct_G3));\n\t \n\t // calculate i1 and i2\n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \t\n\t // x1, x2, x3\n\t vec3 x1 = x - i1 + XsX3zB_oct_G3;\n\t vec3 x2 = x - i2 + 2.0*XsX3zB_oct_G3;\n\t vec3 x3 = x - 1.0 + 3.0*XsX3zB_oct_G3;\n\t \n\t // 2. find four surflets and store them in d\n\t vec4 w, d;\n\t \n\t // calculate surflet weights\n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t // w fades from 0.6 at the center of the surflet to 0.0 at the margin\n\t w = max(0.6 - w, 0.0);\n\t \n\t // calculate surflet components\n\t d.x = dot(XsX3zB_oct_random3(s), x);\n\t d.y = dot(XsX3zB_oct_random3(s + i1), x1);\n\t d.z = dot(XsX3zB_oct_random3(s + i2), x2);\n\t d.w = dot(XsX3zB_oct_random3(s + 1.0), x3);\n\t \n\t // multiply d by w^4\n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t // 3. return the sum of the four surflets\n\t return dot(d, vec4(52.0));\n}vec2 transform2_clamp(vec2 uv) {\n\treturn clamp(uv, vec2(0.0), vec2(1.0));\n}\n\nvec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n\treturn rv;\t\n}vec4 sdf3dc_union(vec4 a, vec4 b) {\n\treturn vec4((a.w<b.w)?vec4(a):vec4(b));\n}\nvec4 sdf3dc_sub(vec4 a, vec4 b) {\n\treturn vec4((-a.w>b.w)?vec4(a.xyz,-a.w):vec4(b));\n}\nvec4 sdf3dc_inter(vec4 a, vec4 b) {\n\treturn vec4((a.w>b.w)?vec4(a):vec4(b));\n}vec3 v4v4_rotate(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nvec4 MFSDF_Union(vec4 in1,vec4 in2,vec4 in3,vec4 in4,vec4 in5,vec4 in6,vec4 in7,vec4 in8){\n    vec4 t=(in1.w<in2.w)?vec4(in1):vec4(in2);\n    t=(t.w<in2.w)?vec4(t):vec4(in2);\n    t=(t.w<in3.w)?vec4(t):vec4(in3);\n    t=(t.w<in4.w)?vec4(t):vec4(in4);\n    t=(t.w<in5.w)?vec4(t):vec4(in5);\n    t=(t.w<in6.w)?vec4(t):vec4(in6);\n    t=(t.w<in7.w)?vec4(t):vec4(in7);\n    t=(t.w<in8.w)?vec4(t):vec4(in8);\n    return t;\n}\n\nfloat mfsdf3d_smooth_union_f(float a,float b,float k){\n\tfloat h = max( k-abs(a-b), 0.0 )/k;\n\treturn min(a,b)-h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_union(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n    float h=mfsdf3d_smooth_union_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_union_f(a.w+e,b.w,k)-mfsdf3d_smooth_union_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_union_f(a.w,b.w+e,k)-mfsdf3d_smooth_union_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}\n\nfloat mfsdf3d_smooth_subtraction_f(float a,float b,float k){\n\tfloat h = max( k-abs(-a-b), 0.0 )/k;\n\treturn max(-a,b)+h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_subtraction(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n\tfloat h=mfsdf3d_smooth_subtraction_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_subtraction_f(a.w+e,b.w,k)-mfsdf3d_smooth_subtraction_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_subtraction_f(a.w,b.w+e,k)-mfsdf3d_smooth_subtraction_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}\n\nfloat mfsdf3d_smooth_intersection_f(float a,float b,float k){\n\tfloat h = max( k-abs(a-b), 0.0 )/k;\n\treturn max(a,b)+h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_intersection(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n\tfloat h=mfsdf3d_smooth_intersection_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_intersection_f(a.w+e,b.w,k)-mfsdf3d_smooth_intersection_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_intersection_f(a.w,b.w+e,k)-mfsdf3d_smooth_intersection_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}vec2 twist_rot(vec2 v, float a) {\n\ta=a*0.01745329251;\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(vec2(c, -s),vec2(s, c));\n\treturn m * v;\n}\n\nvec3 twistX(vec3 v, float a){\n\tv.yz=twist_rot(v.yz,v.x*a);\n\treturn v;\n}\n\nvec3 twistY(vec3 v, float a){\n\tv.xz=twist_rot(v.xz,v.y*a);\n\treturn v;\n}\n\nvec3 twistZ(vec3 v, float a){\n\tv.xy=twist_rot(v.xy,v.z*a);\n\treturn v;\n}\n\n\n//MATH\nconst float PI=3.14159265359;\nconst float TAU=6.28318530718;\n\nvec2 rndint_hash23(vec3 p3){\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvoid Onb(in vec3 N, inout vec3 T, inout vec3 B){\n    vec3 UpVector=abs(N.z)<0.999?vec3(0,0,1):vec3(1,0,0);\n    T=normalize(cross(UpVector,N));\n    B=cross(N,T);\n}\n\nvec2 equirectangularMap(vec3 dir) {\n\tvec2 longlat = vec2(atan(dir.y,dir.x),acos(dir.z));\n \treturn longlat/vec2(2.0*PI,PI);\n}\n\n// RANDOM START\n//from https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/\nuint rand_pcg(inout uint seed){\n    uint state = seed;\n    seed = seed * uint(747796405) + uint(2891336453);\n    uint word = ((state >> ((state >> uint(28)) + uint(4))) ^ state) * uint(277803737);\n    return (word >> uint(22)) ^ word;\n}\n\nfloat RandomFloat01(inout uint state){\n    uint r=rand_pcg(state);\n    r &= uint(0x007FFFFF);\n    r |= uint(0x3F800000);\n    return uintBitsToFloat(r) - 1.0f;\n}\n\n// RANDOM END\n\n// SAMPLING START\n\nvec3 constSampleSphere(float r1,float r2){\n    float z=1.0-2.0*r1;\n    float r=sqrt(max(0.0,1.0-z*z));\n    float phi=TAU*r2;\n    return vec3(r*cos(phi),r*sin(phi),z);\n}\n\nvec3 cosineSampleHemissphere(inout uint state,vec3 n){\n    float u1=RandomFloat01(state);\n    float u2=RandomFloat01(state);\n    return normalize(n+constSampleSphere(u1,u2)); \n}\n\n// Adapted from \"Sampling the GGX Distribution of Visible Normals\",\n// http://jcgt.org/published/0007/04/01/\nvec3 SampleGGXVNDF(inout uint state,vec3 Ve,float alpha_x,float alpha_y){\n    float U1=RandomFloat01(state);\n    float U2=RandomFloat01(state);\n    \n    //transforming the view direction to the hemisphere configuration\n    vec3 Vh = normalize(vec3(alpha_x * Ve.x, alpha_y * Ve.y, Ve.z));\n\n    //orthonormal basis\n    vec3 T1;vec3 T2;\n    Onb(Vh,T1,T2);\n\n    //parameterization of the projected area\n    float r = sqrt(U1); \n    float phi = 2.0 * PI * U2;    \n    float t1 = r * cos(phi);\n    float t2 = r * sin(phi);\n    float s = 0.5 * (1.0 + Vh.z);\n    t2 = (1.0 - s)*sqrt(1.0 - t1*t1) + s*t2;\n\n    //reprojection onto hemisphere\n    vec3 Nh = t1*T1 + t2*T2 + sqrt(max(0.0f, 1.0f - t1*t1 - t2*t2))*Vh;\n\n    //transforming the normal back to the ellipsoid configuration\n    vec3 Ne = normalize(vec3(alpha_x * Nh.x, alpha_y * Nh.y, max(0.0f, Nh.z))); \n\n    return Ne;\n}\n\nfloat schlickWeight(float cosTheta) {\n    float m=clamp(1.-cosTheta,0.,1.);\n    float m2=m*m;\n    return m2*m2*m;\n}\n\n// SAMPLING END\n\nconst float p_o9000_CamX = -3.601000000;\nconst float p_o9000_CamY = 1.628000000;\nconst float p_o9000_CamZ = 2.873000000;\nconst float p_o9000_LookAtX = 1.984000000;\nconst float p_o9000_LookAtY = 1.247000000;\nconst float p_o9000_LookAtZ = -0.406000000;\nconst float p_o9000_CamD = 1.133000000;\nconst float p_o9000_CamZoom = 1.000000000;\nconst float p_o9000_MaxDistance = 15.000000000;\nconst float p_o218686_BaseColor_r = 1.000000000;\nconst float p_o218686_BaseColor_g = 1.000000000;\nconst float p_o218686_BaseColor_b = 1.000000000;\nconst float p_o218686_BaseColor_a = 1.000000000;\nconst float p_o218686_Metallic = 0.000000000;\nconst float p_o218686_Specular = 0.500000000;\nconst float p_o218686_Roughness = 0.000000000;\nconst float p_o218686_Emission = 10.000000000;\nconst float p_o218686_Normal = 0.000000000;\nconst float p_o218686_Alpha = 0.000000000;\nconst float p_o218686_AmbientOcclusion = 0.000000000;\nconst float p_o218686_scale = 1.000000000;\nconst float p_o218686_TranlateX = 0.000000000;\nconst float p_o218686_TranlateY = 3.512000000;\nconst float p_o218686_TranlateZ = 0.000000000;\nconst float p_o218686_RotateX = 0.000000000;\nconst float p_o218686_RotateY = 0.250000000;\nconst float p_o218686_RotateZ = 0.000000000;\nvec3 o218686_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o218686_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o218686_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o218686_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o218686_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o218686_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o218686_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o218686_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o124018_X = 1.000000000;\nconst float p_o124018_Y = 1.000000000;\nconst float p_o124018_Z = 0.400000006;\nconst float p_o124018_RepX = 1.000000000;\nconst float p_o124018_RepY = 1.000000000;\nconst float p_o124018_RepZ = 6.000000000;\nconst float p_o98976_l = 2.880000000;\nconst float p_o98976_r = 0.120000000;\nfloat o218686_input_sdf3d(vec3 p, float _seed_variation_) {\nvec2 o98976_0_d = abs(vec2(length((opRepLim((p),vec3(p_o124018_X,p_o124018_Y,p_o124018_Z)*2.0,vec3(p_o124018_RepX-1.0,p_o124018_RepY-1.0,p_o124018_RepZ-1.0))).yz),(opRepLim((p),vec3(p_o124018_X,p_o124018_Y,p_o124018_Z)*2.0,vec3(p_o124018_RepX-1.0,p_o124018_RepY-1.0,p_o124018_RepZ-1.0))).x)) - vec2(p_o98976_r,p_o98976_l);\nfloat o98976_0_1_sdf3d = min(max(o98976_0_d.x,o98976_0_d.y),0.0) + length(max(o98976_0_d,0.0));\nfloat o124018_0_1_sdf3d = o98976_0_1_sdf3d;\n\nreturn o124018_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o218686(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o218686_TranlateX,p_o218686_TranlateY,p_o218686_TranlateZ),vec3(p_o218686_RotateX,p_o218686_RotateY,p_o218686_RotateZ)*6.28318530718)/p_o218686_scale;\n\tfloat sdf=o218686_input_sdf3d(uv.xyz, _seed_variation_)*p_o218686_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o218686_AmbientOcclusion*o218686_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o218686_Alpha*o218686_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o218686_Normal*o218686_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o218686_Emission*o218686_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o218686_Roughness*o218686_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o218686_Specular*o218686_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o218686_Metallic*o218686_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o218686_BaseColor_r, p_o218686_BaseColor_g, p_o218686_BaseColor_b, p_o218686_BaseColor_a).rgb*o218686_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o2324410_x = 3.701340000;\nconst float p_o2324410_y = 0.000000000;\nconst float p_o2324410_z = 0.000000000;\nconst float p_o2041939_BaseColor_r = 1.000000000;\nconst float p_o2041939_BaseColor_g = 1.000000000;\nconst float p_o2041939_BaseColor_b = 1.000000000;\nconst float p_o2041939_BaseColor_a = 1.000000000;\nconst float p_o2041939_Metallic = 0.705000000;\nconst float p_o2041939_Specular = 0.373000000;\nconst float p_o2041939_Roughness = 1.000000000;\nconst float p_o2041939_Emission = 0.000000000;\nconst float p_o2041939_Normal = 0.000000000;\nconst float p_o2041939_Alpha = 0.000000000;\nconst float p_o2041939_AmbientOcclusion = 0.000000000;\nconst float p_o2041939_scale = 1.000000000;\nconst float p_o2041939_TranlateX = 0.000000000;\nconst float p_o2041939_TranlateY = 0.000000000;\nconst float p_o2041939_TranlateZ = 0.000000000;\nconst float p_o2041939_RotateX = 0.000000000;\nconst float p_o2041939_RotateY = 0.000000000;\nconst float p_o2041939_RotateZ = 0.000000000;\nconst float p_o4023618_translate_x = -0.530000000;\nconst float p_o4023618_translate_y = -0.010000000;\nconst float p_o3686881_translate_x = 6.470000000;\nconst float p_o3686881_translate_y = 3.123150000;\nconst float p_o3686881_rotate = 197.957800000;\nconst float p_o3686881_scale_x = 1.000000000;\nconst float p_o3686881_scale_y = 1.000000000;\nconst float seed_o3686879 = 0.692989000;\nconst float p_o3686879_repeat = 1.000000000;\nconst float p_o3686879_rows = 1.929999948;\nconst float p_o3686879_columns = 1.929999948;\nconst float p_o3686879_row_offset = 1.000000000;\nconst float p_o3686879_mortar = 0.000000000;\nconst float p_o3686879_bevel = 0.000000000;\nconst float p_o3686879_round = 0.000000000;\nconst float p_o3686879_corner = 0.000000000;\nconst float p_o3686880_f = 0.000000000;\nconst float p_o3686863_g_0_pos = 0.190909000;\nconst float p_o3686863_g_0_r = 1.000000000;\nconst float p_o3686863_g_0_g = 1.000000000;\nconst float p_o3686863_g_0_b = 1.000000000;\nconst float p_o3686863_g_0_a = 1.000000000;\nconst float p_o3686863_g_1_pos = 0.390909000;\nconst float p_o3686863_g_1_r = 0.507812977;\nconst float p_o3686863_g_1_g = 0.451000005;\nconst float p_o3686863_g_1_b = 0.353087991;\nconst float p_o3686863_g_1_a = 1.000000000;\nconst float p_o3686863_g_2_pos = 0.663636000;\nconst float p_o3686863_g_2_r = 1.000000000;\nconst float p_o3686863_g_2_g = 1.000000000;\nconst float p_o3686863_g_2_b = 1.000000000;\nconst float p_o3686863_g_2_a = 1.000000000;\nvec4 o3686863_g_gradient_fct(float x) {\n  if (x < p_o3686863_g_0_pos) {\n    return vec4(p_o3686863_g_0_r,p_o3686863_g_0_g,p_o3686863_g_0_b,p_o3686863_g_0_a);\n  } else if (x < p_o3686863_g_1_pos) {\n    return mix(vec4(p_o3686863_g_0_r,p_o3686863_g_0_g,p_o3686863_g_0_b,p_o3686863_g_0_a), vec4(p_o3686863_g_1_r,p_o3686863_g_1_g,p_o3686863_g_1_b,p_o3686863_g_1_a), ((x-p_o3686863_g_0_pos)/(p_o3686863_g_1_pos-p_o3686863_g_0_pos)));\n  } else if (x < p_o3686863_g_2_pos) {\n    return mix(vec4(p_o3686863_g_1_r,p_o3686863_g_1_g,p_o3686863_g_1_b,p_o3686863_g_1_a), vec4(p_o3686863_g_2_r,p_o3686863_g_2_g,p_o3686863_g_2_b,p_o3686863_g_2_a), ((x-p_o3686863_g_1_pos)/(p_o3686863_g_2_pos-p_o3686863_g_1_pos)));\n  }\n  return vec4(p_o3686863_g_2_r,p_o3686863_g_2_g,p_o3686863_g_2_b,p_o3686863_g_2_a);\n}\nconst float p_o3686856_scale = 5.635000000;\nconst float p_o3686856_scale_x = 1.000000000;\nconst float p_o3686856_scale_y = 1.000000000;\nconst float p_o3686856_scale_z = 1.000000000;\nconst float p_o3686856_transx = 0.000000000;\nconst float p_o3686856_transy = 0.000000000;\nconst float p_o3686856_transz = 0.000000000;\nconst float p_o3686856_persistence = 0.500000000;\nconst float p_o3686856_brightness = 0.000000000;\nconst float p_o3686856_contrast = 7.556000000;\nfloat o3686856_fbm(vec3 coord, float persistence, float _seed_variation_) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfloat size = 1.0;\n\tfor (int i = 0; i < 6; i++) {\n\t\tvalue += XsX3zB_oct_simplex3d(coord*size) * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nfloat o3686856_bc(float f,float contrast, float brightness, float _seed_variation_) {\n\treturn f*contrast+brightness+0.5-contrast*0.5;\n}\nvec3 o2041939_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\nvec4 o3686879_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), vec2(p_o3686879_columns, p_o3686879_rows), p_o3686879_repeat, p_o3686879_row_offset);\nvec4 o3686879_0 = brick((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), o3686879_0_rect.xy, o3686879_0_rect.zw, p_o3686879_mortar*1.0, p_o3686879_round*1.0, max(0.001, p_o3686879_bevel*1.0));\nvec3 o3686879_1_2_rgb = brick_random_color(o3686879_0_rect.xy, o3686879_0_rect.zw, float((seed_o3686879+_seed_variation_)));\nvec3 o3686856_0_out = vec3(o3686856_bc(o3686856_fbm((vec3(p_o3686880_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), vec2(p_o3686881_translate_x*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o3686881_translate_y*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o3686881_rotate*0.01745329251*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o3686881_scale_x*(2.0*1.0-1.0), p_o3686881_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), vec2(p_o3686881_translate_x*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o3686881_translate_y*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o3686881_rotate*0.01745329251*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o3686881_scale_x*(2.0*1.0-1.0), p_o3686881_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o3686856_scale_x,p_o3686856_scale_y,p_o3686856_scale_z)*0.5*p_o3686856_scale+vec3(p_o3686856_transx,p_o3686856_transy,p_o3686856_transz),p_o3686856_persistence, _seed_variation_)*0.5+0.5,p_o3686856_contrast,p_o3686856_brightness, _seed_variation_));vec3 o3686856_0_1_tex3d = clamp(o3686856_0_out,vec3(0),vec3(1));\nvec3 o3686863_0_1_tex3d = o3686863_g_gradient_fct(dot(o3686856_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o3686880_0_1_rgb = o3686863_0_1_tex3d.rgb;\nvec4 o3686881_0_1_rgba = vec4(o3686880_0_1_rgb, 1.0);\nvec4 o4023618_0_1_rgba = o3686881_0_1_rgba;\nvec3 o3708592_0_1_tex3d = ((o4023618_0_1_rgba).rgb);\n\nreturn o3708592_0_1_tex3d;\n}\nfloat o2041939_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o2041939_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o4438403_g_0_pos = 0.000000000;\nconst float p_o4438403_g_0_r = 1.000000000;\nconst float p_o4438403_g_0_g = 1.000000000;\nconst float p_o4438403_g_0_b = 1.000000000;\nconst float p_o4438403_g_0_a = 1.000000000;\nconst float p_o4438403_g_1_pos = 1.000000000;\nconst float p_o4438403_g_1_r = 0.000000000;\nconst float p_o4438403_g_1_g = 0.000000000;\nconst float p_o4438403_g_1_b = 0.000000000;\nconst float p_o4438403_g_1_a = 1.000000000;\nvec4 o4438403_g_gradient_fct(float x) {\n  if (x < p_o4438403_g_0_pos) {\n    return vec4(p_o4438403_g_0_r,p_o4438403_g_0_g,p_o4438403_g_0_b,p_o4438403_g_0_a);\n  } else if (x < p_o4438403_g_1_pos) {\n    return mix(vec4(p_o4438403_g_0_r,p_o4438403_g_0_g,p_o4438403_g_0_b,p_o4438403_g_0_a), vec4(p_o4438403_g_1_r,p_o4438403_g_1_g,p_o4438403_g_1_b,p_o4438403_g_1_a), ((x-p_o4438403_g_0_pos)/(p_o4438403_g_1_pos-p_o4438403_g_0_pos)));\n  }\n  return vec4(p_o4438403_g_1_r,p_o4438403_g_1_g,p_o4438403_g_1_b,p_o4438403_g_1_a);\n}\nfloat o2041939_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\nvec4 o3686879_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), vec2(p_o3686879_columns, p_o3686879_rows), p_o3686879_repeat, p_o3686879_row_offset);\nvec4 o3686879_0 = brick((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), o3686879_0_rect.xy, o3686879_0_rect.zw, p_o3686879_mortar*1.0, p_o3686879_round*1.0, max(0.001, p_o3686879_bevel*1.0));\nvec3 o3686879_1_2_rgb = brick_random_color(o3686879_0_rect.xy, o3686879_0_rect.zw, float((seed_o3686879+_seed_variation_)));\nvec3 o3686856_0_out = vec3(o3686856_bc(o3686856_fbm((vec3(p_o3686880_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), vec2(p_o3686881_translate_x*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o3686881_translate_y*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o3686881_rotate*0.01745329251*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o3686881_scale_x*(2.0*1.0-1.0), p_o3686881_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o4023618_translate_x, p_o4023618_translate_y)), vec2(p_o3686881_translate_x*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o3686881_translate_y*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o3686881_rotate*0.01745329251*(2.0*(dot(o3686879_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o3686881_scale_x*(2.0*1.0-1.0), p_o3686881_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o3686856_scale_x,p_o3686856_scale_y,p_o3686856_scale_z)*0.5*p_o3686856_scale+vec3(p_o3686856_transx,p_o3686856_transy,p_o3686856_transz),p_o3686856_persistence, _seed_variation_)*0.5+0.5,p_o3686856_contrast,p_o3686856_brightness, _seed_variation_));vec3 o3686856_0_1_tex3d = clamp(o3686856_0_out,vec3(0),vec3(1));\nvec3 o3686863_0_1_tex3d = o3686863_g_gradient_fct(dot(o3686856_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o3686880_0_1_rgb = o3686863_0_1_tex3d.rgb;\nvec4 o3686881_0_1_rgba = vec4(o3686880_0_1_rgb, 1.0);\nvec4 o4023618_0_1_rgba = o3686881_0_1_rgba;\nvec3 o3708592_0_1_tex3d = ((o4023618_0_1_rgba).rgb);\nvec3 o4438403_0_1_tex3d = o4438403_g_gradient_fct(dot(o3708592_0_1_tex3d, vec3(1.0))/3.0).rgb;\n\nreturn (dot(o4438403_0_1_tex3d, vec3(1.0))/3.0);\n}\nvec3 o2041939_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o2041939_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o2041939_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o2041939_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o2059617_X = 1.000000000;\nconst float p_o2059617_Y = 0.259999990;\nconst float p_o2059617_Z = 0.259999990;\nconst float p_o2059617_RepX = 1.000000000;\nconst float p_o2059617_RepY = 24.000000000;\nconst float p_o2059617_RepZ = 24.000000000;\nconst float p_o2052732_sx = 0.050000001;\nconst float p_o2052732_sy = 0.234999999;\nconst float p_o2052732_sz = 0.234999999;\nconst float p_o2052732_r = 0.020000000;\nfloat o2041939_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o2052732_0_q = abs((opRepLim((p),vec3(p_o2059617_X,p_o2059617_Y,p_o2059617_Z)*2.0,vec3(p_o2059617_RepX-1.0,p_o2059617_RepY-1.0,p_o2059617_RepZ-1.0)))) - vec3(p_o2052732_sx, p_o2052732_sy, p_o2052732_sz);\nfloat o2052732_0_1_sdf3d = length(max(o2052732_0_q,0.0))+min(max(o2052732_0_q.x,max(o2052732_0_q.y,o2052732_0_q.z)),0.0)-p_o2052732_r;\nfloat o2059617_0_1_sdf3d = o2052732_0_1_sdf3d;\n\nreturn o2059617_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o2041939(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o2041939_TranlateX,p_o2041939_TranlateY,p_o2041939_TranlateZ),vec3(p_o2041939_RotateX,p_o2041939_RotateY,p_o2041939_RotateZ)*6.28318530718)/p_o2041939_scale;\n\tfloat sdf=o2041939_input_sdf3d(uv.xyz, _seed_variation_)*p_o2041939_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o2041939_AmbientOcclusion*o2041939_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o2041939_Alpha*o2041939_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o2041939_Normal*o2041939_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o2041939_Emission*o2041939_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o2041939_Roughness*o2041939_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o2041939_Specular*o2041939_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o2041939_Metallic*o2041939_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o2041939_BaseColor_r, p_o2041939_BaseColor_g, p_o2041939_BaseColor_b, p_o2041939_BaseColor_a).rgb*o2041939_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o2245524_x = -0.049000000;\nconst float p_o2245524_y = 0.000000000;\nconst float p_o2245524_z = 0.000000000;\nconst float p_o2195793_BaseColor_r = 0.324218750;\nconst float p_o2195793_BaseColor_g = 0.324218750;\nconst float p_o2195793_BaseColor_b = 0.324218750;\nconst float p_o2195793_BaseColor_a = 1.000000000;\nconst float p_o2195793_Metallic = 0.000000000;\nconst float p_o2195793_Specular = 0.000000000;\nconst float p_o2195793_Roughness = 1.000000000;\nconst float p_o2195793_Emission = 0.000000000;\nconst float p_o2195793_Normal = 0.000000000;\nconst float p_o2195793_Alpha = 0.000000000;\nconst float p_o2195793_AmbientOcclusion = 0.000000000;\nconst float p_o2195793_scale = 1.000000000;\nconst float p_o2195793_TranlateX = 0.000000000;\nconst float p_o2195793_TranlateY = 0.000000000;\nconst float p_o2195793_TranlateZ = 0.000000000;\nconst float p_o2195793_RotateX = 0.000000000;\nconst float p_o2195793_RotateY = 0.000000000;\nconst float p_o2195793_RotateZ = 0.000000000;\nvec3 o2195793_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o2195793_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o2195793_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o2195793_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o2195793_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o2195793_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o2195793_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o2195793_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o2198975_sx = 0.000000000;\nconst float p_o2198975_sy = 6.270000000;\nconst float p_o2198975_sz = 6.140000000;\nconst float p_o2198975_r = 0.000000000;\nfloat o2195793_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o2198975_0_q = abs((p)) - vec3(p_o2198975_sx, p_o2198975_sy, p_o2198975_sz);\nfloat o2198975_0_1_sdf3d = length(max(o2198975_0_q,0.0))+min(max(o2198975_0_q.x,max(o2198975_0_q.y,o2198975_0_q.z)),0.0)-p_o2198975_r;\n\nreturn o2198975_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o2195793(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o2195793_TranlateX,p_o2195793_TranlateY,p_o2195793_TranlateZ),vec3(p_o2195793_RotateX,p_o2195793_RotateY,p_o2195793_RotateZ)*6.28318530718)/p_o2195793_scale;\n\tfloat sdf=o2195793_input_sdf3d(uv.xyz, _seed_variation_)*p_o2195793_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o2195793_AmbientOcclusion*o2195793_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o2195793_Alpha*o2195793_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o2195793_Normal*o2195793_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o2195793_Emission*o2195793_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o2195793_Roughness*o2195793_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o2195793_Specular*o2195793_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o2195793_Metallic*o2195793_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o2195793_BaseColor_r, p_o2195793_BaseColor_g, p_o2195793_BaseColor_b, p_o2195793_BaseColor_a).rgb*o2195793_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o4750441_ax = 0.000000000;\nconst float p_o4750441_ay = 90.000000000;\nconst float p_o4750441_az = 0.000000000;\nconst float p_o4792380_BaseColor_r = 1.000000000;\nconst float p_o4792380_BaseColor_g = 1.000000000;\nconst float p_o4792380_BaseColor_b = 1.000000000;\nconst float p_o4792380_BaseColor_a = 1.000000000;\nconst float p_o4792380_Metallic = 0.000000000;\nconst float p_o4792380_Specular = 0.000000000;\nconst float p_o4792380_Roughness = 1.000000000;\nconst float p_o4792380_Emission = 0.000000000;\nconst float p_o4792380_Normal = 0.000000000;\nconst float p_o4792380_Alpha = 0.000000000;\nconst float p_o4792380_AmbientOcclusion = 0.000000000;\nconst float p_o4792380_scale = 1.000000000;\nconst float p_o4792380_TranlateX = 0.000000000;\nconst float p_o4792380_TranlateY = 4.420000000;\nconst float p_o4792380_TranlateZ = 0.000000000;\nconst float p_o4792380_RotateX = 0.000000000;\nconst float p_o4792380_RotateY = 0.000000000;\nconst float p_o4792380_RotateZ = 0.000000000;\nvec3 o4792380_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o4792380_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4792380_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4792380_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o4792380_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o4792380_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o4792380_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4792380_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o4794342_sx = 4.250000000;\nconst float p_o4794342_sy = 0.250000000;\nconst float p_o4794342_sz = 4.010000000;\nconst float p_o4794342_r = 0.010000000;\nfloat o4792380_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o4794342_0_q = abs((p)) - vec3(p_o4794342_sx, p_o4794342_sy, p_o4794342_sz);\nfloat o4794342_0_1_sdf3d = length(max(o4794342_0_q,0.0))+min(max(o4794342_0_q.x,max(o4794342_0_q.y,o4794342_0_q.z)),0.0)-p_o4794342_r;\n\nreturn o4794342_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o4792380(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o4792380_TranlateX,p_o4792380_TranlateY,p_o4792380_TranlateZ),vec3(p_o4792380_RotateX,p_o4792380_RotateY,p_o4792380_RotateZ)*6.28318530718)/p_o4792380_scale;\n\tfloat sdf=o4792380_input_sdf3d(uv.xyz, _seed_variation_)*p_o4792380_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o4792380_AmbientOcclusion*o4792380_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o4792380_Alpha*o4792380_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o4792380_Normal*o4792380_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o4792380_Emission*o4792380_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o4792380_Roughness*o4792380_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o4792380_Specular*o4792380_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o4792380_Metallic*o4792380_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o4792380_BaseColor_r, p_o4792380_BaseColor_g, p_o4792380_BaseColor_b, p_o4792380_BaseColor_a).rgb*o4792380_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o5016891_x = 0.000000000;\nconst float p_o5016891_y = -0.119530000;\nconst float p_o5016891_z = 0.000000000;\nconst float p_o5036184_xyz = 1.785000000;\nconst float p_o5036184_x = 1.000000000;\nconst float p_o5036184_y = 1.000000000;\nconst float p_o5036184_z = 1.000000000;\nconst float p_o5009315_ax = 0.000000000;\nconst float p_o5009315_ay = 90.000000000;\nconst float p_o5009315_az = 90.000000000;\nconst float p_o4939319_BaseColor_r = 1.000000000;\nconst float p_o4939319_BaseColor_g = 1.000000000;\nconst float p_o4939319_BaseColor_b = 1.000000000;\nconst float p_o4939319_BaseColor_a = 1.000000000;\nconst float p_o4939319_Metallic = 0.705000000;\nconst float p_o4939319_Specular = 0.917000000;\nconst float p_o4939319_Roughness = 1.000000000;\nconst float p_o4939319_Emission = 0.000000000;\nconst float p_o4939319_Normal = 0.000000000;\nconst float p_o4939319_Alpha = 0.000000000;\nconst float p_o4939319_AmbientOcclusion = 0.000000000;\nconst float p_o4939319_scale = 1.000000000;\nconst float p_o4939319_TranlateX = 0.000000000;\nconst float p_o4939319_TranlateY = 0.000000000;\nconst float p_o4939319_TranlateZ = 0.000000000;\nconst float p_o4939319_RotateX = 0.000000000;\nconst float p_o4939319_RotateY = 0.000000000;\nconst float p_o4939319_RotateZ = 0.000000000;\nconst float p_o4939301_translate_x = -0.530000000;\nconst float p_o4939301_translate_y = -0.010000000;\nconst float p_o4939295_translate_x = 2.180000000;\nconst float p_o4939295_translate_y = 4.575000000;\nconst float p_o4939295_rotate = 456.220000000;\nconst float p_o4939295_scale_x = 1.000000000;\nconst float p_o4939295_scale_y = 1.000000000;\nconst float seed_o4939292 = 0.692989000;\nconst float p_o4939292_repeat = 1.000000000;\nconst float p_o4939292_rows = 1.930000000;\nconst float p_o4939292_columns = 1.930000000;\nconst float p_o4939292_row_offset = 1.000000000;\nconst float p_o4939292_mortar = 0.000000000;\nconst float p_o4939292_bevel = 0.000000000;\nconst float p_o4939292_round = 0.000000000;\nconst float p_o4939292_corner = 0.000000000;\nconst float p_o4939289_f = 0.000000000;\nconst float p_o4939273_g_0_pos = 0.081110174;\nconst float p_o4939273_g_0_r = 0.000000000;\nconst float p_o4939273_g_0_g = 0.000000000;\nconst float p_o4939273_g_0_b = 0.000000000;\nconst float p_o4939273_g_0_a = 1.000000000;\nconst float p_o4939273_g_1_pos = 0.390908987;\nconst float p_o4939273_g_1_r = 0.796875000;\nconst float p_o4939273_g_1_g = 0.604830265;\nconst float p_o4939273_g_1_b = 0.333068848;\nconst float p_o4939273_g_1_a = 1.000000000;\nconst float p_o4939273_g_2_pos = 0.772018918;\nconst float p_o4939273_g_2_r = 0.000000000;\nconst float p_o4939273_g_2_g = 0.000000000;\nconst float p_o4939273_g_2_b = 0.000000000;\nconst float p_o4939273_g_2_a = 1.000000000;\nvec4 o4939273_g_gradient_fct(float x) {\n  if (x < p_o4939273_g_0_pos) {\n    return vec4(p_o4939273_g_0_r,p_o4939273_g_0_g,p_o4939273_g_0_b,p_o4939273_g_0_a);\n  } else if (x < p_o4939273_g_1_pos) {\n    return mix(vec4(p_o4939273_g_0_r,p_o4939273_g_0_g,p_o4939273_g_0_b,p_o4939273_g_0_a), vec4(p_o4939273_g_1_r,p_o4939273_g_1_g,p_o4939273_g_1_b,p_o4939273_g_1_a), ((x-p_o4939273_g_0_pos)/(p_o4939273_g_1_pos-p_o4939273_g_0_pos)));\n  } else if (x < p_o4939273_g_2_pos) {\n    return mix(vec4(p_o4939273_g_1_r,p_o4939273_g_1_g,p_o4939273_g_1_b,p_o4939273_g_1_a), vec4(p_o4939273_g_2_r,p_o4939273_g_2_g,p_o4939273_g_2_b,p_o4939273_g_2_a), ((x-p_o4939273_g_1_pos)/(p_o4939273_g_2_pos-p_o4939273_g_1_pos)));\n  }\n  return vec4(p_o4939273_g_2_r,p_o4939273_g_2_g,p_o4939273_g_2_b,p_o4939273_g_2_a);\n}\nconst float p_o4939254_scale = 2.706000000;\nconst float p_o4939254_scale_x = 1.000000000;\nconst float p_o4939254_scale_y = 1.000000000;\nconst float p_o4939254_scale_z = 1.000000000;\nconst float p_o4939254_transx = 0.000000000;\nconst float p_o4939254_transy = 0.000000000;\nconst float p_o4939254_transz = 0.000000000;\nconst float p_o4939254_persistence = 0.500000000;\nconst float p_o4939254_brightness = 0.000000000;\nconst float p_o4939254_contrast = 14.000000000;\nfloat o4939254_fbm(vec3 coord, float persistence, float _seed_variation_) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfloat size = 1.0;\n\tfor (int i = 0; i < 12; i++) {\n\t\tvalue += XsX3zB_oct_simplex3d(coord*size) * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nfloat o4939254_bc(float f,float contrast, float brightness, float _seed_variation_) {\n\treturn f*contrast+brightness+0.5-contrast*0.5;\n}\nvec3 o4939319_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\nvec4 o4939292_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), vec2(p_o4939292_columns, p_o4939292_rows), p_o4939292_repeat, p_o4939292_row_offset);\nvec4 o4939292_0 = brick((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), o4939292_0_rect.xy, o4939292_0_rect.zw, p_o4939292_mortar*1.0, p_o4939292_round*1.0, max(0.001, p_o4939292_bevel*1.0));\nvec3 o4939292_1_2_rgb = brick_random_color(o4939292_0_rect.xy, o4939292_0_rect.zw, float((seed_o4939292+_seed_variation_)));\nvec3 o4939254_0_out = vec3(o4939254_bc(o4939254_fbm((vec3(p_o4939289_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), vec2(p_o4939295_translate_x*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o4939295_translate_y*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o4939295_rotate*0.01745329251*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o4939295_scale_x*(2.0*1.0-1.0), p_o4939295_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), vec2(p_o4939295_translate_x*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o4939295_translate_y*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o4939295_rotate*0.01745329251*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o4939295_scale_x*(2.0*1.0-1.0), p_o4939295_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o4939254_scale_x,p_o4939254_scale_y,p_o4939254_scale_z)*0.5*p_o4939254_scale+vec3(p_o4939254_transx,p_o4939254_transy,p_o4939254_transz),p_o4939254_persistence, _seed_variation_)*0.5+0.5,p_o4939254_contrast,p_o4939254_brightness, _seed_variation_));vec3 o4939254_0_1_tex3d = clamp(o4939254_0_out,vec3(0),vec3(1));\nvec3 o4939273_0_1_tex3d = o4939273_g_gradient_fct(dot(o4939254_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o4939289_0_1_rgb = o4939273_0_1_tex3d.rgb;\nvec4 o4939295_0_1_rgba = vec4(o4939289_0_1_rgb, 1.0);\nvec4 o4939301_0_1_rgba = o4939295_0_1_rgba;\nvec3 o4939298_0_1_tex3d = ((o4939301_0_1_rgba).rgb);\n\nreturn o4939298_0_1_tex3d;\n}\nfloat o4939319_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4939319_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o4939304_g_0_pos = 0.000000000;\nconst float p_o4939304_g_0_r = 0.066406250;\nconst float p_o4939304_g_0_g = 0.066406250;\nconst float p_o4939304_g_0_b = 0.066406250;\nconst float p_o4939304_g_0_a = 1.000000000;\nconst float p_o4939304_g_1_pos = 1.000000000;\nconst float p_o4939304_g_1_r = 1.000000000;\nconst float p_o4939304_g_1_g = 1.000000000;\nconst float p_o4939304_g_1_b = 1.000000000;\nconst float p_o4939304_g_1_a = 1.000000000;\nvec4 o4939304_g_gradient_fct(float x) {\n  if (x < p_o4939304_g_0_pos) {\n    return vec4(p_o4939304_g_0_r,p_o4939304_g_0_g,p_o4939304_g_0_b,p_o4939304_g_0_a);\n  } else if (x < p_o4939304_g_1_pos) {\n    return mix(vec4(p_o4939304_g_0_r,p_o4939304_g_0_g,p_o4939304_g_0_b,p_o4939304_g_0_a), vec4(p_o4939304_g_1_r,p_o4939304_g_1_g,p_o4939304_g_1_b,p_o4939304_g_1_a), ((x-p_o4939304_g_0_pos)/(p_o4939304_g_1_pos-p_o4939304_g_0_pos)));\n  }\n  return vec4(p_o4939304_g_1_r,p_o4939304_g_1_g,p_o4939304_g_1_b,p_o4939304_g_1_a);\n}\nfloat o4939319_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\nvec4 o4939292_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), vec2(p_o4939292_columns, p_o4939292_rows), p_o4939292_repeat, p_o4939292_row_offset);\nvec4 o4939292_0 = brick((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), o4939292_0_rect.xy, o4939292_0_rect.zw, p_o4939292_mortar*1.0, p_o4939292_round*1.0, max(0.001, p_o4939292_bevel*1.0));\nvec3 o4939292_1_2_rgb = brick_random_color(o4939292_0_rect.xy, o4939292_0_rect.zw, float((seed_o4939292+_seed_variation_)));\nvec3 o4939254_0_out = vec3(o4939254_bc(o4939254_fbm((vec3(p_o4939289_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), vec2(p_o4939295_translate_x*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o4939295_translate_y*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o4939295_rotate*0.01745329251*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o4939295_scale_x*(2.0*1.0-1.0), p_o4939295_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o4939301_translate_x, p_o4939301_translate_y)), vec2(p_o4939295_translate_x*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o4939295_translate_y*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o4939295_rotate*0.01745329251*(2.0*(dot(o4939292_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o4939295_scale_x*(2.0*1.0-1.0), p_o4939295_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o4939254_scale_x,p_o4939254_scale_y,p_o4939254_scale_z)*0.5*p_o4939254_scale+vec3(p_o4939254_transx,p_o4939254_transy,p_o4939254_transz),p_o4939254_persistence, _seed_variation_)*0.5+0.5,p_o4939254_contrast,p_o4939254_brightness, _seed_variation_));vec3 o4939254_0_1_tex3d = clamp(o4939254_0_out,vec3(0),vec3(1));\nvec3 o4939273_0_1_tex3d = o4939273_g_gradient_fct(dot(o4939254_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o4939289_0_1_rgb = o4939273_0_1_tex3d.rgb;\nvec4 o4939295_0_1_rgba = vec4(o4939289_0_1_rgb, 1.0);\nvec4 o4939301_0_1_rgba = o4939295_0_1_rgba;\nvec3 o4939298_0_1_tex3d = ((o4939301_0_1_rgba).rgb);\nvec3 o4939304_0_1_tex3d = o4939304_g_gradient_fct(dot(o4939298_0_1_tex3d, vec3(1.0))/3.0).rgb;\n\nreturn (dot(o4939304_0_1_tex3d, vec3(1.0))/3.0);\n}\nvec3 o4939319_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o4939319_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o4939319_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4939319_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o4939325_X = 1.000000000;\nconst float p_o4939325_Y = 0.260000000;\nconst float p_o4939325_Z = 0.260000000;\nconst float p_o4939325_RepX = 1.000000000;\nconst float p_o4939325_RepY = 24.000000000;\nconst float p_o4939325_RepZ = 24.000000000;\nconst float p_o4939264_sx = 0.050000000;\nconst float p_o4939264_sy = 0.235000000;\nconst float p_o4939264_sz = 0.235000000;\nconst float p_o4939264_r = 0.020000000;\nfloat o4939319_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o4939264_0_q = abs((opRepLim((p),vec3(p_o4939325_X,p_o4939325_Y,p_o4939325_Z)*2.0,vec3(p_o4939325_RepX-1.0,p_o4939325_RepY-1.0,p_o4939325_RepZ-1.0)))) - vec3(p_o4939264_sx, p_o4939264_sy, p_o4939264_sz);\nfloat o4939264_0_1_sdf3d = length(max(o4939264_0_q,0.0))+min(max(o4939264_0_q.x,max(o4939264_0_q.y,o4939264_0_q.z)),0.0)-p_o4939264_r;\nfloat o4939325_0_1_sdf3d = o4939264_0_1_sdf3d;\n\nreturn o4939325_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o4939319(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o4939319_TranlateX,p_o4939319_TranlateY,p_o4939319_TranlateZ),vec3(p_o4939319_RotateX,p_o4939319_RotateY,p_o4939319_RotateZ)*6.28318530718)/p_o4939319_scale;\n\tfloat sdf=o4939319_input_sdf3d(uv.xyz, _seed_variation_)*p_o4939319_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o4939319_AmbientOcclusion*o4939319_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o4939319_Alpha*o4939319_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o4939319_Normal*o4939319_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o4939319_Emission*o4939319_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o4939319_Roughness*o4939319_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o4939319_Specular*o4939319_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o4939319_Metallic*o4939319_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o4939319_BaseColor_r, p_o4939319_BaseColor_g, p_o4939319_BaseColor_b, p_o4939319_BaseColor_a).rgb*o4939319_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o4939328_x = -0.058000000;\nconst float p_o4939328_y = 0.000000000;\nconst float p_o4939328_z = 0.000000000;\nconst float p_o4939267_BaseColor_r = 0.324218988;\nconst float p_o4939267_BaseColor_g = 0.324218988;\nconst float p_o4939267_BaseColor_b = 0.324218988;\nconst float p_o4939267_BaseColor_a = 1.000000000;\nconst float p_o4939267_Metallic = 0.000000000;\nconst float p_o4939267_Specular = 0.000000000;\nconst float p_o4939267_Roughness = 1.000000000;\nconst float p_o4939267_Emission = 0.000000000;\nconst float p_o4939267_Normal = 0.000000000;\nconst float p_o4939267_Alpha = 0.000000000;\nconst float p_o4939267_AmbientOcclusion = 0.000000000;\nconst float p_o4939267_scale = 1.000000000;\nconst float p_o4939267_TranlateX = 0.000000000;\nconst float p_o4939267_TranlateY = 0.000000000;\nconst float p_o4939267_TranlateZ = 0.000000000;\nconst float p_o4939267_RotateX = 0.000000000;\nconst float p_o4939267_RotateY = 0.000000000;\nconst float p_o4939267_RotateZ = 0.000000000;\nvec3 o4939267_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o4939267_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4939267_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4939267_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o4939267_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o4939267_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o4939267_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o4939267_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o4939261_sx = 0.000000000;\nconst float p_o4939261_sy = 6.270000000;\nconst float p_o4939261_sz = 6.140000000;\nconst float p_o4939261_r = 0.000000000;\nfloat o4939267_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o4939261_0_q = abs((p)) - vec3(p_o4939261_sx, p_o4939261_sy, p_o4939261_sz);\nfloat o4939261_0_1_sdf3d = length(max(o4939261_0_q,0.0))+min(max(o4939261_0_q.x,max(o4939261_0_q.y,o4939261_0_q.z)),0.0)-p_o4939261_r;\n\nreturn o4939261_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o4939267(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o4939267_TranlateX,p_o4939267_TranlateY,p_o4939267_TranlateZ),vec3(p_o4939267_RotateX,p_o4939267_RotateY,p_o4939267_RotateZ)*6.28318530718)/p_o4939267_scale;\n\tfloat sdf=o4939267_input_sdf3d(uv.xyz, _seed_variation_)*p_o4939267_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o4939267_AmbientOcclusion*o4939267_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o4939267_Alpha*o4939267_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o4939267_Normal*o4939267_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o4939267_Emission*o4939267_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o4939267_Roughness*o4939267_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o4939267_Specular*o4939267_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o4939267_Metallic*o4939267_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o4939267_BaseColor_r, p_o4939267_BaseColor_g, p_o4939267_BaseColor_b, p_o4939267_BaseColor_a).rgb*o4939267_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o4836639_x = 0.000000000;\nconst float p_o4836639_y = 1.071000000;\nconst float p_o4836639_z = 0.000000000;\n//const float p_o1771546_angle = -67.8070000000;//EDITED\nconst float p_o1771546_correction = 0.000000000;\nconst float p_o1564764_k = 0.062000000;\nconst float p_o1569342_BaseColor_r = 0.000000000;\nconst float p_o1569342_BaseColor_g = 0.000000000;\nconst float p_o1569342_BaseColor_b = 0.000000000;\nconst float p_o1569342_BaseColor_a = 1.000000000;\nconst float p_o1569342_Metallic = 0.250000000;\nconst float p_o1569342_Specular = 1.000000000;\nconst float p_o1569342_Roughness = 0.000000000;\nconst float p_o1569342_Emission = 0.000000000;\nconst float p_o1569342_Normal = 0.000000000;\nconst float p_o1569342_Alpha = 0.000000000;\nconst float p_o1569342_AmbientOcclusion = 0.000000000;\nconst float p_o1569342_scale = 0.306000000;\nconst float p_o1569342_TranlateX = 0.000000000;\nconst float p_o1569342_TranlateY = 0.000000000;\nconst float p_o1569342_TranlateZ = 0.000000000;\nconst float p_o1569342_RotateX = 0.000000000;\nconst float p_o1569342_RotateY = 0.000000000;\nconst float p_o1569342_RotateZ = 0.000000000;\nvec3 o1569342_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o1569342_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o1569342_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o1569342_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o1569342_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o1569342_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o1569342_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o1569342_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o1593815_X = 0.500000000;\nconst float p_o1593815_Y = 0.500000000;\nconst float p_o1593815_Z = 0.500000000;\nconst float p_o1593815_RepX = 14.000000000;\nconst float p_o1593815_RepY = 14.000000000;\nconst float p_o1593815_RepZ = 17.000000000;\nconst float p_o1597242_r = 0.320000000;\nfloat o1569342_input_sdf3d(vec3 p, float _seed_variation_) {\nfloat o1597242_0_1_sdf3d = length((opRepLim((p),vec3(p_o1593815_X,p_o1593815_Y,p_o1593815_Z)*2.0,vec3(p_o1593815_RepX-1.0,p_o1593815_RepY-1.0,p_o1593815_RepZ-1.0))))-p_o1597242_r;\nfloat o1593815_0_1_sdf3d = o1597242_0_1_sdf3d;\n\nreturn o1593815_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o1569342(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o1569342_TranlateX,p_o1569342_TranlateY,p_o1569342_TranlateZ),vec3(p_o1569342_RotateX,p_o1569342_RotateY,p_o1569342_RotateZ)*6.28318530718)/p_o1569342_scale;\n\tfloat sdf=o1569342_input_sdf3d(uv.xyz, _seed_variation_)*p_o1569342_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o1569342_AmbientOcclusion*o1569342_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o1569342_Alpha*o1569342_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o1569342_Normal*o1569342_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o1569342_Emission*o1569342_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o1569342_Roughness*o1569342_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o1569342_Specular*o1569342_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o1569342_Metallic*o1569342_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o1569342_BaseColor_r, p_o1569342_BaseColor_g, p_o1569342_BaseColor_b, p_o1569342_BaseColor_a).rgb*o1569342_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o41691_BaseColor_r = 0.159263611;\nconst float p_o41691_BaseColor_g = 1.000000000;\nconst float p_o41691_BaseColor_b = 0.000000000;\nconst float p_o41691_BaseColor_a = 1.000000000;\nconst float p_o41691_Metallic = 0.547000000;\nconst float p_o41691_Specular = 0.500000000;\nconst float p_o41691_Roughness = 0.059000000;\nconst float p_o41691_Emission = 0.000000000;\nconst float p_o41691_Normal = 0.000000000;\nconst float p_o41691_Alpha = 0.000000000;\nconst float p_o41691_AmbientOcclusion = 0.000000000;\nconst float p_o41691_scale = 1.000000000;\nconst float p_o41691_TranlateX = 0.000000000;\nconst float p_o41691_TranlateY = 0.000000000;\nconst float p_o41691_TranlateZ = 0.000000000;\nconst float p_o41691_RotateX = 0.000000000;\nconst float p_o41691_RotateY = 0.000000000;\nconst float p_o41691_RotateZ = 0.000000000;\nvec3 o41691_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o41691_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o41691_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o41691_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o41691_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o41691_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o41691_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o41691_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o1506061_sx = 0.250000000;\nconst float p_o1506061_sy = 0.250000000;\nconst float p_o1506061_sz = 1.940000000;\nconst float p_o1506061_r = 0.280000000;\nfloat o41691_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o1506061_0_q = abs((p)) - vec3(p_o1506061_sx, p_o1506061_sy, p_o1506061_sz);\nfloat o1506061_0_1_sdf3d = length(max(o1506061_0_q,0.0))+min(max(o1506061_0_q.x,max(o1506061_0_q.y,o1506061_0_q.z)),0.0)-p_o1506061_r;\n\nreturn o1506061_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o41691(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o41691_TranlateX,p_o41691_TranlateY,p_o41691_TranlateZ),vec3(p_o41691_RotateX,p_o41691_RotateY,p_o41691_RotateZ)*6.28318530718)/p_o41691_scale;\n\tfloat sdf=o41691_input_sdf3d(uv.xyz, _seed_variation_)*p_o41691_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o41691_AmbientOcclusion*o41691_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o41691_Alpha*o41691_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o41691_Normal*o41691_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o41691_Emission*o41691_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o41691_Roughness*o41691_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o41691_Specular*o41691_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o41691_Metallic*o41691_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o41691_BaseColor_r, p_o41691_BaseColor_g, p_o41691_BaseColor_b, p_o41691_BaseColor_a).rgb*o41691_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}vec4 o9000_input_mfsdf(vec4 p, float _seed_variation_) {\nvec4 o218686_0_1_v4v4 = PBRObjectMaker_o218686((p), _seed_variation_);\nvec4 o2041939_0_1_v4v4 = PBRObjectMaker_o2041939((vec4((p).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(p).w)), _seed_variation_);\nvec4 o2195793_0_1_v4v4 = PBRObjectMaker_o2195793((vec4((vec4((p).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(p).w)).xyz-vec3(p_o2245524_x, p_o2245524_y, p_o2245524_z),(vec4((p).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(p).w)).w)), _seed_variation_);\nvec4 o2245524_0_1_v4v4 = o2195793_0_1_v4v4;\nvec4 o2510272_0_1_v4v4 = sdf3dc_union(o2041939_0_1_v4v4, o2245524_0_1_v4v4);\nvec4 o2324410_0_1_v4v4 = o2510272_0_1_v4v4;\nvec4 o2041939_0_3_v4v4 = PBRObjectMaker_o2041939((vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)), _seed_variation_);\nvec4 o2195793_0_3_v4v4 = PBRObjectMaker_o2195793((vec4((vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)).xyz-vec3(p_o2245524_x, p_o2245524_y, p_o2245524_z),(vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)).w)), _seed_variation_);\nvec4 o2245524_0_3_v4v4 = o2195793_0_3_v4v4;\nvec4 o2510272_0_3_v4v4 = sdf3dc_union(o2041939_0_3_v4v4, o2245524_0_3_v4v4);\nvec4 o2324410_0_3_v4v4 = o2510272_0_3_v4v4;\nvec4 o4680081_0_1_v4v4 = o2324410_0_3_v4v4;\nvec4 o2041939_0_5_v4v4 = PBRObjectMaker_o2041939((vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).w)).w)), _seed_variation_);\nvec4 o2195793_0_5_v4v4 = PBRObjectMaker_o2195793((vec4((vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).w)).w)).xyz-vec3(p_o2245524_x, p_o2245524_y, p_o2245524_z),(vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o2324410_x, p_o2324410_y, p_o2324410_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o4750441_ax, p_o4750441_ay, p_o4750441_az)*0.01745329251), (p).w)).w)).w)).w)), _seed_variation_);\nvec4 o2245524_0_5_v4v4 = o2195793_0_5_v4v4;\nvec4 o2510272_0_5_v4v4 = sdf3dc_union(o2041939_0_5_v4v4, o2245524_0_5_v4v4);\nvec4 o2324410_0_5_v4v4 = o2510272_0_5_v4v4;\nvec4 o4680081_0_3_v4v4 = o2324410_0_5_v4v4;\nvec4 o4750441_0_1_v4v4 = o4680081_0_3_v4v4;\nvec4 o4792380_0_1_v4v4 = PBRObjectMaker_o4792380((p), _seed_variation_);\nvec4 o4939319_0_1_v4v4 = PBRObjectMaker_o4939319((vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).xyz/vec3(p_o5036184_x, p_o5036184_y, p_o5036184_z)/p_o5036184_xyz,(vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).w)).xyz, -vec3(p_o5009315_ax, p_o5009315_ay, p_o5009315_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).xyz/vec3(p_o5036184_x, p_o5036184_y, p_o5036184_z)/p_o5036184_xyz,(vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).w)).w)), _seed_variation_);\nvec4 o4939267_0_1_v4v4 = PBRObjectMaker_o4939267((vec4((vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).xyz/vec3(p_o5036184_x, p_o5036184_y, p_o5036184_z)/p_o5036184_xyz,(vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).w)).xyz, -vec3(p_o5009315_ax, p_o5009315_ay, p_o5009315_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).xyz/vec3(p_o5036184_x, p_o5036184_y, p_o5036184_z)/p_o5036184_xyz,(vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).w)).w)).xyz-vec3(p_o4939328_x, p_o4939328_y, p_o4939328_z),(vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).xyz/vec3(p_o5036184_x, p_o5036184_y, p_o5036184_z)/p_o5036184_xyz,(vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).w)).xyz, -vec3(p_o5009315_ax, p_o5009315_ay, p_o5009315_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).xyz/vec3(p_o5036184_x, p_o5036184_y, p_o5036184_z)/p_o5036184_xyz,(vec4((p).xyz-vec3(p_o5016891_x, p_o5016891_y, p_o5016891_z),(p).w)).w)).w)).w)), _seed_variation_);\nvec4 o4939328_0_1_v4v4 = o4939267_0_1_v4v4;\nvec4 o4939331_0_1_v4v4 = sdf3dc_union(o4939319_0_1_v4v4, o4939328_0_1_v4v4);\nvec4 o5009315_0_1_v4v4 = o4939331_0_1_v4v4;\nvec4 o_o5036184_0=o5009315_0_1_v4v4;vec4 o5036184_0_1_v4v4 = vec4(o_o5036184_0.xyz,o_o5036184_0.w*min(min(p_o5036184_x, p_o5036184_y), p_o5036184_z)*p_o5036184_xyz);\nvec4 o5016891_0_1_v4v4 = o5036184_0_1_v4v4;\nvec4 o4677275_0_1_v4v4 = MFSDF_Union(o2324410_0_1_v4v4,o4680081_0_1_v4v4,o4750441_0_1_v4v4,o4792380_0_1_v4v4,o5016891_0_1_v4v4,o5016891_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0));\nfloat p_o1771546_angle=-67.807000000+(iMouse.y/iResolution.y)*180.0; //EDITED NEW\nvec4 o1569342_0_1_v4v4 = PBRObjectMaker_o1569342((vec4(twistZ((vec4((p).xyz-vec3(p_o4836639_x, p_o4836639_y, p_o4836639_z),(p).w)).xyz,p_o1771546_angle),(vec4((p).xyz-vec3(p_o4836639_x, p_o4836639_y, p_o4836639_z),(p).w)).w)), _seed_variation_);\nvec4 o41691_0_1_v4v4 = PBRObjectMaker_o41691((vec4(twistZ((vec4((p).xyz-vec3(p_o4836639_x, p_o4836639_y, p_o4836639_z),(p).w)).xyz,p_o1771546_angle),(vec4((p).xyz-vec3(p_o4836639_x, p_o4836639_y, p_o4836639_z),(p).w)).w)), _seed_variation_);\nvec4 o1564764_0_1_v4v4 = mfsdf3d_smooth_subtraction(o1569342_0_1_v4v4, o41691_0_1_v4v4,p_o1564764_k);\nvec4 o1771546_0_o=o1564764_0_1_v4v4;vec4 o1771546_0_1_v4v4 = vec4(o1771546_0_o.xyz,o1771546_0_o.w/(1.0+p_o1771546_correction));\nvec4 o4836639_0_1_v4v4 = o1771546_0_1_v4v4;\nvec4 o21794_0_1_v4v4 = MFSDF_Union(o218686_0_1_v4v4,o4677275_0_1_v4v4,o4836639_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0));\n\nreturn o21794_0_1_v4v4;\n}\nvec3 o9000_input_hdri(vec2 uv, float _seed_variation_) {\n\nreturn vec3(0.0);\n}\n\n//tetrahedron normal by PauloFalcao\nvec3 normal_o9000(vec3 p, float _seed_variation_) {  \n  const vec3 e=vec3(0.01,-0.01,0.0);\n  float v1=o9000_input_mfsdf(vec4(p+e.xyy,0.0), _seed_variation_).w;\n  float v2=o9000_input_mfsdf(vec4(p+e.yyx,0.0), _seed_variation_).w;\n  float v3=o9000_input_mfsdf(vec4(p+e.yxy,0.0), _seed_variation_).w;\n  float v4=o9000_input_mfsdf(vec4(p+e.xxx,0.0), _seed_variation_).w;\n  return normalize(vec3(v4+v1-v3-v2,v3+v4-v1-v2,v2+v4-v3-v1));\n}\n\nvoid raymarch_o9000(in vec3 o,in vec3 v,out vec3 p,inout float d, float _seed_variation_) {\n  float s;\n  for(int i=0;i<64;i++){\n    p=o+v*d;\n    s=o9000_input_mfsdf(vec4(p,0.0), _seed_variation_).w;\n    if (abs(s)<0.001) break;\n    d+=s;\n    if (d>p_o9000_MaxDistance) break;\n  } \n}\n\n/*EDITED OLD\nvec3 pathtracing_o9000(vec2 uv, float _seed_variation_) {\n\n\t// Init random\n\tvec2 rndgen=rndint_hash23(vec3(uv,iTime))*15360.0;\n    uint rngState = uint(uint(rndgen.x) * uint(1973) + uint(rndgen.y) * uint(9277) + uint(iTime*1223.0) * uint(26699)) | uint(1);\nEDITED OLD*/\n\nvec3 pathtracing_o9000(uint rngState, vec2 uv, float _seed_variation_) { //EDITED NEW \n\n\t//vec3 o=vec3(p_o9000_CamX,p_o9000_CamY,p_o9000_CamZ)*p_o9000_CamZoom;\n    \n    //EDITED NEW add mouse\n    float mx=(iMouse.x/iResolution.x)*6.0;\n\tvec3 o=vec3(p_o9000_CamX,p_o9000_CamY,p_o9000_CamZ-mx)*p_o9000_CamZoom;\n    //EDITED NEW add mouse\n    \n    vec3 t=vec3(p_o9000_LookAtX,p_o9000_LookAtY,p_o9000_LookAtZ);\n    vec3 u=vec3(0.0,1.0,0.0);\n    vec3 c=normalize(t-o);\n    vec3 cx=normalize(cross(u,c));\n    vec3 cy=normalize(cross(cx,c));\n   \n\tvec2 xy=uv-0.5;\n\n    vec3 v=normalize(c*p_o9000_CamD+cx*xy.x+cy*xy.y);\n\n    vec3 p;\n    float d=0.01;\n    vec3 rgb=vec3(1.0);\n    vec3 io=o;\n    int i;\n    for(i=0;i<4;i++){\n    \n        raymarch_o9000(io,v,p,d, _seed_variation_);\n        \n        vec3 n=normal_o9000(p, _seed_variation_);\n        \n        //View direction to tangent space\n        vec3 ot;vec3 ob;Onb(n,ot,ob);\n        vec3 vt=vec3(dot(-v,ot),dot(-v,ob),dot(-v,n));\n\t\n        if (d<p_o9000_MaxDistance){\t\n        //if (length(p-o)<p_o9000_MaxDistance){\n        vec3 obj_Emission=o9000_input_mfsdf(vec4(p,13.0), _seed_variation_).rgb;\n        \n        if ((obj_Emission.x+obj_Emission.y+obj_Emission.z)>0.001){\n            rgb=obj_Emission*rgb;\n            break;\n        } else {\n            float s=RandomFloat01(rngState);\n\n            vec3 obj_BaseColor=o9000_input_mfsdf(vec4(p,1.0), _seed_variation_).rgb; // 1 - BaseColor  (r,g,b,sdf)\n            float obj_Metallic=o9000_input_mfsdf(vec4(p,2.0), _seed_variation_).x;   // 2 - Metallic   (v,0,0,sdf)\n            float obj_Specular=o9000_input_mfsdf(vec4(p,4.0), _seed_variation_).x;   // 4 - Specular   (v,0,0,sdf)\n            float obj_Roughness=o9000_input_mfsdf(vec4(p,5.0), _seed_variation_).x;  // 5 - Roughness  (v,0,0,sdf)\n\n            if (s>obj_Specular*obj_Specular){\n                rgb=(obj_BaseColor-obj_BaseColor*obj_Metallic)*rgb;\n                v=cosineSampleHemissphere(rngState,n);\n            } else {\n\n                float r2=obj_Roughness*obj_Roughness;\n                vec3 vndf=SampleGGXVNDF(rngState,vt,r2,r2);\n                vec3 nv=reflect(-vt,vndf);\n\n                //Sample direction back to camera space\n                nv=nv.x*ot+nv.y*ob+nv.z*n;\n\n                float FH=schlickWeight(dot(n,nv));\n                vec3 Cspec0=mix(vec3(obj_Specular*.08),obj_BaseColor,obj_Metallic);\n                vec3 Fs=mix(Cspec0,vec3(1.0),FH);\n                rgb=Fs*rgb;\n                \n                v=nv;\n            }\n            io=p;\n            d=0.01;\n        }\n        } else {\n        rgb*=o9000_input_hdri(equirectangularMap(v.xzy), _seed_variation_).xyz;\n        break;\n        }\n    }//for(int i\n    if (i==4) rgb=vec3(0.0);//did not hit any light source\n\n\treturn rgb;\n\t\n}\n\n/* EDITED OLD\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nfloat _seed_variation_ = SEED_VARIATION;\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\nvec3 o9000_0_1_rgb = pathtracing_o9000((UV), _seed_variation_);\nfragColor = vec4(o9000_0_1_rgb, 1.0);\n EDITED OLD}*/\n\n//EDITED NEW\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    uint rngState = uint(uint(fragCoord.x) * uint(1973) + uint(fragCoord.y) * uint(9277) + uint(iFrame) * uint(26699)) | uint(1);\n    vec2 xy=fragCoord+vec2(RandomFloat01(rngState),RandomFloat01(rngState));\n\n    float minSize = min(iResolution.x, iResolution.y);\n    float _seed_variation_ = SEED_VARIATION;\n    vec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (xy-0.5*(iResolution.xy-vec2(minSize)))/minSize;\n    vec3 rgb = /*change here*/pathtracing_o9000(rngState,(UV), _seed_variation_);\n\n    if (iMouse.z<0.1){\n        vec4 lastFrameColor = texture(iChannel0, fragCoord / iResolution.xy);\n        fragColor = vec4(lastFrameColor+vec4(rgb,1.0));\n    } else {\n        fragColor = vec4(rgb,1.0);\n    }\n\n}\n//EDITED NEW",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}