{
    "Shader": {
        "info": {
            "date": "1422383421",
            "description": "2tweet",
            "flags": 0,
            "hasliked": 0,
            "id": "Mlf3WM",
            "likes": 3,
            "name": "[2TC 15] GPU Juggler 4",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "rcread",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "// Created by randy read - rcread/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat s( float b ) {\n    return abs( b / 2. - mod(  iTime * 2e1, b ) );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float a = 1e1, d, m = 0.;\n\tvec2 p = fragCoord.xy / a;\n    for ( float i = 1e2 ; i < 2e2 ; i++ ) {\n        d = distance( p, vec2( s( i ), s( i + 1. ) ) );\n        if ( a > d ) {\n            a = d;\n            m = i;\n        }\n    }\n    vec3 c;\n\tfor ( int i = 0 ; i < 3 ; i++ ) {\n        m /= 3.;\n\t\tc[ i ] = fract( m );\n\t}\n    fragColor.rgb = clamp( c / a, 0., 1. );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}