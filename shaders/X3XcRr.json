{
    "Shader": {
        "info": {
            "date": "1725705928",
            "description": "Adapted Wave Shader from React Three Fiber Examples\nhttps://codesandbox.io/p/sandbox/ib0jc",
            "flags": 0,
            "hasliked": 0,
            "id": "X3XcRr",
            "likes": 1,
            "name": "Fractal Tiled Wave Shader",
            "published": 3,
            "tags": [
                "fractal",
                "wave"
            ],
            "usePreview": 0,
            "username": "monkeyworks",
            "viewed": 69
        },
        "renderpass": [
            {
                "code": "// Adapted Wave Shader from React Three Fiber\n\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 resolution = iResolution.xy;\n    float time = iTime;\n    vec2 pointer = iMouse.xy / resolution;\n\n    vec2 uv = (fragCoord.xy * 2.0 - resolution.xy) / resolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    uv = fract(uv * 1.5) - 0.5;\n    uv = sin(uv * 0.5) - pointer;\n    \n    float d = length(uv) * exp(-length(uv0));\n    vec3 col = palette(length(uv0) + time * 0.4);\n    d = sin(d * 8.0 + time) / 8.0;\n    d = abs(d);\n    d = pow(0.02 / d, 2.0);\n    finalColor += col * d;\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}