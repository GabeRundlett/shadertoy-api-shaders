{
    "Shader": {
        "info": {
            "date": "1568391446",
            "description": "something",
            "flags": 0,
            "hasliked": 0,
            "id": "Wsd3WH",
            "likes": 2,
            "name": "cool abstract thing",
            "published": 3,
            "tags": [
                "abstract"
            ],
            "usePreview": 0,
            "username": "mat44",
            "viewed": 381
        },
        "renderpass": [
            {
                "code": "vec3 hsl2rgb(vec3 hsl) {\n    float H = hsl.x * 360.;\n    float S = hsl.y;\n    float L = hsl.z;\n    \n    float c = (1. - abs(2.*L - 1.)) * S;\n    float x = c * (1. - abs(mod(H / 60., 2.) - 1.));\n    float m = L - c / 2.;\n    \n    vec3 rgb;\n    if (H < 60.) {\n        rgb = vec3(c, x, 0.);\n    } else if (H < 120.) {\n     \trgb = vec3(x, c, 0.);\n    } else if (H < 180.) {\n     \trgb = vec3(0., c, x);\n    } else if (H < 240.) {\n        rgb = vec3(0., x, c);\n    } else if (H < 300.) {\n     \trgb = vec3(x, 0., c);   \n    } else {\n     \trgb = vec3(c, 0., x);   \n    }\n    return rgb + m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - 0.5*iResolution.xy ) / iResolution.y;\n\t\n    uv.x += sin(uv.y*10.0 + iTime)/20.0;\n\n    // float col = max(uv.x * uv.x, uv.y * uv.y);\n    float col = uv.x * uv.x + uv.y * uv.y;\n    \n    float stripes = iMouse.x/iResolution.x*10.0;\n    if (iMouse.x == 0.0) stripes = 10.0;\n    col = floor(col*stripes*2.0)/stripes;\n    \n    fragColor = vec4(hsl2rgb(vec3(fract(col), 1.0, 0.5)), 1.0);\n    //fragColor = vec4(vec3(fract(col)), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}