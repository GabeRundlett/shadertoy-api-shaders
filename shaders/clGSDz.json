{
    "Shader": {
        "info": {
            "date": "1686026230",
            "description": "My first shader, inspired by this Acerola YouTube short: https://www.youtube.com/shorts/mWUjGaduj4o",
            "flags": 0,
            "hasliked": 0,
            "id": "clGSDz",
            "likes": 9,
            "name": "Very Simple Chromatic Aberration",
            "published": 3,
            "tags": [
                "chromaticaberration",
                "firstshader"
            ],
            "usePreview": 0,
            "username": "schmego",
            "viewed": 209
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    float r = 0.5;  // radius\n    float o = 0.03; // max offset\n    float s = 8.0;  // animation speed\n    \n    vec2 or = vec2(sin(-o + iTime * s), sin(-o + iTime * s));\n    vec2 og = vec2(sin(o + iTime * s), cos(o + iTime * s));\n    vec2 ob = vec2(cos(o + iTime * s), cos(-o + iTime * s));\n    \n    vec2 uv_r = uv + o * or;\n    vec2 uv_g = uv + o * og;\n    vec2 uv_b = uv + o * ob;\n\n    vec3 col_r = (uv_r.x*uv_r.x + uv_r.y*uv_r.y < r*r) ? vec3(1.0,0.0,0.0) : vec3(0.0,0.0,0.0);\n    vec3 col_g = (uv_g.x*uv_g.x + uv_g.y*uv_g.y < r*r) ? vec3(0.0,1.0,0.0) : vec3(0.0,0.0,0.0);\n    vec3 col_b = (uv_b.x*uv_b.x + uv_b.y*uv_b.y < r*r) ? vec3(0.0,0.0,1.0) : vec3(0.0,0.0,0.0);\n    \n    vec3 col = col_r + col_g + col_b;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}