{
    "Shader": {
        "info": {
            "date": "1484454068",
            "description": "A 2D volumetric light on a chroma key shader. Use mouse to change light position.",
            "flags": 32,
            "hasliked": 0,
            "id": "llVXWW",
            "likes": 7,
            "name": "Jean Claude Volumetric Damme",
            "published": 3,
            "tags": [
                "shadow",
                "fake",
                "light",
                "volumetric",
                "jcvd"
            ],
            "usePreview": 0,
            "username": "jackdavenport",
            "viewed": 1021
        },
        "renderpass": [
            {
                "code": "#define SAMPLES 128\n#define RADIUS .03\n#define INTENSITY .7\n\nvec3 getVolumetric(vec2 uv, vec2 c) {\n    vec3 sum = vec3(0.);\n    float  w = 1./float(SAMPLES);\n    for(int i = 0; i < SAMPLES; i++) {\n        sum += 1.-texture(iChannel0, uv).w;\n        uv += (c-uv)*RADIUS;\n    }\n    return sum * w * INTENSITY;\n}\n\nvec3 blend(vec3 a, vec3 b) {\n    return 1.-(1.-a)*(1.-b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n    \n    vec2 c = iMouse.z > 0. ? iMouse.xy/iResolution.xy : vec2(.3,.5);\n    \n    fragColor.xyz *= fragColor.w;\n    fragColor.xyz  = blend(fragColor.xyz, getVolumetric(uv,c));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    \n    float l = length(fragColor.xyz-vec3(0.,1.,0.));\n    fragColor.w = smoothstep(.55,.75,l);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}