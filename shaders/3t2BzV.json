{
    "Shader": {
        "info": {
            "date": "1599377465",
            "description": "Cantor set ",
            "flags": 0,
            "hasliked": 0,
            "id": "3t2BzV",
            "likes": 1,
            "name": "Cantor set test 001",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "bananoid",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "//Step on a gradient\nfloat GS (float G, float TS, float SS)\n{\n    float Pos = G*TS-SS;\n    return (1.0-floor(clamp(Pos,0.,1.)))*ceil(clamp(Pos,0.,1.));\n}\n\n//Cantor set level\nfloat CSL(float Coord)\n{\n\t//return 1.0 - round((Coord * (1.0 - Coord))*2.25);\n    return Coord;\n}\n\n//Render\nvoid mainImage( out vec4 cs, in vec2 fragCoord )\n{\n    //Variables\n    vec2 uv = fragCoord/iResolution.xy;\n    int T = 10;\n    float PL = CSL(uv.x);\n    float CS = PL;\n  \n   \n    //Loop\n    for(int i=0;i < T; i++)\n    {\n        float CurLevel = CSL(fract(uv.x*pow(3.,float(i+1))));\n        CS = mix(CS,CurLevel*PL,GS(1.0-uv.y,float(T+1),float(i+1)));\n        PL *= CurLevel;\n    }\n    \n    //After loop\n    //CS = mix(CS,1.0,GS(1.0-uv.y,float(T),float(0.0)));\n    \n    //Output to screen\n    cs = vec4(CS,CS,CS,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}