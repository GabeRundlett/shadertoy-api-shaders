{
    "Shader": {
        "info": {
            "date": "1451314397",
            "description": "This is a shader that can draw an anti-aliased circle using a position, a radius, and a constant for a circle gradient.\n\"cr\" is the circle radius, (iResolution.y/2.0) is a value in pixels\nSetting \"aa\" to 1.0/iResolution.x gives the best anti-alias effect.",
            "flags": 0,
            "hasliked": 0,
            "id": "Md33zf",
            "likes": 14,
            "name": "Simple circle AA",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "wowsers",
            "viewed": 1556
        },
        "renderpass": [
            {
                "code": "//Slowly pulsate from no anti-aliasing to extreme anti-aliasing\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aa = (50.0*-cos(iTime)+50.0)/iResolution.y;\t\t\t//AA diameter\n\tvec2 uv = (fragCoord.xy-(iResolution.xy/2.0))/iResolution.xx;\t//Center uv's\n    float gr = dot(uv,uv); \t\t\t\t\t\t\t\t\t\t\t//Get Radius point\n\n    float cr = (iResolution.y/2.0)/iResolution.x;\t\t\t\t\t//Circle Radius Size (height of screen)\n    vec2 weight = vec2(cr*cr+cr*aa,cr*cr-cr*aa);\t\t\t\t\t//Weight points 0..1\n\n\n    fragColor = vec4(\t\t\t\t\t\t\t\t\t\t\t\t//Mix\n        vec3(1.0-clamp((gr-weight.y)/(weight.x-weight.y),0.0,1.0)),\n        1.0\n    );\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}