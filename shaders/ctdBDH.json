{
    "Shader": {
        "info": {
            "date": "1701190651",
            "description": "ref: https://en.wikipedia.org/wiki/Hexastix\ninspired by jt https://www.shadertoy.com/view/cl3fWn",
            "flags": 0,
            "hasliked": 0,
            "id": "ctdBDH",
            "likes": 24,
            "name": "hexasticks ",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "// inspired by jt https://www.shadertoy.com/view/cl3fWn\n\n#define rot(a)      mat2(cos(a+vec4(0,11,33,0)))              // rotation\n\n                                                              // --- draw a beam of 6+1 bars\n#define B t = min(t, max( min(  l = length( v = q.yz )                                                      /* central bar   */ \\\n                              , length(l* cos( mod(atan(q.z,q.y)+a/2.,a) -a/2. + vec2(0,11) ) - vec2(1,0) ) /* 6 bars around */ \\\n                             ) - .1                                                                         /* bar radius    */ \\\n                         , abs(q.x) - 3.                                                                    /* bar length    */ \\\n                 )      )\n                                                              // --- turn + draw a tilted beam\n#define b q.yz *= rot(a+a),  A = q,                           /* rotate by pi/3, then push frame */ \\\n          q.z -= .2, q.xy *= rot(a), B,                       /* offset, tilt, then draw beam    */ \\\n          q = A                                               /* pop frame                       */\n\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9., a = 6.283/6., l, i;\n    vec3  R = iResolution, A,\n          D = normalize(vec3(U+U, -4.*R.y) - R),              // ray direction\n          p = vec3(0,0,15), q,                                // marching point along ray \n          C = iMouse.z > 0. ? 8.*iMouse.xyz/R -4.             // camera control\n                          : 3.* cos(.3*iTime + vec3(0,11,0)); // demo mode\n    vec2 v;\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )            // march scene\n        q = p, \n        q.yz *= rot(-C.y), \n        q.xz *= rot(-C.x-1.57),   \n        B,  i=t,                                              // draw a beam of 6+1 in the main axis\n        b,b,b,                                                // 3x turn + draw a tilted beam\n        p += .5*t*D;                                          // step forward = dist to obj    \n    \n    O *= O*O*O*2.;                                            // color scheme\n // if (i==t) O.gb*=0.;                                       // debug: main axis in red\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}