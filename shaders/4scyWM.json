{
    "Shader": {
        "info": {
            "date": "1519074545",
            "description": "mouse control: x = scaling, y = rotation.\n\nAuto-demo: bottom-left corner.",
            "flags": 32,
            "hasliked": 0,
            "id": "4scyWM",
            "likes": 33,
            "name": "IFS - 2",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "ifs",
                "short",
                "classic",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1041
        },
        "renderpass": [
            {
                "code": "// variant from https://shadertoy.com/view/Xl2yDm\n\nvoid mainImage(out vec4 O, vec2 U) { O = texture( iChannel0, U /  iResolution.xy ); }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// variant from https://shadertoy.com/view/Xl2yDm\n\nconst float N = 20., Z = 10.;\n\n#define rot(a)     mat2( cos(a), -sin(a), sin(a), cos(a) )\n#define rnd(U,s)   fract( 1e4* sin( U.x*73.+U.y*7. + s) )\n#define srnd(U,s) ( 2.* rnd(U,s) - 1. )\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2 R = iResolution.xy,\n         U = 1.2* ( u+u - R ) / R.y, \n         M = iMouse.xy / R, z;\n\n    float T = .2*iTime, k=.95;\n    if ( length(iMouse.xy)<10. )      // auto-demo\n        M = .5 + .4 *vec2( cos(T)-.4*sin(2.7*T), sin(1.73*T)-.3*cos(2.3*T) ) / 1.4,\n        k = .98;                      // relaxation duration\n\n    float p, s, s0 = M.x,             // scaling\n          r, t, t0 = 1.-s0,           // translation\n             a, a0 = 3.14*M.y;        // rotation\n    O = k * texture(iChannel0, u/R) * vec4( .96, .98, 1, 0); // relaxation\n    \n    s = s0, t = t0, a = a0;\n    for( float n=0.; n<N; n++ ) {     // --- cumulates N tries per pixel\n        z = U; vec4 C = vec4(1); \n        //z = vec2(rnd(1.1*U,0.),rnd(.7-1.3*U,0.));\n        for( float i=0.; i<Z; i++ ) { // --- iterate up to depth N. should be log(1/R.y)/log(s)\n            r = iTime+i*.93-.11*n;\n          //s = s0, t = t0, a = a0;   // random variations\n          //a += .1* srnd(U,r+.3);\n          //s += .1* srnd(U,r+.3);\n            p = rnd(U, r);            // chose one of these 4 transforms:\n            z =   p < .25 ? s * z* rot( a) + vec2(-t,-t)  \n                : p < .50 ? s * z* rot(-a) + vec2( t,-t)  // try +a\n                : p < .75 ? s * z* rot(-a) + vec2(-t, t)  //\n                :           s * z* rot( a) + vec2( t, t) ;\n            O += 3e-3/N/Z / dot(U-z,U-z) *C;  // draw dot z - prettier\n            C *= vec4(1,.93,.86,0);\n        }\n      //O += 3e-3/N / dot(U-z,U-z);   // draw final dot z - true IFS\n    }     \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}