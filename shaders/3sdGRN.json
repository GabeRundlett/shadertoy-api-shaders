{
    "Shader": {
        "info": {
            "date": "1567961430",
            "description": "( It's really how I do in wood cut ;-) )",
            "flags": 0,
            "hasliked": 0,
            "id": "3sdGRN",
            "likes": 11,
            "name": "steps to carve a chain",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short",
                "woodcut",
                "carving"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 510
        },
        "renderpass": [
            {
                "code": "// Fork of https://shadertoy.com/view/4dtfWr\n\n#define C      max(max(a.x,a.y),a.z)\n#define B(x,r) ( a = abs(q), a.x/=r, C )  // or just max.yz. NB: /r is bad. but cause a cool glow :-)\n#define U(a,b) min(a,b)\n#define S(a,b) max(a,-(b))\n#define M(q,r) ( mod(q+r/2.,r)-r/2. ) \n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v=0.,t2, T = floor(mod(t*.8,10.));\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),       // ray direction\n          p = 30./q, a,q0;                       // marching point along ray \n    O-=O; t = 1e8;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 ) {\n        q = p,\n        q.xz *= R, q.yz *= R,  q0=q,               // rotation\n        t = B(x,5.)-3.;                            // square bar\n        if( T>=1.) {    \n          q.yz = abs(q.yz)-2.,\n          t2 = B(x,15.)-1.1;                               // cut 4 angles\n          if (T==1.) { if (t2<=t) v=t; } else t = S(t,t2); // show in red or do cut\n          if( T>=3.) {\n            q = q0,                                            // cut vert & horiz links\n            t2 = U( (a=abs(abs(M(q,8.))-vec3(0,2,0))-vec3(.5,1,1)-.1, C),\n                    (a=abs(abs(M(q-vec3(4,0,0),8.))-vec3(0,0,2))-vec3(.5,1,1)-.1, C) );\n              if (T==3.) { if (t2<=t) v=t; } else t = S(t,t2); // show in red or do cut\n              if (T>=5.) {\n                                                                  // cut holes\n                t2 = U( (a=abs(abs(M(q,8.))-vec3(0,0,1.5))-vec3(2.5,1,.5)-.1, C), \n                        (a=abs(abs(M(q-vec3(4,0,0),8.))-vec3(0,1.5,0))-vec3(2.5,.5,1)-.1, C) );\n                if (T==5.)  { if (t2<=t) v=t; } else t = S(t,t2); // show in red or do cut\n                if (T>=7.) {                                         // free joints\n                  q.x = M(q.x,2.),\n                  t2 = ( a=abs(q)-vec3(.6,1,1), C);\n                  if (T==7.)  { if (t2<=t) v=t; } else t = S(t,t2);  // show in red or do cut\n                }}}}\n        p += t*D;                             // step forward = dist to obj\n    }\n    if (v==t) O.gb*=0.;                       // red coloring\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}