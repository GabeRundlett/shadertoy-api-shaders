{
    "Shader": {
        "info": {
            "date": "1599667997",
            "description": "mess around with timescale and speed in Buf A",
            "flags": 32,
            "hasliked": 0,
            "id": "wljfzd",
            "likes": 21,
            "name": "wispy cuts",
            "published": 3,
            "tags": [
                "2d",
                "line",
                "feedback",
                "buffer"
            ],
            "usePreview": 0,
            "username": "DJDoomz",
            "viewed": 528
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 o, in vec2 i )\n{\n    //ugly\n    vec2 uv = i/iResolution.xy;\n    float v = 1.3-length(1.4*(uv-.5));\n\n    for(int j = 0; j < 4; j++)\n \t\to[j] = texture(iChannel0,(i+2.*float(j))/iResolution.xy)[j];\n    \n    o*=v;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define timescale 10\n#define speed 0.01\n\nfloat line(vec2 u, vec2 s, vec2 e)\n{\n    //shift coords to 0,0\n    vec2 l1 = u-s;\n    vec2 e2 = e-s;\n    //formula to find nearest projection of u on se\n    vec2 l2 = e2*(( dot(l1,e2) /(dot(e2,e2))) );\n    \n    return 1.-smoothstep(0.001,0.003,length(l1-l2));\n}\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    vec2 uv = i/iResolution.xy;\n    uv += 0.0001*sin(uv.x*80.0+iTime);\n    if(iTime < 1.)\n    {\n        // Normalized pixel coordinates (from 0 to 1)\n    \n\n    \t// Time varying pixel color\n    \tvec3 col = 0.5 + 0.5*cos(iTime+3.0*uv.xyx+vec3(0,2,4));\n\n    \t// Output to screen\n    \to = vec4(col,1.0);\n    }\n    else\n    {\n        o = texture(iChannel0, uv);\n        vec2 start=vec2(0),end=vec2(0);\n        float seed = float(iFrame/timescale);\n        float s = sin(seed), c = cos(seed);\n        //choose a pseudo-rando slice\n        //angle\n        vec2 a = vec2(s,c);\n        //pos (0-1)\n        vec2 p = fract(vec2(s*325.253,c*9258.353));\n        start = 0.25+.5*p;\n        end = p + a;\n        if(iFrame % timescale == 0)\n        {\n            vec3 c = fract(vec3(s*83928.3523,c*9283.353,s*32985.33));\n            o.xyz += c*line(uv, start, end);\n        }\n        else\n        {\n            //shift coords to 0,0\n    \t\tvec2 l1 = uv-start;\n    \t\tvec2 e2 = end-start;\n    \t\t//formula to find nearest projection of u on se\n    \t\tvec2 l2 = start + e2*(( dot(l1,e2) /(dot(e2,e2))) );\n            if(uv.y < l2.y)\n            {\n\t            uv += a*speed;\n\t            o = texture(iChannel0, uv);\n\t        }\n        }\n    }\n    \n    //o = vec4(1)*line(uv, vec2(0.5,0.5), vec2(1,1));\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}