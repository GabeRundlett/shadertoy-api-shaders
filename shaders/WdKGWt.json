{
    "Shader": {
        "info": {
            "date": "1571209397",
            "description": "Inktober, but with shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "WdKGWt",
            "likes": 7,
            "name": "shadetober #15 (legend)",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "shadetober",
                "inktober2019"
            ],
            "usePreview": 0,
            "username": "percentcer",
            "viewed": 515
        },
        "renderpass": [
            {
                "code": "// http://roy.red/slitscan-.html\n\n#define PI 3.14159\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -.5 to .5) w/ aspect ratio adjustment\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    // tar: \"target\", this is really just the origin offset but my variable names are bad\n    // d: distance to origin\n    // ang: angle about the origin normalized to -1.,1.\n    vec2 tar = vec2(sin(iTime * .2) * .2, sin(iTime * .1) * .1);\n    float d = length(uv - tar);\n    float ang = atan(uv.y, uv.x) / PI;\n\n    // fix the atan discontinuity (we normalize ang to -1.,1. in previous step)\n    ang *= 1. - step(1., fwidth(ang));\n    \n    // index into the texture\n    // u: inverse of distance to origin (fake perspective)\n    // v: angle about the origin\n    vec3 col = texture(iChannel0, vec2(1. / d + fract(iTime * .4), ang)).rgr;\n    \n    // light fakery\n    float powscale = (sin(iTime) * .5) + 1.1;\n    col *= 1. / pow(d, powscale);\n    col *= 1. - d * .5;\n    col.r *= col.r;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}