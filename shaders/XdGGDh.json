{
    "Shader": {
        "info": {
            "date": "1454125996",
            "description": "MandelSpiral",
            "flags": 0,
            "hasliked": 0,
            "id": "XdGGDh",
            "likes": 10,
            "name": "Spiral Mapping",
            "published": 3,
            "tags": [
                "mandelspiral"
            ],
            "usePreview": 0,
            "username": "vox",
            "viewed": 713
        },
        "renderpass": [
            {
                "code": "\n#define PI 3.14159265359\n#define E 2.7182818284\n\nfloat saw(float x)\n{\n    return acos(cos(x))/3.14;\n}\nvec2 saw(vec2 x)\n{\n    return acos(cos(x))/3.14;\n}\n\nvec2 spiral(vec2 uv)\n{\n    float turns = 5.0;\n    float r = pow(log(length(uv)+1.), 1.175);\n    float theta = atan(uv.y, uv.x)*turns-r*PI;\n    return vec2(saw(r*PI+iTime), saw(theta+iTime*1.1));\n}\n\nfloat draw(vec2 p)\n{\n    \n    // animation\t\n\tfloat tz = 0.5 - 0.5*cos(0.225*iTime);\n    float zoo = pow( 0.5, 13.0*tz );\n\tvec2 c = vec2(-0.05,.6805) + p*zoo;\n\n    // iterate\n    vec2 z  = vec2(0.0);\n    float m2 = 0.0;\n    vec2 dz = vec2(0.0);\n    for( int i=0; i<256; i++ )\n    {\n        if( m2>1024.0 ) continue;\n\n\t\t// Z' -> 2Â·ZÂ·Z' + 1\n        dz = 2.0*vec2(z.x*dz.x-z.y*dz.y, z.x*dz.y + z.y*dz.x) + vec2(1.0,0.0);\n\t\t\t\n        // Z -> ZÂ² + c\t\t\t\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n\t\t\t\n        m2 = dot(z,z);\n    }\n\n    // distance\t\n\t// d(c) = |Z|Â·log|Z|/|Z'|\n\tfloat d = 0.5*sqrt(dot(z,z)/dot(dz,dz))*log(dot(z,z));\n\n\t\n    // do some soft coloring based on distance\n\td = clamp( 8.0*d/zoo, 0.0, 1.0 );\n\td = pow( d, 0.25 );\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float scale = 2.0*PI;\n    uv *= scale;\n    uv -= scale/2.0;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv += vec2(cos(iTime*.234), sin(iTime*.345))*1.0;\n    uv = spiral(uv*scale);\n    uv = spiral(uv*scale);\n   fragColor = vec4(draw(saw(uv*1.0*PI)*2.0-1.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}