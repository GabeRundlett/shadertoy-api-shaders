{
    "Shader": {
        "info": {
            "date": "1667336989",
            "description": "Wait 10 seconds to see another variation !",
            "flags": 0,
            "hasliked": 0,
            "id": "ds2GRW",
            "likes": 48,
            "name": "Fractal doodling",
            "published": 3,
            "tags": [
                "fractal",
                "volumetric",
                "glow"
            ],
            "usePreview": 0,
            "username": "XT95",
            "viewed": 604
        },
        "renderpass": [
            {
                "code": "// Heavely inspired by \"fractal xxx gaz\" -> https://www.shadertoy.com/user/gaz/\nmat2 rot(float v) {\n    float a = cos(v);\n    float b = sin(v);\n    return mat2(a,b,-b,a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 rd = normalize(vec3(uv*2.-1., 2.));\n    vec3 ro = vec3(0.,0.,-.5);\n    float t = 0.;\n    \n    vec3 seed = hash3( uint(iTime/10.) + 3u );\n    vec3 seed2 = hash3( uint(iTime/10.) );\n    float time = mod(iTime, 10.);\n    float fade = smoothstep(0.,1., time) * smoothstep(10.,9.5, time);\n    \n    \n    vec3 col = vec3(0.);\n    for(int i=0; i<80; i++) {\n        vec3 p = ro + rd * t;\n        p.xz = rot(iTime*0.02+0.3) * p.xz;\n        p.xy = rot(-iTime*0.03-.2) * p.xy;\n        float s = 2., r2;\n        for(int j=0; j<8; j++) {\n            r2 = (fade*1.7)/min(dot(p,p),1.6);\n            p = abs(p*r2) - (seed+.1)*5.;\n            s *= r2;\n        }\n\n        float d = length(p.xy)/s;\n        t += d*.5;\n        col += vec3(cos(vec3(1.,2.,3.)-iTime*1.5*(seed2.g*2.-1.) + log(s))*.5+.5) * 0.03 * exp(-.5*d*float(i*i));\n    }\n    \n    fragColor = vec4(col * fade,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// From Iq https://www.shadertoy.com/view/llGSzw\nvec3 hash3( uint n ) \n{\n    // integer hash copied from Hugo Elias\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    uvec3 k = n * uvec3(n,n*16807U,n*48271U);\n    return vec3( k & uvec3(0x7fffffffU))/float(0x7fffffff);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}