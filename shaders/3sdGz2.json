{
    "Shader": {
        "info": {
            "date": "1568886694",
            "description": "horizontal Section",
            "flags": 0,
            "hasliked": 0,
            "id": "3sdGz2",
            "likes": 2,
            "name": "horizontal Section",
            "published": 3,
            "tags": [
                "horizontalsection"
            ],
            "usePreview": 0,
            "username": "liuhaidong",
            "viewed": 330
        },
        "renderpass": [
            {
                "code": "\nvec4 getFromColor (vec2 uv){\n    \n    vec4 color = texture(iChannel0,uv);\n    return color;\n}\n\nvec4 getToColor (vec2 uv){\n    \n    vec4 color = texture(iChannel1,uv);\n    return color;\n}\n\nvec4 transition (vec2 uv) {\n    \n    float pro = sin(iTime);\n    // pro = 0.7;\n    vec4 color = vec4(0.0,0.0,0.0,1.0);\n    float offsetY = 1.0/3.0;\n    if(uv.y > offsetY && uv.y < offsetY *2.0)\n    {\n        \n        if(uv.x>(1.0 - pro))\n        {\n            \n            color = getFromColor(vec2(uv.x - 1.0 + pro,uv.y));\n        }\n        else\n        {\n            color = getToColor(vec2(uv.x + pro,uv.y));\n        }\n    }\n    else\n    {\n        if(uv.x<pro)\n        {\n            color = getFromColor(vec2(uv.x-pro + 1.0,uv.y));\n            \n        }\n        else\n        {\n            color = getToColor(vec2(uv.x-pro,uv.y));\n        }\n    }\n    \n    return color;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Output to screen\n    fragColor = transition(uv);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}