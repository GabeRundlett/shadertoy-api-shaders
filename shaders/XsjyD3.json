{
    "Shader": {
        "info": {
            "date": "1494117491",
            "description": "left wavelength  = c4+acos(-1.)*.5;\nrightwavelength = c4-acos(-1.)*.5;\n\nso the 2 channels shift in and out of phase pi*a times per second?",
            "flags": 8,
            "hasliked": 0,
            "id": "XsjyD3",
            "likes": 6,
            "name": "stereo C4 with Pi=differential",
            "published": 3,
            "tags": [
                "silly",
                "audio",
                "phase"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 615
        },
        "renderpass": [
            {
                "code": "//pi=3.14\n#define pi acos(-1.)\n//440.= C4 middle c\n#define frequency 440.\n//speed of time is variable here: 1.=normal speed of time, -1=backwards time.\n#define time 1.\n//#define time (1./pi)\n\n//middle c interval, with wavelength modified by +m\n#define c4(m) sin(pi*2.*(frequency+m)*p)\n\nfloat left(float p){\n  return c4( pi*.5);\n}\nfloat right(float p){\n  return c4(-pi*.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    p.y-=.5;\n    p.x+=iTime*time*440.*2.*pi;\n    p.x*=iResolution.x/iResolution.y;\n    p.y*=4.;\n    p.x/=113.,\n    \n    p=vec2(left(p.x)-p.y,right(p.x)-p.y);\n    p=mix(vec2(.1),vec2(0),abs(p));\n    //p=fract(p); \n    p=sqrt(p);\n\tfragColor = vec4(p.x,0,p.y,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//pi=3.14\n#define pi acos(-1.)\n//440.= C4 middle c\n#define frequency 440.\n//speed of time is variable here: 1.=normal speed of time, -1=backwards time.\n#define time 1.\n//#define time (1./pi)\n\n//middle c interval, with wavelength modified by +m\n#define c4(m) sin(time*pi*2.*(frequency+m)*p)\n\nfloat left(float p){\n  return c4( pi*.5);\n}\nfloat right(float p){\n  return c4(-pi*.5);\n}\n\n\nvec2 mainSound( in int samp,float p )\n{\n    return vec2(left(p),right(p));\n}\n\n//multiplying by this makes it fade out over time.\n#define falloff (exp(-3.0*p))",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}