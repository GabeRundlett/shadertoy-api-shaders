{
    "Shader": {
        "info": {
            "date": "1626281460",
            "description": "zey r cOmInG fOr uS",
            "flags": 64,
            "hasliked": 0,
            "id": "flS3D3",
            "likes": 14,
            "name": "invaderz ufos",
            "published": 3,
            "tags": [
                "invaders",
                "ufo",
                "invaderz",
                "zerfef"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 404
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a,0.,1.)\nmat2 r2d(float a){float ca = cos(a),sa=sin(a);return mat2(ca,-sa,sa,ca);}\n#define PI 3.14159265\n\nfloat _sqr(vec2 p, vec2 s)\n{\n    vec2 l = abs(p)-s;\n    return max(l.x, l.y);\n}\nfloat _cir(vec2 p, float r)\n{\nreturn length(p)-r;\n}\n\nfloat _bbox(vec3 p, vec3 s)\n{\n  vec3 l = abs(p)-s;\n//  l = abs(l)-s*.9;\n  return max(l.x,max(l.y,l.z));\n}\n\nvec2 _min(vec2 a, vec2 b)\n{\n  if(a.x<b.x)\n  return a;\n  return b;\n}\n\nfloat _sph(vec3 p, float r)\n{\n  return length(p)-r;\n}\n\nvec4 ovnip[3];\n\nfloat ovni(vec3 p)\n{\n  float acc = 1000.;\n  acc = min(acc, max(length(p)-2.,p.y+1.5));\n\n  acc= min(acc,max(length(p.xz)-1.3,abs(p.y+1.1)-.4));\n\n  vec3 pc = p-vec3(0.,2.9,0.);\n  acc = min(acc, max(length(pc)-4.,pc.y+3.5));\n\n // float a = atan(p.x,p.z);\n\n  float repa = 2.*PI/3.;\n\n  for(int i = 0;i<3;++i)\n  {\n    float a = float(i)*repa+iTime;\n    float r = 1.2;\n    vec3 pos = p+vec3(sin(a)*r,0.55,cos(a)*r);\n    acc = min(acc, _sph(pos,.25));\n  }\n  acc = min(acc, _sph(p-vec3(0.,-.6,0.),.5));\n  return acc;\n}\n\nvec2 map(vec3 p)\n{\n  vec2 acc = vec2(1000.,-1.);\n\n  for (int i = 0;i<3;++i)\n  {\n    float a = ovnip[i].w;\n    vec3 pos = p-ovnip[i].xyz;\n    vec3 opos = pos;\n    pos.xy*=r2d(a);\n    acc = _min(acc, vec2(ovni(pos),float(i)));\n\n    vec3 dest = vec3(0.,-2.,0.);\n    vec3 plaser = mix(opos, dest, mod(iTime*2.+float(i)*.33, 1.)/1.);\n    plaser.yz *= r2d(-.5);\n   plaser.xz *= r2d(-a*.5);\n    acc= _min(acc, vec2(_sph(plaser*vec3(1.,1.,.1),.1), 12.));\n  }\n\n  acc = _min(acc, vec2(_sph(p-vec3(0.,19.,8.), 15.5), 5.));\n  return acc;\n}\nvec3 gradient(float f)\n{\n    vec3 cols[3];\n    \n    cols[0] = vec3(0.169,0.086,0.816);\n    cols[1] = vec3(0.835,0.216,0.843);\n    cols[2] = vec3(1.,1.,1.);\n    \n    float cnt = 2.;\n    float cur = f*cnt;\n    float curIdx = floor(cur);\n    return mix(cols[int(curIdx)], cols[int(min(curIdx+1., cnt))], sat(fract(cur)));\n}\nvec3 accCol;\nvec3 trace(vec3 ro, vec3 rd, int steps)\n{\n  vec3 p = ro;\n  for (int i = 0; i<steps;++i)\n  {\n    vec2 res = map(p);\n    if (res.x<0.01)\n      return vec3(res.x,distance(p,ro),res.y);\n      if (res.y > 10.)\n          accCol += vec3(0.2,1.,0.2)*pow(1.-sat(res.x/0.2),5.);\n      else if (res.y != 5.)\n          accCol += (1.-sat(p.z*.045))*.1*gradient(sat(p.z*.05))*pow(1.-sat(res.x/2.7),5.);\n    p+= rd*res.x;\n  }\n  return vec3(-1.);\n}\n\nvec3 getCam(vec3 rd, vec2 uv)\n{\n  float fov = .75;\n  vec3 r = normalize(cross(rd, vec3(0.,1.,0.)));\n  vec3 u = normalize(cross(rd,r));\n  return normalize(rd+fov*(r*uv.x+u*uv.y));\n}\n\nvec3 getNorm(vec3 p, float d)\n{\n  vec2 e = vec2(0.01,0.);\n  return normalize(vec3(d)-vec3(map(p-e.xyy).x,map(p-e.yxy).x,map(p-e.yyx).x));\n}\n\nvoid setup()\n{\n  ovnip[0]= vec4(-2.+cos(iTime*2.)*.2,sin(iTime*2.)*.25-.5,2.,.3);\n  ovnip[1]= vec4(3.,sin(iTime*2.+1.)*.25,10.,-.3);\n  ovnip[2]= vec4(0.,sin(iTime*2.+2.)*.25,20.,0.);\n}\n\nfloat _person(vec2 uv, float off)\n{\n    float shape = _sqr(uv, vec2(.03,.07));\n    shape = min(shape, _cir(uv-vec2(0.,.1), .03));\n    shape = min(shape, _sqr(uv-vec2(0.02,-.05), vec2(.01,0.05+0.05*(sin(iTime*16.+off)*.5+.5))));\n    shape = min(shape, _sqr(uv-vec2(-0.02,-.05), vec2(.01,0.05+0.05*(sin((iTime)*16.+3.14+off)*.5+.5))));\n    float th = 0.01;\n    uv -= vec2(0.,-.03);\n    uv *= r2d(-sign(uv.x)*.5);\n    shape = min(shape, max(abs(uv.y-.05-sat(abs(uv.x*2.))*sin(abs(uv.x*50.)-iTime*5.+off)*.02)-th, abs(uv.x)-.2));\n    return shape;\n}\n\nvec3 drawPeople(vec3 col, vec2 uv)\n{\n    float shapea = _person((uv*r2d(.25)*.5-vec2(0.2,-.1))*r2d(sin(iTime*2.+1.)*.1),0.);\n    float shapeb = _person((uv*r2d(-.25)*1.5-vec2(-0.3,-.6))*r2d(sin(iTime)*.2),1.);\n\n    float shape = min(shapea, shapeb);\n    col = mix(col, vec3(0.), 1.-sat(shapea*400.));\n    col = mix(col, col*.25, 1.-sat(shapeb*400.));\n    return col;\n}\n\nfloat letter(vec2 uv, int idx, int idy)\n{\n    uv *= .25;\n    float width = 1./16.;\n    float height = 1./16.;\n    float x = float(idx);\n    float y = float(idy);\n    vec2 topl = vec2(x*width, y*height);\n    vec2 coords = uv+vec2(width, height)*.5;//+topl;\n    coords = clamp(coords, vec2(0.), vec2(width, height));\n    coords -= topl;\n    return texture(iChannel1, coords).x;\n}\n\nvec3 drawText(vec2 uv)\n{\n    vec3 col = vec3(0.);\n    uv -= vec2(-.5,.3);\n    uv *= r2d(-.5);\n    uv.y *= 1.-sat(abs(uv.x))+sin(uv.x*7.+iTime*2.)*.1;\n    uv.x += .4;\n    vec2 off = vec2(0.12, 0.);\n    col = mix(col, vec3(1.), letter(uv*r2d(.1),-9,5));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv*r2d(-.2),-14,5));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv*r2d(.1),10,6));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv*r2d(-.1),-1,5));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv*r2d(-.3),-4,5));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv,-5,5));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv*r2d(-.1),14,6));\n    uv -= off;\n    col = mix(col, vec3(1.), letter(uv*.75*r2d(.25),6,6));\n\n    return col;\n}\n\nvec3 rdr(vec2 uv)\n{\n  vec3 col = vec3(0.);\n  \n  vec2 skyp = uv-vec2(0.,-1.75);\n  float a = atan(skyp.y,skyp.x)+iTime*.25;\n  vec3 sk = mix(vec3(0.863,0.486,0.196), vec3(0.875,0.125,0.424), sat(length(.5*uv-vec2(0.,-.5))));\n  col = mix(vec3(0.286,0.467,0.553), sk, pow(sat(texture(iChannel0, vec2(length(skyp)*.5,a*.1)*.5).x),.5));\n  col *= 1.-sat(length(uv)-.5);\n  col = pow(col, vec3(.75));\ncol += vec3(0.863,0.486,0.196)*(1.-sat(length(uv-vec2(0.,-.5))));\n\nfloat offh = 1.2;\n  vec3 ro = vec3(0.,1.5+offh,-7.);\n  vec3 ta = vec3(0.,-.15+offh,0.);\n  vec3 rd = normalize(ta-ro);\n\n  rd = getCam(rd,uv);\n  setup();\n  accCol = vec3(0.);\n  vec3 res = trace(ro,rd,128);\n  if (res.y>0.)\n  {\n    vec3 p = ro+rd*res.y;\n    vec3 n = getNorm(p,res.x);\n    col = n*.5+.5;\n    vec3 lpos = vec3(0.,5.,25.);\n    vec3 ldir = lpos-p;\n    vec3 h = normalize(rd+ldir);\n    if (res.z < 3.5)\n    {\n        vec3 pr = p-ovnip[int(res.z)].xyz;\n        col = vec3(0.349,0.235,0.447)*.25+vec3(0.722,0.667,0.875)*pow(texture(iChannel0, 3.*vec2(atan(pr.x, pr.z)*.1, 2.*length(pr))).x,2.);\n        float ndoth = sat(dot(n,h));\n       col *= sat(.5+ndoth);\n       col += vec3(0.863,0.486,0.196)*ndoth;\n\n    }   \n    if (res.z == 5.)\n    {\n        float rep = .1;\n            col = mix(col, vec3(1.),1.-sat(max(abs(uv.x)-0.08*pow(sat(-uv.y),2.),sin(uv.y*20.-iTime*10.))*400.));\n    }\n  }\n  col = drawPeople(col, uv-vec2(0.,.1));\n  col += accCol;\n  vec3 bucol = col;\n  col *= 1.-sat(drawText(uv*.95));\n  col += bucol.zxy*drawText(uv);\n  return col;\n}\n\nvec3 mixcol(vec3 col, vec2 uv)\n{\n    vec3 rgb = col;\n    \n    rgb.xy *= r2d(sin(iTime));\n    //rgb.yz *= r2d(-iTime*.5);\n    rgb = sat(rgb);\n    \n    return mix(col, rgb, sat(.5+.5*sin(uv.y*5.-iTime*3.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy-vec2(.5)*iResolution.xy) / iResolution.xx;\n  uv *= length(uv+vec2(sin(iTime), cos(iTime))*.2)+.8;\n  uv *= mix(1.,1.5,sat(sin(iTime*.5)*.5+.5));\n  vec3 col = rdr(uv*2.);\n  col = mixcol(col, uv);\n  fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "musicstream",
                        "id": 27702,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/lfttrax/helena-hauff-b2b-lft-october-6-7pm-9pm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}