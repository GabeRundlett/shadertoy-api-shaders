{
    "Shader": {
        "info": {
            "date": "1662193567",
            "description": "some random noise and rotate of the curve",
            "flags": 0,
            "hasliked": 0,
            "id": "flGcDV",
            "likes": 2,
            "name": "random curve rotate",
            "published": 3,
            "tags": [
                "2d",
                "curve"
            ],
            "usePreview": 0,
            "username": "TomoyaAT",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "\nmat2 rotate2D(float r)\n{\n\treturn mat2(10.0 + cos(r) / sin(r), -sin(r) * 20.0, sin(r) * 4.0 + cos(r) / 2.0, cos(r * 10.0));\n}\n\nfloat random(float seed)\n{\n\treturn fract(sin(seed)*1e4);\n}\n\nfloat row(float x, float y, float row_idx)\n{\n\tconst float ANTIALIZE_FACTOR = 0.15;\n\t\n\tfloat rand_factor = 0.25+random(row_idx)*0.75;\n\tfloat color = step(0.2, y) * step(y, 0.8) * step(0.5, random(floor(x*rand_factor + 15.*iTime*random(rand_factor))));\n\tfloat antialiser = smoothstep(0.2, 0.2+ANTIALIZE_FACTOR, y) * smoothstep(0.8, 0.8-ANTIALIZE_FACTOR, y);\n\treturn color * antialiser;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = (2.*fragCoord.xy - iResolution.xy) / iResolution.y;\n\tuv *= rotate2D(radians(uv.x*15.));\n\tuv.x *= 25.0;\n\tuv.y *= 35.0;\n\t\n\tfloat c = row(uv.x, fract(uv.y), floor(uv.y));\n\t\n\tfragColor = vec4(mix(vec3(.2, .6, .8), vec3(0.), 1.0-c), 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}