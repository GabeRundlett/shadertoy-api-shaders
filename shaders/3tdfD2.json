{
    "Shader": {
        "info": {
            "date": "1613507942",
            "description": "React better on Bonzo, especially the fft part",
            "flags": 64,
            "hasliked": 0,
            "id": "3tdfD2",
            "likes": 10,
            "name": "大龙猫 - Vortex",
            "published": 3,
            "tags": [
                "tunnel",
                "music",
                "rainbow"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 580
        },
        "renderpass": [
            {
                "code": "\n#define PI 3.141592\nmat2 rot(float a){\n  float c=cos(a),s=sin(a);\n    return mat2(c,-s,s,c);\n  }\n  \n   \n    \nfloat stargate(vec2 uv,float offset)\n{\n\n  vec2 uuv = uv;\n  uuv*=rot(offset*23.);\n  float c = sin(atan(uuv.x,uuv.y))*.5+.5;\n\tfloat f = texture(iChannel0,vec2(abs(floor(20.*c)/20.))).r*exp(1.+c)*.10;\n  \n  float d = abs(length(uv)-(.4+f*1.5))-.04;\n\n   return d;  \n  }\n  \n  vec3 pal(float t){\n    return +vec3(.5,.7,.5)+vec3(.5,.7,.5)*cos(2.*PI*(vec3(1.,10.1,1.)*t+vec3(.3,.0,.7)));\n    \n    }\n    \n    float grid(vec2 uv){\n      return abs(fract(uv.x*10.))<.02 || abs(fract(uv.y*10.))<.02  ? 1.: 0.;\n      }\n      \n      \n      \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n float tt = texture(iChannel0,vec2(.3,uv.y)).r*.1;\n\n  float d = 1.;      \n  float lim = 10.;\n  vec3 col  = vec3(0.);\n  for(float i=0.;i<=lim;++i){\n         float it = i/lim;\n       \n          float pit = fract(it+iTime*.1);\n           float qq = tt*25. > pit? tt*50.0:1.;\n          it = mix(50.,.001,pit);\n    \n    vec2 coord = (uv-.05*vec2(it*tt*sin(iTime),it*tt *cos(iTime)))*it;\n    float g = pit*grid(uv*it*rot(pit*2.)) * smoothstep(.01,.021,(length(coord)-.55));\n        d = .1/abs(.01+stargate(coord,i/lim));\n        d = (d*3.*g)+d;    \n    col += mix(vec3(.1),pal((i/lim)+tt)*pit,d*qq)/lim;\n    }\n   \n    \n    \n\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 25436,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/h0ffman/hoffman-pingit-1984-soundtrack"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}