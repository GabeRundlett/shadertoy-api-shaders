{
    "Shader": {
        "info": {
            "date": "1543564048",
            "description": "rose curve paint~\njust for fun~hhh\nyou can use x-coordinate to control size~",
            "flags": 0,
            "hasliked": 0,
            "id": "MtVBRc",
            "likes": 7,
            "name": "rose curve",
            "published": 3,
            "tags": [
                "2d",
                "curve",
                "rose"
            ],
            "usePreview": 0,
            "username": "WingStone",
            "viewed": 559
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n\n    // atan(uv.y, uv.x) have some artifact with fwidth\n    float theta = uv.x > 0.0 ? atan(uv.y/uv.x) : atan(uv.y/uv.x) + PI;\n    \n    float i = 5.0, j = 6.0;\n\n    float n = cos(0.003*i*iTime)*4.0+4.0;\n    float d = sin(0.003*j*iTime)*4.0+4.0;\n    \n    float c = abs(iMouse.x/iResolution.x*2.0 - 1.0);\t\t//using mouse to control \"c\"\n    \n    float r = 0.0;\n    \n    float factor = 0.0;\n    for(int i=0; i < 16; i++)\n    {\n        r = (sin(n/d*theta))*0.5 + c;\t\t\t//rose curve function\n        float tmp = abs(length(uv) - r);\n        factor += 1.0 - smoothstep(-1.5,1.5, tmp / fwidth(length(uv) - r));;\n        theta += PI*2.0;\n    }\n    \n    fragColor = vec4( 1. - factor );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}