{
    "Shader": {
        "info": {
            "date": "1543192913",
            "description": "Trail effect for cursor similar to osu! (but better) ♥\n(Click and drag cursor)",
            "flags": 32,
            "hasliked": 0,
            "id": "XtVBRK",
            "likes": 8,
            "name": "Osu Cursor trail",
            "published": 3,
            "tags": [
                "buffer",
                "trail",
                "cursor",
                "osu"
            ],
            "usePreview": 0,
            "username": "Sunpy",
            "viewed": 1661
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a){\n    return mat2(cos(a),-sin(a),\n                sin(a),cos(a));\n}\n\nvec2 cub_(float t,vec2 a,vec2 b){\n    float ct=1.-t;\n    return 3.*ct*ct*t*a+3.*ct*t*t*b+t*t*t;\n}\n\nfloat cub(vec2 a,vec2 b,float x){\n    vec2 it=vec2(0.,1.);\n    for (int i=0;i<8;i++) {\n        float pos=(it.x+it.y)/2.;\n        vec2 r=cub_(pos,a,b);\n        if (r.x>x){\n            it.y=pos;\n        }else{\n            it.x=pos;\n        }\n    }\n    return cub_((it.x+it.y)/2.,a,b).y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xx;\n    vec2 cursor = iMouse.xy/iResolution.xx;\n    \n    \n    vec3 col = vec3(0.);\n    \n    vec3 trail = texture(iChannel0, fragCoord / iResolution.xy).rgb;\n    trail *= 10.;\n    \n    col += step(distance(uv, cursor), .02);\n    col += trail;\n    \n    col = smoothstep(.6, .9, col);\n    \n    vec2 cursorTextureUV = (uv - cursor) * 26.;\n    cursorTextureUV *= rot(iTime * .4);\n    cursorTextureUV += vec2(.38,.6); // sssssssh vec2(.5)\n    \n    // ツ\n    float x = cursorTextureUV.x;\n    float y = 1. - cursorTextureUV.y;\n    \n    vec3 cursorTexture = vec3(0.);\n    cursorTexture += 1.\n        *step(.135+.015*(x-.7)/.07,y)\n        *step(y,.8+.05*(x-.3)/.04)\n        *step(.7-.4*cub(vec2(.52,.17),vec2(.85,.43),(y-.135)/.665),x)\n        *step(x,.77-.43*cub(vec2(.52,.17),vec2(.85,.43),(y-.15)/.7))\n        ;\n    \n    for (int i = 0; i < 2; i++) {\n        cursorTexture += 1.\n            *step(.14-.02*(x-.38)/.06,y)\n            *step(y,.38-.02*(x-.46)/.06)\n            *step(.38+.08*cub(vec2(.28,.37),vec2(.61,.69),(y-.14)/.24),x)\n            *step(x,.44+.08*cub(vec2(.28,.37),vec2(.61,.69),(y-.12)/.24))\n            ;\n        x += .2;\n        y -= .05;\n    }\n    \n    col -= cursorTexture;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xx;\n    vec4 _prev = texture(iChannel0, fragCoord / iResolution.xy);\n    \n    vec2 cur = iMouse.xy;\n    \n    _prev.xyz *= 0.9;\n\n    vec2 prev = vec2(float((int(_prev.w) >> 16) & 0xffff) / 8., float(int(_prev.w) & 0xffff) / 8.);\n    vec2 dc = cur-prev;\n    float l=length(dc);\n    for (float i =l;i>=0.;i--) {\n        float a = clamp(mix(1., -50., distance(uv, (prev+dc*i/l)/iResolution.xx)), 0., 1.);\n        _prev.xyz += a * hsv2rgb(vec3(iTime, .97631, 1.));\n    }\n\n    float write = float((int(cur.y * 8.) & 0xffff) | ((int(cur.x * 8.) & 0xffff) << 16));\n    \n    fragColor = vec4(_prev.xyz, write);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}