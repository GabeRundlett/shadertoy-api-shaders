{
    "Shader": {
        "info": {
            "date": "1685814461",
            "description": "More truchet weaving.",
            "flags": 0,
            "hasliked": 0,
            "id": "dt3SDf",
            "likes": 24,
            "name": "Dark Weave",
            "published": 3,
            "tags": [
                "truchet",
                "dark",
                "weave"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 250
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926536\n#define EPS 0.001\n\n// https://www.shadertoy.com/view/4djSRW\nfloat Hash21(in vec2 p) {\n    vec3 p3 = fract(p.xyx * 0.1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid doTruchet(in vec2 uv, out vec2 cid, out vec2 cuv) {\n    cid = floor(uv);\n    cuv = fract(uv) - 0.5;\n    if (Hash21(cid) < 0.5) cuv.x = -cuv.x;\n    cuv -= cuv.x < -cuv.y ? -0.5 : 0.5;\n}\n\nfloat map(in vec3 p) {\n    vec2 cid1, cuv1;\n    doTruchet(p.xz, cid1, cuv1);\n    float offs = 0.1 * sin(PI * (cuv1.x + cuv1.y)) * sin(PI * (cuv1.x - cuv1.y));\n    float tru1 = length(vec2(length(cuv1) - 0.5, p.y + offs)) - 0.1;\n\n    vec2 cid2, cuv2;\n    doTruchet(p.xz - 10.5, cid2, cuv2);\n    float tru2 = length(vec2(length(cuv2) - 0.5, p.y - offs)) - 0.1;\n\n    return min(tru1, tru2);\n}\n\nvec3 getNormal(in vec3 p, in float d0) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)),\n        map(p + vec3(0.0, EPS, 0.0)),\n        map(p + vec3(0.0, 0.0, EPS))\n    ) - d0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 3.0;\n    vec3 color = vec3(0.01);\n\n    vec3 ro = vec3(cos(iTime * 0.25), 3.0, 3.0 * sin(iTime * 0.25));\n    vec3 fd = -normalize(ro);\n    vec3 rt = normalize(vec3(-ro.z, 0.0, ro.x));\n    vec3 up = cross(fd, rt);\n    vec3 rd = normalize(rt * uv.x + up * uv.y + fd * 4.0);\n    ro.x += iTime;\n\n    float t = 0.0, d;\n    bool hit = false;\n    vec3 p;\n    for (int i = 0; i < 100; i++) {\n        p = ro + rd * t;\n        d = map(p);\n        if (abs(d) < EPS) {\n            hit = true;\n            break;\n        }\n\n        if (t > 25.0) break;\n        t += d;\n    }\n\n    if (hit) {\n        vec3 normal = getNormal(p, d);\n        color = 0.25 * pow(texture(iChannel0, reflect(rd, normal)).rgb, vec3(16.0));\n    }\n\n    fragColor = vec4(sqrt(color), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}