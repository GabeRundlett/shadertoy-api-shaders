{
    "Shader": {
        "info": {
            "date": "1675798958",
            "description": "Wondering how this would render in VR...",
            "flags": 0,
            "hasliked": 0,
            "id": "clBXzw",
            "likes": 29,
            "name": "Energetic overflow",
            "published": 3,
            "tags": [
                "raymarching",
                "tunnel",
                "animated",
                "psychedelic",
                "animation",
                "glow",
                "loop",
                "code",
                "infinite",
                "neon",
                "short",
                "golf",
                "golfing",
                "perfect"
            ],
            "usePreview": 0,
            "username": "kishimisu",
            "viewed": 748
        },
        "renderpass": [
            {
                "code": "/* \"Energetic Overflow\" by @kishimisu (2023) - https://www.shadertoy.com/view/clBXzw\n   [472 chars without anti-aliasing]\n*/\n\n#define AA 1. // Antialiasing level\n\n#define e(p,r) mod(p, r) - r/2.\n\nvoid mainImage(out vec4 O, vec2 F) { \n_AA_START\n    vec2 R = iResolution.xy, u = F+F+o - R;\n    vec3 p, g;\n    float i = 0., d = i, t=iTime*.5, s, r;\n    \n    for (g *= i; i++ < 60.;) \n        p = abs(d*normalize(vec3(u/R.y, 1))),\n        p.z += t*12.73,\n        p.xy *= mat2(cos(d*.03+vec4(0,33,11,0))),\n        r = .5 + sin(t) * (sin(p.z*2.)*.1 + cos(p.z*4.)*.05),\n        d += min(s = min(\n            length(e(p, vec3(5,5,20))) - r, \n            length(vec2(length(p.xy)-8., e(p.z, 20.)))-.25), \n            length(e(p.xy, 5.)) - r),\n        g += 1. / (1. + pow(abs(s)*40., 1.3));\n    \n    T += (1.5 * (cos(d + t + vec3(0,1,2)) + 1.) * g + g) / exp(d*.01);\n_AA_END \n}\n\n/* [472 chars]:\n\n#define e(p,r) mod(p, r) - r/2.\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy; u += u - R;\n    vec3 p, g;\n    float i = 0., d = i, t=iTime*.5, s, r;\n    \n    for (g *= i; i++ < 60.; \n        p = abs(d*normalize(vec3(u/R.y, 1))),\n        p.z += t*12.73,\n        p.xy *= mat2(cos(d*.03+vec4(0,33,11,0))),\n        r = .5 + sin(t) * (sin(p.z*2.)*.1 + cos(p.z*4.)*.05),\n        d += min(s = min(\n            length(e(p, vec3(5,5,20))) - r, \n            length(vec2(length(p.xy)-8., e(p.z, 20.)))-.25), \n            length(e(p.xy, 5.)) - r),\n        g += 1. / (1. + pow(abs(s)*40., 1.3)))\n    \n    O.rgb = (1.5 * (cos(d + t + vec3(0,1,2)) + 1.) * g + g) / exp(d*.01);\n}*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/* Anti-aliasing code */\n\n#define _AA_START                  \\\nvec3 T;                            \\\nfor (float j = 0.; j < AA; j++)    \\\nfor (float k = 0.; k < AA; k++) {  \\\nvec2 o = vec2(j, k) / AA - 0.5;\n\n#define _AA_END                    \\\n} T /= AA*AA;                      \\\nO = vec4(T, 1);",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}