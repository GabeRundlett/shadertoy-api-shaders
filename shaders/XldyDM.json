{
    "Shader": {
        "info": {
            "date": "1532877613",
            "description": "glue a simplified version of otaviogood runes + parameterized spiral.\n( mouse changes glyph seeds )",
            "flags": 0,
            "hasliked": 0,
            "id": "XldyDM",
            "likes": 7,
            "name": "runic spiral",
            "published": 3,
            "tags": [
                "tuto",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 596
        },
        "renderpass": [
            {
                "code": "float BUMP = 1.;\n\n// Glyphs simplified from \"runes\" by otaviogood. https://shadertoy.com/view/MsXSRn\n// Spiral from from https://shadertoy.com/view/XdKfz3\n\nvec2 R;\n#define S(d,r) smoothstep( r, 0., d)      // antialiased draw. r >= 1.5\n\nfloat line(vec2 p, vec2 a,vec2 b) { // from https://www.shadertoy.com/view/4dcfW8\n    p -= a, b -= a;\n\tfloat h = clamp(dot(p, b) / dot(b, b), 0., 1.);   // proj coord on line\n\treturn length(p - b * h);                         // dist to segment\n}\n\n\n// makes a rune in the 0..1 uv space. Seed is which rune to draw.\nfloat Rune(vec2 U, vec2 seed)\n{\n\tfloat d = 1e5;\n\tfor (int i = 0; i < 4; i++)\t// number of strokes\n\t{\n        vec4 pos = vec4( texture(iChannel1, (seed)    / iChannelResolution[1].xy).xy,\n\t\t                 texture(iChannel1, (seed+1.) / iChannelResolution[1].xy).xy \n                        );\n\t\tseed += 2.;\n\t\t// expand the range and mod it to get a nicely distributed random number - hopefully. :)\n\t\tpos = fract(pos * 128.);\n\n\t\t// each rune touches the edge of its box on all 4 sides\n\t\tif (i == 0) pos.y = .0;\n\t\tif (i == 1) pos.x = .999;\n\t\tif (i == 2) pos.x = .0;\n\t\tif (i == 3) pos.y = .999;\n\t\t// snap the random line endpoints to a grid 2x3\n\t\tvec4 snaps = vec4(2, 3, 2, 3);\n\t\tpos = ( floor(pos * snaps) + .5) / snaps;\t\n\n\t\td = min(d, line(U, pos.xy, pos.zw + .001) ); // closest line\n\t}\n    return S( d, max( BUMP==0. ? .1 : .2, 40./R.y) );\n}\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    R = iResolution.xy;\n    U = ( U+U - R ) / R.y;                           // normalized coordinates\n    U *=  mat2(cos( -iTime/4. + vec4(0,33,11,0)));   // rotation from https://www.shadertoy.com/view/XlsyWX\n    BUMP = mod(floor(iTime/3.),2.);\n    \n    // --- spiral\n    float r = .5,                                    // circle radius\n          n = 2.,                                    // glyph density\n          l = length(U),                             // polar coordinates\n          a = atan(U.y,U.x);// -iTime/4.;\n    l *= 4.;                                         // spiral zoom\n    r = l - a/6.283;                                 // ceil() = spire number\n    a += 6.283 * (ceil(r)-.5);                       // extended polar angle\n    a = a*a/2.;                                      // param along spiral : int 0..a { r(a).da }\n  //a -= iTime*4.;\n    a *= n/6.283;\n    float u = fract( a ),                            // local coordinates in\n          v = fract( r ),                            // cells along the circle\n          i = floor( a );                            // cell number\n    // ---\n    \n    v *= 1.2; R.y *= 1.2;                            // spacing\n    \n    O = .2+.7*texture(iChannel2,U/2.);               // background\n\tU = vec2(u,v);\n    if (BUMP==0.)\n        U -= .3*texture(iChannel0, vec2(a,r)*3.).xy; // (optional) distortion\n      //U -= .1*texture(iChannel0, vec2(a,r)/5.).xy; // (optional) distortion\n\n    v = Rune(  U, vec2(i,0)+iMouse.xy );\n    if (i>1.)\n        O += BUMP==0. ? -.2* v\n                      : .002* dot(vec2(dFdx(v),dFdy(v))*R.y, vec2(0,1) ) ;   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}