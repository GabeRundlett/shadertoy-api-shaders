{
    "Shader": {
        "info": {
            "date": "1544045332",
            "description": "Ken Perlin suggests an improved version of the smoothstep() function, which has zero 1st- and 2nd-order derivatives at x = 0 and x = 1.",
            "flags": 0,
            "hasliked": 0,
            "id": "MlyBWK",
            "likes": 3,
            "name": "smootherstep",
            "published": 3,
            "tags": [
                "antialiasing",
                "smooth"
            ],
            "usePreview": 0,
            "username": "v_coda",
            "viewed": 2051
        },
        "renderpass": [
            {
                "code": "#define RADIUS 0.25\n#define STEP_WIDTH 0.5\n\nfloat linear(float edge0, float edge1, float x)\n{\n  return clamp((x - edge0)/(edge1 - edge0), 0., 1.);\n}\n\n// Ken Perlin suggests an improved version of the smoothstep() function, \n// which has zero 1st- and 2nd-order derivatives at x = 0 and x = 1.\nfloat smootherstep(float edge0, float edge1, float x) \n{\n  x = clamp((x - edge0)/(edge1 - edge0), 0., 1.);\n  return x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nvoid normalized_coords(vec2 frag_coord,\n  out vec2 p, out vec2 cursor)\n{\n  float m = min(iResolution.x, iResolution.y);\n  p = (frag_coord.xy - 0.5 * iResolution.xy)/m;\n  cursor = (iMouse.xy - 0.5 * iResolution.xy)/m;\n}\n\nvoid mainImage(out vec4 oColor, in vec2 frag_coord)\n{\n  vec2 p, cursor;\n  normalized_coords(frag_coord, p, cursor);\n  float pw = 1./iResolution.x;\n  float d = length(p);\n  float edge0 = RADIUS * (1. - STEP_WIDTH * 0.5);\n  float edge1 = RADIUS * (1. + STEP_WIDTH * 0.5); \n  float w;\n  if (p.x < cursor.x - pw)\n    w = smoothstep(edge0, edge1, d); // left\n  else if (p.x > cursor.x + pw)\n    w = smootherstep(edge0, edge1, d); // right  \n  else\n    w = 0.5;\n  vec3 src = vec3(1., 0.0, 0.);\n  vec3 dst = vec3(0., 0.5, 1.);\n  vec3 col = mix(src, dst, w);\n  oColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}