{
    "Shader": {
        "info": {
            "date": "1616018433",
            "description": "Experimenting with a spring to see what patterns it makes.",
            "flags": 32,
            "hasliked": 0,
            "id": "fsfGW7",
            "likes": 10,
            "name": "Spring Dynamics Experiments",
            "published": 3,
            "tags": [
                "2d",
                "simulation",
                "experiments",
                "physics",
                "spring",
                "softbody"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "float sdLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    return length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float unit = 2.0 / iResolution.y;\n\n    fragColor.rgb = vec3(0.0);\n    for (int p=1; p < JOINTS; p++) {\n        vec2 joint = getJoint(p).pos;\n        float dist = sdLine(uv, getJoint(p - 1).pos, joint);\n        fragColor.rgb = mix(fragColor.rgb, vec3(1.0, 0.8, 0.0), exp(-50.0 * dist) * 2.0);//smoothstep(unit, 0.0, dist));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Pick 0-5\n#define EXPERIMENT 4\n\nstruct Joint {\n    vec2 pos;\n    vec2 vel;\n    float mass;\n};\n\n#define getJoint(id)                                 \\\n    Joint(texelFetch(iChannel0, ivec2(id, 0), 0).xy, \\\n          texelFetch(iChannel0, ivec2(id, 1), 0).xy, \\\n          MASS)                                      \\\n\n#define JOINTS 25\n#define SIZE 0.01\n#define MASS 5.0\n\n#define GRAVITY 0.001\n#define SPRINGINESS 0.5\n#define DAMPING 0.99\n#define LENGTH 0.01",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// Precomputed DFT and time step\nconst vec3[] dft = vec3[](vec3(0.06624063016083806, 0, 0.526467084606694), vec3(0.30403405427967967, 1, 2.186928193382259), vec3(0.1094018268849255, 2, 2.6446809202082924), vec3(0.0630682607539452, 3, 2.648215879385702), vec3(0.02379875395219672, 4, 0.033017062820374546), vec3(0.06698106925399928, 5, 0.7759976669433638), vec3(0.026287177763530078, 6, 0.5921211565620248), vec3(0.0564450154244258, 7, -2.491968482284073), vec3(0.016461866689664317, 8, 2.5796524144302184), vec3(0.013695954373753996, 9, 1.9976323584197104), vec3(0.03378343048580025, 10, 0.02482750162651745), vec3(0.016910940065752927, 11, -0.7790385201174097), vec3(0.01673095828298025, 12, -2.983880695316723), vec3(0.02495941770182371, 13, -1.0290464301803453), vec3(0.0033466958119220762, 14, -1.9751437421010822), vec3(0.023458727303844597, 15, -2.671445765551377), vec3(0.01539351240569818, 16, -0.8546676408828914), vec3(0.008620199168363188, 17, -2.554392951329515), vec3(0.006553513197034149, 18, 0.3255355723070354), vec3(0.005532650262379593, 19, 0.41900668047278), vec3(0.008541617060595367, 20, -1.5405585895452818), vec3(0.008825691196333732, 21, 1.0431591228744415), vec3(0.0012394082829978877, 22, 2.8575489672317054), vec3(0.001227717785595474, 23, 1.8670831836523107), vec3(0.0037504149099205236, 24, -1.932286728288171), vec3(0.001632526957947103, 25, -1.7372935977158408), vec3(0.004136748593989515, 26, -2.6340076994886688), vec3(0.0031397639874249255, 27, -0.7588742184904), vec3(0.004235722704459997, 28, -1.7401476374432354), vec3(0.002506185533509978, 29, -0.20735072683041092), vec3(0.0016341235587301241, 30, 0.8301487332713536), vec3(0.0027552647051842178, 31, -0.008590678750737928), vec3(0.0009520822430286851, 32, 3.0428446795182733), vec3(0.0023400549238494273, 33, -0.9610689855035858), vec3(0.001455602014543646, 34, 1.532239799562235), vec3(0.0024274636780121164, 35, -2.2982201296953386), vec3(0.0019461179800159072, 36, -0.7129523688717229), vec3(0.0018117163953017554, 37, -1.750943329322435), vec3(0.001644759801017308, 38, -2.330601638650922), vec3(0.0013895297107131064, 39, 2.030929305417917), vec3(0.0002508977876271399, 40, 1.5243653670062753), vec3(0.0011625103793400863, 41, -0.55301213523844), vec3(0.0001292542202948434, 42, -1.3024921353253258), vec3(0.0015858346652633693, 43, -1.5223745224052172), vec3(0.0016030138232809568, 44, -0.09906478557975977), vec3(0.0009820257574831314, 45, -1.9418111188611775), vec3(0.0013681156279721494, 46, -0.5483918892074371), vec3(0.0002550317559471833, 47, -0.45080354798265554), vec3(0.00021820183096853786, 48, -3.0408529102689563), vec3(0.00024426484332416224, 49, -1.640451241045797), vec3(0.0004655975631407837, 50, 0.5059171292751394), vec3(0.00047905790369020596, 51, 2.002136441384105), vec3(0.0004495997795090082, 52, -1.2959751654108225), vec3(0.000706090732924486, 53, -0.22312743564222917), vec3(0.00020592376687281896, 54, 1.4134018146300324), vec3(0.0007839484403523764, 55, -1.3006466225476623), vec3(0.0004434130419011939, 56, 0.48588142647244187), vec3(0.000696948524174033, 57, 2.5185198861817195), vec3(0.0002642347947368044, 58, -1.4702994471881408), vec3(0.0007889585503448085, 59, 2.8805159981024255), vec3(0.0005454815801849562, 60, -0.5491529026785559), vec3(0.000488494463110838, 61, -1.055036389936873), vec3(0.00040451996309537927, 62, -1.3538385226486893), vec3(8.235787653092511e-05, 63, 0.46996631539450173), vec3(0.0007116589185112069, 64, -0.3923681936672665), vec3(0.0006788874254429313, 65, 2.01598556713107), vec3(0.0003716447418093542, 66, -0.07962288849680876), vec3(0.0007361090049541833, 67, 1.1030827695217629), vec3(0.0008925231440608768, 68, -2.239958855509421), vec3(5.2295214618210214e-05, 69, -1.4582402167477988), vec3(0.0002542497903329945, 70, 2.487342088175135), vec3(0.00035310030843398383, 71, -1.4944674824950626), vec3(8.379706034354979e-05, 72, 0.9380415509992198), vec3(0.0005291325370133819, 73, -0.08648593800360635), vec3(0.0003770039243353579, 74, -0.8834654487484704), vec3(0.0004324587306587596, 75, 0.3709320155704721), vec3(0.00035623729383477256, 76, -1.2461274593896225), vec3(0.00031084082407892397, 77, 3.096505341353109), vec3(0.0004479006554867876, 78, 2.852062146723096), vec3(0.000336118858746581, 79, 0.5075639072369276), vec3(0.0003697780598090739, 80, 2.6696861905848244), vec3(0.00013433727271411984, 81, -1.6648202259014968), vec3(0.00011256095221966272, 82, 2.3117243617709553), vec3(0.00019492074781952352, 83, -2.7510631725521812), vec3(0.0005659405526126023, 84, 0.014541250859890494), vec3(0.00021588303097535148, 85, -2.509868718867894), vec3(0.0006630323087425981, 86, -0.475910667524325), vec3(0.00016537361194970035, 87, 1.7639141067523032), vec3(0.0001744997868821082, 88, 0.0686516494804399), vec3(0.00016386967311280857, 89, -0.8512508553053074), vec3(0.00039632659774993154, 90, 1.9563134208966622), vec3(0.0004897373370342829, 91, -0.680979821655123), vec3(0.00011834259424044262, 92, 1.3802571851892522), vec3(0.00025121291845813177, 93, 1.9415334754484221), vec3(3.1593982904385904e-06, 94, 1.1568655694395293), vec3(0.0001518840801164731, 95, -0.5264419692232939), vec3(0.00033569785640513147, 96, 1.5683479086911993), vec3(0.0005340023676899359, 97, -0.9673022437485693), vec3(0.00018902395699116404, 98, 0.9300765099489335), vec3(0.0002295536475429094, 99, 0.6321794964364887), vec3(0.0002669389166218816, 100, 1.5496323284152087), vec3(7.026034180043295e-05, 101, 0.6353007200564902), vec3(0.00018018422339888412, 102, -1.0925296432217835), vec3(0.00043093314146106545, 103, 3.122087005680385), vec3(0.0002713303017164963, 104, 1.0727937758559145), vec3(0.00024808286169333745, 105, -0.19703661052468396), vec3(0.00027590635624680243, 106, -1.7235605805256504), vec3(8.514839627670227e-05, 107, -0.921076774563906), vec3(0.00014273603278305838, 108, 1.5597008459962591), vec3(0.0002536862110701469, 109, 1.3514893479316772), vec3(0.00023367060515308113, 110, 2.707851051911518), vec3(0.0001475764996857795, 111, -0.5771397645973079), vec3(0.000602908608316128, 112, -0.8594551422833137), vec3(4.474878191084281e-05, 113, -1.6847307647029455), vec3(0.000309117574351459, 114, 1.3950407557721594), vec3(0.0002658538052996598, 115, 0.7514679430313529), vec3(0.00020264564021431182, 116, -2.1631565643238657), vec3(0.00040300214829498465, 117, 0.3094392195138682), vec3(0.0001443085670099963, 118, -1.6961452170278206), vec3(8.572964845071289e-05, 119, 2.796055774196669), vec3(0.0002478690041330533, 120, 1.768191886644194), vec3(9.115717707162411e-05, 121, 1.1244803512331298), vec3(0.00020566186615398035, 122, -0.0220746113572309), vec3(0.0002446885937851877, 123, -3.1126758958846312), vec3(0.0001803529348512403, 124, 0.4967945268150022), vec3(9.218150584724272e-05, 125, -2.938111999138144), vec3(0.00010645791647608324, 126, 0.6281948452510312), vec3(1.8007506310629485e-05, 127, -0.9402286701782262), vec3(0.00022965721005805244, 128, -2.02643363162777), vec3(0.00034007275950823367, 129, 1.849247307521242), vec3(0.0003901382295342529, 130, -0.31213043456063094), vec3(0.00018795552507509854, 131, 0.689905256912966), vec3(0.00019213346002572954, 132, -2.0812149069523262), vec3(0.0002194592184931298, 133, -0.21174911964549323), vec3(0.00013085087502505535, 134, -2.996815233864796), vec3(0.0004067570577306288, 135, 0.9892402745606376), vec3(0.0001294954675890351, 136, 2.1071351605370463), vec3(0.0003944993385546763, 137, -0.870294979285821), vec3(0.0003528383426190965, 138, 0.7157585221979605), vec3(0.0005445160374880394, 139, 2.996129746250755), vec3(1.5178721963384476e-05, 140, 1.028098122537589), vec3(0.000388257182155784, 141, 2.3691338391920387), vec3(0.00015917076481967573, 142, 0.16075049363255353), vec3(0.00010309025336422626, 143, -1.164413334995483), vec3(0.00016120581004004653, 144, 2.1796969546771296), vec3(0.0002494129657859731, 145, 0.4762915633051456), vec3(0.00036121017064008913, 146, -0.28020721694223477), vec3(0.0001928799964751649, 147, 1.9501360190043864), vec3(0.0002679537103486731, 148, 0.26874110818006713), vec3(0.00027895243193299594, 149, 3.023574855940494), vec3(0.000558301334395343, 150, 1.5307552982390948), vec3(0.000366390581356076, 151, -1.6173185311623117), vec3(0.0002844435104142701, 152, -2.876569547418066), vec3(0.00014071602901721472, 153, 1.0918866569731434), vec3(0.000310052094581393, 154, -2.404567966436413), vec3(2.272610291733784e-05, 155, 0.6324817772729061), vec3(0.0003079384591670648, 156, -1.6892918947775568), vec3(0.0004072626852821854, 157, -0.6356534357465593), vec3(0.00036581020307290663, 158, 2.50763536441941), vec3(0.000328775012096694, 159, -1.6552979334545195), vec3(0.000361554626871645, 160, 2.271583447374671), vec3(0.00023515825611359218, 161, 0.0707917042863178), vec3(7.428737176716895e-05, 162, 2.9921378753003363), vec3(0.00031207443736589634, 163, 0.07879592548699883), vec3(1.6805232719885682e-05, 164, -2.0315856817563844), vec3(0.00029284290516141205, 165, 2.356562218446478), vec3(0.0005406185202865765, 166, 0.9264141753673949), vec3(0.0003591969325816857, 167, -1.8195366836952174), vec3(0.0002887601392415138, 168, -0.7593691784477374), vec3(0.000440133463815327, 169, -2.861092799472919), vec3(0.0004377473234608359, 170, 2.7165705825060837), vec3(0.0003825281881467661, 171, 0.04548977823339587), vec3(0.0004453171116045119, 172, -1.5889725543808721), vec3(0.00027685931236603783, 173, 0.40133912541008104), vec3(0.0002277073251435858, 174, 1.8648570092016772), vec3(0.00043649015460662355, 175, -1.4807027291601884), vec3(0.0003435438103647364, 176, 2.3088415442470334), vec3(0.0002784874989587384, 177, -2.959965587383212), vec3(0.0002906497505324918, 178, -0.5235421445465093), vec3(0.0005522112009908517, 179, -2.1828919646975393), vec3(0.000514170343344654, 180, 2.854016822808405), vec3(0.0002621966136805113, 181, -2.256780336531358), vec3(0.0007926977507898551, 182, -1.322745384180447), vec3(0.0015433667898494972, 183, 2.212267607399177), vec3(0.00023198546815043715, 184, -0.9870637431505251), vec3(0.0007161743254248458, 185, -3.0834814274608013), vec3(0.0007809673767173438, 186, 0.47847936011686937), vec3(0.0007440585764828759, 187, -1.7024719977331748), vec3(0.0012213303816780091, 188, -1.3380840773034386), vec3(0.0002329236723787377, 189, -0.7377155864659284), vec3(0.0003077024495540758, 190, 2.2453361990215313), vec3(0.00020504150841135576, 191, 2.085141610662412), vec3(0.0007899298910531892, 192, 0.6942476573936902), vec3(0.00047577132100059166, 193, 2.950744037438498), vec3(0.00012132867662661346, 194, 1.1989628339717064), vec3(0.0008945096975207911, 195, 2.4434268855702617), vec3(0.0005341993205760085, 196, -2.626706319118795), vec3(0.0008012885953038439, 197, 1.1690619241969713), vec3(0.0018695834305686508, 198, -2.4778953149477743), vec3(0.0016578845502348827, 199, -0.13738312204709469), vec3(0.0018546825518305009, 200, -1.7999887615282684), vec3(0.0007431185974560027, 201, 2.174995201508643), vec3(0.0013294718367047717, 202, -2.099566390480893), vec3(0.0007548195738862462, 203, -2.5350082692450884), vec3(0.0010813537830996907, 204, 1.0874234789271389), vec3(0.0006520548362791126, 205, 3.1166615619755182), vec3(0.0009393858393090873, 206, 1.854738641432133), vec3(0.0012804592279042292, 207, 2.1168657404032136), vec3(0.0008608181651923305, 208, -0.6869962939123144), vec3(0.0027492394570491157, 209, 3.0593794229239184), vec3(0.0013042786590707115, 210, -2.6845517686511293), vec3(0.001412288363267205, 211, -1.064585087957022), vec3(0.0018816314624072116, 212, -2.841879609007883), vec3(0.003108482993407266, 213, -1.7329802715161602), vec3(0.0009940175342737399, 214, 2.5069409193044225), vec3(0.0022687244192290353, 215, -0.5445525134478889), vec3(0.003382499417730861, 216, 2.1814458438014777), vec3(0.0019926080137727953, 217, -0.6682671175044884), vec3(0.0021337942511456074, 218, 1.172434667823535), vec3(0.007158748850487738, 219, 1.7872956002198968), vec3(0.005677274345063543, 220, -1.8067690427337149), vec3(0.0010343163197663197, 221, 2.957525068645898), vec3(0.002995302909476681, 222, 2.5952496117047734), vec3(0.0033852039356165897, 223, -2.5064796803421623), vec3(0.010225478027993206, 224, -2.1962778435583616), vec3(0.0070714097380888035, 225, 0.020601055688367766), vec3(0.008247770070745994, 226, 1.8055052765795367), vec3(0.014188034385817503, 227, -2.4547136615856133), vec3(0.022530892293928757, 228, 0.3690118234086388), vec3(0.00780040981055298, 229, -1.9802362066430321), vec3(0.0081559005133612, 230, 2.7437914637816334), vec3(0.01323631278195056, 231, -1.4643401770822042), vec3(0.01154691686699623, 232, 1.5585078871752718), vec3(0.04164070827205541, 233, -1.192749625721735), vec3(0.027036562389363507, 234, 2.474150005059051), vec3(0.013369106746346704, 235, 1.1492668433298525), vec3(0.017559160083341005, 236, -3.033334577083831), vec3(0.03020104493056054, 237, 0.10761522863016465), vec3(0.06570528820995807, 238, -2.6282890348177013), vec3(0.14672812074874764, 239, -2.214682046525651));\nconst float dt = 0.02617993877991494;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 iFragCoord = ivec2(fragCoord);\n    fragColor = vec4(0.0);\n    if (iFragCoord.x < JOINTS) {\n        if (iFrame == 0 && iFragCoord.y == 0) {\n            fragColor.y = 0.5 - fragCoord.x * LENGTH;\n        }\n\n        if (iFrame > 0) {\n            Joint curJoint = getJoint(iFragCoord.x);\n\n            if (iFragCoord.x > 0) {\n                Joint prevJoint = getJoint(iFragCoord.x - 1);\n\n                vec2 force = normalize(prevJoint.pos - curJoint.pos);\n                float extension = LENGTH - distance(prevJoint.pos, curJoint.pos);\n                force *= -SPRINGINESS * extension;\n\n                if (iFragCoord.x < JOINTS - 1) {\n                    Joint nextJoint = getJoint(iFragCoord.x + 1);\n                    vec2 force2 = normalize(curJoint.pos - nextJoint.pos);\n                    extension = LENGTH - distance(curJoint.pos, nextJoint.pos);\n                    force2 *= -SPRINGINESS * extension;\n                    force -= force2;\n                }\n\n                force += vec2(0.0, -GRAVITY);;\n                curJoint.vel += force / curJoint.mass;\n                curJoint.vel *= DAMPING;\n\n                curJoint.pos += curJoint.vel;\n            }\n\n            if (iFragCoord.x == JOINTS - 1) {\n                float slow = iTime * 0.5;\n                float normal = iTime;\n                float medium = iTime * 2.0;\n                float fast = iTime * 5.0;\n\n                #if EXPERIMENT == 0\n                curJoint.pos = vec2(0.25 * sin(fast), -0.5);\n                #endif\n\n                #if EXPERIMENT == 1\n                curJoint.pos = vec2(cos(fast), sin(fast)) * 0.25;\n                #endif\n\n                #if EXPERIMENT == 2\n                float c = cos(medium), s = sin(medium);\n                curJoint.pos = vec2(c, c * s) * 0.5;\n                #endif\n\n                #if EXPERIMENT == 3\n                curJoint.pos = vec2(0.0);\n                for (int i=0; i < dft.length(); i++) {\n                    float a = float(iFrame) * dt * dft[i][1] + dft[i][2];\n                    curJoint.pos += vec2(cos(a), sin(a)) * dft[i][0];\n                }\n                #endif\n\n                #if EXPERIMENT == 4\n                float c = cos(medium), s = sin(medium);\n                curJoint.pos = vec2(c * s, s * s * c);\n                #endif\n\n                #if EXPERIMENT == 5\n                curJoint.pos = vec2(0.25 * (sin(cos(fast)) + 0.5 * cos(2.0 * fast)), -0.5);\n                #endif\n            }\n\n            if (iFragCoord.y == 0) fragColor.xy = curJoint.pos;\n            if (iFragCoord.y == 1) fragColor.xy = curJoint.vel;\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}