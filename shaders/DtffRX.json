{
    "Shader": {
        "info": {
            "date": "1693233466",
            "description": "mouse controls camera.       variant of https://shadertoy.com/view/DlfBRj\nmore conform to original: https://twitter.com/junkiyoshi/status/1695401421112492445",
            "flags": 0,
            "hasliked": 0,
            "id": "DtffRX",
            "likes": 42,
            "name": "3D random generator 2",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "reproduction"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 466
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/DlfBRX\n//            https://shadertoy.com/view/DlfBRj                      // ( code a bit clearer here ;-) ).\n\n#define rot(a)    mat2(cos(a+vec4(0,11,33,0)))                       // rotation\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float T = iTime, t=9.,r,a,z,H; int c;\n    vec3  R = iResolution,\n          D = normalize( vec3(U+U, -2.*R.y) - R ),                   // ray direction\n          p = vec3(0,0,10), q,P,                                     // marching point along ray \n          C = iMouse.z > 0. ? 8.*iMouse.xyz/R -4.                    // camera control\n                          : 3.* cos(.3*T + vec3(0,11,0));        // demo mode\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )                   // march scene\n        q = p, \n        q.yz *= rot(-C.y),                                           // rotations\n        q.xz *= rot(-C.x),\n        r = length(q.yz) - 4., a = atan(q.x,r),                                                       \n        P = vec3( 4.*atan(q.z,q.y) , a , 0 ) /.628,                  // surface parameterization \n        H = fract(sin(ceil(P.x)*71.3)),                              // random 1D\n        P.y = mod( P.y + 5.* sin( \n                                  (.3+3.*H) * max(0.,mod(2.*T,7.)-3.) ) // columns rotation\n                             //   ceil((.3+3.*H)/.15708)*.15708  * ( max(0.,mod(2.*T,7.)-3.)+4.*floor(2.*T/7.)) )\n                    , 10.),             \n        z = sin(fract(P.y)*.628-.314),                                                                                   \n        t = max( a = abs( length(vec2(q.x,r)) - sqrt(1.+z*z) ) -.02, // intersection polygonal torus surface    \n                 texture(iChannel0,                                  //        and   random digit SDF\n                  (  vec2( c = int(10.*H+ceil(P.y))%10, 12-c/16 )     \n                    +( vec2(.25,.15) + vec2(.5,.7) * fract(P.xy) )       \n                  ) /16. ).w - .5 ),                                 // draw torus-digits intersection \n        p += .5*t*D;                                                 // step forward = dist to obj  \n \n    O *= O*O*O*1.5;                                                  // color scheme\n    t!=a ? O += .5 : O *= .0;                                        // try t==a ;-) . I prefer, but less conform. \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}