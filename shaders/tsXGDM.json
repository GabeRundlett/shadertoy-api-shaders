{
    "Shader": {
        "info": {
            "date": "1546523924",
            "description": "try to make metaballs from blurred circles",
            "flags": 0,
            "hasliked": 0,
            "id": "tsXGDM",
            "likes": 17,
            "name": "Kind of metaballs",
            "published": 3,
            "tags": [
                "metaballs",
                "blur"
            ],
            "usePreview": 0,
            "username": "macufrax",
            "viewed": 1266
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // dein circle position and radius\n    vec3 cercle1 = vec3(-.2, .01, .07);\n    vec3 cercle2 = vec3(.2, -.1, .1);\n    vec3 cercle3 = vec3(0., 0., .2);\n    vec3 cercle4 = vec3(-0.3, -0.3, .3);\n    vec3 cercle5 = vec3(0., 0., .07);\n\n    // animate circle pos and radius\n    cercle1.x += sin( (iTime+0.)/4. + sin(iTime +12.) ) / 4.;\n    cercle1.y += cos( iTime +cos(iTime*2.) ) /4.;\n    \n    cercle2.x += cos( iTime/4. + 150.) /2. - sin(iTime/4.\t) - .2;\n    cercle2.y += (sin( iTime  + 10.) /4.) - cos(iTime)/4.;\n    \n    cercle3.z += sin((iTime-0.)/4.)/16.;\n    cercle3.x += sin(iTime/2.)*.6;\n    cercle3.y += sin(iTime*2.)*.10;\n      \n    cercle4.z = .21 + sin(iTime/4.1)/16.;\n    cercle4.x += sin(iTime/4.)/2.;\n    cercle4.y += sin((iTime+0.)/16.)/2.;\n    \n    cercle5.x += sin(iTime/4.)/1.3;\n    cercle5.y += sin(iTime/2.)/3.;\n    \n    // get distance from circle center to uv\n    float d1 = distance( cercle1.xy, uv);\n    float d2 = distance( cercle2.xy, uv);\n   \tfloat d3 = distance( cercle3.xy, uv); \n    float d4 = distance( cercle4.xy, uv); \n    float d5 = distance( cercle5.xy, uv); \n   \n    // create a gradiant from circle center to radius\n    float c1 = smoothstep( cercle1.z+.2, cercle1.z-0.2, d1 );\n    float c2 = smoothstep( cercle2.z+.2, cercle2.z-0.2, d2 );\n    float c3 = smoothstep( cercle3.z+.2, cercle3.z-0.2, d3 );\n    float c4 = smoothstep( cercle4.z+.2, cercle4.z-0.2, d4 );\n    float c5 = smoothstep( cercle5.z+.2, cercle5.z-0.2, d5 );\n        \n    // sum \n    float c = (c1+c2+c3+c4+c5)*1.5;\n        \n    // treshold, comment it to see blur\n    //c = (c > .4 ? 1. : .2);\n    c = smoothstep(0.98,1.0,c);\n    \n    // color\n    float s = (sin(iTime) + 1.) * .5;\n    vec3 col = vec3((uv.x+.5) * c, (uv.y+.5) * c, s/2.+.4);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}