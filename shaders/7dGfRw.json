{
    "Shader": {
        "info": {
            "date": "1657830669",
            "description": "another gyroid toy",
            "flags": 0,
            "hasliked": 0,
            "id": "7dGfRw",
            "likes": 13,
            "name": "Polaroid Gyroidoscopic",
            "published": 3,
            "tags": [
                "simple",
                "gyroid"
            ],
            "usePreview": 0,
            "username": "leon",
            "viewed": 435
        },
        "renderpass": [
            {
                "code": "// playing with gyroid cyclic noise and polar coordinates\n// trying to find elegance with simplicity\n\n#define t iTime*.1\n\nfloat gyroid (vec3 seed) { return dot(sin(seed),cos(seed.yzx)); }\nfloat fbm (vec3 seed) {\n    float result = 0.;\n    float a = .5;\n    for (int i = 0; i < 3; ++i) {\n        result += sin(gyroid(seed/a)*3.+t/a)*a;\n        a /= 2.;\n    }\n    return result;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec3 p = vec3((fragCoord-iResolution.xy/2.)/iResolution.y,0);\n    vec3 color = vec3(p*.5+.5);\n    \n    p = vec3(\n        atan(p.y,p.x) * .5,\n        log(length(p)) - t,\n        t+p.y );\n    \n    float shade = (fbm(p)+1.)/2.;\n    fragColor = vec4(mix(color,vec3(1),shade)*shade, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}