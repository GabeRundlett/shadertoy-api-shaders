{
    "Shader": {
        "info": {
            "date": "1516547321",
            "description": "Attempt a drawing the figure 2 of the seminal paper\nGabor from @FabriceNeyret2\n\nPaper linked and NYT articles link  in code header comment",
            "flags": 0,
            "hasliked": 0,
            "id": "XljBzV",
            "likes": 6,
            "name": "Train brain to fight eye loss",
            "published": 3,
            "tags": [
                "eye",
                "brain",
                "gabor",
                "gauss"
            ],
            "usePreview": 0,
            "username": "kuranes",
            "viewed": 721
        },
        "renderpass": [
            {
                "code": "// Figure 2 of \"Backward masking suppresses collinear facilitation in the visual cortex\" \n// paper https://uripolat.files.wordpress.com/2011/05/2009-sterkin-bm.pdf\n// https://uripolat.wordpress.com/publications\n//\n// from\n// https://www.nytimes.com/2017/03/27/upshot/training-your-brain-so-that-you-dont-need-reading-glasses.html\n//\n// reused @FabriceNeyret2 Gabor function\n//\n// next is https://uripolat.files.wordpress.com/2015/07/2014-lev-et-al-srep.pdf \n//\n// Gabor kernel\n// https://www.shadertoy.com/view/4sVXWd\n#define g_h 2e2\n#define g_quarter_tau 1.57\n#define g_animate 1.0 \n//iDate.w\n#define G(U,a,v) exp(-.5*dot(U,U)*g_h) * sin( 100.*dot(U,sin(a+vec2(g_quarter_tau,0)))-10.*(v)*sin(g_animate) ) \n\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // paper input\n    // lambda \n    float lambda = iMouse.x/iResolution.x;\n    // target \n    float lamda3 = 1.8;\n    // separations\n    float lambda6 = 3.6*0.1;\n    \n    // contrast 40%\n    float contrast = 0.4;    \n    // Dynamism: not in paper\n    //float speed = sin(iTime);\n    //contrast *= speed;\n    \n     \n    // flankers each separated byt lambda\n    vec2 uvGabor = uv;\n    // fit on screen\n    uvGabor.x -= 0.5;\n    uvGabor.y += lambda6*.5;\n    \n    float verticality = 0.0;// g_quarter_tau;\n    \n    // gabor\n    float gabor = 0.0;\n    uvGabor.y -= lambda6;\n    gabor += G(uvGabor, 0.0, lamda3);\n    \n    uvGabor.y -= lambda6;\n    gabor += G(uvGabor , 0.0, lamda3);\n    \n    uvGabor.y -= lambda6;\n    gabor += G(uvGabor, 0.0, lamda3);\n    \n    //contrast\n    gabor *= contrast;\n    \n    // inverse vignette\n    uv *= 1.0-uv;\n    float vignette = pow(1.0 - uv.x*uv.y * 15.0, 0.85);\n    \n    fragColor.xyz = vec3(.5 + gabor * vignette) ;\n}\n                  \n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}