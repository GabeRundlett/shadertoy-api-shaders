{
    "Shader": {
        "info": {
            "date": "1425234407",
            "description": "A stranger symmetry.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xll3Wj",
            "likes": 20,
            "name": "Simple Kaleidoscope 2",
            "published": 3,
            "tags": [
                "kaleidoscope"
            ],
            "usePreview": 0,
            "username": "TekF",
            "viewed": 1904
        },
        "renderpass": [
            {
                "code": "const float tau = 6.2831853;\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) * 7.2 / iResolution.y;\n\n    float r = 1.0;\n    float a = iTime*.1;\n    float c = cos(a)*r;\n    float s = sin(a)*r;\n    for ( int i=0; i<10; i++ )\n    {\n    \t//uv = abs(uv);\n        \n        // higher period symmetry\n        float t = atan(uv.x,uv.y);\n        const float q = 7. / tau;\n\t\tt *= q;\n        t = abs(fract(t*.5+.5)*2.0-1.0);\n        t /= q;\n        uv = length(uv)*vec2(sin(t),cos(t));\n        \n        uv -= .7;\n        uv = uv*c + s*uv.yx*vec2(1,-1);\n    }\n        \n    fragColor = .5+.5*sin(iTime+vec4(13,17,23,1)*texture( iChannel0, uv*vec2(1,-1)+.5, -1.0 ));\n}\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) * 5. / iResolution.y;\n\n    float r = 1.0;\n    float a = iTime*.1;\n    float c = cos(a)*r;\n    float s = sin(a)*r;\n    for ( int i=0; i<32; i++ )\n    {\n    \tuv = abs(uv);\n        uv -= exp(float(-2*i))+.1;\n        uv = uv*c + s*uv.yx*vec2(1,-1);\n    }\n        \n    fragColor = .5+.5*sin(iTime+vec4(13,17,23,1)*texture( iChannel0, clamp( uv*vec2(1,-1)+.5, .0, 1. ), -1.0 ));\n}*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}