{
    "Shader": {
        "info": {
            "date": "1521355492",
            "description": "portal",
            "flags": 0,
            "hasliked": 0,
            "id": "Xdyyzw",
            "likes": 3,
            "name": "portal",
            "published": 3,
            "tags": [
                "2d",
                "green",
                "portal"
            ],
            "usePreview": 0,
            "username": "krshock",
            "viewed": 631
        },
        "renderpass": [
            {
                "code": "//krshock 2018\nvec2 scr2uv(vec2 v){\n    vec2 s = v/iResolution.xy + vec2(-.5, -.5);\n    s.y *= iResolution.y/iResolution.x;\n    return s;\n}\n\nvec2 distort(vec2 v, float s, float q, float t){\n    return vec2(v.x+cos(v.x*17.*s+t)*q, v.y+cos(v.y*11.*s+t)*q);\n}\n\n//returns 1 till {_max} then fades to 0 reaching {fade}\nfloat fade(float val, float _max, float fade){\n    if(val<_max)\n        return 1.;\n    if(val>_max+fade)\n        return 0.;\n    return distance(_max+fade,val)/fade;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = scr2uv(fragCoord) * 1.4;\n    uv = distort(uv, 1., .015, iTime*2.); //1st distortion layer\n    uv = distort(uv, .5, .02, iTime*4.);  //2nd distortion layer\n    vec2 origin = vec2(0,0);\n\n    float dist = distance(origin, uv);\n    float val = fade(cos(iTime*10.+dist*3.14*32.0),.6,.1);\n    vec3 col = val*vec3(.0,.15,.0);\n    col = col + vec3(.65,.76,.0);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}