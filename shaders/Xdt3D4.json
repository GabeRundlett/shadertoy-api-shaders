{
    "Shader": {
        "info": {
            "date": "1449695166",
            "description": "Use this shader to dynamically create Aruco markers for 3d tracking ",
            "flags": 0,
            "hasliked": 0,
            "id": "Xdt3D4",
            "likes": 5,
            "name": "Aruco marker generator",
            "published": 3,
            "tags": [
                "3d",
                "marker",
                "opencv",
                "aruco"
            ],
            "usePreview": 0,
            "username": "dine909",
            "viewed": 3529
        },
        "renderpass": [
            {
                "code": "//colors\nconst vec3 background=vec3(1.,1.,1.);\nconst vec3 border=vec3(0.,0.,0.);\nconst vec3 zero=vec3(0.,0.,0.);\nconst vec3 one=vec3(1.,1.,1.);\n\n//dims\nconst float sqsize=35.;\nconst float sqborder=1.;\nconst float sqbackground=1.;\n\n//untouchables\nvec2 sqs=vec2(9.,9.);\nconst vec4 mns = vec4(16.,23.,9.,14.);\n\nint bitshift(int val,int by)\n{\n    return val/int(exp2(float(by)));\n}\n\nbool tstbit(int val,int bit)\n{\n    return mod(float(bitshift(val,bit)),2.)==0.?false:true;\n}\nvoid aruco( out vec4 fragColor, in vec2 fragCoord, in int code )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 sq=vec2(mod(fragCoord.x,sqsize),mod(fragCoord.y,sqsize));\n\n//uncomment for scaled display on shadertoy\n    vec2 sqc=vec2(uv.x,uv.y*(iResolution.y/iResolution.x))/sqsize*640.;\n//uncomment for print/pixel-per-point\n  //  vec2 sqc=fragCoord/sqsize;\n \n    if(sqc.x<sqbackground || sqc.y<sqbackground || sqc.x>=(sqs.x-sqbackground) || sqc.y>=(sqs.y-sqbackground))\n    {\n            fragColor = vec4(background,1.0);        \n    }\n    else\n    {\n    \tsqc-=sqbackground;\n        sqs-=sqbackground*2.;\n        if(sqc.x<sqborder || sqc.y<sqborder || sqc.x>=(sqs.x-sqborder) || sqc.y>=(sqs.y-sqborder))\n        {\n            fragColor = vec4(border,1.0);\n        }\n        else\n        {\n            sqc-=sqborder;\n            \n            int lmn=int(mod(float(bitshift(code,int(sqc.y)*2)),4.));\n            int cmn=int( (lmn==0?(mns.x):lmn==1?(mns.y):lmn==2?(mns.z):(mns.w)));            \n            fragColor = vec4(tstbit(cmn,4-int(sqc.x))?one:zero,1.0);\n        }\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int icode=int(mod(iTime,1024.));\n    fragColor = vec4(background,1.0);  \n    if(fragCoord.x<iResolution.x*0.5)\n    {\n        aruco(fragColor,fragCoord,icode);\n    }else{\n        aruco(fragColor,fragCoord+vec2(iResolution.x*-0.5,0.),1023-icode);\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}