{
    "Shader": {
        "info": {
            "date": "1570277284",
            "description": "Forked from https://www.shadertoy.com/view/wslGz7 from wyatt and added a partial solution to the problem mentioned by him/her: \"I wanted to make a more natural looking tree, but I realized you're  limited to really symetrical trees for this setup.\" \n",
            "flags": 0,
            "hasliked": 0,
            "id": "tdy3Ww",
            "likes": 12,
            "name": "Unsymmetrical Dancy Tree Doodle",
            "published": 3,
            "tags": [
                "fractal",
                "tree",
                "kifs"
            ],
            "usePreview": 0,
            "username": "machmuel",
            "viewed": 707
        },
        "renderpass": [
            {
                "code": "// Forked from https://www.shadertoy.com/view/wslGz7\n// Unfortunately, the forking menu is missing in my Chrome browser :-(\n\n// Included partial solution for unsymmetrical trees - but was not able \n// to get rid of some clipping or floating wigs.\n\nvec2 N(float angle) {\n    return vec2(sin(angle), cos(angle));\n}\n\nvec2 po (vec2 v) {\n\treturn vec2(length(v),atan(v.y,v.x));\n}\nvec2 ca (vec2 u) {\n\treturn u.x*vec2(cos(u.y),sin(u.y));\n}\nfloat ln (vec2 p, vec2 a, vec2 b) { \n    float r = dot(p-a,b-a)/dot(b-a,b-a);\n    r = clamp(r,0.,1.);\n    p.x+=(0.7+0.5*sin(0.1*iTime))*0.2*smoothstep(1.,0.,abs(r*2.-1.))*sin(3.14159*(r-4.*iTime));\n    return (1.+0.5*r)*length(p-a-(b-a)*r);\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   vec2 R = iResolution.xy;\n \tfloat r = 1e9;\n \tvec2 mouse = 2.*iMouse.xy/iResolution.xy-1.; // -1 1 \n \tU = 4.*(U-0.5*R)/R.y;\n \tU.y += 1.5;\n \tQ = vec4(0);\n \tfor (int i = 1; i < 16; i++) {\n        U = ca(po(U)+0.3*(sin(2.*iTime)+0.5*sin(4.53*iTime)+0.1*cos(12.2*iTime))*vec2(0,1));\n        r = min(r,ln(U,vec2(0),vec2(0,1.)));\n        U.y-=1.;\n        \n        vec2 n = N(2.2);\n        float d = dot(U, n);\n        U -= min(0.,d)*n*2.;\n        \n        U.x=abs(U.x);\n        U*=1.4+0.1*sin(iTime)+0.05*sin(0.2455*iTime)*(float(i));\n        U = po(U);\n        U.y += 1.+0.5*sin(0.553*iTime)*sin(sin(iTime)*float(i))+0.1*sin(0.4*iTime)+0.05*sin(0.554*iTime);\n        U = ca(U);\n        \n        \n        Q+=sin(1.5*exp(-1e2*r*r)*1.4*vec4(1,-1.8,1.9,4)+iTime);\n        \n \t\t\n \t}\n \tQ/=18.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}