{
    "Shader": {
        "info": {
            "date": "1536426150",
            "description": "Mouse enabled. Found this strange automata amidst some old shaders.",
            "flags": 32,
            "hasliked": 0,
            "id": "XttcDS",
            "likes": 3,
            "name": "Automata Fun",
            "published": 3,
            "tags": [
                "2d",
                "interactive",
                "automata",
                "cellular"
            ],
            "usePreview": 0,
            "username": "Ebanflo",
            "viewed": 627
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    fragColor.rgb =\n        0.5 + 0.5*cos(vec3(6,2,4) + 6.0*texture(iChannel0, fragCoord/iResolution.xy).rgb);\n    fragColor.rgb = fragColor.bgr;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const int SCALE = 20;\n\n// not really random but close enough\nfloat rand(vec2 n)\n{\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 4358.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord -= mod(fragCoord, float(SCALE));\n    \n    if (iFrame < 60 && distance(fragCoord, iMouse.xy) < 100.0)\n    {\n        fragColor = vec4(step(.5, rand(fragCoord.xy+iTime)));\n    }\n    else\n    {\n        vec2 o = float(SCALE) / iResolution.xy;\n        vec2 uv = (fragCoord / iResolution.xy) + (o * .5);\n        \n        float accum = 0.;\n        float self = 0.;\n        for (int i = -1; i <= 1; ++i)\n        {\n            for (int j = -1; j <= 1; ++j)\n            {\n\t\t\t\tfloat s = texture(iChannel0, uv + o * vec2(i, j)).a;\n                if (i == 0 && j == 0)\n                    self = s;\n                else\n                    accum += step(0.9,s);\n            }\n        }\n        \n        fragColor = vec4(accum == 3. || (accum == 2. && self >= 1.));\n        if(fragColor.a < 1.)\n        \tfragColor += self*.996;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}