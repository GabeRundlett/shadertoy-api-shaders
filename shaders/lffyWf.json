{
    "Shader": {
        "info": {
            "date": "1721669609",
            "description": "Colors Embody",
            "flags": 0,
            "hasliked": 0,
            "id": "lffyWf",
            "likes": 10,
            "name": "Colors Embody",
            "published": 3,
            "tags": [
                "colors",
                "spiral",
                "color",
                "vortex",
                "portal",
                "embody"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 232
        },
        "renderpass": [
            {
                "code": "float hash12(vec2 p) {\n\tvec3 p3 = fract(p.xyx * 0.1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(vec2 p) {\n\tvec2 i = floor(p);\n\tvec2 f = fract(p);\n\tf = f * f * (3.0 - 2.0 * f);\n\tfloat res = mix(\n\t\tmix(hash12(i), hash12(i + vec2(1, 0)), f.x),\n\t\tmix(hash12(i + vec2(0, 1)), hash12(i + vec2(1)), f.x), f.y);\n\treturn res * res;\t\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    float l = sqrt(length(uv));\n    float a = l * 9.0 - iTime;\n    \n    uv = cos(-uv.x + a) * uv + sin(a) * vec2(-uv.y, uv.x);\n    \n    float n = sqrt(noise(uv * 6.0));\n    float b = noise(35.185 - uv * 8.0);\n    float c = 1.0 / (b + 1.0);\n    float s = smoothstep(0.3, 0.6 * c, n * (1.25 - l*l));\n    float d = sin(6.0 * n * b) * 0.5 + 0.5;\n    \n    vec3 c1 = cos(vec3(s * n, n * n, d - s) * 8.0 - b) * 0.5 + 0.5;\n    vec3 c2 = sin((vec3(s - b, -n, n)) * 6.0);\n    vec3 c3 = sin(vec3(b, b, d) * 2.0 / (0.2 + l));\n\n    vec3 col = c1 * s;\n    col += (1.0 - s) * c2 * smoothstep(0.2, 0.4, b * (1.1 - l * l));\n    \n    // can't decide which one of these is better\n    col += mix((1.0 - l) * c3 * l, (0.8 - l) * c3 * l, l);\n    //col += (1.0 - sqrt(l)) * c3;\n    //col += (0.8 - l) * c3 * l;\n    \n    col = clamp(col, vec3(0), vec3(1));\n\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}