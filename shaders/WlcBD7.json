{
    "Shader": {
        "info": {
            "date": "1612825637",
            "description": "basic Pacman 2d",
            "flags": 0,
            "hasliked": 0,
            "id": "WlcBD7",
            "likes": 3,
            "name": "basic Pacman 2d",
            "published": 3,
            "tags": [
                "basicpacman2d"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 238
        },
        "renderpass": [
            {
                "code": "// por jorge2017a1 ...jorge flores p.!!!\n\n#define PI 3.14159265359\n#define PI2 PI*2.0\n\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\nfloat opU( float d1, float d2 ) { return  min(d1,d2); }\nfloat opS( float d1, float d2 ) { return max(-d1,d2); }\nfloat opI( float d1, float d2 ) { return max(d1,d2); }\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n\n\nvec2 pacmanface(vec2 p)\n{  \n    vec2 res= vec2(9999.9,-1.0);\n    \n    float dc1= sdCircle( p, 0.8 );\n    float ojoA= sdCircle( p-vec2(-0.2, 0.3), 0.1 );\n    float ojoB= sdCircle( p-vec2(-0.2, 0.3), 0.15 );\n    float dboca1= sdBox(p-vec2(-0.5,-0.2), vec2(0.4,0.15- abs(0.15*sin(iTime*3.0)))  );\n    \n    float ojo=opS(ojoA,ojoB);\n     dc1=opS(ojo,dc1);\n     dc1=opS(dboca1,dc1);\n    \n    res=opU2( res, vec2(dc1/fwidth(dc1),1.0) );\n    res=opU2( res, vec2(ojo/fwidth(ojo),0.0) );\n    res=opU2( res, vec2(ojoA/fwidth(ojoA),5.0) );\n    return res;\n}\n\n\nfloat MarOnda(vec2 uv,float  t)\n{\n    uv.y += sin(uv.x*5.+t)*0.1;\n    return uv.y;\n}\nfloat PisoOnda(vec2 uv)\n{\n    \n    uv.y +=0.14* sin(uv.x*14.+iTime*5.0) ;\n    return uv.y;\n}\n\n\nvec2 fantasma1(vec2 p)\n{\n    vec2 res= vec2(9999.9,-1.0);\n    \n    float dc1= sdCircle( p, 0.8 );\n    float dropa= sdBox(p-vec2(0.0,-0.5), vec2(0.8,0.5)  );\n   float dboca1= sdBox(p-vec2(0.0,-0.5), vec2(0.4,0.05)  );\n    \n    float ojoA1= sdCircle( p-vec2(-0.3, 0.3), 0.1 );\n    float ojoB1= sdCircle( p-vec2(-0.3, 0.3), 0.15 );\n    \n    float ojoA2= sdCircle( p-vec2(0.3, 0.3), 0.1 );\n    float ojoB2= sdCircle( p-vec2(0.3, 0.3), 0.15 );\n    \n\n    dc1=opU(dc1, dropa);\n    dc1=opS(dboca1, dc1 );\n    \n    \n    float ojo1=opS(ojoA1,ojoB1);\n    float ojo2=opS(ojoA2,ojoB2);\n    \n    dc1=opS(ojo1,dc1);\n    dc1=opS(ojo2,dc1);\n    \n    \n    res=opU2( res, vec2(dc1/fwidth(dc1),2.0) );\n    res=opU2( res, vec2(ojo1/fwidth(ojo1),5.0) );\n    res=opU2( res, vec2(ojoA1/fwidth(ojoA1),0.0) );\n    \n    res=opU2( res, vec2(ojo2/fwidth(ojo2),5.0) );\n    res=opU2( res, vec2(ojoA2/fwidth(ojoA2),0.0) );\n    res=opU2( res, vec2(dboca1/fwidth(dboca1),0.0) );\n    \n    \n    return res;\n}\n\n\nvec2 fantasma2(vec2 p)\n{\n    vec2 res= vec2(9999.9,-1.0);\n    \n    float dc1= sdCircle( p, 0.8 );\n    float dropa= sdBox(p-vec2(0.0,-0.5), vec2(0.8,0.5)  );\n    \n    float ojoA1= sdCircle( p-vec2(-0.3, 0.3), 0.1 );\n    float ojoB1= sdCircle( p-vec2(-0.3, 0.3), 0.15 );\n    \n    float ojoA2= sdCircle( p-vec2(0.3, 0.3), 0.1 );\n    float ojoB2= sdCircle( p-vec2(0.3, 0.3), 0.15 );\n    \n    float vesInf= PisoOnda(p-vec2(0.0,-0.75));\n    \n    dc1=opU(dc1, dropa);\n    \n    float ojo1=opS(ojoA1,ojoB1);\n    float ojo2=opS(ojoA2,ojoB2);\n    \n    dc1=opS(ojo1,dc1);\n    dc1=opS(ojo2,dc1);\n    dc1=opS(vesInf,dc1);\n    \n    \n    \n    \n    res=opU2( res, vec2(dc1/fwidth(dc1),4.0) );\n    res=opU2( res, vec2(ojo1/fwidth(ojo1),5.0) );\n    res=opU2( res, vec2(ojoA1/fwidth(ojoA1),0.0) );\n    \n    res=opU2( res, vec2(ojo2/fwidth(ojo2),5.0) );\n    res=opU2( res, vec2(ojoA2/fwidth(ojoA2),0.0) );\n    \n    \n    return res;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n     p*=2.0;\n     float tt=mod(iTime,5.0);\n    \n    p.y=p.y-0.05;\n    \n    //vec3 colOut=vec3(0.5,0.3,1.0);\n    vec3 colOut=vec3(0.0,0.0,0.4);\n\n    \n    vec2 sl1= pacmanface( p);\n    vec2 sl2= fantasma1( p-4.0*sin(vec2(2.0,0.0)*iTime*0.5) );\n    vec2 sl3= fantasma2( p-2.0*cos( vec2(-2.0,0.5) * iTime*0.5  ));\n    \n    \n    colOut= ProcesoColorVec2Grosor( colOut, sl1, 1.0);  // by jeyko\n    colOut= ProcesoColorVec2Grosor( colOut, sl2, 1.0);  // by jeyko\n    colOut= ProcesoColorVec2Grosor( colOut, sl3, 0.6);  // by jeyko\n   \n    vec4 color =vec4(colOut, 1.0);\n  \tfragColor = color;\n\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "///------------------------------------\nstruct TObj\n{ vec3 color; };\n    \nTObj mObj;\n\nvec3  Arrcolores[] = vec3[] (\nvec3(0,0,0)/255.0,  //0\nvec3(255.,255.,255.)/255.0, //1\nvec3(255,0,0)/255.0,  //2\nvec3(0,255,0)/255.0,   //3\nvec3(0,0,255)/255.0,   //4\nvec3(255,255,0)/255.0,  //5\nvec3(0,255,255)/255.0,  //6 \nvec3(255,0,255)/255.0,   //7\nvec3(192,192,192)/255.0,  //8\nvec3(128,128,128)/255.0,  //9\nvec3(128,0,0)/255.0,   //10\nvec3(128,128,0)/255.0,  //11\nvec3(0,128,0)/255.0,   //12\nvec3(128,0,128)/255.0,  //13\nvec3(0,128,128)/255.0,  //14\nvec3(0,0,128)/255.0,    //15\nvec3(255, 204, 188)/255.0,  //16\nvec3(0.75),  //17\nvec3(0.5, 0.5, 0.8),  //18\nvec3(1, 0.5, 0),      //19\nvec3(1.0, 1.0, 1.0),  //20\nvec3(247./255., 168./255.,  184./255.),  //21\nvec3(0, 1, 1),                           //22 \nvec3(85./255., 205./255., 252./255.),    //23\nvec3(0.425, 0.56, 0.9)*vec3( 0.3, 0.2, 1.0 ),  //24 \nvec3(0.8,0.8,0.8)*vec3( 0.3, 0.2, 1.0 ),       //25  \nvec3(1.0,0.01,0.01)*vec3( 0.3, 0.2, 1.0 ),     //26\nvec3(0.1, 0.5, 1.0),                           //27   \nvec3(0.0, 0.6, 0.0),                       //28 \nvec3(0.1,0.1,0.7),                          //29\nvec3(0.99, 0.2, 0.1), //30\nvec3(0.9),  //31\nvec3(0.8),  //32\nvec3(0.7),  //33\nvec3(0.6),  //34\nvec3(150.,75.,0.0)/255.,  //35  //marron o cafe\nvec3(204.,119.,34.0)/255.,  //36 //marron o cafe\nvec3(184.,115.,51.0)/255.  //37 //marron o cafe\n\n    \n);\n\n//----------------------------------------------------\nvec3 getColor(int i)\n{\n    if (i==-2 ) {return mObj.color; }       \n    if (i>-1 ) \n\t\treturn Arrcolores[i];\n}\n\nvec3 getColorf(float ii)\n{\n    int i=int(ii);\n    if (i==-2 ) {return mObj.color; }       \n    if (i>-1 ) \n\t\treturn Arrcolores[i];\n}\n///--------------------------------------------\n\n\n\n\n///------------------\nvec3 ProcesoColor(vec3 colBorde , vec3 colOut, float dist)\n{\n    float thickness = 0.005;  //grosor\n\tfloat blur = 0.004;\t //difuminar\n    \n    float step1 = thickness;\n\tfloat step2 = thickness + blur;\t\n    float step3= smoothstep(step1, step2, dist);\n    vec3 color1 = mix(colBorde, colOut, step3);\t\n    return color1;\n}\n\nvec3 ProcesoColorVec2( vec3 colOut, vec2 dist)\n{\n    float thickness = 0.005;  //grosor\n\tfloat blur = 0.004;\t //difuminar\n    vec3 colBorde=getColorf(dist.y);\n    \n    float step1 = thickness;\n\tfloat step2 = thickness + blur;\t\n    float step3= smoothstep(step1, step2, ( dist.x) );\n    vec3 color1 = mix(colBorde, colOut, step3);\t\n    return color1;\n}\n\nvec3 ProcesoColorVec2Grosor( vec3 colOut, vec2 dist, float grosor)\n{\n    float thickness = grosor;  //grosor\n\t//float blur = 0.004;\t //difuminar\n    float blur = 1.;\t //difuminar  by jeyko\n    \n    vec3 colBorde=getColorf(dist.y);\n    \n    float step1 = thickness;\n\tfloat step2 = thickness + blur;\t\n    float step3= smoothstep(step1, step2, ( dist.x) );\n    vec3 color1 = mix(colBorde, colOut, step3);\t\n    return color1;\n}\n\nvec2 rotatev2(vec2 p, float ang)\n{\n    float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}