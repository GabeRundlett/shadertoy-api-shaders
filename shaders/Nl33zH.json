{
    "Shader": {
        "info": {
            "date": "1637283950",
            "description": "rgb aren't offset from each other, and at resolutions close to screen res, it begins to get weird",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl33zH",
            "likes": 4,
            "name": "lame half tone",
            "published": 3,
            "tags": [
                "halftone"
            ],
            "usePreview": 0,
            "username": "ArmandB",
            "viewed": 332
        },
        "renderpass": [
            {
                "code": "vec3 getCol(vec2 uv){\n    return texture(iChannel0, uv).xyz;\n}\n\nfloat dist(vec2 uv, vec2 uvPx, vec2 pxSize) {\n    return length((uv-uvPx - pxSize/2.0)/pxSize);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvPx = floor(fragCoord/iResolution.xy*dotCount)/dotCount;\n    vec2 pxSize = 1.0/dotCount;\n    vec3 nearCol = getCol(uvPx);\n    vec3 col = vec3(0);\n    \n    vec3 dists = vec3(dist(uv, uvPx, pxSize));\n    \n    dists *= 2.0;\n    \n    if (dists.r < getCol(uvPx).r){\n        col += vec3(1,0,0);\n    }\n    if (dists.g < getCol(uvPx + vec2(0, pxSize.y/2.0)).g){\n        col += vec3(0,1,0);\n    }\n    if (dists.b < getCol(uvPx + vec2(pxSize.x/2.0, 0)).b){\n        col += vec3(0,0,1);\n    }\n\n    fragColor = vec4(col, 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 dotCount = vec2(100,70);",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}