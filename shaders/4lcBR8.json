{
    "Shader": {
        "info": {
            "date": "1538509635",
            "description": "A house made of different layers",
            "flags": 0,
            "hasliked": 0,
            "id": "4lcBR8",
            "likes": 1,
            "name": "House w/ Layers (WIP)",
            "published": 3,
            "tags": [
                "layers",
                "window",
                "house",
                "door",
                "chimney"
            ],
            "usePreview": 0,
            "username": "D4VID",
            "viewed": 434
        },
        "renderpass": [
            {
                "code": "vec2 housePos = vec2(0.5, 0.3);\nvec2 windowPos = vec2(0.3, 0.3);\nvec2 window2Pos = vec2(0.68, 0.3);\nvec2 chimneyPos = vec2(0.3, 0.7);\nvec2 doorPos = vec2(0.5, 0.15);\n\nvec2 houseSideLength = vec2(0.3, 0.2);\n\nvec2 windowSideLength = vec2(0.05, 0.05);\n\nvec2 chimneySideLength = vec2(0.05, 0.1);\n\nvec2 doorSideLength = vec2(0.05, 0.09);\n\nbool layer1On = true;\nbool layer2On = true;\nbool layer3On = true;\nbool layer4On = true;\nbool layer5On = true;\n\n\nvec3 house = vec3(1.0, 0.1, 0.0);\nvec3 window = vec3(1.0, 1.0, 1.0);    \nvec3 chimney = vec3(0.5, 0.5, 0.5);\nvec3 door = vec3(0.5, 0.5, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float aspectRatio = iResolution.y / iResolution.x;\n    uv.y *= aspectRatio;\n    housePos.y *= aspectRatio;\n\twindowPos.y *= aspectRatio;\n\twindow2Pos.y *= aspectRatio;\n\tchimneyPos.y *= aspectRatio;\n\tdoorPos.y *= aspectRatio;\n    \n    \nvec4 BG = vec4(0.0, 0.0, uv.y, 1.0); \nvec4 layer2 = vec4(0.0, 0.0, 0.0, 0.0);\nvec4 layer3 = vec4(0.0, 0.0, 0.0, 0.0);    \nvec4 layer4 = vec4(0.0, 0.0, 0.0, 0.0);\nvec4 layer5 = vec4(0.0, 0.0, 0.0, 0.0);\n    \n    \n    if( length(housePos.x - uv.x) < houseSideLength.x && length(housePos.y - uv.y) < houseSideLength.y && layer2On == true)\n    {\n        layer2 = vec4(house, 1.0);\n        fragColor = layer2;\n    }\n   if(length(windowPos.x - uv.x) < windowSideLength.x && length(windowPos.y - uv.y) <  windowSideLength.y && layer3On == true)\n    {\n        layer3 = vec4(window, 1.0);\n        fragColor = layer3;\n    }\n    if(length(window2Pos.x - uv.x) < windowSideLength.x && length(window2Pos.y - uv.y) <  windowSideLength.y && layer3On == true)\n    {\n        layer3 = vec4(window, 1.0);\n        fragColor = layer3;\n    }\n   if(length(chimneyPos.x - uv.x) < chimneySideLength.x && length(chimneyPos.y - uv.y) <  chimneySideLength.y  && layer4On == true)\n    {\n        layer4 = vec4(chimney, 1.0);\n        fragColor = layer4;\n    }\n   if(length(doorPos.x - uv.x) < doorSideLength.x && length(doorPos.y - uv.y) <  doorSideLength.y && layer5On == true)\n    {\n        layer5 = vec4(door, 1.0);\n        fragColor = layer5;\n    }\n    vec4 Composite = mix(BG, layer4, layer4.a);\n\tComposite = mix(Composite, layer2, layer2.a);\n    Composite = mix(Composite, layer3, layer3.a);\n    Composite = mix(Composite, layer5, layer5.a);\n    fragColor = Composite;\n\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}