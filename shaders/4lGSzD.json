{
    "Shader": {
        "info": {
            "date": "1483136920",
            "description": "( it gets fancy when using a video texture :-) )",
            "flags": 32,
            "hasliked": 0,
            "id": "4lGSzD",
            "likes": 15,
            "name": "puzzle 2",
            "published": 3,
            "tags": [
                "game",
                "puzzle"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1254
        },
        "renderpass": [
            {
                "code": "#define N 10.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n\tU /= R;\n    U = 1.5*U-.25;\n\t\n    O -= O; \n    for (int j=0; j<int(N); j++)\n        for (int i=0; i<int(N); i++) {\n            vec2 T = texture(iChannel0, (vec2(i,j)+.5)/R).xy, // piece #(i,j)\n                 S = step(abs(U-T), vec2(.5/N));                // S==1 if project here\n            if (S.x*S.y>0.) { O = texture(iChannel1, U-T+.5/N+vec2(i,j)/N); return; }\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define N 10.\n\n#define prevM texture(iChannel0, vec2(N+.5)/R)\n#define rnd(U) fract(4567.*sin(.3+dot(U,vec2(1,17.43))))\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iFrame==0) {\n        U -= .5;\n        float n = mod( (U.x+N*U.y)*17.+floor(iDate.w), N*N); // pieces permutation (17: any big prime)\n        U = .5 + vec2(mod(n,N), floor(n/N)) + .5*(2.*rnd(U)-1.);\n        \n        O = vec4((U-.5)/N+.5/N,0,0);          // initial location of pieces\n        O.xy = 1.4*O.xy-.2;\n        return;\n    }\n    \n    vec2 R = iResolution.xy,\n        M = iMouse.xy/R, D=M-iMouse.zw/R;\n    M = 1.5*M-.25;\n    D = 1.5*D-.25;\n\n    O = texture(iChannel0,U/R);\n\n    if ( U == vec2(N+.5) )                    // memorize mouse details\n        if (iMouse.z<=0.) O -= O;             // no click\n        else {\n            O.xy = D;                         // mouse delta\n            if (prevM.xy==vec2(0))            // onClick\n     \t\t  for (int j=0; j<int(N); j++)                     // seek for the piece under mouse\n       \t\t\t for (int i=0; i<int(N); i++) {\n            \t\tvec2 T = texture(iChannel0, (vec2(i,j)+.5)/R).xy, // piece #(i,j)\n                 \t     S = step(abs(M-T), vec2(.5/N));                // S==1 if project here\n                    if (S.x*S.y>0.) { O.zw = vec2(i,j)+.5; return; }    // memorize active piece\n                }\n        }\n        \n    if (max(U.x,U.y)>N || iMouse.z <= 0.) return;\n    \n    if (U == prevM.zw)                  // active piece\n        O.xy += D-prevM.xy;             // displace like mouse\n}\n\n\n\n\n\n\n\n\n\n\n\n\n/**  // --- simpler version without active piece\n{\n    if (U==vec2(N+.5))  O.xy = iMouse.z>0. ? D : M-M;        // memorize mouse delta\n    \n    if (max(U.x,U.y)>N || iMouse.z <= 0.) return;\n    \n    S = step(abs (M-O.xy),vec2(.5/N)); // S==1: piece U under mouse:\n    if (S.x*S.y>0.) O.xy += D-texture(iChannel0,vec2(N+.5)/R).xy;   // follow mouse\n}\n/**/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}