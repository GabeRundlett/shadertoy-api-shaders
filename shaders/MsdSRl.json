{
    "Shader": {
        "info": {
            "date": "1460991032",
            "description": "Messing around with (unclamped) sphere normal vectors.",
            "flags": 0,
            "hasliked": 0,
            "id": "MsdSRl",
            "likes": 32,
            "name": "Electric Whiskers",
            "published": 3,
            "tags": [
                "2d",
                "distortion",
                "plasma",
                "sphere",
                "blending",
                "glow",
                "electric",
                "electricity"
            ],
            "usePreview": 1,
            "username": "ddddddddd",
            "viewed": 1473
        },
        "renderpass": [
            {
                "code": "/*\n\n\"Electric Whiskers\"\nby Dean Alex 2016, dean[at]neuroid co uk\n\nMessing around with (unclamped) sphere normal vectors.\n\nedit. changed the sqrt.\n\n*/\n\n\nfloat sq( in float f ){\n    return sqrt( abs( f )) * sign(f);\n}\nvec3 sq3( in vec3 v ){\n    return vec3(\n        sq(v.x),\n        sq(v.y),\n        sq(v.z)\n    );\n}\n         \nvec3 sh( in vec3 pos, in vec2 uv )\n{\n    vec2 xy = (uv.xy - pos.xy) / pos.z;\n    float len = dot(xy,xy);\n    return vec3( xy, sq( 1.0 - len ));\n}\nfloat tsin( in float mf ){\n    return sin( iTime * mf);\n}\nfloat tcos( in float mf ){\n    return cos( iTime * mf);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec3 norm;\n    float w = iResolution.x;\n    float h = iResolution.y;\n    float m = min(w,h);\n    \n    vec3 s1 = sh(\n        vec3( w * 0.5, h * 0.5, m * 0.5 ),\n        vec2( fragCoord.x, fragCoord.y )\n    );\n    vec3 s2 = sh(\n        vec3( (tsin(1.7)*0.4 + 0.5)*w, (tcos(1.3)*0.4 + 0.5)*h, m * 0.1 ),\n        vec2( fragCoord.x, fragCoord.y )\n    );\n    vec3 s3 = sh(\n        vec3( (tsin(0.5)*0.3 + 0.5)*w, (tcos(-2.0)*0.4 + 0.5)*h, m * 0.5 ),\n        vec2( fragCoord.x, fragCoord.y )\n    );\n    vec3 s4 = sh(\n        vec3( (tcos(-0.31)*0.6 + 0.5)*w, (tsin(-0.4)*0.2 + 0.5)*h, m * 3.3 ),\n        vec2( fragCoord.x, fragCoord.y )\n    );\n    \n    //\n    norm = sq3( cross( s2.yzx, s1.zxy ));\n    norm = sq3( cross( norm, s3.zxy ));\n    norm = sq3( cross( -norm, s4.xyz ));\n    \n    \n    //\n    \n    float mag = length( norm );\n    float a = pow( smoothstep( 1.0, 5.0, mag ), 0.5 );\n    float s = atan( norm.z, norm.x ) / 6.283185307179586;\n    float t = asin( norm.y ) / 3.14159265358979;\n    fragColor = texture( iChannel0, vec2( s*5.1 + iTime*0.2, t * s ));\n    fragColor.g = min( fragColor.g, fragColor.b );\n    vec3 lightDir = normalize( vec3( tcos(1.5) * -1.6, -0.3, tsin(1.5) * 5.0 ));\n    float mflight = max(dot( norm, lightDir), 0.0);\n    float dis1 = 1.0 - length( norm - lightDir ) / 2.0;\n    mflight += pow( dis1, 10.0) * 2.5;\n    fragColor.rgb *= mflight;\n    vec3 l1p = vec3( tsin(1.7) * 0.6, tcos(2.5) * 0.5, -tsin(0.5) * 0.6 );\n    vec3 l1c = vec3( 1.0, 2.0, 3.0 );\n    float dis = 1.0 - length( norm - l1p ) / 2.0;\n    fragColor.rgb += l1c * pow( dis, 0.8 );\n    fragColor = mix( fragColor, vec4(1.0,0.0,0.0,1.0), a );\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}