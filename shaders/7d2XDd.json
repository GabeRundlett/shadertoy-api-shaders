{
    "Shader": {
        "info": {
            "date": "1621615277",
            "description": "something that happenend while working on randomized house plans :)\nthis seems to be a kd-tree, with one division per cell.\ni would like to add doors now, but this is the problem of another day.",
            "flags": 0,
            "hasliked": 0,
            "id": "7d2XDd",
            "likes": 25,
            "name": "kd-tree sdf",
            "published": 3,
            "tags": [
                "kdtree"
            ],
            "usePreview": 1,
            "username": "sympou",
            "viewed": 760
        },
        "renderpass": [
            {
                "code": "#define iterations  4\n#define texMode     false\n#define amplitude   0.7\n\n//Dave_Hoskins's hash function\n//https://www.shadertoy.com/view/4djSRW\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 pos = uv*2.0-1.0;\n    pos.x *= iResolution.x/iResolution.y;\n    pos *= 0.75;\n    \n    vec2 boxSize = vec2(1.0);\n        \n    // box SDF\n    // https://iquilezles.org/articles/distfunctions\n    vec2 q = abs(pos) - 0.5*boxSize;\n    float dist = length(max(q,0.0)) + min(max(q.x,q.y),0.0);\n    \n    //at the end, each cell has a different number\n    int num = 0;\n    \n    // current cell coordinates\n    // (left up -- right down)\n    vec4 corners = vec4(-0.5,-0.5, 0.5,0.5)*boxSize.xyxy;\n\n    //seed\n    float seed  = floor(iTime*0.25   )*123.456 + 1.111;\n    float seed2 = floor(iTime*0.25+1.)*123.456 + 1.111;\n    float transition = fract(iTime*0.25);\n    \n    //now, we divide the box into random sized smaller boxes\n    int k = 1;\n    for (int i = 0; i < iterations; i++) {\n    \n        //x or y ?\n        int j = i % 2;\n        \n        //random line (inside current cell)\n        float r = mix( hash11(seed+float(num)), hash11(seed2+float(num)), transition);\n        r = ( (r-0.5)*amplitude + 0.5 ) * (corners[j+2]-corners[j]) + corners[j];\n                \n        // condition : which side are we on ?\n        int c = int(max(sign(r-pos[j]),0.0));\n        \n        //actualize closest wall coordinate\n        corners[j+c*2] = r;\n        \n        //the cell number gets bigger, or not\n        num += k*c;\n        k += k;\n    }\n  \n    //distance from closest line\n    dist = max(dist, -abs(corners[0]-pos.x));\n    dist = max(dist, -abs(corners[1]-pos.y));\n    dist = max(dist, -abs(corners[2]-pos.x));\n    dist = max(dist, -abs(corners[3]-pos.y));\n    \n    //\"walls\"\n    //dist = abs(dist)-0.02;\n    \n    //\n    \n    \n    //iq's distance color style\n    //https://www.shadertoy.com/view/3ltSW2\n    vec3 col = vec3(1.0) - sign(dist)*vec3(0.1,0.4,0.7);\n    col *= 1.0 - exp(-3.0*abs(dist));\n\tcol *= 0.8 + 0.2*cos(150.0*dist);\n    \n    if (texMode == true) {\n        vec2 uv2 = (pos - corners.xy)/(corners.zw-corners.xy);\n        if (max(abs(uv2.x-0.5),abs(uv2.y-0.5))<=0.5) {\n            col = texture(iChannel0, uv2).rgb;\n        }\n    }\n    \n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(dist)) );\n    \n    fragColor = vec4(col,1.0);\n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}