{
    "Shader": {
        "info": {
            "date": "1719999558",
            "description": "original source  https://www.shadertoy.com/view/MXVSDD and fractal from gaz",
            "flags": 0,
            "hasliked": 0,
            "id": "4XGSWm",
            "likes": 2,
            "name": "matrix way of color",
            "published": 3,
            "tags": [
                "fractal",
                "color",
                "matrix"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 110
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*2.5+.5)\n\n#define CELLS vec2(64.0,30.0)\n#define FALLERS 14.0\n#define FALLERHEIGHT 12.0\n#define PI 3.1415\n\nmat2 rotate2D(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nfloat radar(vec2 uv, vec2 center)\n{\n    const float tau =atan(1.)*8.;\n    vec2 v = uv - center;\n    float theta = atan(v.y, v.x);  \n    float ret;\n    ret = mod(theta + -iTime*1.5, tau);\n    return ret;\n}\n\n\nvec2 rand(vec2 uv) {\n    return floor(abs(mod(cos(\n        uv * 652.6345 + uv.yx * 534.375 +\n        -iTime * 0.0000005 * dot(uv, vec2(0.364, 0.934))),\n     0.001)) * 16000.0);\n}\n\nfloat fallerSpeed(float col, float faller) {\n    return mod(cos(col * 363.435  + faller * 234.323), 0.1) * 1.0 + 0.3;\n}\n\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec2 uv = (C.xy / iResolution.xy) - .5;\n\n   \n    vec4 p;\n   \n    vec2 c23 = rand(vec2(p.w*floor(p.x), p.z));\n    vec3 q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n   \n   \n    float RATIO = iResolution.x / iResolution.y;\n    vec2 TILES_RATIO = 10. * vec2(RATIO, 1.0);\n    vec2 st = C.xy / iResolution.xy;  \n    float t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + 1.07)) * 2.2;\nfloat si = sin(t2);\nfloat co = cos(t2);\nmat2 ma = mat2(co, si, -si, co);\n    st*=ma;\n    st *= 10.;\n    st.x *= RATIO;\n    \n    vec2 pix = mod(uv, 1.0/CELLS);\n   \n    vec2 cell = (uv - pix) * CELLS;\n     \n    pix *= CELLS * vec2(0.8, 1.0) + vec2(0.1, 0.0);\n \npix.x *=mod(C.x,210.);\n    float f;\n    float b = 0.0;\n    for (float i = 0.0; i < FALLERS; ++i) {\n     \n       f = 3.0 - cell.x * 0.05 -\n            mod((iTime + i * 4.34) * fallerSpeed(cell.x, i), FALLERHEIGHT);\n        if (f > 0.0 && f < 1.0)\n            b += f;\n    }\n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p.ywz=g*d+c23.y;\n        p.wz*=ma;\n        p.w+=iTime*0.01;\n   p.wz*=mat2(cos(iTime),sin(iTime), -sin(iTime) ,cos(iTime));\n        \n        a=30.;\n        p.xyz=mod(p.wzy-a,a*2.)-a;\n        s=3.;\n         \n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n           \n            p.x<p.z?p.xyz=p.zyx:p.xyz;\n            p.z<p.x?p.xyz=p.xzy:p.xyz;\n            p.y<p.x?p.xyz=p.xyz.zyx:p.xyz;\n           \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p.xyzw=abs(p.xyzw)*e-\n                vec4(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5., 112.*cos(iTime*.5)*5.\n                 )+f;\n         }\n       \n         g+=e=length(p.yzw.xy)/s;\n    }\n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}