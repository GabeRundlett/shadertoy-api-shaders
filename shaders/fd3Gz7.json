{
    "Shader": {
        "info": {
            "date": "1629350940",
            "description": "transform test",
            "flags": 0,
            "hasliked": 0,
            "id": "fd3Gz7",
            "likes": 0,
            "name": "transform test",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "lasoy",
            "viewed": 262
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\nfloat sdBox(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x,d.y), 0.0);\n}\n\nmat2 rot(float a) {\n    float cs = cos(a);\n    float ss = sin(a);\n    return mat2(cs, ss, -ss, cs);\n}\n\n\nmat2 scale(float sx) {\n    return mat2(sx, 0., 0., sx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float pix = 2./iResolution.y;\n    \n    float a = fract(iTime / 6.);\n    \n    float n = floor(a * 5.);\n    float t = fract(a * 5.);\n    t = smoothstep(.2, .8, t);\n    if (n < 1.) {\n        uv += t * .4;\n    } else if (n < 2.) {\n        uv += .4;\n        uv = rot(t * PI * 2.) * uv;\n    } else if (n < 3.) {\n        uv += .4;\n        uv.y -= .8 * t;\n    \n    } else if (n < 4.) {\n        uv.x += .4;\n        uv.y -= .4;\n        \n        uv.x -= .8 * t;\n        uv.y += .8 * t;\n        \n        uv = rot(t * 2. * PI) * uv;\n        uv = scale(1./(1. + t)) * uv;\n        \n        \n    } else if (n < 5.) {\n        uv.x -= .4;\n        uv.y += .4;\n        uv = scale(.5) * uv;\n  \n        uv.x += .2 * t;\n        uv.y -= .2 * t;\n        uv = scale(1. + t) * uv;\n        uv = rot(t * 2. * PI) * uv;\n    }\n    \n    vec3 col = vec3(smoothstep(pix, -pix, sdBox(uv, vec2(.1, .1))), .0, .0);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}