{
    "Shader": {
        "info": {
            "date": "1657549994",
            "description": "Paint by dragging your mouse across!\n\nUsed a convolution matrix that accentuates certain frequencies in order to smooth out a bunch of lines that can be drawn w/ your mouse",
            "flags": 32,
            "hasliked": 0,
            "id": "ssGBRz",
            "likes": 1,
            "name": "Organic growth w/ convolution",
            "published": 3,
            "tags": [
                "convolution",
                "smooth",
                "backbuffer"
            ],
            "usePreview": 0,
            "username": "ninofiliu",
            "viewed": 288
        },
        "renderpass": [
            {
                "code": "// This just paints whatever is in BufferA\nvoid mainImage(out vec4 color, in vec2 coord) {\n    vec2 uv = coord / iResolution.xy;\n    color = texture(iChannel0, uv);    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// blur convolution\n/*\nconst int r = 1;\nconst int l = (2*r+1)*(2*r+1);\nfloat m[l] = float[](\n    0., 1., 0.,\n    1., 0., 1.,\n    0., 1., 0.\n);\nfloat mt = 4.01;\n*/\n\n// organic growth convolution\nconst int r = 1;\nconst int l = (2*r+1)*(2*r+1);\nfloat m[l] = float[](\n    -1., 5., -1.,\n    5., 0., 5.,\n    -1., 5., -1.\n);\nfloat mt = 16.1;\n\nvoid mainImage(out vec4 color, in vec2 coord) {\n    color.rgb = vec3(0.);\n\n    vec2 uv = coord / iResolution.xy;\n    vec2 mouseUv = iMouse.xy / iResolution.xy;\n    \n    for (int x = -1; x <=1; x++) {\n        for (int y = -1; y <=1; y++) {\n            int i = (y+1)*3+x+1;\n            float v = m[i] / mt;\n            color += 0.9 * v * texture(\n                iChannel0,\n                vec2(\n                    uv.x+float(x)/iResolution.x,\n                    uv.y+float(y)/iResolution.y\n                )\n            );\n        }\n    }        \n    \n    if (distance(uv, mouseUv) < 0.05 && iMouse.z > 0.) {\n        color.rgb = 1. - color.rgb;\n    }\n    \n    color.rgb = clamp(color.rgb, 0., 1.);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}