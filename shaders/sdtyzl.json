{
    "Shader": {
        "info": {
            "date": "1653960759",
            "description": "2d outline",
            "flags": 8,
            "hasliked": 0,
            "id": "sdtyzl",
            "likes": 36,
            "name": "2d outline",
            "published": 3,
            "tags": [
                "2doutline"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 888
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdTunnel( in vec2 p, in vec2 wh )\n{\n    p.x = abs(p.x); p.y = -p.y;\n    vec2 q = p - wh;\n\n    float d1 = dot2(vec2(max(q.x,0.0),q.y));\n    q.x = (p.y>0.0) ? q.x : length(p)-wh.x;\n    float d2 = dot2(vec2(q.x,max(q.y,0.0)));\n    float d = sqrt( min(d1,d2) );\n    \n    return (max(q.x,q.y)<0.0) ? -d : d;\n}\n\nvec3 CirculoBorde1(vec2 p, vec2 pos,  vec3 colOut, vec3 colIn)\n{\n    float d3= sdCircle(p-pos, 0.5 );\n    float d4= sdCircle(p-pos, 0.3 );\n    vec3 col= DrawFigBorde(vec3(0.0), colOut, d3 );\n    col= DrawFigBorde(vec3(1.0), col, d4 );\n    return col;\n}\n\n\nvec3 bloque1(vec2 p, vec3 colOut, vec3 colIn )\n{   float r=0.5;\n    float anchb=0.2,altob=0.2;\n    float ancha=3.0,altoa=3.0;\n    float d1= sdBox(p, vec2(ancha+anchb,altoa+altob) )-r;\n    float d2= sdBox(p, vec2(ancha,altoa) )-r;\n    vec3 col= DrawFigBorde(vec3(0.0), colOut, d1 );\n    col *= 1.0 - 0.5*exp(-5.0*abs(d1)); //iq\n    col= DrawFigBorde(colIn, col, d2 );\n    col *= 1.0 - 0.5*exp(-5.0*abs(d2)); //iq\n    \n    p.x=abs(p.x)-2.3;\n    p.y=abs(p.y)-2.3;\n    col= CirculoBorde1(p, vec2(0.0,0.0), col,vec3(1.0));\n    return col;\n }\n\n\nvec3 bloque2(vec2 p, vec3 colOut, vec3 colIn )\n{   float r=0.5;\n    float anchb=0.2,altob=0.2;\n    float ancha=3.0,altoa=5.0;\n    float d1= sdBox(p, vec2(ancha+anchb,altoa+altob) )-r;\n    float d2= sdBox(p, vec2(ancha,altoa) )-r;\n    vec3 col= DrawFigBorde(vec3(0.0), colOut, d1 );\n    col *= 1.0 - 0.5*exp(-5.0*abs(d1));\n    col= DrawFigBorde(colIn, col, d2 );\n    col *= 1.0 - 0.5*exp(-5.0*abs(d2));\n    \n    p.x=abs(p.x)-2.3;\n    p.y=abs(p.y)-2.3;\n    col= CirculoBorde1(p, vec2(0.0,1.8), col,colIn);\n    return col;\n }\n\n\nvec3 bloquePiso(vec2 p, vec3 colOut)\n{   vec3 col1= vec3(173,104,47)/255.;\n    float alto=1.3;\n    float d1= sdBox(p, vec2(25.0,alto));\n    float d2= sdBox(p, vec2(25.0-0.5,alto-0.3));\n    \n    vec3 col= DrawFigBorde(vec3(0.0), colOut,d1 );\n    col= DrawFigBorde(col1, col,d2 );\n    col *= 1.0 - 0.5*exp(-8.0*abs(d2));\n    return col;\n}\n\nfloat bloqueZigzagDist(vec2 p)\n{   p.x=p.y*0.5+0.5*sin(p.y)+mod(p.x,1.0)*6.0;\n    float d1=p.x;\n    float d2=p.x-2.;\n    d1= differenceSDF(d2, d1);\n    return d1;\n}\n\n\nvec3 bloquePisoLineas(vec2 p, vec3 colOut)\n{   vec3 col1= vec3(173,104,47)/255.;\n    float d1= sdBox(p, vec2(25.0,5.0));\n    float d2= sdBox(p, vec2(25.0-0.5,5.0-0.2));\n    float d3= bloqueZigzagDist(p-vec2(0.0,4.0));\n    d3=  intersectSDF(d1, d3);\n    vec3 col= DrawFigBorde(vec3(0.0), colOut,d1 );\n    col= DrawFigBorde(col1, col,d2 );\n    col *= 1.0 - 0.5*exp(-8.0*abs(d2));\n    col= DrawFigBorde(vec3(0.0), col,d3 );\n    return col;\n}\n\n\nvec3 bloqueZigzag(vec2 p, vec3 colOut)\n{  vec3 col1= vec3(173,104,47)/255.;\n    p.x=p.y*0.5+mod(p.x,1.0)*5.0;\n    float d1=p.x;\n    float d2=p.x-0.9;\n    d1= differenceSDF(d2, d1);\n    vec3 col= DrawFigBorde(vec3(0.0), colOut,d1 );\n    return col;\n}\n\nvec3 distTunelcol(vec2 p, vec2 med, vec3 colOut)\n{\n    vec2 meddif=vec2(0.2,0.2);\n    float d1a= sdTunnel(p, med );\n    float d1b= sdTunnel(p, med-meddif );\n    vec3 col= DrawFigBorde(vec3(0.0), colOut,d1a );\n    col= DrawFigBorde(vec3(0.0,0.8,0.0), col,d1b );\n    return col;\n}\n\nvec3 OjosDist(vec2 p,vec3 colOut)\n{\n    p.x=abs(p.x)-0.8;\n    float d1= sdCircle( p, 0.25 );\n    vec3 col= DrawFigBorde(vec3(0.0), colOut,d1 );\n    return col;\n}\n\nvec3 planta(vec2 p, vec3 colOut)\n{\n    colOut= distTunelcol(p-vec2(3.0,3.0), vec2(2.0,6.0),colOut );\n    colOut= OjosDist(p-vec2(3.0,3.2),colOut);\n    colOut= distTunelcol(p, vec2(2.0,3.0), colOut );\n    colOut= OjosDist(p-vec2(0.0,0.2),colOut);\n    colOut= distTunelcol(p-vec2(3.0,-1.0), vec2(2.0,2.0),colOut );\n    colOut= distTunelcol(p-vec2(6.0,1.0), vec2(2.0,4.0), colOut );\n    colOut= distTunelcol(p-vec2(8.0,0.0), vec2(2.0,3.0), colOut );\n    colOut= OjosDist(p-vec2(8.0,0.0),colOut);\n    colOut= distTunelcol(p-vec2(5.0,-2.0), vec2(2.0,1.0),colOut );\n    colOut= OjosDist(p-vec2(5.0,-2.0),colOut);\n    vec3 col=colOut;\n    return col;\n}\n\n\nvec3 Nube(vec2 p, vec3 colOut)\n{\n    vec2 p0=p;\n    p.x=abs(p.x)-1.8;\n    float d1= sdCircle( p, 1.25 );\n    float d2= sdCircle( p0-vec2(0.0,1.0), 1.5 );\n    float d3= sdBox(p0, vec2(0.5,0.1));\n    \n    vec3 col= DrawFigSolo(vec3(1.0), colOut,d1 );\n    \n    \n    col *= 1.0 - 0.5*exp(-5.0*abs(d1));\n    \n    \n    col= DrawFigSolo(vec3(1.0), col,d2 );\n    col *= 1.0 - 0.5*exp(-5.0*abs(d2));\n    col=OjosDist(p0-vec2(-0.2,1.2),col);\n    \n    col= DrawFigSolo(vec3(0.0), col,d3);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.1);\n    float esc=14.0;\n    vec2 uv0=uv;\n    uv*=esc;\n    vec3 col =vec3(105,156,248)/255.0-uv0.y*0.25;\n    \n    vec3 col1;\n    col=bloquePisoLineas(uv-vec2(0.0,-11.0),col);\n    col1=vec3(88.,200.,246.)/255.0;\n    col= bloque2(uv-vec2(4.5,2.0), col,col1 );\n    col1=vec3(245.0,144.,72.0)/255.;\n    col= bloque1(uv, col,col1 );\n    col=bloquePiso(uv-vec2(0.0,-5.0), col);\n    col= planta(uv-vec2(-15.0,-0.7), col);\n    float posx=5.0*sin(iTime);\n    col= Nube(uv-vec2(-9.0+posx,7.0), col);\n    col= Nube(uv-vec2(5.0-posx,9.0), col);\n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nstruct Note {\n    // in Hz, see \"common\" tab\n    float frequency;\n    // offset - time in seconds when to start playing note\n    float offset;\n    // duration of a note (1/4, 1/8, ...), see \"common\" tab\n    float duration;\n};\n\n\n\n\n\n//version D \n////Octava #1\n//--fin--\n////Octava #2\n const float A0 =27.5;  //1\n const float A_0 =29.14;  //2\n const float B0 =30.87;  //3\n//--fin--\n////Octava #3\n const float C1 =32.7;  //4\n const float C_1 =34.65;  //5\n const float D1 =36.71;  //6\n const float D_1 =38.89;  //7\n const float E1 =41.2;  //8\n const float F1 =43.65;  //9\n const float F_1 =46.25;  //10\n const float G1 =49.0;  //11\n const float G_1 =51.91;  //12\n const float A1 =55.;  //13\n const float A_1 =58.27;  //14\n const float B1 =61.74;  //15\n//--fin--\n////Octava #4\n const float C2 =65.41;  //16\n const float C_2 =69.3;  //17\n const float D2 =73.42;  //18\n const float D_2 =77.78;  //19\n const float E2 =82.41;  //20\n const float F2 =87.31;  //21\n const float F_2 =92.5;  //22\n const float G2 =98.;  //23\n const float G_2 =103.83;  //24\n const float A2 =110.;  //25\n const float A_2 =116.54;  //26\n const float B2 =123.47;  //27\n//--fin--\n////Octava #5\n const float C3 =130.81;  //28\n const float C_3 =138.59;  //29\n const float D3 =146.83;  //30\n const float D_3 =155.56;  //31\n const float E3 =164.81;  //32\n const float F3 =174.61;  //33\n const float F_3 =185.;  //34\n const float G3 =196.;  //35\n const float G_3 =207.65;  //36\n const float A3 =220.;  //37\n const float A_3 =233.08;  //38\n const float B3 =246.94;  //39\n//--fin--\n////Octava #6\n const float C4 =261.63;  //40\n const float C_4 =277.18;  //41\n const float D4 =293.66;  //42\n const float D_4 =311.13;  //43\n const float E4 =329.63;  //44\n const float F4 =349.23;  //45\n const float F_4 =369.99;  //46\n const float G4 =392.;  //47\n const float G_4 =415.3;  //48\n const float A4 =440.;  //49\n const float A_4 =466.16;  //50\n const float B4 =493.88;  //51\n//--fin--\n////Octava #7\n const float C5 =523.25;  //52\n const float C_5 =554.37;  //53\n const float D5 =587.33;  //54\n const float D_5 =622.25;  //55\n const float E5 =659.26;  //56\n const float F5 =698.46;  //57\n const float F_5 =739.99;  //58\n const float G5 =783.99;  //59\n const float G_5 =830.61;  //60\n const float A5 =880.;  //61\n const float A_5 =932.33;  //62\n const float B5 =987.77;  //63\n//--fin--\n////Octava #8\n const float C6 =1046.5;  //64\n const float C_6 =1108.73;  //65\n const float D6 =1174.66;  //66\n const float D_6 =1244.51;  //67\n const float E6 =1318.51;  //68\n const float F6 =1396.91;  //69\n const float F_6 =1479.98;  //70\n const float G6 =1567.98;  //71\n const float G_6 =1661.22;  //72\n const float A6 =1760.;  //73\n const float A_6 =1864.66;  //74\n const float B6 =1975.53;  //75\n//--fin--\n////Octava #9\n const float C7 =2093.;  //76\n const float C_7 =2217.46;  //77\n const float D7 =2349.32;  //78\n const float D_7 =2489.02;  //79\n const float E7 =2637.02;  //80\n const float F7 =2793.83;  //81\n const float F_7 =2959.96;  //82\n const float G7 =3135.96;  //83\n const float G_7 =3322.44;  //84\n const float A7 =3520.;  //85\n const float A_7 =3729.31;  //86\n const float B7 =3951.07;  //87\n//--fin--\n////Octava #10\n const float C8 =4186.01;  //88\n const float C_8 =4434.92;  //89\n const float D8 =4698.64;  //90\n const float D_8 =4978.03;  //91\n const float E8 =5274.04;  //92\n const float F8 =5587.65;  //93\n const float F_8 =5919.91;  //94\n const float G8 =6271.93;  //95\n const float G_8 =6644.88;  //96\n const float A8 =7040.;  //97\n const float A_8 =7458.62;  //98\n const float B8 =7902.13;  //99\n//--fin--\n\n\n\nconst Note[] notes = Note[] (\n\nNote(G3,0.00000,0.25),\nNote(G3,0.25000,0.25),\nNote(G3,0.50000,0.25),\nNote(C3,0.75000,0.5),\nNote(G3,1.25000,0.5),\nNote(F3,1.75000,0.125),\nNote(E3,1.87500,0.125),\nNote(D3,2.00000,0.125),\nNote(C4,2.12500,0.5),\nNote(G3,2.62500,0.25),\nNote(F3,2.87500,0.125),\nNote(E3,3.00000,0.125),\nNote(D3,3.12500,0.125),\nNote(C4,3.25000,0.5),\nNote(G3,3.75000,0.25),\nNote(F3,4.00000,0.125),\nNote(E3,4.12500,0.125),\nNote(F3,4.25000,0.125),\nNote(D3,4.37500,0.5),\nNote(G3,4.87500,0.125),\nNote(G3,5.00000,0.125),\nNote(G3,5.12500,0.125),\nNote(C3,5.25000,0.5),\nNote(G3,5.75000,0.5),\nNote(F3,6.25000,0.125),\nNote(E3,6.37500,0.125),\nNote(D3,6.50000,0.125),\nNote(C4,6.62500,0.5),\nNote(G3,7.12500,0.25),\nNote(F3,7.37500,0.125),\nNote(E3,7.50000,0.125),\nNote(D3,7.62500,0.125),\nNote(C4,7.75000,0.5),\nNote(G3,8.25000,0.25)\n\n\n\n);\n\nfloat Weight( float x )\n{  if( x < 0.0 )x = - x;\n\tif( x < 1.0 )return (1.0 - 2.0*x*x + x*x*x) ;\n\tif( x < 2.0 )return (4.0 - 8.*x + 5.*x*x - x*x*x) ;\nreturn 0.0 ;\n}\n\n\nfloat saw(float t, float note, float octave)\n{   return fract(t*note*exp2(octave-1.))-0.5; }\n\n\nvec2 noteFreq(Note note, float time) \n{\n    float octava=3.0;\n    float n1=saw(time,note.frequency, octava)* exp(-1.0/note.duration * (time - note.offset));  ///ORIGINAL\n    float t=time;\n    n1=Weight(n1)*n1;    \n    return vec2(n1);\n}\n\n\n\nvec2 mainSound( in int samp,float time) \n{   vec2 result;\n    //float tt=sin(time*0.25);\n    float ftime= mod(time*0.5, 10.0);\n    \n    for (int i = 0; i < notes.length(); i++) {\n        Note note = notes[i];\n        float x = float(i) * 1.0;\n        if (ftime > note.offset) \n        { result += noteFreq(note, ftime);  }\n    }\n    return result*0.135;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}