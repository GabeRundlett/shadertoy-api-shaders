{
    "Shader": {
        "info": {
            "date": "1606773095",
            "description": "the flag of Romania with wind effect ... \nhttps://en.wikipedia.org/wiki/Flag_of_Romania",
            "flags": 0,
            "hasliked": 0,
            "id": "tddcWl",
            "likes": 1,
            "name": "the flag of Romania - 003",
            "published": 3,
            "tags": [
                "flag",
                "romania",
                "catafest"
            ],
            "usePreview": 0,
            "username": "catafest",
            "viewed": 285
        },
        "renderpass": [
            {
                "code": "//The flag is coincidentally very similar to the civil flag of Andorra and \n//the state flag of Chad. \n//The similarity with Chad's flag, which is identical apart from allowing a broader range of shades of \n//blue, yellow and red, has caused international discussion. \n//see https://en.wikipedia.org/wiki/Flag_of_Romania\n//the gl_FragColor is a vec4 type of float values in the range 0 to 1.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // set color background\n\tfragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    // set direction flag for X\n    float flag_X = uv.x * 4.0 - 1.1;\n    // set direction flag for Y and wind effect with sin and time\n    float flag_Y = uv.y / 3.0 - (sin((flag_X - iTime) * 6.0) * 0.01)  ;\n    // set sized flagX by flagY\n    flag_X = flag_X/1.8 - flag_Y/1.1;\n    // build the area for flag\n    if (flag_X > 0.0 && flag_X < 1.0  && flag_Y > 0.1  && flag_Y < 0.18) \n    { \t\n        // set a size to fill with colors \n\t\tfloat size = 4.0;\n        // build the flag by flag_X\n\t\tif (flag_X < 1.0 / size) \n\t\t{\n\t\t\t// Output to screen with fill the screen with blue\n\t\t\tfragColor = vec4(0,0,1,0);\n            \t\n\t\t} else if (flag_X < 2.0 / size) {     \n\t\t\t// fill the 2/3 of size with yellow color\n\t\t\tfragColor = vec4(1,1,0,0);\n        \t    \n\t\t} else if (flag_X < 3.0 / size) {\n   \n\t\t\t// fill the last 1/3 with the red color \n\t\t\tfragColor = vec4(1,0,0,0);\n\t\t}\n\t}\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}