{
    "Shader": {
        "info": {
            "date": "1679994162",
            "description": "waterrrrrrr2",
            "flags": 0,
            "hasliked": 0,
            "id": "DscSzB",
            "likes": 2,
            "name": "waterrrrrrr2",
            "published": 3,
            "tags": [
                "waterrrrrrr2"
            ],
            "usePreview": 0,
            "username": "tianluo97",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "// Made by k-mouse (2016-11-23)\n// Modified from David Hoskins (2013-07-07) and joltz0r (2013-07-04)\n\n#define TAU 6.28318530718\n\n#define TILING_FACTOR 1.0\n#define MAX_ITER 8\n\nconst vec2 target_resolution = vec2(940, 86);\n\nfloat waterHighlight(vec2 p, float time, float foaminess)\n{\n    vec2 i = vec2(p);\n\tfloat c = 0.0;\n    float foaminess_factor = mix(1.0, 6.0, foaminess);\n\tfloat inten = .005 * foaminess_factor;\n\n\tfor (int n = 0; n < MAX_ITER; n++) \n\t{\n\t\tfloat t = time * (1.0 - (3.5 / float(n+1)));\n\t\ti = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n\t\tc += 1.0/length(vec2(p.x / (sin(i.x+t)),p.y / (cos(i.y+t))));\n\t}\n\tc = 0.2 + c / (inten * float(MAX_ITER));\n\tc = 1.17-pow(c, 1.4);\n    c = pow(abs(c), 8.0);\n\treturn c / sqrt(foaminess_factor);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tfloat time = iTime * 1. +23.0;\n\tvec2 texCoord = fragCoord/iResolution.xy;\n    // Own uv variable\n    vec2 uv = texCoord;\n    \n    // Center origin around screen center (range -0.5, 0.5)\n    uv -= .5;\n    \n    // Squish image in excessive dimension\n    float r = (iResolution.x/iResolution.y) / (target_resolution.x/target_resolution.y);\n    if (r >= 1.) uv.x *= r;\n    else uv.y /= r;\n    \n    // Recenter origin to start at 0 (range 0.0, 1.0)\n    uv += .5;\n    uv.y -= 0.5/r - 0.5; \n    \n    vec2 uv0 = uv;\n    uv0.x *= 2.0;\n\tvec2 uv_square = vec2(uv0.x * iResolution.x / iResolution.y, uv0.y);\n    //float dist_center = pow(2.0*length(uv - 0.5), 2.0);\n    \n    float dist_center = pow(abs((uv.y - 0.5) * 2.0),.8);\n    \n    float foaminess = smoothstep(0.4, 1.6, dist_center);\n    float clearness = 0.1 + 0.9*smoothstep(0.1, 0.5, dist_center);\n    \n\tvec2 p = mod(uv_square*TAU*TILING_FACTOR, TAU)-250.0;\n    \n    float c = waterHighlight(p, time, foaminess);\n    \n    vec3 water_color = vec3(0.0, 0.35, 0.5);\n\tvec3 color = vec3(c);\n    color = clamp(color + water_color, 0.0, 1.0);\n    \n    color = mix(water_color, color, 1.0);\n\n\tfragColor = vec4(color, 1.0);\n    if (uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.) fragColor = vec4(0);    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}