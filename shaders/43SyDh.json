{
    "Shader": {
        "info": {
            "date": "1727177683",
            "description": "This happend when I misarrange cubic spline equation. the \"iTime\" thing is added to smoothly interpolate between times.",
            "flags": 0,
            "hasliked": 0,
            "id": "43SyDh",
            "likes": 2,
            "name": "twinkle blue grid",
            "published": 3,
            "tags": [
                "2d",
                "grid",
                "random",
                "cubic",
                "twinkle"
            ],
            "usePreview": 0,
            "username": "silica163",
            "viewed": 49
        },
        "renderpass": [
            {
                "code": "float rand(vec2 p){\n    float v = fract(8951.9201*sin(dot(p,vec2(0.1031,0.0031))));\n    return v;\n}\n\nvec4 cubicBezier(float t, vec4 a, vec4 b, vec4 c, vec4 d){\n    float r = 1.-t;\n    float r2 = r*r;\n    float r3 = r*r*r;\n    float t2 = t*t;\n    float t3 = t*t*t;\n\n    return r3*a + 3.*t*r2*b + 3.*t2*r*c + t3*d;\n}\n\nvec4 cubicSpline(float t, vec4 a, vec4 b, vec4 c, vec4 d){\n    vec4 ca = c - a;\n    vec4 db = d - b;\n\n    float r = 1.-t;\n    float r2 = r*r;\n    float r3 = r*r*r;\n    float t2 = t*t;\n    float t3 = t*t*t;\n////////////////////////// | the correct one\n    return              // V\n        r3*b +\n        t*r2*(b + ca) + // t*r2*(3.*b + ca) + \n        t2*r*(c - db) + // t2*r*(3.*c - db) +\n        t3*c;\n////////////////////////////////////////////\n}\n\nfloat randCubic(vec2 uv){\n    vec2 uf = floor(uv);\n    uv = fract(uv);\n    float r[16];\n    float ft = 1.;\n    \n    float t = iTime;\n    ft = fract(t);\n    ft = ft*ft*(3.-2.*ft);\n    t = floor(t);\n    \n    for(int i = 0; i < 16; i++){\n        float r0 = rand(t + uf + vec2(i%4,i/4));\n        float r1 = rand((t + 1.) + uf + vec2(i%4,i/4));\n        r[i] = mix(r0, r1, ft);\n    }\n\n/*\n  | 0 | 1 | 2 | 3\n0 | 0   1   2   3\n1 | 4   5   6   7\n2 | 8   9  10  11\n3 |12  13  14  15\n\n*/\n    vec4 g = cubicSpline(uv.y,\n            vec4(r[0],r[1],r[2],r[3]),\n            vec4(r[4],r[5],r[6],r[7]),\n            vec4(r[8],r[9],r[10],r[11]),\n            vec4(r[12],r[13],r[14],r[15])\n            );\n    return cubicSpline(uv.x, g.xxxx, g.yyyy, g.zzzz, g.wwww).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (2.*fragCoord.xy - iResolution.xy)/iResolution.y;\n    float c = randCubic(uv*4.);\n    fragColor = vec4(mix(vec3(0.,.05,.3),vec3(.5,.7,1),c),1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}