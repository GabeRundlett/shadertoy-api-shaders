{
    "Shader": {
        "info": {
            "date": "1625140699",
            "description": "...",
            "flags": 0,
            "hasliked": 0,
            "id": "slfXzH",
            "likes": 5,
            "name": "- Thor -",
            "published": 3,
            "tags": [
                "2d",
                "3d",
                "rotation",
                "thor"
            ],
            "usePreview": 0,
            "username": "Mihaha",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "/*\n\n> by MihasGames, 01.07.2021 <\n(https://mihas-games.itch.io/)\n\n*/\n\nfloat sum(vec2 v) { return v.x + v.y; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.95);\n    float t = iTime*2.;\n    \n    // Pixel Normalizations //\n    vec2 uv01 = fragCoord.xy/iResolution.xy,\n         uv = (uv01 - 0.5) * vec2(iResolution.x / iResolution.y, 1) * 3.6;\n    \n    vec2 cpos = uv*24.5 + vec2(0, -t*2.);\n    if (sum(cos(cpos)) > 1.6) col = vec3(0.9); // Circles //\n   \n    // Thor //\n    float r = sin(t/4.)*0.2-0.7, R = 1.;\n    \n    for (float z=2.; z >=-2.; z-=0.03) {\n        vec3 v = vec3(uv.x, uv.y, z);\n        v.zy *= mat2( cos(t), -sin(t), sin(t), cos(t) );\n        v.yx *= mat2( cos(t/1.2), -sin(t/1.2), sin(t/1.2), cos(t/1.2) );\n\n        if (sqrt( pow( sqrt(v.x*v.x + v.z*v.z)-R, 2.) + pow(v.y, 2.) ) - r < 1.) {\n            col = vec3(uv01.xy, 1.) * vec3((z*.5+.5)/1.5+0.65);\n            break;\n        }\n    } \n    \n    col *= (1. - length((uv01-0.5)/2.))*1.1; // Vignette //\n    \n    fragColor = vec4(col,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}