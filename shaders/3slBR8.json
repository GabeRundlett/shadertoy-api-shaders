{
    "Shader": {
        "info": {
            "date": "1587677639",
            "description": "They don't want to  get too close, but they don't want to stray away either",
            "flags": 32,
            "hasliked": 0,
            "id": "3slBR8",
            "likes": 7,
            "name": "Orderly fashion",
            "published": 3,
            "tags": [
                "2d",
                "mouse",
                "buffer",
                "particle"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 419
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 f, in vec2 u ){\n    f = vec4(0);\n    for(int i = 0; i < int(mem); i++){\n        float d = length(u - ch(iChannel0, vec2(i,0.)).xy);\n        f += 1./(d*d);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;\n\nfloat mass = 1.;\nfloat g = 18.;\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    ivec2 iu = ivec2(u);\n    \n    if(iu.x <= int(mem) && iu.y == 0){\n        vec4 bA = ch(iChannel0, u); \n        \n        for(int i = 0; i < int(mem); i++){\n            if( i != iu.x){\n                vec2 subj = ch(iChannel0, vec2(i,0.)).xy;\n     \t\t\tfloat r = max(length(bA.xy - subj), 10.0);\t   \n        \t\t\n                vec2 dir = normalize(bA.xy - subj);\n        \t\tfloat grav = -(g*2.*mass) / (r*r);\n                \n                bA.z += grav*dir.x*dt;\n                bA.w += grav*dir.y*dt;  \n                \n                bA.x -= step(seperation, r) * stick*dir.x*dt;\n                bA.y -= step(seperation, r) * stick*dir.y*dt;\n            }\n    \t}\n        \n        if(iMouse.z > 0.){\n         \tfloat r = max(length(iMouse.xy - bA.xy), 10.0);\n            vec2 dir = normalize(bA.xy - iMouse.xy);\n            float ef = -(200.*mass) / r;\n            \n            bA.z -= ef*dir.x*dt;\n            bA.w -= ef*dir.y*dt;  \n            \n            f = vec4(0);\n        }\n        \n        bA.z -= 0.0015*bA.z;\n        bA.w -= 0.0015*bA.w;\n        \n        bA.x -= bA.z*dt;\n        bA.y -= bA.w*dt;\n        \n        bA.x = clamp(bA.x, 10., R.x);\n        bA.y = clamp(bA.y, 10., R.y);\n        \n        \n    \tif(iFrame == 0){\n            if(u.x <= mem && iu.y == 0 ){\n                bA.xy = hash22(u)*R.xy;\n                bA.zw = vec2(0.);\n            }\n    \t}\n        \n        f = bA;\n    }\n    else return;\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n#define ss(a, b, t) smoothstep(a, b, t)\n\n#define ch(chan, p) texelFetch(chan, ivec2(p), 0)\n#define mem iResolution.x/4.\n\nfloat dt = 0.2;\n\n// fun parameters\n#define stick 0.6\n#define seperation 200.\n\nvec2 hash22(vec2 p){\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}