{
    "Shader": {
        "info": {
            "date": "1599167571",
            "description": "From https://www.shadertoy.com/view/ldcBW7 but modified",
            "flags": 64,
            "hasliked": 0,
            "id": "3lSfRy",
            "likes": 4,
            "name": "Audio Glow Circle",
            "published": 3,
            "tags": [
                "circle",
                "glow"
            ],
            "usePreview": 0,
            "username": "TimArt",
            "viewed": 417
        },
        "renderpass": [
            {
                "code": "// SDF circle with some weird magic constants\n/*float circle (vec2 uv, vec2 center, float radius)\n{\n    return 0.7f / abs (length (uv - center) - radius) / 25.0f;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.0f * fragCoord.xy - iResolution.xy) / iResolution.y;\n \n    float ratio = iResolution.x/iResolution.y;\n    float norm = (uv.x/ratio+1.)/2.;\n    float wave = texelFetch(iChannel0, ivec2(norm*512.,1), 0).x * 0.4;\n    \n    vec3 colorHue = vec3(0.2, 1.0, 0.6);\n    \n    //uv.x=wave-0.5; // turn circle into two waves!\n    \n    fragColor.xyz = colorHue * circle(uv, vec2(0), 1.0-wave);\n    fragColor.xyz += 0.1*colorHue;\n}*/\n\n#define THICKNESS 0.02\n#define BUFFER_SIZE 512.0\n\nvoid getAmplitudeForXPos (in float xPos, out float audioAmplitude)\n{\n   // Buffer size - 1\n   float perfectSamplePosition = (BUFFER_SIZE - 1.0f) * xPos / resolution.x;\n   int leftSampleIndex = int (floor (perfectSamplePosition));\n   int rightSampleIndex = int (ceil (perfectSamplePosition));\n   \n   float audioSampleDataLeft = texelFetch(iChannel0, ivec2(leftSampleIndex,1), 0).x;\n   float audioSampleDataRight = texelFetch(iChannel0, ivec2(rightSampleIndex,1), 0).x;\n   \n   audioAmplitude = mix (audioSampleDataLeft, audioSampleDataRight, fract (perfectSamplePosition));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float y = fragCoord.y / iResolution.y;\n    float amplitude = 0.0;\n    getAmplitudeForXPos (fragCoord.x, amplitude);\n\n    // Centers & Reduces Wave Amplitude\n    amplitude = 0.5 - amplitude / 2.5;\n    float r = abs (THICKNESS / (amplitude-y));\n\n    fragColor = vec4 (r - abs (r * 0.2), r - abs (r * 0.2), r - abs (r * 0.2), 1.0);\n};",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23841,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/timart/mango-tree-girl"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}