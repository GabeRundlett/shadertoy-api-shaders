{
    "Shader": {
        "info": {
            "date": "1643346087",
            "description": "A creepy alien world",
            "flags": 0,
            "hasliked": 0,
            "id": "fd2cWz",
            "likes": 1,
            "name": "Alien landscape",
            "published": 3,
            "tags": [
                "raymarching",
                "terrain",
                "alien"
            ],
            "usePreview": 0,
            "username": "pancakespeople",
            "viewed": 251
        },
        "renderpass": [
            {
                "code": "vec2 random2(vec2 st) {\n\tst = vec2(dot(st, vec2(127.1, 311.7)),\n\t\tdot(st, vec2(269.5, 183.3)));\n\treturn -1.0 + 2.0 * fract(sin(st) * 43758.5453123 * 0.7897);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n\tvec2 i = floor(st);\n\tvec2 f = fract(st);\n\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\n\treturn mix(mix(dot(random2(i + vec2(0.0, 0.0)), f - vec2(0.0, 0.0)),\n\t\tdot(random2(i + vec2(1.0, 0.0)), f - vec2(1.0, 0.0)), u.x),\n\t\tmix(dot(random2(i + vec2(0.0, 1.0)), f - vec2(0.0, 1.0)),\n\t\t\tdot(random2(i + vec2(1.0, 1.0)), f - vec2(1.0, 1.0)), u.x), u.y);\n}\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n\t// Rotate to reduce axial bias\n\tmat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < 5; ++i) {\n\t\tv += a * noise(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\nfloat sdf(vec3 point) {\n    float plane = length(max(point.y, 0.0)) + fbm(point.xz/10.0)*10.0-0.5;\n    \n    return plane;\n}\n\nfloat rayMarch(vec3 rayOrigin, vec3 rayDir) {\n    float distMarched = 0.0;\n    \n    for (int i = 0; i < 100; i++) {\n        float dist = sdf(rayOrigin);\n        \n        rayOrigin += rayDir * dist;\n        distMarched += dist;\n        \n        if (distMarched < 0.01 || dist > 100.0) {\n            break;\n        }\n    }\n    \n    return distMarched;\n}\n\nvec3 getNormal(vec3 point) {\n    float dist = sdf(point);\n    vec3 norm = dist - vec3(\n        sdf(point - vec3(0.01, 0.0, 0.0)),\n        sdf(point - vec3(0.0, 0.01, 0.0)),\n        sdf(point - vec3(0.0, 0.0, 0.01))\n    );\n    return normalize(norm);\n}\n\nvec3 getColor(vec3 point) {\n    float n = fbm(point.xz*10.0)+0.5;\n    if (point.y > 0.6) {\n        return vec3(1.0) * n;\n    }\n    else if (point.y > 0.4) {\n        return vec3(0.0, 1.0, 0.0)*n;\n    }\n    else {\n        return vec3(0.0, 0.0, 1.0)*n;\n    }\n}\n\nfloat getSpecular(vec3 point, vec3 lightDir, vec3 cameraPos) {\n    vec3 viewDir = normalize(cameraPos-point);\n    vec3 reflectDir = reflect(-lightDir, getNormal(point));\n    return pow(max(dot(viewDir, reflectDir), 0.0), 32.0);\n}\n\nfloat getSpecularity(vec3 point) {\n    if (point.y < 0.4) {\n        return 2.0;\n    }\n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.x;\n\n    vec3 cameraPos = vec3(0.0, 3.5+sin(iTime/5.0), iTime);\n    vec3 rayDir = vec3(uv.x+sin(iTime/5.0), uv.y-0.25, 1.0);\n    vec3 lightDir = vec3(0.5, 0.5, 0.7);\n    float dist = rayMarch(cameraPos, rayDir);\n    vec3 point = rayDir * dist + cameraPos;\n    vec3 normal = getNormal(point);\n    float light = dot(normal, lightDir);\n    float lightDist = rayMarch(point+normal*0.01, lightDir);\n    \n    if (lightDist < 90.0) {\n        light *= 0.1;\n    }\n    \n    vec3 col = vec3(light*vec3(0.7, 0.7, 1.0));\n    \n    col = mix(col, vec3(0.7, 0.7, 1.0), dist/100.0);\n    col = mix(col, vec3(0.0), point.y/10.0);\n    col *= getColor(point) + getSpecular(point, lightDir, cameraPos) * getSpecularity(point);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}