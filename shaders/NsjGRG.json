{
    "Shader": {
        "info": {
            "date": "1617567960",
            "description": "This is an exploration of stepped gradients that turned into a Pride flag shader. Leans heavily on the step function.\n\nYou may customize this by changing the configured COLOR1-12 definitions.",
            "flags": 0,
            "hasliked": 0,
            "id": "NsjGRG",
            "likes": 6,
            "name": "Pride / Stepped Gradient Flag",
            "published": 3,
            "tags": [
                "flag"
            ],
            "usePreview": 0,
            "username": "worldofzero",
            "viewed": 3670
        },
        "renderpass": [
            {
                "code": "// Note this is a modification of a HLSL shader written for the Windows Terminal\n// You may swap out each of the 12 color bands to create a different flag.\n// Adjusting the two periods will change the waving effect.\n\n// Settings\n// Customize Colors (1 = TOP of screen, 12 is bottom)\n// to create a different flag. Some examples below (only uncomment one section)\n//\n// Pride:\n#define COLOR1 vec4(0.95,0.0,0.0,1.0)\n#define COLOR2 vec4(0.95,0.0,0.0,1.0)\n#define COLOR3 vec4(1.0,141.0/255.0,0.0,1.0)\n#define COLOR4 vec4(1.0,141.0/255.0,0.0,1.0)\n#define COLOR5 vec4(1.0,0.95,0.0,1.0)\n#define COLOR6 vec4(1.0,0.95,0.0,1.0)\n#define COLOR7 vec4(0.0,129.0/255.0,33.0/255.0,1.0)\n#define COLOR8 vec4(0.0,129.0/255.0,33.0/255.0,1.0)\n#define COLOR9 vec4(0.0,76.0/255.0,1.0,1.0)\n#define COLOR10 vec4(0.0,76.0/255.0,1.0,1.0)\n#define COLOR11 vec4(118.0/255.0, 1.0/255.0, 136.0/255.0, 1.0)\n#define COLOR12 vec4(118.0/255.0, 1.0/255.0, 136.0/255.0, 1.0)\n\n// Trans:\n// #define COLOR1 vec4(0.33,0.8,0.95,1.0)\n// #define COLOR2 vec4(0.33,0.8,0.95,1.0)\n// #define COLOR3 vec4(0.33,0.8,0.95,1.0)\n// #define COLOR4 vec4(0.97,0.6,0.675,1.0)\n// #define COLOR5 vec4(0.97,0.6,0.675,1.0)\n// #define COLOR6 vec4(1.0,1.0,1.0,1.0)\n// #define COLOR7 vec4(1.0,1.0,1.0,1.0)\n// #define COLOR8 vec4(0.97,0.6,0.675,1.0)\n// #define COLOR9 vec4(0.97,0.6,0.675,1.0)\n// #define COLOR10 vec4(0.33,0.8,0.95,1.0)\n// #define COLOR11 vec4(0.33,0.8,0.95,1.0)\n// #define COLOR12 vec4(0.33,0.8,0.95,1.0)\n\n// Flag Strength is the opacity of the flag (1.0 is completely opaque)\n#define FLAGSTRENGTH 1.0\n// Control the sin wave length and strength of the flag wave\n#define PERIOD1POSITION 10.0\n#define PERIOD2POSITION 0.5\n#define PERIOD1STRENGTH 0.05\n#define PERIOD2STRENGTH 0.2\n#define PERIOD1TIME 1.1\n#define PERIOD2TIME 1.0\n\nvec4 flagColor(float position) {\n    // Invert position for GLSL\n    position = 1.0 - position;\n\n    float step1 = 0.0;\n    float step2 = 0.08333;\n    float step3 = 0.1667;\n    float step4 = 0.25;\n    float step5 = 0.3333;\n    float step6 = 0.4167;\n    float step7 = 0.5;\n    float step8 = 0.5833;\n    float step9 = 0.6667;\n    float step10 = 0.75;\n    float step11 = 0.8333;\n    float step12 = 0.9167;\n    \n    vec4 result = COLOR1;\n    result = mix(result, COLOR2, step(step2, position));\n    result = mix(result, COLOR3, step(step3, position));\n    result = mix(result, COLOR4, step(step4, position));\n    result = mix(result, COLOR5, step(step5, position));\n    result = mix(result, COLOR6, step(step6, position));\n    result = mix(result, COLOR7, step(step7, position));\n    result = mix(result, COLOR8, step(step8, position));\n    result = mix(result, COLOR9, step(step9, position));\n    result = mix(result, COLOR10, step(step10, position));\n    result = mix(result, COLOR11, step(step11, position));\n    result = mix(result, COLOR12, step(step12, position));\n\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float height = fragCoord.y;\n    height += sin(iTime * PERIOD1TIME + fragCoord.x / iResolution.x * PERIOD1POSITION ) / PERIOD1STRENGTH;\n    height += sin(iTime * PERIOD2TIME + fragCoord.x / iResolution.x * PERIOD2POSITION ) / PERIOD2STRENGTH;\n    fragColor = flagColor(height / iResolution.y) * FLAGSTRENGTH;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}