{
    "Shader": {
        "info": {
            "date": "1713741385",
            "description": "display hh:mm:ss:ff based on system clock",
            "flags": 0,
            "hasliked": 0,
            "id": "sd2fRt",
            "likes": 0,
            "name": "sunnydancingwobble",
            "published": 3,
            "tags": [
                "counter",
                "framecounter"
            ],
            "usePreview": 0,
            "username": "SwagLordLancalot",
            "viewed": 123
        },
        "renderpass": [
            {
                "code": "int bcd(int i) // 0 - 99\n{\n    return (i/10*6+i);\n}\n\nfloat digit(vec2 uv, int i)\n{\n    const float doff=12./16.;\n    \n    return texture(iChannel0,uv/16.+vec2(float(i)/16.,doff)).x;\n}\n\nvoid draw_digit(inout float c, vec2 uv, int i)\n{\n    if(abs(uv.x)<.5 && abs(uv.y) < .5)\n    {\n        c = max(c,digit(uv+.5,i));\n    }\n}\n\nvoid draw_bcd(inout float c, vec2 uv, int i)\n{\n    draw_digit(c, uv,(i&0xf0)>>16);\n    draw_digit(c, uv-vec2(.5,0),(i&0xf));\n}\n\n#define FRAME_RATE 50.\n\n\nfloat draw_time(vec2 uv, vec2 o, float size)\n{\n    float c = 0.;\n    uv=(uv-o)/size - vec2(.25,-.5);\n    \n    int hour = bcd(int(iDate.w/3600.));\n    int minute = bcd(int(mod(iDate.w,3600.)/60.));\n    int second = bcd(int(mod(iDate.w,60.)));\n    \n    int pal_frame = bcd(int(fract(iDate.w)*FRAME_RATE));\n\n    draw_bcd(c,uv,hour);\n    uv.x-=.85;\n    draw_digit(c,uv,10);\n    uv.x-=.35;\n    draw_bcd(c,uv,minute);\n    uv.x-=.85;\n    draw_digit(c,uv,10);\n    uv.x-=.35;\n    draw_bcd(c,uv,second);\n    uv.x-=.85;\n    draw_digit(c,uv,10);\n    uv.x-=.35;\n    draw_bcd(c,uv,pal_frame);\n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * 1.0;\n   // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = uv ;\n    vec2 vw = p - vec2(0.5+0.1*sin(time));\n    vec2 q = vw ;\n\n    vec3 col = mix(vec3(1.0,0.0,1.0) , vec3(0.0,0.0,0.3) , sqrt(p.y) ) ;\n    \n  \n   \n   float r = 0.2 +0.1*cos(atan(q.y,5.0*q.x)*10.0 + 5.0*q.x + 5.0*time);\n      \n   col *=  smoothstep( r , r+0.1 , length(q)); // wazig\n   \n   r = 0.015;\n   r += 0.008*cos(20.0*q.y + time);\n   r += exp(-80.0*p.y);\n   col *= 1.0 - (1.0-smoothstep( r , r+0.002 , abs(q.x+0.2*sin(5.0*q.y) )))*( 1.0-smoothstep( 0.0 , 0.1 ,q.y ));\n\n\n   // Output to screen\n\n    fragColor = vec4(col,0.1);\n}\n/**\n\n    float time = iTime * 1.0;\n   // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = uv ;\n    vec2 vw = p - vec2(0.5+0.1*sin(time));\n    vec2 q = vw ;\n\n    vec3 col = mix(vec3(1.0,0.0,1.0) , vec3(0.5,0.1,0.3) , sqrt(p.y) ) ;\n    \n  \n   \n   float r = 0.2 +0.1*cos(atan(q.y,5.0*q.x)*10.0 + 5.0*q.x + 5.0*time);\n      \n   col *=  smoothstep( r , r+0.01 , length(q));\n   \n   r = 0.015;\n   r += 0.008*cos(20.0*q.y + time);\n   r += exp(-80.0*p.y);\n   col *= 1.0 - (1.0-smoothstep( r , r+0.002 , abs(q.x+0.2*sin(5.0*q.y) )))*( 1.0-smoothstep( 0.0 , 0.1 ,q.y ));\n*/\n\n   // Output to screen",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}