{
    "Shader": {
        "info": {
            "date": "1617351750",
            "description": "Thought this was a fractal at first sight, but propably float precision error.",
            "flags": 32,
            "hasliked": 0,
            "id": "ssjGWh",
            "likes": 0,
            "name": "Trail 1.1 - Fractal",
            "published": 3,
            "tags": [
                "fractals",
                "buffer"
            ],
            "usePreview": 0,
            "username": "Leasel",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = SI(fragCoord);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fgi )\n{\n    fgi -= iResolution.xy*0.5;\n    fgi = abs(fgi);\n\n    fragColor = SI(fgi);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\nfloat Rand(float t)\n{\n    return fract(600.*(sin(mod(t, 50000.))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float id = fragCoord.x * fragCoord.y + iTime + iDate.w;\n\n    vec3 col = vec3(\n        Rand(id + iDate.w*iDate.z),\n        Rand(id + iDate.w+iDate.z),\n        Rand(id + iDate.w-iDate.z)\n        );\n\n    fragColor = distance(iMouse.xy, fragCoord) < 5. || Rand(id)-0.99 > 0.00099? vec4(col, 1.) : SI(fragCoord)*Cooling;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define SI(uv) texelFetch(iChannel0, ivec2(uv), 0)\n#define OI(uv) texelFetch(iChannel1, ivec2(uv), 0)\n#define S(uv) texelFetch(iChannel0, uv, 0)\n\n#define Cooling 0.99\n#define RCooling 1./Cooling",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}