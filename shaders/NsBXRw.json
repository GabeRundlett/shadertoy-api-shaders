{
    "Shader": {
        "info": {
            "date": "1619875502",
            "description": "cube",
            "flags": 64,
            "hasliked": 0,
            "id": "NsBXRw",
            "likes": 0,
            "name": "Noisey Cube",
            "published": 3,
            "tags": [
                "3d",
                "cube"
            ],
            "usePreview": 0,
            "username": "tangerine",
            "viewed": 259
        },
        "renderpass": [
            {
                "code": "float Distline(vec3 ro, vec3 rd, vec3 p) {//distance from a point to a line    \n    return length(cross(p-ro,rd))/length(rd);\n}\nfloat Drawpoint(vec3 ro, vec3 rd, vec3 p) {\n    float d = Distline(ro,rd,p);\n    d =smoothstep(.3,.01,d);\n    return d;\n}    \nfloat PHI = 1.61803398874989484820459;  // Î¦ = Golden Ratio   \n\nfloat noise(in vec2 xy, in float seed){\n       return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\nfloat bitwiseXOR(in vec2 p) // thanks to https://www.shadertoy.com/view/4tt3z2\n{\n    float result = 0.0;\n    for(float n = 0.0; n < 6.0; n+=1.0)\n    {\n        vec2 a = floor(p);\n        result += mod(a.x+a.y,2.0);\n        p/=2.0;\n        result/=2.0;\n    };    \n    return result;\n}\n\n\nvoid DrawScanline( inout vec3 color, vec2 uv )\n{\n    float scanline \t= clamp( 0.5 + 0.5 * cos( 3.14 * ( uv.y + 0.1 * iTime ) * 4.5 * 1.0 ), 0.0, 1.0 );\n    float grille \t= 0.5 + 0.5 * clamp( 1.5 * cos( 3.14 * uv.x * 10.0 * 1.0 ), 0.0, 1.0 );    \n    color += abs(scanline * grille * 1.2);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5; // center is 0,0      \n    uv.x *= iResolution.x / iResolution.y; // make it square    \n    \n    vec3 ro = vec3(5.*cos(t/10.15),5.*sin(t/10.13),6.+3.*cos(t/30.)); //camera position   \n    vec3 lookat = vec3(.5,.5,.5);\n    vec3 f = normalize(lookat - ro); \n    vec3 r = cross(vec3(0., 1., 0.),f);\n    vec3 u = cross(f,r);\n    float zoom = sin(t/4.)/2.-2.;\n    vec3 c = ro + f*zoom;   \n    vec3 i = c + uv.x*r + uv.y*u;\n    vec3 rd = i - ro; //screeeen\n    // Time varying pixel color\n    vec3 col = cos(iTime/20.+uv.xyx+vec3(0,8,4));\n    DrawScanline(col, uv);\n    vec3 p = vec3(sin(iTime),0.,cos(iTime));\n    float d = 0.;      \n    for(float i=-1.01;i<1.01;i+= .25){\n        d += Drawpoint(ro,rd,vec3(i,1.,1.));   \n        d += Drawpoint(ro,rd,vec3(i,-1.,1.)); \n        d += Drawpoint(ro,rd,vec3(i,1.,-1.));\n        d += Drawpoint(ro,rd,vec3(i,-1.,-1.)); \n        \n        d += Drawpoint(ro,rd,vec3(1.,i,-1.));   \n        d += Drawpoint(ro,rd,vec3(1.,i,1.));\n        d += Drawpoint(ro,rd,vec3(-1.,i,-1.));\n        d += Drawpoint(ro,rd,vec3(-1.,i,1.));\n        \n        d += Drawpoint(ro,rd,vec3(-1.,-1.,i));\n        d += Drawpoint(ro,rd,vec3(1.,-1.,i));\n        d += Drawpoint(ro,rd,vec3(-1.,1.,i));\n        d += Drawpoint(ro,rd,vec3(1.,1.,i));\n    }    \n        float wave = texture( iChannel0, vec2(uv.x,0.75) ).x;\n        d+= 1.0 -  smoothstep( 0.0, 0.9, abs(wave/20. - uv.y) );     \n        d += bitwiseXOR(vec2(d,col.x));\n        float fft  = texture( iChannel0, vec2(uv.x,0.25) ).x;    \n\n        \n\n    d -= noise(-vec2(d, col.y), 1.);  \n    //d= mod(d,.001);  \n    //d*=1000.;\n    col *= vec3(d,d/2.,d ) ; \n    vec3 four = vec3( fft, 4.0*fft*(1.0-fft), 1.0-fft ) * fft;\n\n    // Output to screen\n    fragColor = abs(vec4(col,1)) ;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 26940,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/endsville/nnlu-fayz2"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}