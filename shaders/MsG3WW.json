{
    "Shader": {
        "info": {
            "date": "1454451046",
            "description": "Originally did it to 547 chars.\nThanks to FabriceNeyret2 for code size optimization suggestions (547 -> 381).",
            "flags": 0,
            "hasliked": 0,
            "id": "MsG3WW",
            "likes": 12,
            "name": "Radar | <381>",
            "published": 3,
            "tags": [
                "2d",
                "radar",
                "sizecoding",
                "sonar"
            ],
            "usePreview": 0,
            "username": "mlkn",
            "viewed": 1615
        },
        "renderpass": [
            {
                "code": "#define L length(c - .1*vec2(    // use: L x,y))  \n#define M(v)   max(0., v)\n\nvoid mainImage( out vec4 O, vec2 C )\n{\n    vec2  R = iResolution.xy, \n          c = (C+C - R) / R.y,\n          k = .1-.1*step(.007,abs(c));\n    float x = L 0))*27., // x,y - polar coords\n          y = mod(atan(c.y, c.x) + iDate.w, 6.28),\n          d = M(.75 - y * .4),\n          b = min( min(L -3,-1)), L 6,-4)) ), L 4,5)) )\n        \t+ .06 - y *.04;\n\n    O = vec4(\n        // targets\n        b<.08 ? b * M(18.-13.*y) : .0,\n        (x<24. ? // inside of circle\n        \t// background\n        \t.25\n            // grid\n             +  M( cos(x+.8) -.95 ) * 2.4 + k.x + k.y \n            // detector\n        \t+ d * d\n            // ray\n        \t+ M(.8 - y * (x+x+.3) )\n        :0.)\n        // outer border\n        + M(1. - abs(x+x-48.) ),\n    .1, 1);\n}\n\n/* 447\n#define s(v) smoothstep(.01, .005, abs(x-v))\n#define l(x,y) length(c - vec2(x,y))\n\nvoid mainImage( out vec4 O, vec2 C )\n{\n    vec2  R = iResolution.xy, \n          c = (2.*C - R) / R.y,\n          k = 1.-step(.007,abs(c));\n    float x = l(0,0), // x,y - polar coords\n          y = mod(atan(c.y, c.x) + iDate.w, 6.28),\n          d = max(.75 - y * .4, 0.),\n          b = min( min(l(-.3, -.1), l(.6, -.4)), l(.4, .5) )\n        \t+ .06 - y *.04;\n\n    O = vec4(\n        // targets\n        y<1.5 && b<.08 ? b * (18. - 13. * y) : .1,\n        (x<.9 ? // inside of circle\n        \t// background\n        \t.25\n            // grid\n             + .1 * (s(.67) + s(.43) + s(.2) + k.x + k.y)\n            // detector\n        \t+ d * d\n            // ray\n        \t+ max( .4 - abs(y * (x*50. + .3) - .4), 0. )\n        :0.)\n        // outer border\n        + max(0., 1. - abs(l(0,0) -.9) * 50.),\n    .1, 1);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}