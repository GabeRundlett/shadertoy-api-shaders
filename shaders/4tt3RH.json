{
    "Shader": {
        "info": {
            "date": "1467945337",
            "description": "Messed around a bit with some audio input as well. To activate it, uncomment the MUSIC #define and select a song for Channel0. Depending on the song, you may have to turn the glow down.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tt3RH",
            "likes": 32,
            "name": "Glowing Particles",
            "published": 3,
            "tags": [
                "sound",
                "particles",
                "glow"
            ],
            "usePreview": 0,
            "username": "Dalton",
            "viewed": 2270
        },
        "renderpass": [
            {
                "code": "#define NUM_PARTICLES 45.0\n#define GLOW 0.5\n#define TIME_SKIP 0.0\n#define SPEED_UP 1.15\n//#define MUSIC\n\nvec3 Orb(vec2 uv, vec3 color, float radius, float offset)\n{        \n    vec2 position = vec2(sin((1.9 + offset * 4.9) * ((iTime * SPEED_UP) + TIME_SKIP)),\n                         cos((2.2 + offset * 4.5) * ((iTime * SPEED_UP) + TIME_SKIP)));\n    \n    position *= ((sin(((iTime * SPEED_UP) + TIME_SKIP) - offset) + 7.0) * 0.1) * sin(offset);\n    \n    radius = ((radius * offset) + 0.005);\n    float dist = radius / distance(uv, position);\n    return color * pow(dist, 1.0 / GLOW);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 pixel = vec3(0.0, 0.0, 0.0);\n   \tvec3 color = vec3(0.0, 0.0, 0.0);\n    \n \tcolor.r = ((sin(((iTime * SPEED_UP) + TIME_SKIP) * 0.25) + 1.5) * 0.4); // 0.2 - 1.0\n    color.g = ((sin(((iTime * SPEED_UP) + TIME_SKIP) * 0.34) + 2.0) * 0.4); // 0.4 - 1.2\n    color.b = ((sin(((iTime * SPEED_UP) + TIME_SKIP) * 0.71) + 4.5) * 0.2); // 0.7 - 1.1\n    \n    float radius = 0.045;\n    \n#ifdef MUSIC\n    float beat[4];\n    beat[0] = texture( iChannel0, vec2(0.10 ,0.25) ).x;\n    beat[1] = texture( iChannel0, vec2(0.25 ,0.25) ).x;\n    beat[2] = texture( iChannel0, vec2(0.40 ,0.25) ).x;\n    beat[3] = texture( iChannel0, vec2(0.55 ,0.25) ).x;\n    \n    beat[0] = (beat[0] + beat[1] + beat[2] + beat[3]) * 0.25;\n    radius += beat[0] / 8.0;    \n#endif\n    \n    for\t(float i = 0.0; i < NUM_PARTICLES; i++)\n        pixel += Orb(uv, color, radius, i / NUM_PARTICLES);\n\n    \n    fragColor = vec4(pixel, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}