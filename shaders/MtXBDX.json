{
    "Shader": {
        "info": {
            "date": "1513615638",
            "description": "top: Mimic pb wth one implementation of BuildMipmap between not 2-multiple levels.\nbottom: just resampling at rate != 1\nsource = BW strips (cf middle).\nResampled at a rate varying from .5 to 1.5 using hardware bilin interp.\nvertical = 0 to 1 pixel offset.",
            "flags": 32,
            "hasliked": 0,
            "id": "MtXBDX",
            "likes": 2,
            "name": "resampling / non-pow2 MIPmap",
            "published": 3,
            "tags": [
                "test",
                "aliasing",
                "mipmap",
                "nyquist",
                "interpolation"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 728
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n\tvec2 R = iResolution.xy,\n         U = u / R;\n    float a = .5+U.x, \n        ofs = 2.*U.y/R.x;\n    a = floor(10.*a) / 10.;\n    \n\tO = textureLod(iChannel0, vec2( a*U.x+ofs, U.y) , 0.); // 1 resample at rate a\n    \n    if (U.y>.5)                                            // average of 2 resample at rate a\n        O = .5*O + .5*textureLod(iChannel0, vec2( a*(U.x+1./R.x)+ofs, U.y) , 0.);\n    \n    if (fract(U.x*10.)<10./R.x || u.y-.5==R.y/2.) O = vec4(1,0,0,0); // red bars\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = vec4( mod(U.x-.5,2.) );\n}",
                "description": "",
                "inputs": [],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}