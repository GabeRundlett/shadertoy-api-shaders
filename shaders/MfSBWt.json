{
    "Shader": {
        "info": {
            "date": "1725631256",
            "description": "Circle spins pretty color",
            "flags": 0,
            "hasliked": 0,
            "id": "MfSBWt",
            "likes": 0,
            "name": "cool circle rotate thingy",
            "published": 3,
            "tags": [
                "circle"
            ],
            "usePreview": 0,
            "username": "hazel",
            "viewed": 66
        },
        "renderpass": [
            {
                "code": "//determines distace between two points\n//i have since learned that distance() is just a thing\nfloat dist (vec2 a, vec2 b)\n{\n    vec2 ab = b-a;\n    float c = ab.x*ab.x + ab.y*ab.y;\n    float d = sqrt(c);\n    return d;\n}\n\n// https://www.youtube.com/watch?v=7j5yW5QDC2U\n//\"thanku freya holmer my beloved\" - mint\nvec2 rotate (vec2 point,float theta) \n{\n    vec2 a = vec2 (cos(theta),sin(theta)); \n    vec2 b = vec2 (-sin(theta),sin(theta));\n    vec2 mp =  point.x*a + point.y*b;\n    return mp;\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //cementpoint(PCC no HMAC(civil engineering joke(you wouldnt get it)))\n    vec2 center = vec2(.5,.5);\n    \n    \n    //background color\n    fragColor = .5*vec4(.3,uv*vec2((sin(iTime)+1.0)*.7,1),1.0);\n    //this is some math that i desmos beloved saved me but if ur so interested\n    //a to read this it brings a thingy to origin scales it then puts it back \n    //at the center(credit to mint for explaining this to me)\n    vec2 scaleduv = vec2 ((uv.x - center.x)/iResolution.y*iResolution.x+center.x, uv.y);\n    float radius = .45;\n    if (dist(center,scaleduv) < radius)\n    {\n    //this does the same thing as previously mentioned but instead of scaling \n    //it is rotation\n        vec2 rotateduv = rotate(scaleduv - center, iTime) + center;\n        fragColor = vec4(dist(center,scaleduv)*2.0*rotateduv,0.4,1);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}