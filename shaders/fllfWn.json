{
    "Shader": {
        "info": {
            "date": "1650729236",
            "description": "2022/04/23",
            "flags": 0,
            "hasliked": 0,
            "id": "fllfWn",
            "likes": 9,
            "name": "20220423-2",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "nippa_nikki",
            "viewed": 262
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float width = 800.0;float height = 450.0;\n    float as = width/height;\n\n    // Time varying pixel color\n    vec3 col_1 = vec3(1.0,1.0,1.0);\n    \n    uv.x = uv.x*as-(1.0-(1.0/as));\n    \n    vec2 ori = vec2(uv.x+.1*(cos(iTime*5.0)+0.2*cos(iTime*25.0)),uv.y+.1*sin(iTime*5.0));\n    //ori = vec2(uv.x,uv.y);\n    //ori = vec2(uv.x-iMouse.x/iResolution.x+0.5,uv.y-iMouse.y/iResolution.y+0.5);\n    \n    float di = length(ori-vec2(.5,.5));\n    float r = atan(ori.y-0.5,ori.x-0.5);\n    \n    float circle = smoothstep(.4,.5,.005/abs(di-cos(r*10.0)*.4));\n    \n    float limen = .99;\n    \n    float atom = 1.0;\n    \n    atom *= circle * smoothstep(limen,limen+.01,abs(cos(r*15.0/2.0+3.14592*iTime*1.0)));\n    \n    atom += smoothstep(0.96,0.965,1.0-di);\n    \n    //atom += smoothstep(.4,.5,);\n    \n    atom += .025/abs(di);\n    \n    atom += .001/abs(di-abs(cos(iTime))*.25) * step(-0.2,cos(iTime*160.0)+cos(iTime*139.0));\n    atom += .001/abs(di-abs(cos(iTime*1.3+0.6))*.25)\n    * step(1.0,cos(iTime*160.0)+cos(iTime*139.0))\n    * step(0.8,abs(cos(r*5.0+iTime*5.0)));\n    atom = clamp(atom,.0,1.0);\n    float tri_d = .15;\n    float tri_r = iTime;\n    float triangle = .001/abs((ori.y-0.5-tri_d*sin(tri_r))-tan(tri_r-3.141592/6.0)*(ori.x-0.5-tri_d*cos(tri_r)));\n    tri_r += (2.0/3.0)*3.141;\n    triangle += .001/abs((ori.y-0.5-tri_d*sin(tri_r))-tan(tri_r-3.141592/6.0)*(ori.x-0.5-tri_d*cos(tri_r)));\n    tri_r += (2.0/3.0)*3.141;\n    triangle += .001/abs((ori.y-0.5-tri_d*sin(tri_r))-tan(tri_r-3.141592/6.0)*(ori.x-0.5-tri_d*cos(tri_r)));\n    triangle = clamp(triangle,.0,1.0);\n    col_1 *= atom;\n    col_1 += triangle;\n    \n    col_1 *= vec3(1.0-di,.2+di,.2+di);\n    // Output to screen\n    fragColor = vec4(col_1,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}