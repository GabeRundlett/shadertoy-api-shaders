{
    "Shader": {
        "info": {
            "date": "1587949640",
            "description": "Random user defined trig functions.",
            "flags": 32,
            "hasliked": 0,
            "id": "tdlBR7",
            "likes": 5,
            "name": "Random Trig",
            "published": 3,
            "tags": [
                "nottrig"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 334
        },
        "renderpass": [
            {
                "code": "//Random Trig by eiffie - playing with waveforms\n// The sine wave when matched with its \"co\"-sine 1/4 of a cycle ahead\n// create the unit circle. All waveforms create a shape this way and\n// form the basis for their own user defined trigonometry.\n// What waveform creates a box, a triangle, a cat?\n// Usage:\n// Draw the \"sine\" wave on the black surface starting from the left side\n// on the green line and ending on the right back to zero (the green line).\n// The resulting shape is drawn on the white surface.\n\n// While mostly a time waster there are some simple waveforms that are\n// useful in cg. This exercize gives you an intuition where to start looking.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv=fragCoord/iResolution.xy;\n  fragColor=texture(iChannel0,uv);            //base line for drawing\n  if(uv.x<0.5){fragColor.g+=0.5*smoothstep(1.0/iResolution.y,0.,min(abs(uv.y-0.5),mod(uv.x,.125)));return;}\n  vec4 lastms=texture(iChannel0,vec2(0.5,1.5)/iResolution.xy);\n  if(lastms.x>iResolution.x/2.-5.){//good enough\n    float a=fract(iTime*0.1);//rotation angle\n    float sa=texture(iChannel0,vec2(a*0.5,0.0)).r;//get trig from lookup table\n    float ca=texture(iChannel0,vec2(fract(a+0.25)*0.5,0.0)).r;\n    ca=(ca*2.)-1.0;sa=(sa*2.)-1.0;//fix for 0-1 to -1,1\n    uv.x=(uv.x-0.5)*2.0;//fix for left side\n    uv=(uv-vec2(0.5))*2.0;//and scale\n    float d=length(uv-vec2(ca,sa));//distance to this pixel\n    fragColor.rgb=mix(vec3(1.0,0.0,0.0),fragColor.rgb,smoothstep(d,8.0/iResolution.y,0.0));\n  }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n  vec2 uv=fragCoord/iResolution.xy;fragCoord=floor(fragCoord);\n  vec2 ms=floor(iMouse.xy);\n  if(iTime<0.1 && fragCoord.y==0.){fragColor=vec4(0.5);return;}//setup zeroed wave\n  fragColor=texture(iChannel0,uv);\n  vec2 lastms=texture(iChannel0,vec2(0.5,1.5)/iResolution.xy).xy;\n  if(uv.x<0.5){//user drawing wave on left side of screen\n    if(ms.y>0.){//button down\n      if(fragCoord.x==0. && fragCoord.y==1.){//save last mouse pos\n        fragColor.xy=ms.xy;return;//done\n      }//load last mouse to fill in missing pixels from left to right   \n      if(fragCoord.x>=lastms.x && fragCoord.x<=ms.x){//correct pixel(s) to update\n        if(lastms.x!=ms.x && ms.x>5.) //fill in the pixels the mouse skipped over\n          ms=floor(mix(lastms,ms,(fragCoord.x-lastms.x)/(ms.x-lastms.x))+0.1);\n        if(fragCoord.y==0.)fragColor=vec4(ms.y/iResolution.y);//save lookup table\n        else fragColor=vec4(step(abs(ms.y-fragCoord.y),0.5));//draw wave\n      }   //button up so clear last mouse\n    }else if(fragCoord.x==0. && fragCoord.y==1.)fragColor=vec4(0.);\n  }else{//draw 'unit' shape on right side\n    vec2 p=uv;p.x=((p.x-0.5)*2.0);p=(p*2.0)-vec2(1.0);\n    float d=1.0;\n    for(int i=2;i<198;i++){\n      float a=float(i)/200.0;\n      if(0.5*a*iResolution.x>lastms.x-1.0)break;\n      float sa=texture(iChannel0,vec2(a*0.5,0.0)).r;\n      float ca=texture(iChannel0,vec2(fract(a+0.25)*0.5,0.0)).r;\n      ca=(ca*2.)-1.0;sa=(sa*2.)-1.0;\n      a=float(i-1)/200.0;\n      float sa2=texture(iChannel0,vec2(a*0.5,0.0)).r;\n      float ca2=texture(iChannel0,vec2(fract(a+0.25)*0.5,0.0)).r;\n      ca2=(ca2*2.)-1.0;sa2=(sa2*2.)-1.0;\n      d=min(d,tube(p-vec2(ca,sa),vec2(ca2-ca,sa2-sa)));\n    }\n    d=smoothstep(0.0,0.01,d);\n    fragColor=vec4(d,d,d,1.0);\n  }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}