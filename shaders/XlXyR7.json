{
    "Shader": {
        "info": {
            "date": "1503939677",
            "description": "Just for fun.",
            "flags": 0,
            "hasliked": 0,
            "id": "XlXyR7",
            "likes": 0,
            "name": "Sunset and moonrise",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "ageron",
            "viewed": 510
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float angle = iTime / 2.0;\n    float light = sin(angle);\n    if (light < 0.0) light = 0.0;\n    \n    // sky\n\tfragColor = vec4(uv.y * light, uv.y * light, light, 1.0);\n\n    // sun\n    vec2 sun = vec2(cos(angle) * 1.9, 1.5 * sin(angle) - 0.7);\n    if (length(uv - sun) < 0.1) {\n        fragColor = vec4(1., 1. * light, 0., 1.0);\n    }\n\n    // moon\n \tfloat pi = 3.14159265;\n    float delta = 0.05;\n    vec2 moon = vec2(cos(angle + pi) * 1.9, 1.5 * sin(angle + pi) - 0.7);\n    vec2 moonmask = vec2(cos(angle + pi + delta) * 1.9, 1.5 * sin(angle + pi + delta) - 0.7);\n    if (length(uv - moon) < 0.1 && length(uv - moonmask) > 0.13) {\n        fragColor = vec4(1., 1., 1.0, 1.0);\n    }\n    \n    \n    // ground\n    if (uv.y < -0.2) {\n        fragColor = vec4(0.1, 0.5 * light + 0.2, 0., 1.0);\n    }\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}