{
    "Shader": {
        "info": {
            "date": "1670884220",
            "description": "playing with fract sin and the mouse. Add antialiasing thx to mla.",
            "flags": 0,
            "hasliked": 0,
            "id": "msBXDK",
            "likes": 4,
            "name": "disco target",
            "published": 3,
            "tags": [
                "interactivecolor"
            ],
            "usePreview": 0,
            "username": "tieutieu",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "\n//PUT THE ORIGINE AT THE CENTER OF THE SCREEN & NORMALIZE\nvec2 map(vec2 pcoord) {\n  return (pcoord-0.5*iResolution.xy)/iResolution.y;\n}\n\n/*\nfloat sfract(float x) {\n  float px = fwidth(x);\n  x -= round(x);\n  return mix( x+1.0 , x ,smoothstep(-px,px,x));\n}\n*/\nfloat sfract(float x) {\n  //WITHOUT ANTIALIASING\n  //return fract(x);\n  //WITH ANTIALIASING\n  float px = fwidth(x);\n  x -= round(x);\n  return mix( x+1.0 , x , smoothstep(-px,px,x));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float t = iTime;\n    vec2 uv = map(fragCoord);                         \n\n    vec2 mouseN = iMouse.x <= 0.0 ? vec2(0): map(iMouse.xy);\n    uv -= mouseN;\n    fragColor.r = sfract(length( uv.xy*10. )*float(1.0*sin(t*0.1)));\n    fragColor.g = sfract(length( uv.xy*10. )*float(1.0*sin(t*0.2)));\n    fragColor.b = sfract(length( uv.xy*10. )*float(1.0*sin(t*0.3))) ; \n\n}\n\n\n\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}