{
    "Shader": {
        "info": {
            "date": "1522224609",
            "description": "Coding time: ~23 minutes",
            "flags": 0,
            "hasliked": 0,
            "id": "ldyyWm",
            "likes": 91,
            "name": "Fire Storm Cube",
            "published": 3,
            "tags": [
                "3d",
                "cube",
                "fog",
                "quick",
                "dirty"
            ],
            "usePreview": 0,
            "username": "slerpy",
            "viewed": 2381
        },
        "renderpass": [
            {
                "code": "float burn;\n\nmat2 rot(float a)\n{\n    float s=sin(a), c=cos(a);\n    return mat2(s, c, -c, s);\n}\n\nfloat map(vec3 p)\n{\n    float d = max(max(abs(p.x), abs(p.y)), abs(p.z)) - .5;\n    burn = d;\n    \n    mat2 rm = rot(-iTime/3. + length(p));\n    p.xy *= rm, p.zy *= rm;\n    \n    vec3 q = abs(p) - iTime;\n    q = abs(q - round(q));\n    \n    rm = rot(iTime);\n    q.xy *= rm, q.xz *= rm;\n    \n    d = min(d, min(min(length(q.xy), length(q.yz)), length(q.xz)) + .01);\n    \n    burn = pow(d - burn, 2.);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 rd = normalize(vec3(2.*fragCoord-iResolution.xy, iResolution.y)), \n         ro = vec2(0, -2).xxy;\n    \n    mat2 r1 = rot(iTime/4.), r2 = rot(iTime/2.);\n    rd.xz *= r1, ro.xz *= r1, rd.yz *= r2, ro.yz *= r2;\n    \n    float t = .0, i = 24. * (1. - exp(-.2*iTime-.1));\n    for(;i-->0.;)t += map(ro+rd*t) / 2.;\n    \n    fragColor = vec4(1.-burn, exp(-t), exp(-t/2.), 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}