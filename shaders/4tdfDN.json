{
    "Shader": {
        "info": {
            "date": "1539700019",
            "description": "soft shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "4tdfDN",
            "likes": 0,
            "name": "It's a Bloody Shader Innit",
            "published": 3,
            "tags": [
                "shader"
            ],
            "usePreview": 0,
            "username": "milolouis",
            "viewed": 503
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const bool lines = true;\n    int scale = 3;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = vec2(fragCoord.x/(iResolution.x / 3.0), fragCoord.y/(iResolution.y / 2.0));\n    \n    float speed = 32.0; //divisor\n    \n    // Time varying pixel color    \n    float r = 20.0 + 64.0*cos(sin(iTime/(speed * 2.0))+uv.x) + 64.0*sin(cos(iTime/(speed / 2.0))+uv.y);\n    float g = 40.0 + 50.0*sin(sin(iTime/(speed))+uv.x) + 50.0*cos(cos(iTime/(speed))+uv.y);\n    float b = 60.0 + 64.0*sin(sin(iTime/(speed / 2.0))+uv.x) + 64.0*sin(cos(iTime/(speed * 2.0))+uv.y);\n    \n    \n    if(lines) {\n        \n    if(int(r) % scale == 0)\n    {\n        r = 0.0;\n    }\n    \n    if(int(g) % scale == 0)\n    {\n        g = 0.0;\n    }\n    \n    if(int(b) % scale == 0)\n    {\n        b = 0.0;\n    }\n        \n    }\n    \n    vec3 col = vec3(r/255.0, g/255.0, b/255.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}