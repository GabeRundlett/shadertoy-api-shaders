{
    "Shader": {
        "info": {
            "date": "1606933325",
            "description": "A test with kif and sdf-font",
            "flags": 0,
            "hasliked": 0,
            "id": "3dVfDz",
            "likes": 19,
            "name": "kif bisous",
            "published": 3,
            "tags": [
                "kif"
            ],
            "usePreview": 0,
            "username": "leon",
            "viewed": 487
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 color, in vec2 pixel )\n{\n    vec2 p = (pixel-0.5*iResolution.xy)/iResolution.y;\n    const int count = 8;\n    float falloff = 1.0;\n    float stroke = 0.0;\n    for (int index = 0; index < count; ++index)\n    {\n        float i = float(count-index)/float(count);\n        p.xy = abs(p.xy)-0.2*falloff;\n        p *= rot(.5*iTime);\n        vec4 font = texture(iChannel0, getUVText(p/falloff));\n        stroke += i*smoothstep(0.02, 0.0, max(0., font.a-0.47));\n        falloff /= 1.1;\n    }\n    color = vec4(stroke);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n#define repeat(p,r) (mod(p,r)-r/2.)\nmat2 rot(float a) { float c=cos(a),s=sin(a); return mat2(c,-s,s,c); }\n\n// from\n// https://www.shadertoy.com/view/ld2yDG\n#define grid 16.\n#define cell 1./16.\nconst int kA=177,kB=178,kC=179,kD=180,kE=181,kF=182,kG=183,kH=184,kI=185,kJ=186,kK=187;\nconst int kL=188,kM=189,kN=190,kO=191,kP=160,kQ=161,kR=162,kS=163,kT=164,kU=165,kV=166;\nconst int kW=167,kX=168,kY=169,kZ=170,kSpace=80;\n\nvec2 getSymbol (int key)\n{\n\treturn vec2(mod(float(key),grid),floor(float(key)/grid));\n}\n\nvec2 getLetterUV (vec2 target, vec2 offset)\n{\n    vec2 uvLetter = target;\n    uvLetter.x = uvLetter.x;\n    uvLetter += offset / grid;\n    float crop = step(target.x, cell) * step(target.y, cell);\n    crop *= step(0., target.x) * step(0., target.y);\n    return uvLetter * crop;\n}\n\nvec2 getUVText (vec2 target)\n{\n    int symbols[] = int[] ( kB,kI,kS,kO,kU,kS );\n    int count = symbols.length();\n    vec2 space = vec2(0.5,1);\n    vec2 textUV = vec2(0);\n    for (int i = 0; i < count; ++i) {\n        vec2 offset = vec2(i,0)/grid;\n        offset.x -= float(count)/grid/2.;\n        offset.y -= cell/2.;\n    \ttextUV += getLetterUV(target - offset, getSymbol(symbols[i]));\n    }\n    return textUV;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}