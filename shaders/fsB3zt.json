{
    "Shader": {
        "info": {
            "date": "1617827620",
            "description": "helou",
            "flags": 32,
            "hasliked": 0,
            "id": "fsB3zt",
            "likes": 20,
            "name": "Day 475",
            "published": 3,
            "tags": [
                "design",
                "mdtmjvm",
                "acidgraphix"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 492
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = C*.0;\n    \n    vec2 uv = (U - 0.5*R)/R.y;   \n    \n    C = T(U);\n    \n    \n    \n    \n    float n1d = texelFetch(iChannel2,ivec2(mod(U + vec2(float(iFrame),0.),256.)),0).x;\n    vec3 n  = texelFetch(iChannel2,ivec2(mod(U  + n1d*200. ,256.)),0).xyz;\n    \n    \n    C *= 1.  ;\n    //C = smoothstep(0.,1.,C);z\n    \n    C.xyz = pow(max(C.xyz,0.), vec3(0.55) + n*0.1);\n    \n    \n    \n    C.xyz += smoothstep(1.,0.,length(C))*n*0.15;\n    \n    C.xyz -= smoothstep(0.,1.,length(C))*n*0.05;\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define pmod(p,a) mod(p,a) - 0.5*a\n\nfloat noise(vec3 p){\n    float n = 0.;\n    float amp = 1.;\n    for(int i = 0; i < 3; i++){\n    \n        p.xz *= rot(0.6);\n        p.yz *= rot(0.6);\n        \n        n += dot(sin(p),cos(p))*amp;\n        \n        amp *= 0.6;\n        p *= 1.5;\n    }\n    return n;\n}\n\nvec3 pal(vec3 p){\n    vec3 c = 0.5 + 0.5* sin(p*vec3(1.,1.,1.) + vec3(0.5,0.,-0.5));\n\n    c = pow(c,vec3(.4545));\n    c = smoothstep(0.,0.7,c);\n    return c;\n}\n\nvec3 getP(vec2 uv){\n    float n = noise(vec3(uv*5.,iTime*0.1));\n    uv -= n*0.1;\n    float nb = noise(vec3(uv*4.,iTime*0.1 + 6.));\n    float nc = noise(vec3(uv*4.,iTime*0.1));\n    \n    vec3 col = pal(vec3(1.,1. - n*0.1,1.)*nc*1.);\n    col = mix(col,pow(pal(vec3(1.5,1.5,1.4)*nb *2. + 4.6 + n),vec3(1.)),smoothstep(-0.1,-0.5,nb));\n    return col;\n}\nfloat sdBox(vec2 p, vec2 s){\n    p = abs(p) - s; return max(p.x,p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 ouv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    float pxsz = fwidth(uv.x);\n        \n    uv.y += iTime*0.1;\n    \n    col = getP(uv);\n    float md = 0.04;\n    vec2 mid = floor(uv/md)*md;\n    //vec2 muv = \n    vec3 mcol = getP(mid);\n    \n    \n    {\n        for(float i = 0.; i < 7.; i++){\n        \n            vec2 p = ouv - vec2(0.5,-0.4);\n        \n            float w = sin(i*10. + iTime*0.4 + sin(i + iTime)*0.5*(sin(i)))*0.5 + .45;\n            \n            float d = length(p) - w*1.;\n            d = abs(d) - 0.04*abs(sin(i+iTime));\n            p *= rot(i*20. + sin(iTime+i));\n            d = max(d,-abs(atan(p.y,p.x)) + 0.4);\n            \n            p *= rot(i*20. + sin(iTime+i));\n            d = max(d,-abs(atan(p.y,p.x)) + 0.4);\n            \n            col *= max(smoothstep(-0.04,0.05,d),0.1);\n            \n            col = mix(col,0.4*pow(min(1.-col,1.),vec3(4.))*1.,smoothstep(pxsz,0.,d));\n            //col = 1. - col;\n    \n        }\n        \n    }\n    col = mix(col,mcol, smoothstep(1.,0.,noise(vec3(uv*4.,iTime*1.)) + 1.) );\n    \n    \n    float db = sdBox(ouv,vec2(0.48));\n    col *= smoothstep(0.02,-0.04,db);\n    \n    float sdb = smoothstep(0.,pxsz,db);\n    col = mix(col,vec3(0.004),sdb);\n    \n    float nn = noise(vec3(uv*5.,iTime));\n    {\n        vec2 p = pmod(uv,0.1);\n        col = mix(col,\n            mix(col,col-vec3(1),smoothstep(pxsz,0.,length(p))),\n            smoothstep(pxsz,0.,db));\n        col = mix(col,vec3(1.)*0.1,sdb*smoothstep(pxsz,0.,abs(sdBox(ouv + 0.01,vec2(0.48)))));\n        col = mix(col,vec3(1.)*0.1,sdb*smoothstep(pxsz,0.,abs(sdBox(ouv + 0.02,vec2(0.48)))));\n    \n        float no = max(nn,0.1);\n        col = mix(col,\n            mix(col,vec3(1)*no*0.3,smoothstep(pxsz,0.,length(p) - 0.002)),\n            smoothstep(0.,pxsz,db));\n    \n    \n    }\n    {\n        vec2 p = pmod(uv + 0.0,0.25);\n        \n        float d = abs(p.x);\n        d = min( d, abs(p.y) );\n        d = max( d, length(p) - 0.02);\n        \n        \n        col = mix(col,\n            mix(col,0.2-col*4.,nn*sdb*smoothstep(pxsz,0.,d)),\n            smoothstep(pxsz,0.,d));\n        ///col = mix(col,vec3(1.)*0.1,sdb*smoothstep(pxsz,0.,abs(sdBox(ouv + 0.01,vec2(0.48)))));\n        //col = mix(col,vec3(1.)*0.1,sdb*smoothstep(pxsz,0.,abs(sdBox(ouv + 0.02,vec2(0.48)))));\n    \n        //float no = max(noise(vec3(uv*5.,iTime)),0.1);\n        \n    \n    }\n    \n    {\n        \n        for(float i = 0.; i < 16.; i++){\n        \n            vec2 p = ouv + vec2(sin(i*1.)*0.4 + 0.4,1.5 - 2.5*mod(0.2*iTime*(1. + sin(i*6.)*0.8) + sin(i + iTime)*0.05,1.));\n            float w = sin(i*50.)*0. + 0.001;\n            \n            float d = length(p.x);\n            d = abs(d) - w;\n            d = max(d,abs(p.y) - 0.1 + sin(i)*0.05);\n            col *= smoothstep(-0.1,0.02,d);\n            \n            col = mix(col,1.*pow(min(1.-col,1.),vec3(1.))*1.,smoothstep(pxsz,0.,d));\n            //col = 1. - col;\n    \n        }\n        \n    }\n    col = mix(col,1.*pow(min(1.-col,1.),vec3(1.))*0.4 + 0.3,smoothstep(pxsz,0.,max(abs(ouv.y-.41),abs(ouv.x) - 0.2) - 0.01));\n    {\n        float id = floor(2.*ouv.y/0.2);\n        //float id = floor(2.*ouv.x/0.11);\n        \n        //col = mix(col,pal(id*vec3(1.) + iTime*0.6),smoothstep(pxsz,0.,max(abs(ouv.x-.8) - 0.01,abs(ouv.y) - 0.2)));\n        \n        float d = max(abs(ouv.x-.8 ),abs(ouv.y) - 0.25) - 0.01;\n        col *= smoothstep(-0.1,0.04,d);\n    \n        col = mix(col,1.-pal(id*vec3(1.) + sin(iTime+id*20.)*1.6),smoothstep(pxsz,0.,d));\n    \n    }       \n    {\n        \n        for(float i = 0.; i < 4.; i++){\n        \n            vec2 p = ouv + vec2(sin(i*4.)*0.5 - 0.4,-.4 - .2*sin(0.2*iTime*(1. + sin(i*6.)*0.8) + sin(i + iTime)*0.05));\n            float w = sin(i*50.)*0. + 0.001;\n            \n            float d = sdBox(p, vec2(0.1));\n            //col *= smoothstep(-0.1,0.02,d);\n            \n            //col = mix(col,0.1*pow(max(1.-col,0.),vec3(0.1))*1.,smoothstep(pxsz,0.,d));\n            //col = 1. - col;\n    \n        }\n        \n    }\n    if(iMouse.z > 0. || fract(iTime*0.1) < 0.1)\n        col = 1. - col;\n    \n    //col = pow(col,vec3(.4545));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R (iResolution.xy)\n#define T(u) texture(iChannel0,fract((u)/R))\n#define iTime (iTime + 26.)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}