{
    "Shader": {
        "info": {
            "date": "1648332466",
            "description": "cellular automaton with a single convolution",
            "flags": 32,
            "hasliked": 0,
            "id": "7lsyRj",
            "likes": 6,
            "name": "convolutional CA",
            "published": 3,
            "tags": [
                "convolution",
                "ca"
            ],
            "usePreview": 0,
            "username": "icantcomeupwithausername",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;  \n    fragColor = texture(iChannel0, uv);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "mat3 kernel = mat3(\n    0.68, -0.9, 0.68,\n    -0.9, -0.56, -0.9,\n    0.68, -0.9, 0.68\n);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    if(iFrame < 10){\n        fragColor = texture(iChannel1, uv) * 50.0;\n    }else{ \n        //convolution\n        vec3 sum = vec3(0);\n        for(int y = 0; y < 3; y++){\n            for(int x = 0; x < 3; x++){\n                sum += texture(iChannel0, fract(uv + vec2(x - 1, y - 1) / iResolution.xy)).xyz * kernel[y][x];\n            }\n        }\n        \n        //inverse gaussian\n        sum = 1.0 - exp2(-0.6 * sum * sum);\n        \n        if(iMouse.z > 0.0){\n            uv = uv * 2.0 - 1.0;\n            uv.x *= iResolution.x / iResolution.y;\n            \n            vec2 m = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n            m.x *= iResolution.x/iResolution.y;\n            if(dot(uv-m, uv-m) < 0.01) {\n                sum++;\n            } \n        }\n        \n        fragColor = vec4(sum, 1.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = mix(texture(iChannel0, uv), texture(iChannel1, uv), 0.6); //smooth out flickering\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}