{
    "Shader": {
        "info": {
            "date": "1690871522",
            "description": "this donut is tripping yo",
            "flags": 0,
            "hasliked": 0,
            "id": "mlXyRS",
            "likes": 2,
            "name": "Galactic donut",
            "published": 3,
            "tags": [
                "donut"
            ],
            "usePreview": 0,
            "username": "jackjackdev",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0, 3, -3);\n    vec3 lookat = vec3(0);\n    float zoom = 1.;\n    \n    vec3 f = normalize(lookat - ro),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f, r),\n        c = ro + f * zoom,\n        i = c + uv.x * r + uv.y * u,\n        rd = normalize(i - ro);\n        \n    float dS, dO;\n    vec3 p;\n    \n    for(int i = 0; i < 100; i++) {\n        p = ro + rd * dO;\n        //distance funct (torus)\n        dS = length(vec2(length(p.xz) - 1., p.y)) - .5;\n        if(dS < .001) break;\n        dO += dS;\n    }\n    \n    vec3 col = vec3(0);\n    \n    if(dS < .001) {\n        float x = atan(p.x, p.z);\n        float y = atan(length(p.xz) - 1., p.y);\n        col += sin(y*(iTime*10.));\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}