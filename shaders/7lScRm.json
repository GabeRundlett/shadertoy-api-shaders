{
    "Shader": {
        "info": {
            "date": "1649355533",
            "description": "playing with things ",
            "flags": 0,
            "hasliked": 0,
            "id": "7lScRm",
            "likes": 5,
            "name": "Simple Circle 0985394583",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 237
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\nfloat seg(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec2 pnt(float n, float spd, float t) {      \n    //float t = iTime; //floor(spd * time) / spd;\n    float f = fract(t);//fract(spd * time);\n\n    vec2 p = vec2(cos(t), sin(t));\n    t += n/spd;\n    vec2 p2 = vec2(cos(t), sin(t));\n    t -= n/spd;\n    vec2 p3 = vec2(cos(t), sin(t));\n    \n    f = 1. - pow(1.-f,4.);\n    f = smoothstep(0.,1.,f);\n    \n    float m = clamp(2. * f, 0., 1.);\n    float m2 = clamp(2. * f, 1., 2.) - 1.;\n    return 0.45 * mix(mix(p,p2,m), p3, m2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    float spd = 4.;\n\n    float s = 0.;\n\n    float k = 1. / iResolution.y;\n    float n = spd * 4.;\n    for (float i = 0.; i < n; i++) {\n        float io = 2. * pi * i / n;\n        vec2 p = pnt(1., spd, 0.5 * iTime + io);\n        p *= (0.75 + 0.25 * thc(4., 4. * io + 0.5 * iTime));\n        float o2 = 1./n;\n        vec2 p2 = pnt(1., spd, 0.5 * iTime + io + o2);       \n        p2 *= (0.75 + 0.25 * thc(4., 0.5 * iTime));\n        \n        float d = seg(uv, p, p2);// length(uv - p);\n        s = max(s - 0.5 * s * cos(i * pi / n + iTime), smoothstep(-k, k, -d + 0.015));\n        \n    }\n  \n    vec3 col = vec3(s);\n    col += 0.22 * exp(-1. * (uv.y + 0.5)); \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}