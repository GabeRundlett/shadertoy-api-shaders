{
    "Shader": {
        "info": {
            "date": "1482338394",
            "description": "tribute to William Latham early computer art  (variant of  https://www.shadertoy.com/view/4tyXRR )\nhttps://www.google.com/search?q=william+latham&tbm=isch\nhttp://www.phoenixbrighton.org/archive/2013-2/william-latham-mutator-1-2/\n",
            "flags": 0,
            "hasliked": 0,
            "id": "XlGSzR",
            "likes": 4,
            "name": "sphere art 2",
            "published": 3,
            "tags": [
                "sphere",
                "mutator",
                "latham"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 671
        },
        "renderpass": [
            {
                "code": "// tribute to William Latham early computer art\n//      https://www.google.com/search?q=william+latham&tbm=isch\n//      http://www.phoenixbrighton.org/archive/2013-2/william-latham-mutator-1-2/\n// Sphere engine from https://www.shadertoy.com/view/XtGSzR\n// (variant of  https://www.shadertoy.com/view/4tyXRR )\n \nfloat t, zmin = 1e9;\n\nvoid sphere(inout vec4 O, vec2 U, vec3 P, float r, vec3 C) { // O, U, pos, radius, color\n\t\n\tU -= P.xy;\n    r = length(U)/r; if (r>1.) return;\n\n    U = normalize(U)*r;\n    float z = sqrt(1.-dot(U,U)); \n    if (zmin < P.z-.1*z) return; \n    zmin = P.z-.1*z;\n    vec3 N = vec3(U,z);\n    O.rgb =  clamp(  C*(.2 + max(0.,(-N.x+N.y+N.z)/1.732))    // ambiant, diffus\n                       + pow(max(0.,dot(N,normalize(vec3(-1,1,2.73)))),50.) // spec\n                       ,0.,1.);               // L=(-1,1,1), E=(0,0,1), z toward eye \n}\n\n\nvoid partic3(inout vec4 O, vec2 U, vec3 P, vec2 D, float dl) {\n    float a = sin(t), c = cos(6.28/30.*a), s = sin(6.28/30.*a), k;\n    for (float i=0.; i<20.; i++) {\n        k = exp(-i/8.);\n        sphere(O, U, .5*P+vec3(i,-i,-i)/100.,dl/2.*k, vec3(1,k*vec2(1,.8)));\n        P.xy += dl*k*D; D *= mat2(c,-s,s,c);\n    }\n}\n\nvoid partic2(inout vec4 O, vec2 U, vec3 P, vec2 D, float dl) {\n    float a = sin(.31*t), c = cos(6.28/30.*a), s = sin(6.28/30.*a), k;\n    for (float i=0.; i<10.; i++) {\n         k = exp(-i/15.);\n        partic3(O, U, P+vec3(i,-i,i)/100., -vec2(D.y,-D.x), dl*k);\n        P.xy += dl*k*D; D *= mat2(c,-s,s,c);\n    }\n}\n\nvoid partic1(inout vec4 O, vec2 U, vec3 P, vec2 D, float dl) {\n    float c=cos(6.28/30.), s=sin(6.28/30.);\n\tfor (int i=0; i<30; i++) {\n        partic2(O, U, P, vec2(D.y,-D.x), dl);\n        P.xy += dl*D; D *= mat2(c,-s,s,c);\n    }\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n         U = (U+U-R)/R.y;\n    vec3 P;\n    O -= O; t = iTime;\n    \n    partic1(O, U, P=vec3(sin(t),-cos(t),0), vec2(-P.y,P.x), .2);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}