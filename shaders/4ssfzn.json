{
    "Shader": {
        "info": {
            "date": "1494625042",
            "description": "This is just a string of time made visible with light in the form I chose.",
            "flags": 64,
            "hasliked": 0,
            "id": "4ssfzn",
            "likes": 32,
            "name": "filip",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "movAX13h",
            "viewed": 6506
        },
        "renderpass": [
            {
                "code": "// filip fragment shader and music by movAX13h, May 2017\n// supersampling added by srtuss\n\nfloat rand( float n )\n{\n  \treturn fract(cos(n)*4145.92653);\n}\n\nfloat noise(vec2 p)\n{\n  \tvec2 f  = smoothstep(0.0, 1.0, fract(p));\n  \tp  = floor(p);\n  \tfloat n = p.x + p.y*57.0;\n  \treturn mix(mix(rand(n+0.0), rand(n+1.0),f.x), mix( rand(n+57.0), rand(n+58.0),f.x),f.y);\n}\n\nfloat fbm( vec2 p )\n{\n\tmat2 m2 = mat2(1.6,-1.2,1.2,1.6);\t\n  \tfloat f = 0.5000*noise( p ); p = m2*p;\n  \tf += 0.2500*noise( p ); p = m2*p;\n  \tf += 0.1666*noise( p ); p = m2*p;\n  \tf += 0.0834*noise( p );\n  \treturn f;\n}\n\nvec2 rotate(vec2 p, float a)\n{\n\tvec2 r;\n\tr.x = p.x*cos(a) - p.y*sin(a);\n\tr.y = p.x*sin(a) + p.y*cos(a);\n\treturn r;\n}\n\nfloat dir(vec2 a, vec2 b, vec2 c)\n{\n\treturn (a.x - c.x) * (b.y - c.y) - (b.x - c.x) * (a.y - c.y);\n}\n\nbool insideQuad(vec2 p, vec2 a, vec2 b, vec2 c, vec2 d)\n{\n\tbool b1 = dir(p, a, b) < 0.0;\n\tbool b2 = dir(p, b, c) < 0.0;\n\tbool b3 = dir(p, c, d) < 0.0;\n\tbool b4 = dir(p, d, a) < 0.0;\n  \treturn ((b1 == b2) && (b2 == b3) && (b3 == b4));\n}\n\nfloat background(vec2 uv)\n{\n    float i = smoothstep(0.0, 0.5, 0.1-uv.y);\n    float z = 0.3 - uv.y;\n    \n    uv.x = (0.2*uv.x - 0.1) / z;\n    uv.y = (1.9*uv.y - 0.3) / z;\n    \n    i *= smoothstep(-0.8, 0.2, uv.x);\n    \n    float n = iResolution.x / 24.0;    \n    vec2 g = floor(uv * n) / n;\n    \n    return 1.0 - 0.8 * i * fbm(g * 80.0);    \n}\n\nfloat seg(float id, vec2 p, float time)\n{\n    float t = 0.8*time - 0.18 * id;\n    float s = 0.022;\n    float r = t + 6.283 * rand(id);\n    float z = 1.0+0.3*sin(t*0.6) + 0.3*sin(t*1.9);\n    \n    p.x /= z;\n    p.y /= z;\n\n    vec2 q = p;\n    q.y = abs(q.y + 0.2) - 0.33;\n    \n    vec2 pos = vec2(0.5 * sin(t) + 0.4*sin(t*1.6), \n                    0.2 * abs(sin(2.2*t)) - 0.3);\n    \n    vec2 scale = vec2(sin(t*3.0), cos(t*3.0));\n    \n    vec2 a = rotate(scale*vec2(-s, -s), r) + pos;\n    vec2 b = rotate(scale*vec2( s, -s), r) + pos;\n    vec2 c = rotate(scale*vec2( s,  s), r) + pos;\n    vec2 d = rotate(scale*vec2(-s,  s), r) + pos;\n    \n    return insideQuad(q, a, b, c, d) ? 0.1 + 0.6 *step(0.0, p.y+0.2) : 0.0;\n}\n\nvec2 worm(vec2 uv, float time)\n{\n    for(int i=0; i < 15; i++)\n    {\n        float s = seg(float(i), uv, time);\n        if (s > 0.0) return vec2(s, step(float(i), s-0.5));        \n    }\n    \n    return vec2(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    \n    for(int i = 0; i < 2; ++i)\n    {\n        for(int j = 0; j < 2; ++j)\n        {\n            vec2 uv = 2.0 * ((fragCoord.xy + vec2(j, i) * 0.5) / iResolution.xy) - 1.0;\n    \t\tuv.x *= iResolution.x / iResolution.y;\n            \n            vec3 col = vec3(1.0);\n    \n            float time = iTime + mod(iTime, 0.01);\n            \n            col *= background(uv);\n            vec2 w = worm(uv, time);\n            col -= w.x;\n            col = mix(col, vec3(1.0, 0.0, 0.0), w.y);\n\n            col *= smoothstep(0.48, 0.481, 1.0-abs(uv.y));\n            col -= 0.6*smoothstep(0.3,2.0,length(uv));\n            col -= vec3(0.01, 0.01, 0.0);\n            col = clamp(col, 0.0, 1.0);\n            fragColor.xyz += col;\n        }\n    }\n    fragColor /= 4.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 8563,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/filipsound/filip-wooden-rocks"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}