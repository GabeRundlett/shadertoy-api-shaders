{
    "Shader": {
        "info": {
            "date": "1648770439",
            "description": "Was trying to simplify this function + make it a fractal: https://www.shadertoy.com/view/NlXcD2\n\nnot super happy with the results, not sure what you could use it with",
            "flags": 0,
            "hasliked": 0,
            "id": "NlXyWf",
            "likes": 3,
            "name": "Fractal Function 9340294832",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 202
        },
        "renderpass": [
            {
                "code": "float fn(float x, float p) {\n    float f = fract(exp2(p) * x + 0.25) - 0.5;\n    return step(f, 0.) / exp2(p);\n}\n\nfloat fn2(float x) {\n    float f = 0.;\n    float n = 2.; //>2. works fine\n    for (float i = 1.; i < 2. * n + 1.; i+=2.) {\n        float f1 = fn(x, i);\n        float f2 = fn(x, i + 1.);\n        f = abs(f - abs(f1 - f2));\n    }\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 ouv = uv;\n    uv.y *= 2.4;\n    uv.x -= 0.05 * iTime;\n    uv.y += 0.3 * cos(6. * floor(4. * uv.x) + 0.5 * iTime);\n\n    float y = uv.y;\n\n    float k = 4. / iResolution.y;\n    \n    float sgn = 0.125 * sign(uv.y);\n    float a = 0.5 + (0.25) * cos(floor(16. * uv.x) * 3.14159 /3. + iTime);\n    float s = 0.5 * smoothstep(-k, k, -uv.y -a + fn2(uv.x + 0.25));\n    float s2 = 0.5 * smoothstep(-k, k, uv.y-a + fn2(uv.x));\n\n    float c = 0.6 - 1.5* abs(s-s2);\n    c = abs(c - exp(-0.4 - 5. * ouv.y - ouv.x));\n    c = clamp(c, 0., 1.2); //oversaturated but its ok\n    vec3 col = vec3(0.95,0.42,0.15);\n    col = mix(col, 1. - col, 0.5 + 0.5 * cos(-1. * ouv.y + 0.2 * ouv.x + iTime));\n    col *= c;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}