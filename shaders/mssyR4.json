{
    "Shader": {
        "info": {
            "date": "1686632605",
            "description": "A rug with a flower pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "mssyR4",
            "likes": 4,
            "name": "Flower pattern rug",
            "published": 3,
            "tags": [
                "fractal",
                "flower",
                "carpet",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 200
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.+sign(a.x)/2.,0.5-sign(a.x)/2.)\n    ,\n    a1 = a+a2;\n    return\n        abs(fract((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.x/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/16.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    uv.y = mod(uv.y,.25)+2.25+.25+.125;\n    uv.x = mod(uv.x,.25)+.25+.125;\n    for(int k = 0; k < 6; k++){\n        uv =\n            abs(.5-uv-t2)/1.5*sign(uv.y-uv.x)\n        ;\n        b = uv.y<uv.x;\n        if(b) uv = uv.yx;\n        t2 =\n            triangle_wave(uv-.5).yx\n        ;\n        uv =\n            t2-triangle_wave(uv.yx).yx\n        ;\n        col.x =\n            max((t2.y+t2.x),col.x)\n        ;\n        col =\n            abs(col-1.+col.x);\n    }\n    if (!b) col = abs(1.-col);\n    fragColor = vec4(min(col,vec3(1.)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) floor(max(mod(floor(-(x/y))*pow(2.,1.+mod(floor(x*2.),2.)),y),mod(floor(x)*3.,y)))\n#define fmod1(x,y) floor(min(mod(floor(-(x/y))*pow(2.,mod(floor(x*2.),2.)),y),mod(floor(x)*3.,y)))\nvec2 mainSound(int samp, float time){  \n  float\n  s1 =\n      pow(2.,2.+fmod(time/8.,2.))\n      //pow(2.,2.-fmod(time*8.,2.))\n  ,\n  s2 = pow(2.,1.+fmod1(time/8.,2.)),\n  m1 = s1*(1.+fmod(time/s2/s1+1.,2.)),\n  t =\n      //time\n      time*s1/8.\n  ,\n  m4 = fmod1(t*s1/(1.+fmod(t/s1,2.)),s2),\n  m3 = fmod((t+m4)*s1/m1,s2);\n  /*\n  for(int i = 0; i < 3; i++){\n      t += floor(t/s2/2.);\n  }\n  */\n  t *= s1*s1/(1.+fmod(t/s1,2.));\n\n  float m2 = 1. + fmod(t/s1,s1),\n  a = 128.*pow((1.-sqrt(fract(t/s1)/m1))/4.,2.),\n  nb = time*pow(2.,(m3+m2)/5.+6.5);\n  return\n      log(abs(.5-1.*vec2(fract(nb*.998),fract(nb)))*a)\n      //log(abs(a/16. - abs(.5-1.*vec2(fract(nb*.998),fract(nb)))*a))\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}