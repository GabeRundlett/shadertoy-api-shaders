{
    "Shader": {
        "info": {
            "date": "1668644307",
            "description": "from left to right\n---\nstep \nsmoothstep\ndistance normalized 0-1\ndistance normalized 0-1 then (modulo 0.2) / 0.2\nsqrt(n_dist)\npow(n_dist, 1.0/3.0) : (third root )\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "DdSGR3",
            "likes": 1,
            "name": "line thickness with functions",
            "published": 3,
            "tags": [
                "function"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 160
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 a_n_pix_cor_nor = fragCoord/iResolution.xy;\n    \n    float n_dist = abs(a_n_pix_cor_nor.y - 0.5);\n    //float n_dist = 0.5 - a_n_pix_cor_nor.y;\n    \n    float a_n_dist_modified[] = float[](\n        step(0.2, n_dist), \n        smoothstep(0.2, 0.25, n_dist), \n        n_dist, \n        mod(n_dist, 0.2)/0.2,\n        sqrt(n_dist),\n        pow(n_dist,1.0/3.0), \n        n_dist*n_dist*0.5\n    );\n    \n    for(\n        float n_index_norm_a_n_dist_modified = 0.0;\n        n_index_norm_a_n_dist_modified < 1.0; \n        n_index_norm_a_n_dist_modified+= (1.0/float(a_n_dist_modified.length()))\n    ){\n        float n = a_n_dist_modified[\n            int(n_index_norm_a_n_dist_modified*float(a_n_dist_modified.length()))\n        ];\n        if(a_n_pix_cor_nor.x > n_index_norm_a_n_dist_modified){\n            fragColor = vec4(n);\n        }\n    }\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}