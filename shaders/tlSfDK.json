{
    "Shader": {
        "info": {
            "date": "1599845753",
            "description": "reference: \n[img]https://static.boredpanda.com/blog/wp-content/uploads/2020/09/real-life-old-photos-then-now-15-5f5b5a1616b90__700.jpg[/img]\n\nNote that my anti-banding tricks doesn't work here, due to the heap of discontinuities.",
            "flags": 16,
            "hasliked": 0,
            "id": "tlSfDK",
            "likes": 8,
            "name": "maya pyramid",
            "published": 3,
            "tags": [
                "raytracing",
                "raymarching",
                "temple",
                "pyramid",
                "maya",
                "inca"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 357
        },
        "renderpass": [
            {
                "code": "#define rot(a)      mat2( cos( a + vec4(0,33,11,0)) )\n#define sfloor(x) ( floor(x-pix/2.) + max( 0., 1.-fract(-x+pix/2.) / pix ) ) // https://www.shadertoy.com/view/tsyXzV \n        \nfloat pix, s;                                         // a: material id\n\nfloat map( vec3 q ) {\n    float t,a;\n    q.xy = abs(q.xy), a = max(q.x,q.y), \n    t = max( (a==q.x?q.y:q.x) -2. ,                   // slopes sides\n             a/1.3 + clamp(q.z,0.,9.) -9.25 ),        // slopes top \n    t = max( t, q.z-7.),                              // top end\n    t = min( t, a + clamp(sfloor(q.z),0.,7.) - 9.),   // grades \n    t = max( t,-max(min(q.x,q.y)-.5,abs(q.z-7.5)-.5)),// doors\n    t = max( t, q.z-9.),                              // top end\n    t = min(t, s = q.z);                              // floor\n    return t;\n}\n\nvoid mainImage(out vec4 O, vec2 u) {\n     vec2  R = iResolution.xy,\n         U = ( 2.*u - R ) / R.y;                      // normalized centered coords\n    pix = .5; // 100./R.y;\n    float t = iTime, _t = 1.+.5*sin(.2*(t+5.)), \n          c = 0.;                                     // color (pseudo-shading), delta per iteration\n    vec3  D = normalize( vec3(U,-2) ),                // ray direction. z = field of view = zoom\n          p = vec3(0,0,25), q;                        // ray origin, then current point on ray\n    D.yz *= rot(_t); D.xy *= rot(.3*t);               // rotate camera\n    p.yz *= rot(_t); p.xy *= rot(.3*t);\n\n    for ( ; c < 50. && t > .01 ; c++ )                // march scene\n        q = p, _t=t,\n        t = map(q),                                   // distance to objects\n        p += .5*t*D;                                  // sphere-tracing step\n    \n    c = 1. - c/50.;                                   // pseudo-lighting\n    O = t==s ? vec4(0,.2,0,1) : vec4(1,.8,.6,1);      // coloring\n    O = pow( c*O, vec4(1./2.2) );                     // to sRGB\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}