{
    "Shader": {
        "info": {
            "date": "1669571067",
            "description": "My first published shader!\nA series of green rings with a glowing bar in the center, indicating potential radioactive properties...",
            "flags": 0,
            "hasliked": 0,
            "id": "dsXXW2",
            "likes": 3,
            "name": "Reactor Core",
            "published": 3,
            "tags": [
                "sdf",
                "glow"
            ],
            "usePreview": 0,
            "username": "pr1ncess_emily",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "#define DISTANCE_THRESHOLD 0.01\n#define GLOW_RADIUS 0.05\n\n// Inigo Quilez segment sdf\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // Center bar coordinates\n    float x = 0.35*cos(iTime);\n    float y = 0.35*sin(iTime);\n    \n    float x2 = (0.35*cos(iTime + radians(180.0)));\n    float y2 = (0.35*sin(iTime + radians(180.0)));\n    \n    float dist = sdSegment(uv, vec2(x,y), vec2(x2,y2));\n\n    vec3 col = vec3(0.0,0.0,0.0);\n\n    if (dist < DISTANCE_THRESHOLD) {\n        // Inside center bar\n        col = vec3(0.0,1.0,0.0);\n    } else if (dist < GLOW_RADIUS) {\n        // Outside bar, but within glow radius\n        float glow = GLOW_RADIUS * abs(sin(iTime));\n        float distUV = dist * (1.0/glow);\n        float g = smoothstep(1.0,0.0,distUV);\n        col = vec3(0.0,g,0.0);\n    } else {\n        // Outside glow radius\n        float ringFrequency = 10.0;\n        float ringDecay = 30.0;\n        float g = step(0.8, fract(dist * ringFrequency)) / floor(dist * ringDecay);\n        col = vec3(0.0,g,0.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}