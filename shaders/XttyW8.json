{
    "Shader": {
        "info": {
            "date": "1532412368",
            "description": "Simple lines animate horizontally across the canvas over time.",
            "flags": 0,
            "hasliked": 0,
            "id": "XttyW8",
            "likes": 8,
            "name": "Lines Over Time",
            "published": 3,
            "tags": [
                "2d",
                "lines",
                "bw",
                "white",
                "black",
                "whatyoudontknow"
            ],
            "usePreview": 0,
            "username": "jonobr1",
            "viewed": 630
        },
        "renderpass": [
            {
                "code": "const float PI = 3.141592653589793;\n\n/**\n * Sinusoidal InOut Easing Curve\n */\nfloat easing( in float k )\n{\n    // return 1.0 - cos( k * PI / 2.0 ); // EaseIn\n    // return sin( k * PI / 2.0 ); // EaseOut\n    return 0.5 * ( 1.0 - cos( PI * k ) ); // EaseInOut\n}\n\nfloat line( in float x, in float axis, in float linewidth ) {\n\n    x *= ( 1.0 + linewidth );\n    x -= linewidth / 2.0;\n    \n    float t = 1.0 - distance( x, axis );\n    t = step( t, 1.0 - linewidth );\n    t = 1.0 - t;\n    \n    return t;\n\n}\n\nfloat easedLine( in float x, in float axis, in float linewidth ) {\n\n    // Vary linewidth based on x position.\n    linewidth *= pow( 1.0 + sin( axis * PI ), 2.0 );\n\tx = pow( easing( x ), 2.0 );\n\n    return line( x, axis, linewidth );\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord / iResolution.xy;\n\tfloat now = mod( float( iTime / 2.0 ), 1.0 );\n\tfloat linewidth = 0.0025;\n    \n    float f = 0.0;\n    float amount = 20.0;\n    \n    for ( float i = 1.0; i < amount; i ++ ) {\n\n        float pct = i / amount;\n        float pos = 1.0 - pow( 1.0 - pow( now, 1.0 ), 8.0 * pct );\n\n        f += line( pct * 2.0, uv.x, linewidth );\n        f += easedLine( pos, uv.y, linewidth );\n\n    }\n    \n    // f = 1.0 - f; // Uncomment this line for black lines on white canvas.\n\n    fragColor = vec4( f );\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}