{
    "Shader": {
        "info": {
            "date": "1703126808",
            "description": "tiles-002",
            "flags": 0,
            "hasliked": 0,
            "id": "lff3D7",
            "likes": 11,
            "name": "tiles-002",
            "published": 3,
            "tags": [
                "2d",
                "tiles",
                "mozaic"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 189
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//tiles-002\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n//20-dic_2023\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define PI     3.14159265\n///oneshade\nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nvec3 bloque(vec2 fuv,vec2 iuv, vec3 col)\n{\n    vec2 p=fuv;\n    float d1=sdBox(fuv,vec2(0.5,0.5));\n    vec3 col1=vec3(0.8,0.8,0.8);\n    col= DrawFigSolo(col1, col, d1);\n        \n    vec2 pos, med;\n    float x=mod(iuv.x+iuv.y,2.0);\n\n    if(x>0.25 )\n    {\n\n        pos=vec2(-0.5,0.0);\n        med=vec2(0.5, 0.5);\n        //rotar\n        float ang = 270. * PI / 180.0;\n        vec2 pr = Rotate(fuv- pos, med/2.0, ang);\n        float d3 = sdTriangleIsosceles(pr, med);\n        vec3 col3=vec3(0.,0.,0.);\n        col=DrawFigSolo(col3,col,d3); //triangulo\n\n        //trapecio1\n        float r1,r2,he;\n        r1=0.6;\n        r2=0.6;\n        he=0.3;\n        pos=vec2(0.0,0.25);\n        float d4= sdTrapezoid(p-pos, r1, r2, he);\n        d4=differenceSDF(d4,d3);\n        vec3 col4=vec3(0.52,0.53,0.54);//tapecio1\n        col=DrawFigSolo(col4,col,d4);//tapecio1\n        //-------------\n\n        r1=0.6;\n        r2=1.0;\n        he=0.25;\n        pos=vec2(0.0,-0.75);\n        ang = 180. * PI / 180.0;\n        pr = Rotate(p- pos, med/2.0, ang);\n        float d5= sdTrapezoid(pr, r1, r2, he);\n        d5=differenceSDF(d5,d3);\n        vec3 col5=vec3(1.,0.98,0.96);;\n        col=DrawFigSolo(col5,col,d5);//tapecio2\n\n    }\n   return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = fragCoord/iResolution.xy;\n    float t=iTime*0.5;\n    uv*=vec2(7.0+2.0*sin(t),4.0+2.0*sin(t+5.0*cos(t)));\n    vec2 iuv=floor(uv);\n    vec2 fuv=fract(uv)-0.5;\n    vec3 col = vec3(0.0);\n    col=bloque(fuv,iuv,col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}