{
    "Shader": {
        "info": {
            "date": "1724057744",
            "description": "combination  https://www.shadertoy.com/view/XXyGzh https://glslsandbox.com/e#75559.0 https://glslsandbox.com/e#75696.7",
            "flags": 0,
            "hasliked": 0,
            "id": "4flBR2",
            "likes": 0,
            "name": "warp hexagon tunnel",
            "published": 3,
            "tags": [
                "cineshader",
                "tunnelwarp"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 166
        },
        "renderpass": [
            {
                "code": "\n\n#define THICKNESS .55\n#define LENGTH .05\nuniform float time;\nuniform vec2 resolution;\n#define time iTime\n#define resolution iResolution.xy\n\nfloat hseed(float t,float ct,float seed)\n{\n\tfloat cn = floor(t/ct);\n\tfloat poff= 0.4+0.7*fract(0.2+5.2147*cn);\n\tfloat s = step(0.25,fract(cn*0.5));\n\tfloat y = resolution.y*fract((mod(cn,943.7)+2.2)*(1.1+mod(cn,676.7))*(0.27+seed*22.773));\n\tfloat x = resolution.x*mix(-0.3,1.3,(t/ct-cn)/(poff)*(1.0-2.0*s)+s);\n\tfloat col = max(0.0,1.0-THICKNESS*abs(gl_FragCoord.y-y));\n\treturn col * 990.0/(90.0+LENGTH*(gl_FragCoord.x-x)*(gl_FragCoord.x-x));\n}\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos((h)*6.3+vec3(0,23,21))*.5+.5\n\n// https://www.iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat sdHexagon(vec2 p, float r)\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\nfloat vseed(float t,float ct,float seed)\n{\n\tfloat cn = floor(t/ct);\n\tfloat poff= 3.0+0.7*fract(0.4+7.42787*cn);\n\tfloat s = step(0.25,fract(cn*0.5));\n\tfloat x = resolution.x*fract((mod(cn,912.7)+1.22)*(2.11+mod(cn,674.7))*(0.21+seed*13.773));\n\tfloat y = resolution.y*mix(-4.5,1.5,(t/ct-cn)/(poff)*(1.0-2.0*s)+s);\n\tfloat col = max(0.0,1.0-THICKNESS*abs(gl_FragCoord.x-x));\n\treturn col * 150.0/(0.0+LENGTH*(gl_FragCoord.y-y)*(gl_FragCoord.y-y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat tt = time+200.0;\n\tvec4 O=fragColor;\n    O=vec4(0);\n    \n     vec2 u=fragCoord;\n        vec4 o=fragColor;\n   vec2 v = iResolution.xy;\n         u = .2*(u+u-v)/v.y;    \n         \n    vec4 z = o = vec4(1,2,3,0);\n     \n    for (float a = .5, t = iTime, i; \n         ++i < 19.; \n         o += (1. + cos(z+t)) \n            / length((1.+i*dot(v,v)) \n                   * sin(1.5*u/(.5-dot(u,u)) - 10.*u.yx + t))\n         )  \n        v = cos(++t - 7.*u*pow(a += .01, i)) - 5.*u,                 \n        u += tan(40. * dot(u *= mat2(cos(i + 0.332*t - vec4(0,11,303,0)))\n                           ,u)\n                      * cos(100.*u.yx + t)) / 2e2\n           + .22 * a * u\n           + cos(4./exp(dot(ceil(o),ceil(o))/100.) + t) / 3e2;\n              \n              \n     o = 25.6 / (min(o, 13.) + 164. / o) \n       - dot(u, u) / 250.;\n    vec3 p,r=iResolution,\n    d=normalize(vec3((fragCoord-.5*r.xy)/r.y,1));  \n    float g=0.,e,s;\n    for(float i=0.;i<99.;++i){\n        p=d*g;\n       \n        p.z-=iTime*1.2;\n        p=asin(sin(p*4.));\n        float sdf=sdHexagon(p.xy,2.);\n             p=R(p,normalize(vec3(1,2,3)),iTime*10.);\n        p.xy=vec2(sdf);\n        s=3.;\n        for(int i=0;i<6;i++){\n\t\t\tp=vec3(3.2,6.8,5.2)-abs(p);            \t\t\t\n          \tp=p.x<p.y?p.zxy:p.zyx;\n            \n            s*=e=17.8/min(dot(p,p),11.8);\n            p=abs(p)*e;\n        }\n        g+=e=abs(p.y)/s+.001;\n        O.xyz+=(H(log(s)*.8)+.5)*exp(sin(i))/e*3e-5;\n    }\n    \n    O*=O*O*O;\n\tfloat col = 0.1;\n\tfor(float i=0.0;i<50.0;i++)\n\t{\n\t\t//col = (1.0-col)*(1.0-hseed(time,5.0+i/4.0,.10,i/1.0));\n\t\t//col = col*(1.0-vseed(time,5.0+i/4.0,1.0,i/10.0));\n\t\tcol = max(col,hseed(tt+sin(i+time*0.1)*0.5,4.0+i*0.078,1.0+i/5.0));\n\t\tcol = max(col,vseed(tt,sin(i+time)*0.04+(9.0+i*0.78)*resolution.x/resolution.y,12.0+i/100.0));\t\t\n\t}\n\t\n\tfragColor = vec4( col*.3,col*O.x,col*.2, 1.0 )+o;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}