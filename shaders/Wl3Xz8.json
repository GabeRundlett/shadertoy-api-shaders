{
    "Shader": {
        "info": {
            "date": "1580340313",
            "description": "sketch",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl3Xz8",
            "likes": 0,
            "name": "sketch_01_29_20",
            "published": 3,
            "tags": [
                "sketch"
            ],
            "usePreview": 0,
            "username": "ianwall",
            "viewed": 93
        },
        "renderpass": [
            {
                "code": "/// params:\n\nint seed = 101;\nfloat sharpness = 0.95;\nfloat movement = 0.2;\nfloat curvyness = 0.5;//1.5;\nint num = 11;\n\n// Palette:\nvec3 a = vec3(0.5, 0.5, 0.5);\nvec3 b = vec3(0.5, 0.5, 0.5);\nvec3 c = vec3(1.0, 1.0, 1.0);\nvec3 d = vec3(0.00, 0.10, 0.20);\n\n/////\n\n//uint type[] = uint[](1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u);\n//vec2 off[3] = vec2[3](vec2(1.0, 0.0), vec2(1.0, sqrt(3.0)), vec2(-1.0, sqrt(3.0)));\n\nfloat hash1( uint n ) \n{\n    n += uint(seed);\n    // integer hash copied from Hugo Elias\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return float( n & uvec3(0x7fffffffU))/float(0x7fffffff);\n}\n\nfloat leftOf(vec2 a, vec2 b, vec2 p) {\n\tvec2 e0 = b - a;\n\tvec2 v0 = p - a;\n\tvec2 pq0 = v0 - e0*( dot(v0,e0)/dot(e0,e0) );\n    vec2 d = vec2( dot( pq0, pq0 ), (v0.x*e0.y-v0.y*e0.x) );\n\t\n    // sdf distance to line\n    float dist = -sqrt(d.x)*sign(d.y);\n\n    float edge = mix(0.2, 0.005, sharpness);\n    return 2.0*smoothstep(-edge, edge, dist + movement*sin(6.28318*iTime/5.0 + curvyness*dot(p,p))) - 1.0;\n}\n\nvec4 palette( float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return vec4(a + b*cos( 6.28318*(c*t+d) ), 1.0);\n}\n\nvec4 color(float z) {\n    return palette( z/float(num), a, b, c, d);\n    //return palette( mod(z/float(num), 1.0), a, b, c, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n\n    uint size = uint(num);\n    float c = 0.0;\n    float d = 1.0;//0.25/float(size);\n    for(uint i = 0u; i < size; ++i) {\n        vec2 a = vec2(hash1(i), hash1(i+111u));\n        \n        float z = sign(mod(float(i), 2.0)-0.5);\n        vec2 b = a + vec2(z, sqrt(3.0));\n        c += d*leftOf(a,b,uv);\n\n        a.y = -a.y;\n        b.y = -b.y;\n        c += d*leftOf(b,a,uv);\n\n        a.x = -a.x;\n        b.x = -b.x;\n        c += d*leftOf(a,b,uv);\n\n        a.y = -a.y;\n        b.y = -b.y;\n        c += d*leftOf(b,a,uv);\n    }\n    \n    // Output to screen\n    fragColor = color(c);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}