{
    "Shader": {
        "info": {
            "date": "1572131882",
            "description": "Using a discrete fourier transform to solve the schrodinger equation exactly. Wtf this is mind blowing.... thanks fabrice and michael and rory",
            "flags": 32,
            "hasliked": 0,
            "id": "3dtSDM",
            "likes": 10,
            "name": "Exact Schrodinger Equation ",
            "published": 3,
            "tags": [
                "dft"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 536
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = .76*atan(7.*A(U));\n\n    \n  \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 l = B(U);\n    Q.xy = vec2(0);\n    \n    vec4 a = vec4(0);\n    vec2 C = -6.28318530718*(U-.5-0.5*R)/R;\n    for (float i = 0.; i < R.y; i++) {\n        a = A(vec2(U.x,i));\n        Q.xy += cmul(a.zw,C.y*i);\n    }\n    vec2 u = U-0.5*R;\n    vec2 b = U-0.3*R;\n\tif (iFrame < 1) \n        Q = exp(-.003*dot(u,u))*vec4(0,0,cos(u.x),sin(u.x))+\n        \texp(-.001*dot(b,b))*vec4(0,0,cos(b.y),sin(b.y));\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texelFetch(iChannel0,ivec2(U),0)\n#define B(U) texelFetch(iChannel1,ivec2(U),0)\n#define D(U) texelFetch(iChannel3,ivec2(U),0)\n\nvec2 cmul (vec2 a,float b) { return a*mat2(cos(b),-sin(b),sin(b),cos(b)); } \nvec2 cmul (vec2 a,vec2  b) { return mat2(a,-a.y,a.x)*b; } \n\nvec2 pol (vec2 a) {return vec2(length(a),atan(a.y,a.x));}\nvec2 car (vec2 a) {return a.x*vec2(cos(a.y),sin(a.y));}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = vec4(0);\n    vec2 C = -6.28318530718*(U-.5-0.5*R)/R;\n    for (float i = 0.; i < R.x; i++)\n        Q.xy += cmul(A(vec2(i,U.y)).xy,C.x*i);\n   \n  \tfloat a = -600.*sin(.2*iTime)*dot(C,C);\n    // Klein-Gordon :\n  \t//float a = -600.*sin(.2*iTime)*length(C);\n    Q.xy *= mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = vec4(0);\n    vec2 C = 6.28318530718*(U-.5)/R;\n    for (float i = 0.; i < R.y; i++) \n        Q.xy += cmul(A(vec2(U.x,i)).xy,C.y*i)/R.y;\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = vec4(0);\n    vec2 C = 6.28318530718*(U-.5)/R;\n    for (float i = 0.; i < R.x; i++) \n        Q.xy += cmul(A(vec2(i,U.y)).xy,C.x*i)/R.x;\n\n\tQ *= mod(U.x+U.y,2.)*2.-1.;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}