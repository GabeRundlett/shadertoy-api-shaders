{
    "Shader": {
        "info": {
            "date": "1546830969",
            "description": "EZ",
            "flags": 0,
            "hasliked": 0,
            "id": "WslGzS",
            "likes": 1,
            "name": "Eugene ngemeg",
            "published": 3,
            "tags": [
                "ez"
            ],
            "usePreview": 0,
            "username": "beefburrito",
            "viewed": 407
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n#define DPI 6.2831853\n\nfloat circle(float r, in vec2 uv, in vec2 pos){\n\t\n    uv = uv-pos;\n    return 1.0-step(r,length(uv));\n        \n}\n\nfloat rect(in vec2 uv, float a, float b, float c, float d, in vec2 pos){\n\t\n    uv = (uv+vec2(0.5,0.5))-pos;\n    float xy = step(a,uv.x);\n    xy *= step(b,uv.y);\n    xy *= step(c,1.-uv.x);\n    xy *= step(d,1.-uv.y);\n    return xy;\n}\n\nfloat triangle(in vec2 uv, float n, float tam, in vec2 pos ){\n    \n    uv = uv-pos;\n    float a = atan(uv.x, uv.y) - PI;\n    float r = DPI/n;\n    float d = cos(floor(0.5+a/r)*r-a)*length(uv);\n    d = 1.0-step(tam,d); \n    return d;\n}\t\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0*uv;\n    p.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.0);\n\n    //Circle\n    float c0 = circle(0.41, p, vec2(-1.2, 0.4));\n    float c1 = circle(0.41, p, vec2(-1.2, -0.5));\n    float c2 = circle(0.38, p, vec2(-1.2, -0.5));\n    //Rectangle\n    float r0 = rect(p,-0.1,0.2,0.4,0.2, vec2(0.2,0.4));\n    float r1 = rect(p,-0.1,0.2,0.4,0.2, vec2(0.2,-0.5));\n    float r2 = rect(p,-0.07,0.23,0.43,0.23, vec2(0.2,-0.5));\n\n    //Triangle\n    float x0 = triangle(p, 3.0, 0.20, vec2(1.2,.3));\n    \n    float x1 = triangle(p, 3.0, 0.2, vec2(1.2,-0.5));\n    float x2 = triangle(p, 3.0, 0.17, vec2(1.2,-0.5));\n    \n    col -= vec3(x2)*vec3(1.,1.0,1.);\n\tcol -= vec3(r2)*vec3(1.0,1.,1.);\n\tcol -= vec3(c2)*vec3(1.0,1.,1.);\n    col += vec3(c0)*vec3(0.2,0.8,1.);\n    col += vec3(c1)*vec3(0.2,0.8,1.);\n    col += vec3(r0)*vec3(.2,0.8,1.0);\n    col += vec3(r1)*vec3(.2,0.8,1.0);\n    col += vec3(x0)*vec3(0.2,0.8,1.0);\n\tcol += vec3(x1)*vec3(0.2,0.8,1.0);\n\n\tfragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}