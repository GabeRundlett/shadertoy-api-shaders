{
    "Shader": {
        "info": {
            "date": "1454274889",
            "description": "I was inspired by some wallpaper on android devices showing some triangles with a lot of colors. I wanted to see that with animations.\nI first coded it on a shader app on android when i had some time. (non continuous work)",
            "flags": 0,
            "hasliked": 0,
            "id": "4dV3Dh",
            "likes": 44,
            "name": "Colorful tris",
            "published": 3,
            "tags": [
                "2d",
                "triangles",
                "colors"
            ],
            "usePreview": 0,
            "username": "zlnimda",
            "viewed": 2359
        },
        "renderpass": [
            {
                "code": "/* ----------------------------------------------------------------------------\n * \"THE BEER-WARE LICENSE\" (Revision 42):\n * zlnimda (Nimda@zl) wrote this file.  As long as you retain this notice you\n * can do whatever you want with this stuff. If we meet some day, and you think\n * this stuff is worth it, you can buy me a beer in return.\n * ----------------------------------------------------------------------------\n */\n\nprecision highp float;\n\nuniform float time;\nuniform vec2 touch;\nuniform vec2 resolution;\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat GetLocation(vec2 s, float d)\n{\n    vec2 f = s*d;\n\n    //s = mix(vec2(0), floor(s*d),step(0.5, f));\n\n    // tris\n    f = mod(f, 8.); // because i failed somewhere\n    \n    f = f + vec2(0,0.5)*floor(f).x;\n    s = fract(f);\n    f = floor(f);\n\n    d = s.y - 0.5;\n    float l = abs(d) + 0.5 * s.x;\n    float ff = f.x+f.y;\n    f = mix(f, f+sign(d)*vec2(0,0.5), step(0.5, l));\n    l = mix(ff, ff+sign(d)*0.5, step(0.5, l));\n\n    return l * rand(vec2(f));\n}\n\nvec3 hsv2rgb(float h, float s, float v)\n{\n    h = fract(h);\n    vec3 c = smoothstep(2./6., 1./6., abs(h - vec3(0.5, 2./6., 4./6.)));\n    c.r = 1.-c.r;\n    /*\n    vec3 c = vec3(\n    smoothstep(1./6., 2./6., abs(h -0.5)),\n        1.-smoothstep(1./6., 2./6., abs(h -2./6.)),\n        1.-smoothstep(1./6., 2./6., abs(h -4./6.))\n        );*/\n    return mix(vec3(s), vec3(1.0), c) * v;\n}\n\nvec3 getRandomColor(float f, float t)\n{\n    return hsv2rgb(f+t, 0.2+cos(sin(f))*0.3, 0.9);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mx = max( iResolution.x, iResolution.y );\n    float t = iTime*0.3;\n    vec2 s = fragCoord.xy / mx + vec2(t, 0) * 0.2;\n\n    float f[3];\n    f[0] = GetLocation(s, 12.);\n    f[1] = GetLocation(s, 6.);\n    f[2] = GetLocation(s, 3.);\n\n    vec3 color = getRandomColor(f[1] *0.05 + 0.01*f[0] + 0.9*f[2], t);\n\n    fragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}