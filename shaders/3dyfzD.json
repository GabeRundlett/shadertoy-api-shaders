{
    "Shader": {
        "info": {
            "date": "1606655241",
            "description": "Nothing...",
            "flags": 0,
            "hasliked": 0,
            "id": "3dyfzD",
            "likes": 8,
            "name": "traditional textile animation",
            "published": 3,
            "tags": [
                "distfunctions2d"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 375
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define skew(x, y) mat2(1,tan(x),tan(y),1)\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdEquilateralTriangle( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n    vec2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\n    vec2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n// noise and fbm function from https://www.shadertoy.com/view/Xd3GD4\n//-----------------------------------------------------------------------------\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise2d( in vec2 p )\n{\n\tconst float K1 = 0.366025404; // (sqrt(3)-1)/2;\n\tconst float K2 = 0.211324865; // (3-sqrt(3))/6;\n\t\n\tvec2 i = floor( p + (p.x+p.y)*K1 );\n\t\n\tvec2 a = p - i + (i.x+i.y)*K2;\n\tvec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\n\tvec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n\t\n\tvec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\t\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\t\n\treturn dot( n, vec3(70.0) );\n}\n\nfloat fbm(vec2 uv)\n{\n\tfloat f;\n\tmat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tf  = 0.5000*noise2d( uv ); uv = m*uv;\n\tf += 0.2500*noise2d( uv ); uv = m*uv;\n\tf += 0.1250*noise2d( uv ); uv = m*uv;\n\tf += 0.0625*noise2d( uv ); uv = m*uv;\n\tf = 0.5 + 0.5*f;\n\treturn f;\n}\n\nfloat textile1Dist(vec2 p) {\n    vec2 prevUV = p;\n    vec3 col = vec3(0);\n    \n    p.x *=0.8;\n    const float k = -5.5;\n    float c = cos(k*p.y);\n    float s = sin(k*p.y);\n    mat2  m = mat2(c,-s,s,c);\n    vec2  q = p*m;\n    prevUV = q;\n    \n    float smallMaskSize = 0.055;\n    float d = length(q)-0.1;\n    q.x = abs(q.x);\n    q.x *= 0.8;\n    float d2 = length(q-vec2(0.059,0.035))-smallMaskSize;\n    d = max(-d2,d);\n\n    d = max(-(p.y-0.009),d);\n    return d;\n}\n\nvec3 textile1(vec2 uv, vec3 col, float ratio) {\n    vec2 prevUV = uv;\n    float d = length(uv)-0.125;\n    col = mix(col,vec3(0.9,0.3,0.6)*(ratio+0.9),S(d,0.0));\n    \n    d = textile1Dist(uv*Rot(radians(20.0)));\n    uv*=-1.0;\n    float d2 = textile1Dist(uv*Rot(radians(-45.0)));\n    d = min(d,d2);\n    uv = prevUV;\n    d2 = textile1Dist(uv*Rot(radians(-100.0)));\n    d = min(d,d2);\n    \n    uv*=61.0;\n    d2 = sdEquilateralTriangle(uv*Rot(radians(77.0)));\n    d = min(d,d2);\n    col = mix(col,vec3(1.0,0.7,0.8)*(ratio+0.9),S(d,0.0));\n    return col;\n}\n\nvec3 textileLayer1(vec2 uv, vec3 col, float scale, float i) {\n    uv*=scale;\n    uv.x+=0.35;\n    uv = mod(uv,0.8)-0.4;\n    col = textile1(uv*Rot(radians(iTime*-50.0*scale)),col,i);\n    return col;\n}\n\nfloat bgTexDist(vec2 uv) {\n    uv.x = abs(uv.x);\n    uv.x -= 0.02;\n    uv.x*=-1.0;\n    uv*=0.7;\n    vec2 prevUV = uv;\n    uv.y = abs(uv.y);\n    uv.y-=0.053;\n    float d = sdTriangle(uv,vec2(0.005,-0.025),vec2(-0.01,-0.05),vec2(-0.035,-0.05));\n    uv = prevUV;\n    float d2 = sdTriangle(uv,vec2(-0.005,0.0),vec2(0.01,0.025),vec2(0.01,-0.025));\n    d = min(d,d2);\n    return d;\n}\n\nvec3 bg(vec2 uv, vec3 col) {\n    vec2 prevUV = uv;\n    uv.x = mod(uv.x,0.18)-0.09;\n    uv.y = mod(uv.y,0.1)-0.05;\n    float d = bgTexDist(uv);\n    \n    uv = prevUV;\n    uv.x -= 0.09;\n    uv.y -= 0.25;    \n    uv.x = mod(uv.x,0.18)-0.09;\n    uv.y = mod(uv.y,0.1)-0.05;\n    \n    float d2 = bgTexDist(uv);\n    d = min(d,d2);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    return col;\n}\n\nfloat leaf(vec2 uv) {\n    float sc = mix(0.01,2.0,smoothstep(0.3,-0.3,uv.y));\n    uv.x *= 2.0*sc;\n    float d = length(uv)-0.08;\n    return d;\n}\n\nvec3 flower(vec2 uv, vec3 col, vec3 baseCol){\n    float leafNum = 5.0;\n    float deg = 360.0/leafNum;\n    float leafDist = 0.09;\n    float d = 1.0;\n    for(float i = 0.0; i<5.0; i+=1.0) {\n        float rad = radians(i*deg);\n        float x = cos(rad)*leafDist;\n        float y = sin(rad)*leafDist;\n        \n        vec2 pos = uv;\n        pos.x -= x;\n        pos.y -= y;\n        pos*=Rot(-rad-radians(-90.0));\n        float d2 = leaf(pos);\n        d = min(d,d2);\n    }\n    float d3 = length(uv)-0.02;\n    d = min(d,d3);\n    col = mix(col,baseCol,S(d,0.0));\n    return col;\n}\n\nvec3 textile2(vec2 uv, vec3 col, float ratio) {\n    col = flower(uv*Rot(radians(35.0)),col, vec3(0.9,0.5,1.0)*(ratio+0.9));\n    col = flower(uv,col, vec3(0.7)*(ratio+0.9));\n    col = flower(uv*1.1,col, vec3(0.6,0.1,0.8)*(ratio+0.9));\n    return col;\n}\n\nvec3 textileLayer2(vec2 uv, vec3 col, float scale, float i) {\n    uv*=scale;\n    uv.x+=0.35;\n    uv = mod(uv,0.8)-0.4;\n    col = textile2(uv*Rot(radians(iTime*50.0*scale)),col,i);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    vec3 col = vec3(1);\n    \n    uv.y+=iTime*0.05;\n    col = bg(uv,col);       \n    \n    uv = prevUV;\n    for(float i = 0.; i<1.0; i+=1.0/3.0) {\n        float z = mix(-0.6,-0.1,i);\n        \n        uv.x += (fract(0.3+i*5.0));\n        uv.y+= (i*0.3)-0.1;\n        uv.y+=iTime*(0.08*i+0.15);\n       \n        col = textileLayer2(uv,col,0.4+((1.0-i)*2.2+z),i); \n        \n        uv = prevUV;\n        uv.y+= (i*0.8)-0.1;\n        uv.y+=iTime*(0.1*i+0.1);\n        uv.x += (fract(0.2+i*2.0));\n        uv.x+=sin(iTime*0.5)*0.3;\n       \n        col = textileLayer1(uv,col,0.4+((1.0-i)*2.0+z),i);\n    }\n    \n    uv = prevUV;\n    uv*=2.0;\n    float smokeD = (length(uv)*0.9)*fbm(uv - vec2(cos(iTime*0.3)*2.5,sin(iTime*0.1)*2.5));\n    col *= mix( col, vec3(1.5,1.0,0.7), S(smokeD,1.0) );\n        \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}