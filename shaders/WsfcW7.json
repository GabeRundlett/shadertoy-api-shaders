{
    "Shader": {
        "info": {
            "date": "1584875787",
            "description": "A challenge for the home quarantined. Draw the regular polygons with a compass and straight edge.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsfcW7",
            "likes": 13,
            "name": "Compass and Straightedge",
            "published": 3,
            "tags": [
                "compass"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 389
        },
        "renderpass": [
            {
                "code": "//Compass and Straight Edge by eiffie\n//a day into home quarantine and I'm bored enough to try creating\n//the regular polygons using a compass and straight edge\n//i got to 9... almost :)\n//there is no math here just a recreation of the chalk scribbles\n#define tym iTime\n#define rez iResolution.xy\n#define tau 6.283\n\nfloat hash(vec2 v){return fract(sin(dot(v,vec2(117.0,113.3)))*4036.123);}\nvec2 norm(float a){return vec2(cos(a),sin(a));}\nvec3 compass(vec2 v, vec2 c, float r){\n  v-=c;\n  return vec3(10.0,0.3*length(v),abs(length(v)-r));\n}\nvec3 edge(vec2 v, vec2 a, vec2 b){\n  vec2 p=b-a;a=v-a;p*=clamp(dot(a,p)/dot(p,p),0.0,1.0);\n  return vec3(distance(a,p),0.3*min(length(a),length(v-b)),10.0);\n}\nvoid mainImage(out vec4 O, in vec2 U){\n  vec2 p=2.0*(2.0*U.xy-rez)/rez.x;\n  float rnd=hash(U)*0.8+0.2;\n  vec3 blue=vec3(0.5,0.6,0.7),red=vec3(0.9,0.6,0.5),green=vec3(0.6,0.7,0.5),col=vec3(10.0);\n  float time=mod(tym*0.4,6.5);//time=6.1;\n  if(time<1.0){//isosceles triangle\n    for(int i=0;i<3;i++){\n      float a=tau*float(i)/3.0+tau/12.0;\n      col=min(col,compass(p,norm(a)*0.285,0.5));\n      a+=tau/2.0;\n      col=min(col,edge(p,norm(a)*0.58,norm(a+tau/3.0)*0.58));\n    }\n  }else if(time<2.0){//square\n    for(int i=0;i<3;i++){\n      float a=tau*float(i)/3.0+tau/12.0;\n      col=min(col,compass(p,norm(a)*0.285,0.5));\n    }\n    col=min(col,edge(p,vec2(0.0,-1.0),vec2(0.0,0.75)));\n    p.y+=0.285;\n    for(int i=0;i<4;i++){\n      float a=tau*float(i)/4.0;\n      col=min(col,edge(p,norm(a)*0.5,norm(a+tau/4.0)*0.5));\n    }\n  }else if(time<3.0){//pentagon\n    p.x+=0.25;\n    for(int i=0;i<3;i++){\n      float a=tau*float(i)/3.0+tau/12.0;\n      col=min(col,compass(p,norm(a)*0.285,0.5));\n    }\n    col=min(col,edge(p,vec2(0.0,-1.0),vec2(0.0,0.75)));\n    col=min(col,edge(p,norm(tau/12.0),-norm(tau/12.0)));\n    col=min(col,edge(p,vec2(0.0),norm(-tau/12.0)*0.58));\n    p-=norm(tau/12.0)*0.285;\n    for(int i=0;i<5;i++){\n      float a=tau*float(i)/5.0;\n      col=min(col,compass(p,norm(a)*0.5,0.58));\n      a+=tau/10.0;\n      col=min(col,edge(p,norm(a)*0.9,norm(a+tau/5.0)*0.9));\n    }\n  }else if(time<4.0){//hexagon\n    col=compass(p,vec2(0.0),0.5);\n    for(int i=0;i<6;i++){\n      float a=tau*float(i)/6.0;\n      col=min(col,compass(p,norm(a)*0.5,0.5));\n      a+=tau/12.0;\n      col=min(col,edge(p,norm(a)*0.87,norm(a+tau/6.0)*0.87));\n    }\n  }else if(time<5.0){//heptagon\n    col=compass(p,vec2(0.0),0.5);\n    col=min(col,compass(p,vec2(-0.5,0.0),0.5));\n    col=min(col,edge(p,vec2(0.0),vec2(-0.5,0.0)));\n    col=min(col,edge(p,vec2(-0.25,-0.44),vec2(-0.25,0.44)));\n    for(int i=0;i<7;i++){\n      float a=tau*float(i)/7.0;a+=tau/19.7;\n      col=min(col,compass(p,norm(a)*0.5,0.44));\n      a+=tau/14.0;\n      col=min(col,edge(p,norm(a)*0.84,norm(a+tau/7.0)*0.84));\n    }\n  }else if(time<6.0){//octagon\n    col=compass(p,vec2(0.5,0.0),1.0);\n    col=min(col,compass(p,vec2(-0.5,0.0),1.0));\n    col=min(col,edge(p,vec2(0.5,0.0),vec2(-0.5,0.0)));\n    col=min(col,edge(p,vec2(0.0,-0.88),vec2(0.0,0.88)));\n    col=min(col,compass(p,vec2(0.0,0.0),0.5));\n    for(int i=0;i<4;i++){\n      float a=tau*float(i)/4.0;\n      col=min(col,compass(p,norm(a)*0.5,0.7));\n      a+=tau/8.0;\n      col=min(col,edge(p,vec2(0.0),norm(a)*0.95));\n    }\n    for(int i=0;i<8;i++){\n      float a=tau*float(i)/8.0;\n      col=min(col,edge(p,norm(a)*0.5,norm(a+tau/8.0)*0.5));\n    }\n  }else{//9gon\n    col=compass(p,vec2(0.5,0.0),1.0);\n    col=min(col,compass(p,vec2(-0.5,0.0),1.0));\n    col=min(col,edge(p,vec2(0.5,0.0),vec2(-0.5,0.0)));\n    col=min(col,edge(p,vec2(0.0,-0.88),vec2(0.0,0.88)));\n    col=min(col,compass(p,vec2(0.0,0.0),0.5));\n    col=min(col,compass(p,vec2(0.5,0.0),0.7));\n    p.x-=0.5;\n    for(int i=0;i<9;i++){\n      float a=tau*float(i)/9.0;\n      col=min(col,compass(p,norm(a),0.7));\n      a+=tau/9.0;\n      col=min(col,edge(p,norm(a),norm(a+tau/9.0)));\n    }\n  }\n  col=smoothstep(vec3(3.0/rez.y),vec3(0.0),col)*0.85+vec3(0.0,0.0,0.15);\n  O=vec4(rnd*(red*col.r+green*col.g+blue*col.b),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}