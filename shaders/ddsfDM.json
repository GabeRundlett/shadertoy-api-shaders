{
    "Shader": {
        "info": {
            "date": "1688836574",
            "description": "very simple trials",
            "flags": 0,
            "hasliked": 0,
            "id": "ddsfDM",
            "likes": 3,
            "name": "Trippy Bullseye",
            "published": 3,
            "tags": [
                "trippyunfinished"
            ],
            "usePreview": 0,
            "username": "exocortex",
            "viewed": 143
        },
        "renderpass": [
            {
                "code": "\nvec3 pow3(float d, float phase) {\n    float basepower = 2.0 + cos(phase * 0.321) * 0.85;\n    float PI = 3.14159;\n\n    float offset = 0.08;\n\n    vec3 offsets = 0.4 * phase + offset * vec3(\n                cos(phase + PI * 2.0 / 3.0),\n                cos(phase + PI * 4.0 / 3.0),\n                cos(phase));\n    \n    vec3 powers = vec3(basepower, basepower, basepower);\n    \n    return vec3(pow(d, powers.x) + offsets.x, \n                pow(d, powers.y) + offsets.y, \n                pow(d, powers.z) + offsets.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    float d = length(uv);\n\n    vec3 col = 0.5 + 0.5*cos(20.0 * pow3(d, iTime));\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}