{
    "Shader": {
        "info": {
            "date": "1665167819",
            "description": "hi",
            "flags": 0,
            "hasliked": 0,
            "id": "flVfWG",
            "likes": 3,
            "name": "Living Truchet 2",
            "published": 3,
            "tags": [
                "tile"
            ],
            "usePreview": 0,
            "username": "rcargou",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535\nfloat hash( vec2 p ) {\n\tfloat h = dot(vec2( p) ,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\n\nfloat quarter_circle(vec2 uv) {\n\n    float size = 0.01;\n    float ret = 0.;\n    float l = length(uv - vec2(1., 1.) ) * .18 / 0.01 * size;\n    ret = smoothstep(.1, .1 - size, l);\n    ret *= smoothstep(.1 - 2. * size, .1 - size, l);\n  \n    return ret;\n\n}\n\nfloat truchet(vec2 uv, float s) {\n    \n    if (s < 0.)\n        uv.x = 1. - uv.x;\n    float ret = quarter_circle(uv);\n    \n    vec2 tmp = uv;\n    \n    uv.x = 1.0 - tmp.y;\n    uv.y = 1.0 - tmp.x;\n    \n    ret += quarter_circle(uv);\n    return ret;\n}\n\nfloat rand_trigger(vec2 uv, vec2 id, float scale) {\n\n    float time = scale * iTime / 2. + hash(id) * 1.;\n    float r = floor(time / PI  / 3.+ .0);// + -.2;\n    float h = hash(vec2(r * vec2( hash(id))) + vec2( hash(id) ));\n    if (h < 0.5)\n        time = r * PI * 3.;//r;// - .2;\n    return min(max(sin(time  ), -0.2 ), 0.2 ) * 5.;\n }\n \n\n \nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nint hashi( vec2 p ) {\n\tfloat h = dot(vec2( p) ,vec2(127.1,311.7));\t\n    float y = 2213123. * fract(sin(h)*43758.5453123);\n    return int(y);\n}\n\nfloat diag(vec2 uv, float si) {\n    float s = .05;\n    return smoothstep(s, 0.0, abs(uv.x * si - uv.y) - s / 2.  );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n    uv *= 10.;\n    vec2 id = floor(uv);\n\n    float r = rand_trigger(uv.xy, id, 1.0);\n    uv = fract(uv) - vec2(.5);\n //   r = abs(r);\n    r = min(1.0, r);\n    r = max(-0.0, r);\n    float angle = 3.14 * r / 2.;\n    uv *= rotate2d(angle);\n    int si = hashi(id) % 2 == 0 ? -1 : 1;\n    float t = rand_trigger(vec2(21.), vec2(42.), 1. );\n    float sd = diag(uv, float(si));\n    float ss = truchet(uv + vec2(.5), float(si));\n    vec3 col = vec3( mix(sd, ss, 1.) );\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}