{
    "Shader": {
        "info": {
            "date": "1579386961",
            "description": "aaaaa",
            "flags": 0,
            "hasliked": 0,
            "id": "WlVGRV",
            "likes": 3,
            "name": "metal nonbeing2",
            "published": 3,
            "tags": [
                "aaa"
            ],
            "usePreview": 0,
            "username": "hmitchell",
            "viewed": 296
        },
        "renderpass": [
            {
                "code": "#define TWOPI (3.14159 * 2.0)\n\nfloat random (in vec2 st) {\n    return fract (sin(dot(st.xy,\n                          vec2(12.9898, 78.233)))*\n                  43758.543123);\n\t}\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n   //four corner in 2D of the tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    \n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + \n        (d - b) * u.x * u.y;\n    \n\t\t}\n\nfloat fbm (in vec2 p) {\n    \n    const int octaves = 1;\n    float freqScale = 2.;\n    float ampScale = 0.666;\n    float frequency = 1.;\n    float amplitude = 1.;\n    float result; //keep track of the sum of the noise outside\n    //of the loop\n    \n    for (int i = 0;i < octaves; i++) {\n        result += noise(p*frequency)*amplitude;\n        frequency *= freqScale;\n        amplitude *= ampScale;\n    }\n    \n    return result;\n    \n}\n    \n    \n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x += sin(iTime*0.015 +  uv.y*11.) * cos(iTime*0.08) * 0.05 ;\n    uv.y += cos(iTime*0.02 +  uv.x*11.) * sin(0.04) * 0.05;\n                \n    // Time varying pixel color\n    vec3 col = texture(iChannel1, uv).rgb;\n    \n    float fbmResult = fbm(vec2(length(col)*0.05, iTime * 0.0001))*6.;\n    \n    uv += vec2(sin(.006*fbmResult), cos(6.*fbmResult))*cos(iTime *.03);\n    \n    \n   col.b = col.b - iMouse.x *0.001 ;\n   col.r = col.r - iMouse.x *0.003 ;\n   col.g = col.g + iMouse.x *0.001 ;\n    \n \n  \n        //* (iMouse.x * 0.000001) ;\n    \n\n    \n    col = texture(iChannel1, uv).rgb;\n    \n   //col.b = col.b - 0.2;\n   //col.r = col.r + 0.06;\n   //col.g = col.g + 0.1;\n    \n    \n   // col.r = length(col* 0.75)* 0.8;\n   // col.b = length(col* 0.55)* 0.9;\n   // col.g = length(col*.5);\n    \n   //col.b = col.b - iMouse.x *0.0002 ;\n   //col.r = col.r - iMouse.x *0.0003 ;\n   //col.g = col.g + iMouse.x *0.0002 ;\n   \n   \n    \n    //col.g = length(col.g);\n    \n   col = sin(col + length(col)*1.5 + 100. * 0.001) * -0.49 + 0.6;\n    \n  \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}