{
    "Shader": {
        "info": {
            "date": "1690379874",
            "description": "might become a dying light mod idk",
            "flags": 2,
            "hasliked": 0,
            "id": "DtfczH",
            "likes": 1,
            "name": "zombie apocalypse vibes",
            "published": 3,
            "tags": [
                "filter",
                "red",
                "webcam",
                "gore"
            ],
            "usePreview": 0,
            "username": "raianmr",
            "viewed": 396
        },
        "renderpass": [
            {
                "code": "// tweak\nconst float brightness = 0.05, contrast = 1.05,\n            tMin       = 0.00, tRange   = 0.50;\nconst vec3  inWeights  = vec3(1.00, 0.00, 0.00),\n            outWeights = vec3(1.10, 0.50, 0.50);\nconst bool  useWebcam  = true;\n\n// best left unchanged\nconst vec3 lumWeights = vec3(0.2126, 0.7152, 0.0722); // https://en.wikipedia.org/wiki/Relative_luminance\n\nfloat sigmoid(float feed) {\n    return 1.0 / (1.0 + exp(-1.0 * feed));\n}\n\nvec3 grayscale(vec3 feed, float brightness, float contrast) {\n    float lum = dot(feed, lumWeights);\n    float bnw = (lum - 0.5 + brightness) * contrast + 0.5; // TODO replace with something less crude\n    \n    return vec3(bnw);\n}\n\nvec3 effect(vec3 feed) {\n    vec3  bnw      = grayscale(feed, brightness, contrast);\n    float likeness = dot(feed - bnw, inWeights);\n    float strength = smoothstep(tMin, tMin + tRange, likeness);\n    vec3  mixed    = mix(bnw, feed * outWeights, strength);\n    \n    return mixed;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 og = useWebcam \n                ? texture(iChannel0, uv) \n                : texture(iChannel1, uv);\n    \n    vec2 mi = iMouse.xy / iResolution.xy;\n    vec3 result = uv.x > mi.x \n                    ? effect(og.rgb) \n                    : og.rgb;         \n    \n\tfragColor = vec4(result, 0.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}