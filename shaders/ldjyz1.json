{
    "Shader": {
        "info": {
            "date": "1491375417",
            "description": "Raw experiment with printing and tracking point values (could be useful for debugging / observation).\nPrint functions will be upgraded / refactored later.",
            "flags": 0,
            "hasliked": 0,
            "id": "ldjyz1",
            "likes": 17,
            "name": "[ #10 ] - Pi road",
            "published": 3,
            "tags": [
                "2d",
                "math",
                "text",
                "texture",
                "print",
                "atlas"
            ],
            "usePreview": 0,
            "username": "Yrai",
            "viewed": 923
        },
        "renderpass": [
            {
                "code": "#define res_            iResolution\n#define t               iTime\n#define pi_             3.14159265\n\n\nfloat pchar(vec2 p, int C);\nfloat pfnum(vec2 p, float x);\nfloat pinum(vec2 p, float x);\nfloat ppoint(vec2 p, vec2 n);\n\nfloat d_line(vec2 p, vec2 a, vec2 b);\nvec2  domain(vec2 uv, float s);\n\nvoid mainImage(out vec4 o, vec2 f) {\n\tvec2 p = domain(f, 2.);\n    vec2 sp = p;\n    \n    vec2 rpath = vec2(cos(t), sin(t));\n    vec2 gpath = vec2(t, sin(t));\n    vec2 prp = p - rpath;\n\tp.x += t;\n    rpath += vec2(t, 0.);\n    \n    vec2 pgp = p - gpath;\n    \n    float cr  = smoothstep(.02, .0001, abs(length(p - vec2(t, 0.)) - 1.));\n    float sn  = smoothstep(.02, .0001, abs(sin(p.x) - p.y));\n    float pr  = smoothstep(.06, .01, length(prp));\n    float po1 = smoothstep(.06, .01, length(pgp));\n    \n    vec3 c = vec3(0.);\n    c = mix(c, vec3(1.), cr);\n    c = mix(c, vec3(1.), sn);\n    \n    c = mix(c, vec3(1., 0., 0.), pr);\n    c = mix(c, vec3(1.), ppoint(prp*6.,  rpath) );\n    c = mix(c, vec3(0., 1., 0.), po1);\n    c = mix(c, vec3(1.), ppoint(pgp*6., gpath));\n\n    float ln  = smoothstep(.01, .001, d_line(p, rpath, gpath));\n    c = mix(c, vec3(1.), ln);\n    \n    float axis = max(smoothstep(.02, .0001, abs(p.x)), smoothstep(.02, .0001, abs(p.y)));\n    float as = max(smoothstep(.01, .001, abs(p.y - 1.02)), smoothstep(.01, .001, abs(p.y + 1.02)));\n    c = mix(c, vec3(.3), axis);\n    c = mix(c, vec3(.1), as);\n    \n    float i = floor(p.x / pi_);\n    \n    c = mix(\n        c, vec3(1., 0., 0.),\n        max(\n            pchar(4.9*(p-vec2(pi_*i+.2, 0.)), 137),\n            pinum(4.9*(p-vec2(pi_*i+.1, 0.)), i)\n        )\n    );\n    \n    \n    o = vec4(c, 1.);\n}\n\nfloat pinum(vec2 p, float x) {\n    bool neg = false;\n    if(x < 0.) {\n    \tneg = true;\n        x *= -1.;\n    }\n    \n    int x_ = int(floor(x));\n    float nm = 0.;\n    if(neg)\n        nm = pchar(p+vec2(.3,0.), 45);\n    \n    for(int i = 0; i < 10; i++) {\n    \tint n = int(floor(mod(float(x_), 10.)));\n        nm = max(nm, pchar(p + float(i)*vec2(.4, 0.), 48+n));\n        x_ /= 10;\n        if(x_ == 0)\n            break;\n    }\n    \n    return nm;\n}\n\nfloat pfnum(vec2 p, float x) {\n   \t// +/-dn...d1d0d,d_0d_1...d_n\n    float xo = x;\n    bool neg = false;\n    if(x < 0.) { neg = true; x *= -1.; }\n    \n\tint d = int(abs(floor(x)));\n    int d0 = 0;\n    \n    int d_0 = int( floor(abs(fract(x)) * 10.) );\n\tint d_1 = int( floor(abs(fract(x)) * 100.) );\n    d_1 = int( d_1 - d_0*10);\n    \n    float nm = pinum(p, xo);\n    nm = max(nm, pchar(p - vec2(.3, 0.), 46));\n    nm = max(nm, pchar(p - vec2(.6, 0.), 48 + d_0));\n    nm = max(nm, pchar(p - vec2(1., 0.), 48 + d_1));\n\t\n    return nm;\n}\n\nvec2 domain(vec2 uv, float s) {\n    return (2. * uv.xy - res_.xy) / res_.y * s;\n}\n\nfloat pchar(vec2 p, int C) {\n  if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return 0.;\n   \n  return textureGrad(\n      iChannel0, p/16. + fract(vec2(C, 15-C/16) / 16.), \n      dFdx(p/16.),dFdy(p/16.)\n  ).r;\n}\n\nfloat ppoint(vec2 p, vec2 n) {\n\tfloat pn = max(pchar(p + vec2(1.2, 0.), 40), pfnum(p, n.x));\n    pn = max(pn, pchar(p - vec2(1.3, 0.), 44));\n    pn = max(pn, pfnum(p - vec2(1.9, 0.), n.y));\n    pn = max(pn, pchar(p - vec2(3.3, 0.), 41));\n    return pn;\n}\n\nfloat d_line(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1. );\t\n\treturn length( pa - ba*h )*.7;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}