{
    "Shader": {
        "info": {
            "date": "1696973595",
            "description": "OKLAB color space implementation",
            "flags": 0,
            "hasliked": 0,
            "id": "cdtBRM",
            "likes": 2,
            "name": "OKLAB",
            "published": 3,
            "tags": [
                "color",
                "lab",
                "colorspace",
                "ok",
                "oklab"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 310
        },
        "renderpass": [
            {
                "code": "const float TAU = 6.28318530717;\n\n// lch = (lightness, chromaticity, hue)\nvec3 oklch2oklab(vec3 lch) {\n  return vec3(lch.x, lch.y * cos(lch.z * TAU), lch.y * sin(lch.z * TAU));\n}\n\n// oklab = (lightness, red_greenness, blue_yelowness)\nvec3 oklab2lrgb(vec3 oklab) {\n    vec3 lms = oklab * mat3(1,  0.3963377774,  0.2158037573,\n                            1, -0.1055613458, -0.0638541728,\n                            1, -0.0894841775, -1.2914855480);\n    lms *= lms * lms;\n    return lms * mat3( 4.0767416621, -3.3077115913,  0.2309699292, \n                      -1.2684380046,  2.6097574011, -0.3413193965, \n                      -0.0041960863, -0.7034186147,  1.7076147010);\n}\n\nvec3 lrgb2oklab(vec3 lrgb) {\n    vec3 lms = lrgb * mat3(0.4121656120, 0.5362752080, 0.0514575653,\n                           0.2118591070, 0.6807189584, 0.1074065790,\n                           0.0883097947, 0.2818474174, 0.6302613616);\n    return pow(lms, vec3(1.0 / 3.0)) * mat3(0.2104542553,  0.7936177850, -0.0040720468,\n                                            1.9779984951, -2.4285922050,  0.4505937099,\n                                            0.0259040371,  0.7827717662, -0.8086757660);\n}\n\nvec3 lrgb2srgb(vec3 lrgb) { return  mix(12.92 * lrgb, 1.055 * pow(lrgb, vec3(1.0 / 2.4)) - 0.055, step(0.0031308, lrgb)); }\nvec3 srgb2lrgb(vec3 srgb) { return mix(srgb / 12.92, pow((srgb + 0.055) / 1.055, vec3(2.4)), step(0.04045, srgb)); }\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float hue = uv.x;\n    vec3 ok = oklch2oklab(vec3(0.8, 0.2, hue));\n    vec3 col = oklab2lrgb(ok);\n    col = lrgb2srgb(col);\n    col = clamp(col, vec3(0), vec3(1));\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}