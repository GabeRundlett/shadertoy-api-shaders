{
    "Shader": {
        "info": {
            "date": "1548513772",
            "description": "line 0 (bottom): show resolution change. red: increase. green: decrease\nline 1: show when texture load (red when just happen, then white). Try reload, change tex (bufA:ch1)...\nline 2: show mouse click",
            "flags": 32,
            "hasliked": 0,
            "id": "tsjGRm",
            "likes": 2,
            "name": "test texture load and res change",
            "published": 3,
            "tags": [
                "mouse",
                "texture",
                "utils",
                "event",
                "trigger",
                "iresolution"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 711
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = U.y < 120. \n        ? T(U)\n        : texelFetch(iChannel1, ivec2(U),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// in order to detect their change, \n// stores the state of window resolution, texture load, and mouse click.\n// O.xy = new value, O.zw = prev value\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;\n    O = T(U); // restore previous state\n    vec2 R = iResolution.xy;\n    \n    if ( U == vec2(0,0) ) { O = vec4( R, O.xy ); return; }\n    if ( U == vec2(1,0) ) { O = vec4( iChannelResolution[1].xy, O.xy ); return; }\n    if ( U == vec2(2,0) ) { O = vec4( iMouse.zw, O.xy ); return; }\n\n    \n// if doing stuff here, then recent old value is in texture.xy ;-)   \n// for next Buffers + Image, it will be in .zw.\n\n    // --- example of use ------------------------------\n    \n    // --- redisplay texture if resolution change\n    vec4 V = T(vec2(0,0));\n    if ( R != V.xy && U.y > 0. ) O = texture(iChannel1,U/R);\n    \n    // --- (re)display texture once loaded\n    V = T(vec2(1,0));\n    // texture change might not be detecting when switching back to a same-size texture you already loaded\n    if ( V.xy != V.zw )  O = texture(iChannel1,U/R); // black when waiting\n   // texture change might not be detecting when switching back to a texture you already loaded\n //if ( V.x == 0. && iChannelResolution[1].x > 0.) O = texture(iChannel1,U/R); // perfect to get first load\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define S(U) texelFetch( iChannel1, ivec2(U), 0 )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U-vec2(4,0)); if (U.x>4.) return; // scroll display\n    \n    vec4 V; float c;\n    int y = int(U.y/30.);\n    \n    // --- example of use ------------------------------\n    \n    if ( y == 0 ) {        // line 0 (bottom): show resolution change\n        V = S(vec2(0,0));\n        c = V.x - V.z;\n        O = vec4( c, -c, .5,0 );\n    }\n    if ( y == 1 ) {        // line 1: show when texture loaded\n        V = S(vec2(1,0));\n        c = V.x - V.z;\n        O = vec4( V.x, V.z, 1, 0 );\n    }\n    if ( y == 2 ) {        // line 2: show mouse click\n        V = S(vec2(2,0));\n        O = vec4( V.x > 0., V.z > 0. , .5, 0);\n    }\n    if ( y == 3 ) O = vec4 ( iFrame%2 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(U) texelFetch( iChannel0, ivec2(U), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}