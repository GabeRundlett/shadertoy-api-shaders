{
    "Shader": {
        "info": {
            "date": "1537656585",
            "description": "Reference : [url]https://9gag.com/gag/a6oYxdN[/url]\n\nEvery dot is moving only on a line, there is no circular motion.",
            "flags": 0,
            "hasliked": 0,
            "id": "4lKyzd",
            "likes": 7,
            "name": "Linear motion",
            "published": 3,
            "tags": [
                "opticalillusion"
            ],
            "usePreview": 0,
            "username": "ABizard",
            "viewed": 676
        },
        "renderpass": [
            {
                "code": "\n#define POW2(A) ((A)*(A))\n\n#define R iResolution\n\nvec2 dot_pos(float r, float t){\n    return (POW2(sin(t-r*9.42))+.2)*cos(r*6.28-vec2(0,33));\n}\n\nfloat draw_dot(vec2 uv, float r, float t){\n    return smoothstep(10./R.y,.0,length(uv-dot_pos(r,t)) - .022);\n}\n\n// Rainbow color mapping from angle r in [0,1]\nvec3 dot_color(float r){\n    float a=(1.-r)*6.;\n    return clamp(vec3(abs(a-3.)-1., 2.-abs(a-2.), 2.-abs(a-4.)),\n                 0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    vec2 uv = 1.3*(2.*fragCoord-R.xy)/R.y;\n    vec3 col = vec3(0);\n    \n    float t = iTime*2.;\n    \n    float r = round(fract(atan(uv.y,uv.x)/6.28) * 16.)/16.;\n    vec3 c = dot_color(r);\n    col += c * min(1.,draw_dot(uv,r,t)\n                      // Motion blur\n                      + .5 * draw_dot(uv,r,t-.04)\n                      + .2 * draw_dot(uv,r,t-.08));\n    \n    fragColor = vec4(col,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}