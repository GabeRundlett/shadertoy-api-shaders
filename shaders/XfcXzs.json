{
    "Shader": {
        "info": {
            "date": "1714299196",
            "description": "2024 . 4. 28",
            "flags": 0,
            "hasliked": 0,
            "id": "XfcXzs",
            "likes": 1,
            "name": "train-240428",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "2903568389",
            "viewed": 110
        },
        "renderpass": [
            {
                "code": "vec3 palette( in float t)\n{\n    //颜色渐变函数\n    vec3 a = vec3(0.868,0.158,0.998);\n    vec3 b = vec3(0.889,0.929,0.929);\n    vec3 c = vec3(-0.148,0.274,0.540);\n    vec3 d = vec3(-0.073,0.107,0.417);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*2.0 - 1.0;\n    uv.x = uv.x * iResolution.x/iResolution.y;\n    \n    vec2 uv0 = uv;//原始画布\n\n    vec3 fincol = vec3(0.0);\n    \n    for(float i = 1.0;i<4.0;i++){\n        //迭代画布\n        uv = fract(uv*=1.5)-0.5;\n\n        float l = length(uv) * exp2(-length(uv0));\n\n        vec3 col = palette(length(uv0) + iTime*.4);\n\n        l = sin(l * 8.0 + iTime)/8.0;\n        l = abs(l);\n\n        //l = smoothstep(0.0,0.1,l);\n\n        l = pow(0.01/l,1.2);\n\n        fincol += l * col;\n        \n    }\n    \n    fragColor = vec4(fincol,1.0);//输出\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}