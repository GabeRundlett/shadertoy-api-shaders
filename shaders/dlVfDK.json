{
    "Shader": {
        "info": {
            "date": "1702518806",
            "description": "by combining tangents with radius and angles, we get a lollipop pattern. ",
            "flags": 0,
            "hasliked": 0,
            "id": "dlVfDK",
            "likes": 7,
            "name": "MathLollipop",
            "published": 3,
            "tags": [
                "circular",
                "lollipopblackandwhite"
            ],
            "usePreview": 0,
            "username": "ahsan2649",
            "viewed": 149
        },
        "renderpass": [
            {
                "code": "mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n      \n    uv = rotate2d((iTime * 0.25)) * uv;\n    \n    float r = sqrt(uv.x*uv.x + uv.y*uv.y);\n    \n    \n    float th = atan(uv.y/uv.x);\n    \n\n    float f = .5/tan(r*7. - iTime * 2.) + tan(8. * th);\n    f *= .75;\n    f = abs(f);\n    f = smoothstep(0.7,0.9,f);\n    // Output to screen\n    fragColor = vec4(vec3(f),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}