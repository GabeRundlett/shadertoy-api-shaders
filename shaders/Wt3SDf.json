{
    "Shader": {
        "info": {
            "date": "1581809773",
            "description": "Homework assignment for Fabrice. \nIt has a terrible framerate, but the result in full screen isn't bad. ",
            "flags": 32,
            "hasliked": 0,
            "id": "Wt3SDf",
            "likes": 13,
            "name": "Trabecular 3D Mesh No. 1",
            "published": 3,
            "tags": [
                "volumetric"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 471
        },
        "renderpass": [
            {
                "code": "// Fork of \"Color Distribution\" by wyatt. https://shadertoy.com/view/wltXRs\n// 2020-02-15 22:56:54\n\nSampler\nMain\n{\n    vec3 mi = 0.5*vec3(R/N,N*N);\n    vec3 p = vec3(0,0,-R.x/N);\n    vec3 d = normalize(vec3((u-0.5*R)/R.y,1));\n    if (iMouse.z>0.) {\n \t\tp.zx *= e(6.2*iMouse.x/R.x);\n\t\td.zx *= e(6.2*iMouse.x/R.x);\n        p.yz *= e(6.2*iMouse.y/R.y);\n\t\td.yz *= e(6.2*iMouse.y/R.y);\n    } else {\n\t\tp.yz *= e(.2*iTime);\n\t\td.yz *= e(.2*iTime);\n\t}\n    Q = vec4(0);\n    for (int i = 0; i < 120; i++) {\n        vec3 o = abs(p)-mi;\n        float m = length(max(o,0.));\n        if (m<.01)\n        { \t\n            vec4 a = 25.*T(p+mi);\n            float aa = a.x;\n            Q += 4e-4*(1.-exp(-aa))*a;\n            p += d*(.08+exp(-aa));\n            p = mod(p+mi,R3D)-mi;\n        } else p += d*m;\n        \n \t}\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define N 7.\n#define R iResolution.xy\n#define R3D vec3(R/N,N*N)\n#define d2(U) ((U).xy+vec2(mod(floor((U).z),N),floor(floor((U).z)/N))*R/N)\n#define d3(u) vec3(mod(u,R/N),floor(u/R*N).x+floor(u/R*N).y*N)\n#define e(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define A(U) texture(iChannel0 d2(mod(U,R3D))/R)\n#define B(U) texture(iChannel1,d2(mod(U,R3D))/R)\n#define Sampler vec4 T(vec3 U) {return mix(texture(iChannel0,d2(vec3(U.xy,floor(U.z)))/R),texture(iChannel0,d2(vec3(U.xy, ceil(U.z)))/R),fract(U.z));}\n#define Main void mainImage( out vec4 Q, in vec2 u )\n#define _3D  vec3 U = d3(u);\n#define Me Q = A(U);\n#define Them vec4 M = 1./6.*(A(U+vec3(1,0,0))+A(U+vec3(0,1,0))+A(U+vec3(0,0,1))+A(U-vec3(1,0,0))+A(U-vec3(0,1,0))+A(U-vec3(0,0,1)));\n#define Init  if (iFrame < 1) Q = vec4(0);\n\n\n\n#define pie(p, a, b) ((length((a)-(b))<1e-3)?1e3:abs(dot((p)-0.5*((a)+(b)),(b)-(0.5*((a)+(b))))/dot((b)-0.5*((a)+(b)),(b)-0.5*((a)+(b)))))\n\n#define line(p, a, b)  ((length((p)-(a)-((b)-(a))*clamp(dot((p)-(a),(b)-(a))/dot((b)-(a),(b)-(a)),0.,1.))))\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define O 1.\n// Dave Hashkins\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n\n}\nvec3 cell (vec3 u) {\n\tvec3 V = floor(u*O+0.5)/O;\n    vec3 h = hash33(V);\n    float t = 0.2*iTime;\n    return V + h.x*vec3(cos(6.2*h.y+t),sin(6.2*h.y+t),sin(6.2*h.z+t))/O;\n}\nMain\n{\n    _3D\n    Q = vec4(0);\n    U = (.7-0.3*sin(.1*iTime))*2.*(U-0.5*R3D)/R3D.y;\n    vec3 V = vec3(1e3);\n    for (int x = -2; x <= 2; x++)\n    for (int y = -2; y <= 2; y++) \n    for (int z = -2; z <= 2; z++) {\n\t\tvec3 c = cell(U+vec3(x,y,z)/O);\n        if (length(c-U) < length(V-U))\n            V=c;\n    }\n    vec3 W = vec3(1e3);\n    for (int x = -2; x <= 2; x++)\n    for (int y = -2; y <= 2; y++) \n    for (int z = -2; z <= 2; z++) {\n\t\tvec3 c = cell(U+vec3(x,y,z)/O);\n        if (pie(U,V,c) < pie(U,V,W))\n            W=c;\n    }\n    Q += vec4(1,0,0,1)*smoothstep(0.2,0.,length(U-V));\n   \tQ += vec4(1,0,1,1)*smoothstep(0.05,0.0,line(U,W,V));\n    Q += smoothstep(0.08,0.0,pie(U,W,V)*length(W-V));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}