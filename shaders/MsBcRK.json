{
    "Shader": {
        "info": {
            "date": "1492761534",
            "description": "A simple shader i wrote to calculate the normals for a sertain texture. Feel free to copy, but credit me first.",
            "flags": 0,
            "hasliked": 0,
            "id": "MsBcRK",
            "likes": 7,
            "name": "Heightmap normals",
            "published": 3,
            "tags": [
                "lighting",
                "normals",
                "light",
                "normalmap",
                "shadows",
                "map",
                "sunlight",
                "normal",
                "ambient",
                "diffuse",
                "accurate",
                "ndotl"
            ],
            "usePreview": 1,
            "username": "robobo1221",
            "viewed": 1119
        },
        "renderpass": [
            {
                "code": "//Made by robobo1221 http://www.shadertoy.com/user/robobo1221/\n\nvec3 getAlbedo(vec2 pos){\n    return texture(iChannel0, pos).rgb;\n}\n\nfloat getHeight(vec2 pos){\n\treturn dot(getAlbedo(pos), vec3(0.33333));\n}\n\nvec3 getNormals(vec2 pos){\n\tvec3 normals = vec3(0.0);\n\t\n\tfloat delta = 0.01;\n    \n\tfloat d0 = getHeight(pos);\n\tfloat d1 = getHeight(pos + vec2(delta, 0.0));\n\tfloat d2 = getHeight(pos + vec2(0.0, delta));\n\t\n\tfloat dx = (d0 - d1) / delta;\n\tfloat dy = (d0 - d2) / delta;\n\t\n\tnormals = normalize(vec3(dx, dy, 1.0 - d0));\n\t\n\treturn normals;\n}\n\nvec3 getLighting(vec3 color, float nDotL){\n\tvec3 sunlight = vec3(1.0, 0.6, 0.4);\n    vec3 ambientLight = vec3(0.3, 0.5, 1.0);\n    \n    return color * (sunlight * nDotL + ambientLight);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 lPos = normalize(vec3(iMouse.st / iResolution.st - 0.5,0.75));\n    vec3 normal = getNormals(uv);\n    \n    float ndotL = max(dot(normal, lPos), 0.0);\n    \n    vec3 albedo = vec3(getAlbedo(uv).x);\n    vec3 color = getLighting(albedo, ndotL);\n    \n\tfragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}