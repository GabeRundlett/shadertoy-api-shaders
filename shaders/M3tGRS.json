{
    "Shader": {
        "info": {
            "date": "1716681580",
            "description": "I don't really like it but gonna publish it anyway because of sunk cost fallacy",
            "flags": 0,
            "hasliked": 0,
            "id": "M3tGRS",
            "likes": 7,
            "name": "Portal To Psychosis",
            "published": 3,
            "tags": [
                "colors",
                "n",
                "such"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 165
        },
        "renderpass": [
            {
                "code": "float box(vec3 p, vec3 r) {\n    p = abs(p) - r;\n    p = p + tan((p + r) * 0.7);\n    return max(max(p.x, p.y), p.z);\n}\n\nfloat sdf(vec2 uv) {\n    vec3 dir = normalize(vec3(uv, abs(uv.y) + length(uv)));\n    float l = atan(uv.y, uv.x) * 3.0 - length(uv);\n    dir = cos(l - iTime) * dir + sin(l - iTime) * vec3(-dir.y, dir.x, dir.z);\n    dir.yx = cos(-iTime + dir.y) * dir.xz + sin(-iTime * 1.3 - dir.x) * vec2(-dir.z, dir.x);\n    \n    float d = box(dir + vec3(uv, length(uv) * 0.2), cos(dir));\n    return d;\n}\n\nvec3 hue_shift(vec3 col, float hue) {\n    return mix(vec3(dot(vec3(0.333), col)), col, cos(hue)) + cross(vec3(0.577), col) * sin(hue);\n}\n\nvec3 get_normal(vec2 uv) {\n    vec2 e = vec2(1.0 / sqrt(sqrt(sdf(uv))), length(uv) * 0.1);\n    float nx = (sdf(uv - e.xy) - sdf(uv + e.xy)) / (2.0 * e.x);\n    float ny = (sdf(uv - e.yx) - sdf(uv + e.yx)) / (2.0 * e.x);\n    vec3 n = normalize(vec3(nx, ny, -1.));\n    return n;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float mr = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr * 3.0;\n    uv /= pow(dot(uv, uv), 0.8);\n    \n    float d = sdf(uv) * 0.2;\n    vec3 n = abs(get_normal(uv)) / (1.0 + 0.5 * sqrt(length(uv)));\n    vec3 col = smoothstep(n, n + cos(n - vec3(2, 3, 1) + 1.5), vec3(hue_shift(n, d - iTime)));\n    col.gb = col.bg;\n    col = sqrt(sqrt(abs(col)));\n    col = cos(col * cos(vec3(d*d, d - col.b, 2.5)) + 0.5 + col.b * 0.3);\n    col = hue_shift(col, d);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}