{
    "Shader": {
        "info": {
            "date": "1611955057",
            "description": "spiktato ",
            "flags": 0,
            "hasliked": 0,
            "id": "3tGcWd",
            "likes": 17,
            "name": "Day 409",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 386
        },
        "renderpass": [
            {
                "code": "// Fork of \"day idk wip\" by jeyko. https://shadertoy.com/view/ttKcWc\n// 2021-01-29 16:17:36\n\n// Fork of \"Day 407\" by jeyko. https://shadertoy.com/view/3tycWV\n// 2021-01-29 08:24:51\n\n// Fork of \"Day 405\" by jeyko. https://shadertoy.com/view/ttVcRt\n// 2021-01-27 11:17:18\n\n\nconst float slices = 100.;\n\nconst float aaSteps = 2.; // not really steps, it's the exponentially ^3 area growing area around the fragCoord \n\nconst float disp = .4;\n\nconst float width = 0.002;\n\n#define pal(a,b,c,d,e) ((a) +(b)*sin((c)*(d) + (e)))\n\n#define sin(x) mix( sin(x), abs(fract((x + 3.14/2.*sin(iTime*0.5))/3.14*1.) - 0.5)*2., (sin(iTime)*0.5 + 1.)*0.52)\n\nfloat fun(float p, float py){\n    py *= 90. + sin(iTime)*15.;\n    \n    py += iTime*8.;\n    p *= 1.;\n    float f = abs(sin(p*9. + sin(py*(.15)*1.5  )*9.));\n    \n    f = pow(max(f,0.001),3.);\n    \n    f += (sin(py*0.1 + iTime + sin(p*8. + iTime*.5 + sin(py*2.)*0.1)))*.2;\n    \n    return f*disp;\n}\n\n\nfloat graph(float y, float fn0){\n  return smoothstep(1. ,0., \n                    abs(fn0-y)/fwidth(fn0-y)- width);\n}\nfloat graphNoAbs(float y, float fn0){\n  return smoothstep(1.,0., \n                    -(fn0-y)/fwidth(fn0-y) - width);\n}\n\n\nvec3 get(in vec2 fragCoord){\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0);\n    \n    vec2 ouv = uv;\n    uv = vec2(atan(uv.y,uv.x),log(length(uv) ));\n    \n    for(float i = 0.; i < slices; i++ ){\n        vec2 p = uv + vec2(0.,i/slices*5. );\n        \n        float fn = fun(p.x,i/slices);\n        \n        float bg = graphNoAbs( p.y, fn);\n        \n        col *= 1.- bg;\n        \n        vec3 c = pal(0.5,vec3(0.6,0.05,.15),vec3(4.9,1.,9),1.,i + iTime*4.);\n        col += 2.*bg*max(c,0.);\n        \n        c -= 1.;\n        \n        #define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n        \n        c.xz *= rot(-1.5);\n        \n        c += 1.;\n        col = mix(col, c*0.2*c*c, graph( p.y, fn ));\n        \n    }\n    \n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0);\n    \n    \n    for(float i =0.; i < aaSteps*aaSteps + min(float(iFrame),0.)   ; i++){\n    \tcol += get(fragCoord + vec2(mod(i,aaSteps),floor(i/aaSteps))/aaSteps);\n    }\n    col /= aaSteps*aaSteps;\n    \n    \n    col = max(col, 0.);\n\t\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    \n    col = mix(col,col*col*0.1,exp(-dot(uv,uv)*5422.));\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}