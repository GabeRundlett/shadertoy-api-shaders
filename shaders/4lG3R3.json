{
    "Shader": {
        "info": {
            "date": "1477417885",
            "description": "A simplified 24-bit version of my previous LFSR noise shader. The output of this one is normalized 0.0 - 1.0 and the xyzw components are independent of one another. ",
            "flags": 32,
            "hasliked": 0,
            "id": "4lG3R3",
            "likes": 11,
            "name": "LFSR Noise (Simplified)",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "bits",
                "lfsr"
            ],
            "usePreview": 1,
            "username": "Flyguy",
            "viewed": 1375
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n#define MAX_VALUE exp2(24.0)\n\n#define bit(n, b) mod(floor(n / exp2(b)), 2.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Register state\n    vec4 reg = floor(texture(iChannel0, fragCoord/iResolution.xy) * MAX_VALUE);\n    \n    //Feedback taps\n    vec4 fb = bit(reg, 23.0)\n        \t+ bit(reg, 22.0)\n        \t+ bit(reg, 21.0)\n        \t+ bit(reg, 16.0);\n    fb = mod(fb, 2.0);\n    \n    //reg = ((reg & 0x7FFFFF) << 1) | fb\n    reg = mod(reg, float(0x800000)) * 2.0 + fb;\n    \n    //Initial conditions\n    if(any(equal(reg, vec4(0))) || iFrame < 5)\n    {\n        vec4 seed = floor(texture(iChannel1, fragCoord / iChannelResolution[1].xy) * MAX_VALUE);\n\t\treg = seed + vec4(1,3,5,7) * (fragCoord.x * fragCoord.y) + 1.0;\n    }\n    \n    fragColor = reg / MAX_VALUE;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}