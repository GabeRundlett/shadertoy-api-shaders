{
    "Shader": {
        "info": {
            "date": "1683836447",
            "description": "Wanted to create remanant lines, not satisfied by the result yet but the result feels ok",
            "flags": 0,
            "hasliked": 0,
            "id": "clGGWR",
            "likes": 3,
            "name": "Many lines",
            "published": 3,
            "tags": [
                "line",
                "pattern"
            ],
            "usePreview": 0,
            "username": "Slals",
            "viewed": 170
        },
        "renderpass": [
            {
                "code": "float easeOutQuad(float x) {\n    return 1.0 - (1.0 - x) * (1.0 - x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col = vec3(0);\n    \n    float f = 20.0;\n    uv.xy *= f;\n    vec2 ipos = ceil(uv);\n    uv = fract(uv);\n    \n    float t = iTime - ipos.x * 0.02;\n    float fx = sin(t * 2.0 - ipos.x) + 0.4;\n    float dx = 2.0 * cos(2.0 * t - ipos.x);\n    \n    float fadingF = 1.0;\n    if (dx < 1.5) {\n        fadingF = easeOutQuad(fx * 0.5);\n        col += (step(uv.x, min(fx, 1.0)) - step(uv.x + (f / iResolution.y), min(fx, 1.0))) * fadingF;\n    } else\n        col += (step(uv.x, fx) - step(uv.x + (f / iResolution.y), fx));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}