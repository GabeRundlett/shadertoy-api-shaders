{
    "Shader": {
        "info": {
            "date": "1592912130",
            "description": "I started with a fake tunnel effect and finished as a wormhole travel :)",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlyRs",
            "likes": 11,
            "name": "LSD Wormhole",
            "published": 3,
            "tags": [
                "wormhole",
                "lsd",
                "drug"
            ],
            "usePreview": 1,
            "username": "z0rg",
            "viewed": 451
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nconst float PI = 3.141592653;\n\nfloat lenny(vec2 v)\n{\n  return abs(v.x)+abs(v.y);\n}\nfloat sat(float a)\n{\n  return clamp(a,0.,1.);\n}\n\nvec3 rdr(vec2 uv)\n{\n  vec3 col;\n  float t = iTime*.1+uv.x*2.*sin(iTime)+uv.y*4.*sin(iTime);\n  float tt = iTime;//*(1.+.05*sin(iTime*.2));\n  float blur = 2.*mix(0.01,0.001,sin(iTime*.2)*.5+.5);\n  float l = pow(length(uv),.1)*1.;\n  uv += vec2(sin(t+l),cos(t+l))*.2*pow(length(uv),.5);\n  col = texture(iChannel0, vec2(0.1*atan(uv.y, uv.x)/PI, .05*tt+blur/length(uv))).xyz;\nvec3 col2 = texture(iChannel0, -vec2(.2*atan(uv.y, uv.x)/PI, .05*tt+.001/length(uv))).xyz;\n\n  return vec3(.9,.12,.38)*col2*.8+.1*col*pow(length(uv),.5)*vec3(.5,.3,.7)*max(dot(uv, vec2(1.)),.5)\n  + 3.5*pow(1.-sat(lenny(uv*.5)),5.)*vec3(.32,.45,.65);\n}\n\nvec3 rdrLSDWormHole(vec2 uv)\n{\n    uv -= vec2(.5)*iResolution.xy/iResolution.xx;\n    uv += vec2(sin(iTime)*.1, cos(iTime*.2)*.1);\n    uv*=1.5;\n    vec3 col = rdr(uv);\n    col = mix(col, col.xzy,sin(5.*length(uv)+iTime*2.)*1.);\n    col *= pow(sat(1.-lenny(uv*.05)), 20.);\n\n    col = pow(col, vec3(1./1.2));\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy / iResolution.xx;\n  vec3 col = rdrLSDWormHole(uv);\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}