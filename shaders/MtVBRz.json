{
    "Shader": {
        "info": {
            "date": "1541677928",
            "description": "just a fork of ldm0's fractal shader with some scale animations",
            "flags": 0,
            "hasliked": 0,
            "id": "MtVBRz",
            "likes": 3,
            "name": "Unreal mountain (fork)",
            "published": 3,
            "tags": [
                "fractal",
                "fork",
                "anim"
            ],
            "usePreview": 0,
            "username": "Del",
            "viewed": 497
        },
        "renderpass": [
            {
                "code": "//Created by ldm0\n//personal website: ldm0.xyz\n//\n// original shader here: https://www.shadertoy.com/view/MtVfzR\n//\n// I just added a scale to see what it would do (click mouse for X and Y scale)\nvoid mainImage(out vec4 color, in vec2 coord)\n{\n    float m;\n    vec2 uv = coord.xy / iResolution.xy;\n    uv.x *= 2.;\n    uv.x -= 1.;\n    uv.y += .382;\n    \n    float sy = 1.0+sin(iTime);\n    float sx = (iMouse.z<0.5) ? 1.0 : sy;\n    \n    for (int i = 0; i < 35; ++i)\n    {\n        uv= abs(uv);\n        m = uv.x * uv.x  + uv.y * uv.y;\n        uv.x = uv.x/m - .217 * sx;\n        uv.y = uv.y/m - .105 * sy;\n    }\n\n    //m = smoothstep(0.0,1.0,m);\n    \n    \n    float m1 = m+.17;\n    float m2 = m1*1.65;\n    \n    color= vec4(vec3(m1,m2,m1), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}