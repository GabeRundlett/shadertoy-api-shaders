{
    "Shader": {
        "info": {
            "date": "1457388883",
            "description": "How to play a  ultra low-pitched sound on a physical system that can't (e.g. small loud speakers) ?\nUsing missing fundamental effect, you play harmonics without the base... and sill perceive the base !\nHere plays 4\" true 55Hz then 4\" harmonics only.",
            "flags": 8,
            "hasliked": 0,
            "id": "XstXRr",
            "likes": 7,
            "name": "Missing fundamental",
            "published": 3,
            "tags": [
                "illusion",
                "psychoacoustic"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1071
        },
        "renderpass": [
            {
                "code": "// cf sound shader\n// see https://en.wikipedia.org/wiki/Missing_fundamental\n\n// see also others auditory illusions:\n//   constant-spectrum melody https://www.shadertoy.com/view/XdsXDf\n//   shepard always-falling scale https://www.shadertoy.com/view/ltfSDl\n\n\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\n\nvoid mainImage( out vec4 O,  vec2 U ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message(U/8.);if(c>=0.){O=vec4(c);return;}}\n\n    \n\tO -=O;\n    \n    float S = 640./iResolution.x;\n    if (U.x < floor(220./S)) O.x = .2;\n    if (fract(iTime/4.)>.5) { O +=  vec4(U.x-.5==floor(55./S),0,0,0); return; }\n    \n    float  I=.8456349206349,a;\n    for (float i=5.; i<=10.;i++) {\n        a = 1./i;\n        if (U.x == floor(55.*i/S)+.5) \n       { O =  vec4(U.y<iResolution.y*a/I); return; }\n\n    }\n\n\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// https://en.wikipedia.org/wiki/Missing_fundamental\n\n#define S(f) vec2(sin(6.2831*f*time))\n\nvec2 mainSound( in int samp, float time )\n{\n    \n    if (fract(time/4.)>.5) return S(55.);\n    \n    vec2 s=vec2(0); float  I=0.,a;\n    for (float i=5.; i<=10.;i++) {\n        a = 1./i;\n        s += S(55.*i)*a;\n        I += a;\n    }\n    \n    return s/I;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 38
                    }
                ],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}