{
    "Shader": {
        "info": {
            "date": "1538554612",
            "description": "Psychodelic pattern nuff said",
            "flags": 0,
            "hasliked": 0,
            "id": "XlcBzH",
            "likes": 5,
            "name": "Psychodelic Pattern",
            "published": 3,
            "tags": [
                "lsd",
                "psychodelic"
            ],
            "usePreview": 0,
            "username": "clara3ME",
            "viewed": 718
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846264338327950\n#define TWO_PI PI * 2.0\n\n// All components are in the range [0…1], including hue.\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n// All components are in the range [0…1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (fragCoord - .5 *iResolution.xy) / iResolution.y;\n    float angle = atan(pos.y, pos.x) / PI;\n\tfloat arms = fract(angle * 3.0);\n    arms = abs(arms-0.5)*2.0;\n    \n    float dist = length(pos);\n    \n    dist = mix(dist,pow(dist,0.5),1.0);\n    \n    dist -= iTime*0.1;\n    \n    float green = sin((dist + arms*0.5) * 20.0)*0.5+0.5;\n    green += sin((dist - arms*0.5 + sin(iTime*0.4)) * 20.0);\n    green = clamp(green,0.0,1.0);\n    \n    float pink = sin((dist - arms*0.5) * 15.0)*0.5+0.5;\n    pink += sin((dist + arms*0.5) * 15.0);\n    pink = clamp(pink,0.0,1.0);\n    \n    vec3 color = vec3(0.1,0.05,0.8);\n    \n    color = mix(color,vec3(1.0,0.2,0.8),pink);\n    color = mix(color,vec3(0.2,1.0,0.05),green);\n    \n    color = rgb2hsv(color);\n    color.r += sin(iTime*0.3);\n    color = hsv2rgb(color);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}