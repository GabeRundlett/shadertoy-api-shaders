{
    "Shader": {
        "info": {
            "date": "1594467471",
            "description": "Emulating the toothpick sequence described by [url]https://arxiv.org/abs/1004.3036[/url] using a cellular automaton. It's not 100% exact, but the large-scale structure appears the same. LMB to reset",
            "flags": 32,
            "hasliked": 0,
            "id": "wl2yDW",
            "likes": 3,
            "name": "Toothpick sequence",
            "published": 3,
            "tags": [
                "cellular",
                "sequence",
                "automaton",
                "toothpick"
            ],
            "usePreview": 0,
            "username": "Roninkoi",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float s = min(iTime * 0.1 + 0.05, 0.9);\n    vec2 uv = (fragCoord/iResolution.xy * s + 0.5) - s / 2.;\n    \n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    if (iMouse.z > 0.) {\n        fragColor = vec4(0.);\n        return;\n    }\n    \n    vec2 p = (fragCoord)/iResolution.xy;\n    vec2 pp = fragCoord - iResolution.xy * 0.5;\n    \n    vec2 n = clamp((fragCoord + vec2(0.0, 1.0))/iResolution.xy, 0., 1.);\n    vec2 s = clamp((fragCoord + vec2(0.0, -1.0))/iResolution.xy, 0., 1.);\n    vec2 w = clamp((fragCoord + vec2(-1.0, 0.0))/iResolution.xy, 0., 1.);\n    vec2 e = clamp((fragCoord + vec2(1.0, 0.0))/iResolution.xy, 0., 1.);\n    \n    vec4 nc = texture(iChannel0, n);\n    vec4 sc = texture(iChannel0, s);\n    vec4 wc = texture(iChannel0, w);\n    vec4 ec = texture(iChannel0, e);\n    \n    vec4 c = texture(iChannel0, p);\n    fragColor = c;\n    \n    float rn = 0.1;\n    float rs = 0.6;\n    float bw = 0.2;\n    float be = 0.8;\n    \n    float g = 0.8;\n    \n    if ((wc.g == g && sc.g == g) || (nc.g == g && ec.g == g) ||\n       (wc.g == g && nc.g == g) || (sc.g == g && ec.g == g))\n        return;\n    \n    if (floor(pp.x) == 0. && floor(pp.y) == 0.) {\n        fragColor = vec4(rs, g, bw, 1.0);\n        return;\n    }\n    if (floor(pp.x) == 1. && floor(pp.y) == 1.) {\n        fragColor = vec4(rn, g, be, 1.0);\n        return;\n    }\n    \n    if (nc.g == g && nc.r == rs) {\n        fragColor = vec4(rs, g, nc.b == bw ? be : bw, 1.0);\n        return;\n    }\n    if (ec.g == g && ec.b == bw) {\n        fragColor = vec4(ec.r == rs ? rn : rs, g, bw, 1.0);\n        return;\n    }\n    if (wc.g == g && wc.b == be) {\n        fragColor = vec4(wc.r == rs ? rn : rs, g, be, 1.0);\n        return;\n    }\n    if (sc.g == g && sc.r == rn) {\n        fragColor = vec4(rn, g, sc.b == bw ? be : bw, 1.0);\n        return;\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}