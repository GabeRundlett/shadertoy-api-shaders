{
    "Shader": {
        "info": {
            "date": "1505229881",
            "description": "Ray Marching Experiment 69",
            "flags": 0,
            "hasliked": 0,
            "id": "MlXyzS",
            "likes": 6,
            "name": "Ray Marching Experiment 69",
            "published": 3,
            "tags": [
                "ray",
                "experiment",
                "marching",
                "69"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 744
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2017 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via XShade (http://www.funparadigm.com/xshade/)\n\n//#define MOUSE\n\nconst vec3 ld = vec3(0.,1., .5);\n\nvec2 m;\n\nfloat fullAtan(vec2 p)\n{\n    return step(0.0,-p.x)*3.14159 + sign(p.x) * atan(p.x, sign(p.x) * p.y);\n}\n\nfloat shape(vec2 p)\n{\n    return length(min(abs(p.xy) - 1., - 0.1)) - 0.2;\n}\n\nfloat df(vec3 p)\n{\n\tfloat a = fullAtan(p.xz) * floor(m.x*5.) + iTime;\n    vec2 rev = vec2(length(p.xz) - 3.5, p.y);\n    mat2 rot = mat2(cos(a),-sin(a),sin(a),cos(a));\n\treturn abs(shape(rev * rot)) - 0.03; \n}\n\nvec3 nor( vec3 p, float prec )\n{\n    vec2 e = vec2( prec, 0. );\n    vec3 n = vec3(\n\t\tdf(p+e.xyy) - df(p-e.xyy),\n\t\tdf(p+e.yxy) - df(p-e.yxy),\n\t\tdf(p+e.yyx) - df(p-e.yyx));\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    m = iMouse.xy/iResolution.xy;\n    if (m.x == 0.) m.x = .1;\n\t\n#ifndef MOUSE\n\tm.x = sin(iTime * .2) * .5;\n#endif\n    \n\tfragColor = vec4(1);\n\t\n\tvec2 g = fragCoord.xy;\n\tvec2 si = iResolution.xy;\n\tvec2 uv = (g+g-si)/min(si.x, si.y);\n\t\n\tvec3 ro = vec3(5,0.,0);\n\tvec3 cu = vec3(0,1,0);\n\tvec3 co = vec3(0,0,0);\n\t\n\tfloat fov = .5;\n\tvec3 z = normalize(co - ro);\n\tvec3 x = normalize(cross(cu, z));\n\tvec3 y = normalize(cross(z, x));\n\tvec3 rd = normalize(z + fov * uv.x * x + fov * uv.y * y);\n\t\n\tfloat s = 1.;\n\tfloat d = 2.;\n\tfloat dm = 20.;\n\t\n\tfor (float i=0.; i<150.; i++)\n\t{\n\t\tif(d*d/s > 1e6 || d>dm) break;\n        s = df(ro + rd * d);\n\t\td += s * 0.2;\n\t}\n\t\n   \tfragColor.rgb = vec3(0.2,0.5,0.8);\n         \n    if (d<dm)\n\t{\n\t\tvec3 p = ro + rd * d;\t\n\t\tvec3 n = nor(p, 0.001);\n\t\t\t       \n        fragColor.rgb = mix( vec3(\n\t\t\tdf(p-n*1.7),\n\t\t\tdf(p-n*1.9),\n\t\t\tdf(p-n*2.1)) * (dot(n, ld)+2.)/2., \n\t\t\tfragColor.rgb, 1.0-exp( -0.01*d*d ) ); \n        \n\t}\n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}