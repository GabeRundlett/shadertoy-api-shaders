{
    "Shader": {
        "info": {
            "date": "1626138199",
            "description": "cellular automata and other stuff",
            "flags": 32,
            "hasliked": 0,
            "id": "7tlXz2",
            "likes": 3,
            "name": "cellular automata 1",
            "published": 3,
            "tags": [
                "howto",
                "storage"
            ],
            "usePreview": 0,
            "username": "guillefix",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "// Fork of \"Storing Values in a Buffer\" by MarvelousBilly. https://shadertoy.com/view/WsByDt\n// 2021-07-12 21:45:04\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 uv = fragCoord/iResolution.xy;\n    //vec2 uv = fragCoord;\n    vec3 col = vec3(texelFetch(iChannel0, ivec2(fragCoord), 0).xyz);   \n    //collect the stored value in (1,0) of buffer A\n\n    //if(distance(iMouse.xy,fragCoord)<3.){\n    //\tcol = vec3(0.,0.,1.); //mouse position\n    //}\n    //if(distance(col.xy*iResolution.xy,fragCoord)<3.){\n    //\tcol = vec3(1.,1.,1.); //color \"position\"\n    //}\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float hash(float seed)\n{\n\t// Return a \"random\" number based on the \"seed\"\n    //return fract(sin(seed/100.0)* 1235.1);\n    return fract(1235.1*sin(mod(seed,6.28)*10.0));\n}\n\nvec4 game_of_life(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    if (num_living_neis.x < 1.9) return vec4(0.0);\n    if (num_living_neis.x > 3.9) return vec4(0.0);\n    if (num_living_neis.x > 2.9 && num_living_neis.x < 3.1) return vec4(1.0);\n    else return val;\n}\n\nvec4 game_of_life_weird(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    if (num_living_neis.x < 1.9) return val-num_living_neis/8.0;\n    if (num_living_neis.x > 3.9) return val-num_living_neis/8.0;\n    if (num_living_neis.x > 2.9 && num_living_neis.x < 3.1) return val+num_living_neis/8.0;\n    else return val;\n}\n\nvec4 game_of_life_weird2(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    if (num_living_neis.x < 1.9) return val-(val-num_living_neis/8.0);\n    if (num_living_neis.x > 3.9) return val-(val-num_living_neis/8.0);\n    if (num_living_neis.x > 2.9 && num_living_neis.x < 3.1) return val+(val-num_living_neis/8.0);\n    else return val;\n}\n\nvec4 game_of_life_weird3(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5, a2 = 5.0, a3 = a1, a4 = a2;\n    if (ave < a1) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave > a2) return val-(val-num_living_neis/8.0)-0.1;\n    if (ave > a3 && ave < a4) return val+(val-num_living_neis/8.0);\n    else return val;\n}\n\nvec4 game_of_life_weird4(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5, a2 = 5.0, a3 = a1, a4 = a2;\n    if (ave < a1) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave > a2) return val-(val-num_living_neis/8.0)-0.1-ave*iTime;\n    if (ave > a3 && ave < a4) return val+(val-num_living_neis/8.0)+ave*iTime;\n    else return val;\n}\n\nvec4 game_of_life_weird5(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5, a2 = 5.5, a3 = a1, a4 = a2;\n    if (ave < a1) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave > a2) return val-(val-num_living_neis/8.0)-0.1-ave*pow(sin(0.78*iTime),2.0);\n    if (ave > a3 && ave < a4) return val+(val-num_living_neis/8.0)+ave*pow(sin(0.5*iTime),2.0);\n    else return val;\n}\n\nvec4 game_of_life_weird6(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5, a2 = 5.5*pow(cos(0.12*iTime),2.0), a3 = a1, a4 = a2;\n    if (ave < a1) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave > a2) return val-(val-num_living_neis/8.0)-0.1-ave*pow(sin(0.31*iTime),2.0);\n    if (ave > a3 && ave < a4) return val+(val-num_living_neis/8.0)+ave*pow(sin(0.17*iTime),2.0);\n    else return val;\n}\n\nvec4 game_of_life_weird7(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8, vec2 fragCoord){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5*pow(cos(0.11*iTime),2.0), a2 = 5.5*pow(cos(0.11*iTime*(1.0-cos(0.9*iTime)*(fragCoord.y/10.0))),2.0), a3 = a1, a4 = a2;\n    if (ave < a1) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave > a2) return val-(val-num_living_neis/8.0)-0.1-ave*pow(sin(0.31*iTime),2.0);\n    if (ave > a3 && ave < a4) return val+(val-num_living_neis/8.0)+ave*pow(sin(0.19*iTime),2.0);\n    else return val;\n}\n\nvec4 game_of_life_weird8(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8, vec2 fragCoord){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5*pow(cos(0.11*iTime),2.0), a2 = 5.5*pow(cos(0.11*iTime*(1.0-cos(0.9*iTime)*(fragCoord.y/10.0))),2.0), a3 = a1, a4 = a2;\n    if (ave < a1) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave*prod > a2) return val-(val-num_living_neis/8.0)-0.1-ave*pow(sin(0.31*iTime),2.0);\n    if (ave > a3 && ave < a4) return val+(val-num_living_neis/8.0)+ave*pow(sin(0.19*iTime),2.0);\n    else return val;\n}\n\nvec4 game_of_life_weird9(vec4 val, vec4 val1, vec4 val2, vec4 val3, vec4 val4, vec4 val5, vec4 val6, vec4 val7, vec4 val8, vec2 fragCoord){\n    //return (val+val1+val2+val3+val4)/5.0;\n    vec4 num_living_neis = val1 + val2 + val3 + val4 + val5 + val6 + val7 + val8;\n    float prod = num_living_neis.x * num_living_neis.y * num_living_neis.z * num_living_neis.w;\n    float sum = num_living_neis.x + num_living_neis.y + num_living_neis.z + num_living_neis.w;\n    float ave = sum / 4.0;\n    float a1 = 1.5, a2 = 5.5*pow(cos(0.11*(1.0-cos(0.9*iTime)*(fragCoord.y/10.0))),2.0), a3 = a1, a4 = a2;\n    float u = fragCoord.x/31.0, v = fragCoord.y/50.0;\n    if (ave < a1*v) return val-(val-num_living_neis/8.0)+0.1;\n    if (ave > a2*u) return val-(val-num_living_neis/8.0)-0.1-ave*pow(sin(0.31*iTime),2.0);\n    if (ave > a3*v && ave < a4*u) return val+(val-num_living_neis/8.0)+ave*pow(sin(0.19*iTime),2.0);\n    else return val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 val = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    ivec2 nei1 = ivec2(mod(fragCoord.x+1.0,iResolution.x),mod(fragCoord.y+1.0,iResolution.y));\n    ivec2 nei2 = ivec2(mod(fragCoord.x-1.0,iResolution.x),mod(fragCoord.y-1.0,iResolution.y));\n    ivec2 nei3 = ivec2(mod(fragCoord.x+1.0,iResolution.x),mod(fragCoord.y-1.0,iResolution.y));\n    ivec2 nei4 = ivec2(mod(fragCoord.x-1.0,iResolution.x),mod(fragCoord.y+1.0,iResolution.y));\n    ivec2 nei5 = ivec2(mod(fragCoord.x-1.0,iResolution.x),mod(fragCoord.y,iResolution.y));\n    ivec2 nei6 = ivec2(mod(fragCoord.x+1.0,iResolution.x),mod(fragCoord.y,iResolution.y));\n    ivec2 nei7 = ivec2(mod(fragCoord.x,iResolution.x),mod(fragCoord.y+1.0,iResolution.y));\n    ivec2 nei8 = ivec2(mod(fragCoord.x,iResolution.x),mod(fragCoord.y-1.0,iResolution.y));\n    vec4 val1 = texelFetch(iChannel0, nei1, 0);\n    vec4 val2 = texelFetch(iChannel0, nei2, 0);\n    vec4 val3 = texelFetch(iChannel0, nei3, 0);\n    vec4 val4 = texelFetch(iChannel0, nei4, 0);\n    vec4 val5 = texelFetch(iChannel0, nei5, 0);\n    vec4 val6 = texelFetch(iChannel0, nei6, 0);\n    vec4 val7 = texelFetch(iChannel0, nei7, 0);\n    vec4 val8 = texelFetch(iChannel0, nei8, 0);\n\n\n    if (iFrame == 0) {\n        if (hash(fragCoord.x+fragCoord.y*iResolution.x) > 0.3) {\n        val = vec4(0.3,0.5,0.5,1.0);\n            if (hash(fragCoord.x+fragCoord.y*iResolution.x) > 0.7) {\n            val = vec4(0.3,0.3,0.3,1.0);\n            }\n        }\n        else {\n        val = vec4(1.0);\n        }\n    } else {\n        //val = game_of_life(val,val1,val2,val3,val4,val5,val6,val7,val8);\n        //val = game_of_life_weird6(val,val1,val2,val3,val4,val5,val6,val7,val8);\n        val = game_of_life_weird9(val,val1,val2,val3,val4,val5,val6,val7,val8,fragCoord);\n\n    }\n    fragColor = val;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}