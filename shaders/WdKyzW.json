{
    "Shader": {
        "info": {
            "date": "1602353920",
            "description": "trying to do a plane -> cylinder -> torus  transition",
            "flags": 32,
            "hasliked": 0,
            "id": "WdKyzW",
            "likes": 4,
            "name": "parametric_thingy_1",
            "published": 3,
            "tags": [
                "mouse",
                "parametric"
            ],
            "usePreview": 0,
            "username": "balkhan",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\nvec2 rotate(vec2 v, float alpha);\nfloat line(vec2 p1, vec2 p2, vec2 p, float thickness);\n\n#define SHOW_LINES\n\nvoid r(inout vec2 p, float a)\n{\n    p.xy = vec2(cos(a)*p.x+sin(a)*p.y, -sin(a)*p.x+cos(a)*p.y);\n}\n\nvoid mainImage( out vec4 o, in vec2 f )\n{\n    vec2\tR = iResolution.xy;\n    vec2\tu = 1.*(f.xy-.5*R) / R.y;\n    \n    float md = 1e5;\n    for (float k = 0.; k <= NUM; k++)\n    for (float i = 0.; i <= NUM; i++)\n    {\n        vec2 coord = vec2(k-.5, i-.5) / R;\n        vec3 pos = texture(iChannel0, coord).xyz;\n    \tmd = min(md,\n                 length(u - pos.xy)-7./R.x\n                 );\n\t\t#ifdef SHOW_LINES\n\t\tmd = min(md, \n                 1.-line(pos.xy, \n                      texture(iChannel0, vec2(k-.5+1.*(k<NUM ? 1. : .0), i-.5)/R ).xy\n                      , u, 2./R.x)\n                 );\n        \n        md = min(md, \n                 1.-line(pos.xy, \n                      texture(iChannel0, vec2(k-.5-0., i-.5+1.*(i<NUM ? 1. : .0) )/R ).xy\n                      , u, 2./R.x)\n                 );\n        #endif\n        if (md < 0.001)\n            break;\n    }\n    o.xyz = texture(iChannel0, .25*f.xy/R.xy-vec2(.0, .0)).xyz;\n\to.x = smoothstep(.00052, .00735, .00625-md);\n    o = o.xxxx*1.;\n}\n\nvec2 rotate(vec2 v, float alpha)\n{\n\tfloat vx = v.x*cos(alpha)-v.y*sin(alpha);\n\tfloat vy = v.x*sin(alpha)+v.y*cos(alpha);\n\tv.x = vx;\n\tv.y = vy;\n\treturn v;\n}\n\nfloat line(vec2 p1, vec2 p2, vec2 p, float thickness)\n{\n\tp -= p1;\n\tvec2 lineVector = p2-p1;\n\t\t\n\tfloat angle = -atan(lineVector.y,lineVector.x);\n\tp = rotate(p,angle);\n\t\n\tfloat dx = 0.0;\n\tif(p.x<0.0)\n\t\tdx = abs(p.x);\n\telse if(p.x>length(lineVector))\n\t\tdx = abs(p.x) - length(lineVector);\n\t\t\n\treturn ( thickness/(dx+abs(p.y)) );\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/*\n* BUFFER A : Particle System\n* coord.x < NUM --> col = pos\n* coord.x > NUM --> col = vit\n*/\n\n/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\n\n\nvoid r(inout vec2 p, float a)\n{\n    p.xy = vec2(cos(a)*p.x+sin(a)*p.y, -sin(a)*p.x+cos(a)*p.y);\n}\n\nstruct\tparticle\n{\n    vec3\tpos;\n    vec3\tacc;\n    vec3\tvit;\n};\n\nvoid\tpos_plane(inout vec3 pos, vec2 ij)\n{\n    pos.x = -ij.x+7.5;\n    pos.y = 0.;\n    pos.z = -ij.y*1.+7.5;\n    pos /= 10.;\n}\n\nvoid\tpos_cyl(inout vec3 pos, vec2 ij)\n{\n    ij *= 6.28/NUM;\n    pos.x = cos(ij.x+1.5*3.0);\n    pos.y = sin(ij.x+1.5*3.0);\n    pos.z = -ij.y+7.5;\n    pos /= 10.;\n}\n\nvoid\tpos_tor(inout vec3 pos, vec2 ij)\n{\n    ij *= 6.28/NUM;\n    pos.y = (5.-cos(ij.x))*cos(-ij.y+1.57*2.)-0.;\n    pos.z = (5.-cos(ij.x))*sin(-ij.y+1.57*2.);\n    pos.x = sin(ij.x)+.0*ij.y*15.;\n    pos /= 10.;\n}\n\nvoid\tinit(inout particle part)\n{\n    part.acc = vec3(0.);\n\tpart.vit.xyz = vec3(0., 0., 0.);\n}\n\nvoid mainImage( out vec4 o, in vec2 f )\n{\n    particle parts;\n    vec4\ttexture_buff;\n    vec2\tR = iResolution.xy;\n    o *= 0.;\n    vec2\tmous = (iMouse.xy-.0*R/2.) / R.xy;\n    if (f.x > NUM*2.+1. || f.y > NUM+1.)\n        discard;\n\n        texture_buff = texture(iChannel0, f/R.xy ).xyzw;\n        parts.pos.xyz = texture_buff.xyz;\n            vec3 m0, m1, m2;\n        pos_cyl(m0, f);\n        pos_plane(m1, f);\n        pos_tor(m2, f);\n        m1 = mix(m1, m0.xyz, .50+.50*sin(iTime*.4) );\n        parts.pos.xyz = mix(m1, m2.xyz, .50+.50*sin(iTime*.2) );\n            \n        r(parts.pos.xz, 3.51051*sin(1.57*1.+5.*((iMouse.x-R.x/2.)/R.x)));\n        r(parts.pos.yz, 3.51051*sin(1.57*3.5+5.*((iMouse.y-R.y/2.)/R.y)));\n\n\t    \to.xyz += \n                \t(f.x+.5 <= NUM +1. ? 1. :.0)\n\t                *\n\t           \t\tparts.pos.xyz\n           \t\t;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n#define NUM 20.\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}