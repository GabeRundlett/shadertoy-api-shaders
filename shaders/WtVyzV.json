{
    "Shader": {
        "info": {
            "date": "1611350152",
            "description": "Playing with this ( serious and intersting ) shader : https://www.shadertoy.com/view/3tyyzK\nI found these patterns funny :\nIt's just a zoom in a grid \n",
            "flags": 0,
            "hasliked": 0,
            "id": "WtVyzV",
            "likes": 0,
            "name": "Pattern with simple points",
            "published": 3,
            "tags": [
                "pattern2d"
            ],
            "usePreview": 0,
            "username": "ManuManu",
            "viewed": 290
        },
        "renderpass": [
            {
                "code": "float grid_zoom( vec2 p, float size_ampl,float size_offset, float time_factor)\n{\n    //color\n    float m = 0.;\n    \n     //cell size 1/size\n    float mul = size_ampl * sin(iTime * time_factor) + size_ampl/2. + size_offset;\n    \n    //local grids\n    vec2 gv = fract(p*mul)-0.5;\n    //grid ids\n    vec2 id = floor(p*mul);\n    \n    //display points as dots\n    float point_start_size = 0.1;\n    float point_end_size = 0.09;\n    m = smoothstep(point_start_size,point_end_size,length(gv));\n    return m;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 color1 = vec3(0.282, 0.388, 0.612);\n    vec3 color2 = vec3(0.298, 0.298, 0.616);\n    vec3 color3 = vec3(0.443, 0.184, 0.475);\n    vec3 color4 = vec3(0.592, 0.388, 0.569);\n    vec3 color5 = vec3(0.969, 0.6, 0.431);\n    \n\n    float m1 = grid_zoom( uv, 2000., 100., 0.0001);\n    float m2 = grid_zoom( uv, 1000., 200., 0.0005);\n    float m3 = grid_zoom( uv, 500., 99., 0.00001);\n    float m4 = grid_zoom( uv, 800., 1000., 0.0015);\n    float m5 = grid_zoom( uv, 200., 0., 0.0015);\n\n    //out color\n    vec3 col =  m1 * color1 +\n                m2 * color2 +\n                m3 * color3 +\n                m4 * color4 +\n                m5 * color5;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}