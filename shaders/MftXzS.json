{
    "Shader": {
        "info": {
            "date": "1714096819",
            "description": "This is a variation of the Pixel Sorting shader by @cornusammonis here https://www.shadertoy.com/view/XdcGWf\n\nIt works on video by blending the sorted image to the incoming video by  a factor of 100 to 1.\n\nAlso uses real luminance equation.\n",
            "flags": 32,
            "hasliked": 0,
            "id": "MftXzS",
            "likes": 1,
            "name": "Fork Pixel Sort vinnieyoun 812",
            "published": 3,
            "tags": [
                "video",
                "pixel",
                "feedback",
                "sorting"
            ],
            "usePreview": 1,
            "username": "vinnieyoung",
            "viewed": 205
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 texel = 1. / iResolution.xy;\n    \n    float step_y = texel.y;\n    vec2 s  = vec2(0.0, -step_y);\n    vec2 n  = vec2(0.0, step_y);\n\n    vec4 im_n =  texture(iChannel0, uv+n);\n    vec4 im =    texture(iChannel0, uv);\n    vec4 im_s =  texture(iChannel0, uv+s);\n    \n    // use luminance for sorting\n    float len_n = dot(im_n, vec4(0.299, 0.587, 0.114, 0.));\n    float len = dot(im, vec4(0.299, 0.587, 0.114, 0.));\n    float len_s = dot(im_s, vec4(0.299, 0.587, 0.114, 0.));\n    \n    if(int(mod(float(iFrame) + fragCoord.y, 2.0)) == 0) {\n        if ((len_s > len)) { \n            im = im_s;    \n        }\n    } else {\n        if ((len_n < len)) { \n            im = im_n;    \n        }   \n    }\n    \n    // blend with image\n    if(iFrame<1) {\n        fragColor = texture(iChannel1, uv);\n    } else {\n        fragColor = (texture(iChannel1, uv) + im * 99. ) / 100.;\n    }\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}