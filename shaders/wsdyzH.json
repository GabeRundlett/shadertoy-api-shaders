{
    "Shader": {
        "info": {
            "date": "1600436601",
            "description": "Filling Paint",
            "flags": 32,
            "hasliked": 0,
            "id": "wsdyzH",
            "likes": 5,
            "name": "Liquid Paint",
            "published": 3,
            "tags": [
                "paint",
                "liquid",
                "ripple",
                "multipass"
            ],
            "usePreview": 0,
            "username": "smkgames",
            "viewed": 939
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(distance(iMouse.xy, fragCoord) < 10.0);\n    fragColor += texture(iChannel0, fragCoord.xy / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float s = 0.;\n\nvec4 Move(vec2 U,vec2 dir) {\n    \n     // smoothing gives a circle\n     s += 1./ length(dir);\n    \n     // using texelFetch ( if speed always refer to an integer number of pixels ) would make your life a bit easier\n     vec4 result = texelFetch( iChannel1, ivec2(U+dir) , 0 );\n    \n     result /= length(dir);\n    \n     return result;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(0);\n    \n    O += Move( U, vec2( 1, 0) )\n      +  Move( U, vec2(-1, 0) ) \n      +  Move( U, vec2( 0, 1) )\n      +  Move( U, vec2( 0,-1) )\n      +  Move( U, vec2( 1, 1) )\n      +  Move( U, vec2( 1,-1) )\n      +  Move( U, vec2(-1, 1) )\n      +  Move( U, vec2(-1,-1) );\n    \n    O /= s;\n    \n    O += texelFetch(iChannel0, ivec2(U), 0); \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}