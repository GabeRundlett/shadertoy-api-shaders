{
    "Shader": {
        "info": {
            "date": "1590954151",
            "description": "Inspired by David Bruce's work on the '80s HBO intro. (https://youtu.be/agS6ZXBrcng?t=329)",
            "flags": 0,
            "hasliked": 0,
            "id": "Wty3zV",
            "likes": 18,
            "name": "Vortex Dust",
            "published": 3,
            "tags": [
                "procedural",
                "mask",
                "vortex",
                "sinusoidal",
                "dust"
            ],
            "usePreview": 0,
            "username": "irwatts",
            "viewed": 911
        },
        "renderpass": [
            {
                "code": "const int ITERATIONS = 64;\nconst float SPEED = 0.25;\nconst float PAN = 2.8;\nconst float MASK_VIS = 0.0; // Set between 0-1 to visualize masks\n\nfloat vortex(vec2 uv, float dist, float seed, float bias, float offset)\n{\n    float ang = atan(uv.y, uv.x)+sin(dist+0.1*seed)*(1.2-offset)*2.0;\n    ang += 3.14159*(0.01*seed);\n    return clamp((sin((ang)*(3.0+offset*float(ITERATIONS)))+bias)/(1.0+bias), 0.0, 1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-vec2(iResolution.xy*0.5))/iResolution.y;\n    float texel = 1.0/iResolution.y;\n    float dist = length(uv);\n    vec3 col = vec3(0.0);\n    for (int i=0; i<ITERATIONS; i++) \n    {\n        float offset = float(i)/float(ITERATIONS);\n        float seed = 1000.0*fract(3.1379136*floor(iTime*SPEED+offset));\n        float time = fract(iTime*SPEED+offset);\n        vec2 pan = vec2(0.0, time*PAN);\n        float maskA = vortex(uv, dist, seed+100.0*float(i), -0.998+texel, offset);\n        float dist2 = length(uv+pan);\n        float maskB = vortex(uv+pan, dist2, seed+42.0*float(i), -0.99+texel, offset);\n        float radius = pow(((maskA*maskA)+(maskB*maskB)), 2.0);\n        float fade = time*(1.0-time);\n        float mask = maskA*maskB*fade*radius;\n        col = mix(col, vec3(0.42+1.0*dist-0.2*offset-0.1*radius, 0.75-0.5*offset-0.5*dist, 1.0-0.8*dist), mask);\n        col = max(vec3(maskA*MASK_VIS, maskB*MASK_VIS+0.1, max(maskA*MASK_VIS*2.0, maskB*MASK_VIS)+0.12)*fade, col);\n    }\n    fragColor = vec4(col*4.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}