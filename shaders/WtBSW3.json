{
    "Shader": {
        "info": {
            "date": "1567204679",
            "description": "One of the exercises from the Book of Shaders attempting to replicate a texture of Malachite",
            "flags": 0,
            "hasliked": 0,
            "id": "WtBSW3",
            "likes": 6,
            "name": "Malachite 1",
            "published": 3,
            "tags": [
                "2d",
                "teal",
                "malachite"
            ],
            "usePreview": 0,
            "username": "stseagle",
            "viewed": 435
        },
        "renderpass": [
            {
                "code": "// From Inigo Quilez\nvec2 hash( vec2 x )  // replace this by something better\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\n// https://www.shadertoy.com/view/XdXGW8 \nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat random(in float seed) {\n    return fract(sin(dot(vec2(seed),\n                         vec2(11.039234,66.74392)))*\n        5706.2373);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 color = vec3(0.0078, 0.0588, 0.0588);\n\n    vec2 st = gl_FragCoord.xy/max(iResolution.x, iResolution.y);\n    vec2 mt = iMouse.xy/max(iResolution.x, iResolution.y);\n    vec2 pos = vec2(st * 11.);\n    float n = 11.9 + 1.8 * noise(pos);\n    float dis = distance(st,vec2(.65*n)) * distance(st,vec2(.046*n));\n    dis += 4. * distance(st, mt);\n\n    float steps = 18.;\n\n    float pct = floor(mod(dis *6. - iTime * 0.8, steps))*(1./(steps - .1));\n        pct = fract(pct*(random(pct) * 0.5 + 0.5));\n    vec3 malaColors[4];\n        malaColors[0] = vec3(0.0078, 0.1412, 0.102);\n        malaColors[1] = vec3(0.051, 0.3608, 0.2941);\n        malaColors[2] = vec3(0.2275, 0.8471, 0.7137);\n        malaColors[3] = vec3(0.1255, 0.6706, 0.5333);\n\n    float cutoff = 0.22;\n\n    if (pct < cutoff) {\n        color += mix(malaColors[0], malaColors[1], pct);\n    } else {\n        color = mix(malaColors[2], malaColors[3], (pct - cutoff) * (1. / cutoff));\n    }\n    fragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}