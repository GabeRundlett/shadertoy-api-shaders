{
    "Shader": {
        "info": {
            "date": "1724398471",
            "description": "Just something I wanted to make while thinking of ways to only use low energy gates on hardware... Made by Rik Riesmeijer, 2024 - Copyright released to the public domain (cc0 license).",
            "flags": 0,
            "hasliked": 0,
            "id": "MflfWj",
            "likes": 0,
            "name": "Simple Procedural Carpet Texture",
            "published": 3,
            "tags": [
                "procedural",
                "grid",
                "texture",
                "diamond",
                "pattern",
                "generator",
                "carpet",
                "detail",
                "fabric"
            ],
            "usePreview": 0,
            "username": "rikr",
            "viewed": 50
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 p, vec2 v) {                    // Procedural Carpet Texture.\n    float s = 4096.0;                                   // Scale setting is 4k size.\n    v /= iResolution.xy / s;                            // Scale and adjust ratio.\n    ivec4 i = ivec4(s, s, v + v) >> 1;                  // Set up integer lattice.\n    i = abs(abs(i - i.zwxy) - (i >> 1)) << 11;          // Fold canvas in half twice.\n    p = fract(vec4(i ^ i.y) * (0.24 + sin(iTime / s))); // Draw colors by logic and time.\n}                                                       // By Rik Riesmeijer.\n                                                        // No rights reserved (cc0).",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}