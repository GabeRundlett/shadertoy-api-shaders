{
    "Shader": {
        "info": {
            "date": "1719528585",
            "description": "Trying to make the dots go around the cubes randomly / though all I can figure out is a lerp based thing based on ID/hash using time in a mod function. Kind of neat!",
            "flags": 0,
            "hasliked": 0,
            "id": "l3tXzs",
            "likes": 13,
            "name": "Byt3-daily-002",
            "published": 3,
            "tags": [
                "2d",
                "time",
                "lerp"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 140
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Trying to make the dots go around the cubes randomly / though all I can figure out is \n    a lerp based thing based on ID/hash using time in a mod function. Kind of neat!\n    \n    Byt3-daily-002\n    06/27/2024  @byt3_m3chanic\n    \n*/\n\n#define R     iResolution\n#define T     iTime\n#define M     iMouse\n\n#define PI    3.141592653\n#define PI2   6.283185307\n\nmat2 rot(float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\nfloat hash21(vec2 a) { return fract(sin(dot(a, vec2(27.609, 57.583)))*43758.5453); }\nfloat lsp(float begin, float end, float t) { return clamp((t - begin) / (end - begin), 0.0, 1.0); }\nfloat eoc(float t) { return (t = t - 1.0) * t * t + 1.0; }\n\nfloat box( in vec2 p, in vec2 b ) {\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nconst float scale = 6.;\nfloat time;\n\nvoid mainImage( out vec4 fragColor, in vec2 F )\n{\n\n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n    \n    uv *= rot(T*.02);\n    uv.y+=T*.08;\n     \n    vec3 C = vec3(0);\n\n    vec3 cc = mix(vec3(0,1,1),vec3(1,0,1),.5+.5*sin(uv.x*.5+T*.5));\n    float px = fwidth(uv.x);\n\n    \n    vec2 vv = fract(uv*scale)-.5;\n    vec2 id = floor(uv*scale);\n\n    float g =  box(vv,vec2(.24))-.05;\n    float f =  box(vv,vec2(.14))-.05;\n    \n    float rx  = hash21(id);\n    float mid = floor(mod(abs(rx*10.),8.));\n    float tmod = mod(T*(rx+.2), 15.);\n    vv += vec2(.4,.4);\n    //movement\n    float t3 = lsp(mid, mid+2., tmod);\n    t3 = eoc(t3); t3 = t3*t3*t3;\n    float t4 = lsp(mid+2., mid+4., tmod);\n    t4 = eoc(t4); t4 = t4*t4*t4;\n    float t5 = lsp(mid+4., mid+6., tmod);\n    t5 = eoc(t5); t5 = t5*t5*t5;\n    float t6 = lsp(mid+6., mid+8., tmod);\n    t6 = eoc(t6); t6 = t6*t6*t6;\n    \n    vec3 cx = mix(vec3(0,1,0),vec3(1,.4,0),rx);\n    \n    vec2 vx = vec2((t3*.8)-(t5*.8),(t4*.8)-(t6*.8));\n    float s = length(vv-vx)-.075;\n    \n    rx = fract(rx*434.34);\n    C = mix(C,cc,smoothstep(px,-px,abs(g)-.02));\n    if(rx>.7) C = mix(C,vec3(.5),smoothstep(px,-px,f));\n    C = mix(C,cx,smoothstep(px,-px,s));\n    // Output to screen\n    fragColor = vec4(C,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}