{
    "Shader": {
        "info": {
            "date": "1697484155",
            "description": "Adds stripes to dark areas for a dithering-ish effect. The stripes should be a little darker than the base color but it's a little scuffed as I used RGB color space to determine this.",
            "flags": 0,
            "hasliked": 0,
            "id": "msdfRX",
            "likes": 1,
            "name": "Add stripes to dark areas",
            "published": 3,
            "tags": [
                "shadow",
                "stripes",
                "dithering",
                "dark"
            ],
            "usePreview": 0,
            "username": "Kampfhund",
            "viewed": 152
        },
        "renderpass": [
            {
                "code": "float sRGBtoLin(float colorChannel)\n{\n    //This converts a gamma encoded RGB to a linear value.\n    \n    if(colorChannel <= 0.04045)\n    {\n        return colorChannel / 12.92;\n    }\n    else\n    {\n        return pow(((colorChannel + 0.055) / 1.055), 2.4);\n    }\n}\n\nfloat lumToPerLight(float luminance)\n{\n    //This transforms the luminance value to the perceptual lightness as seen by humans\n    if(luminance <= 216.0/24389.0)\n    {\n        return luminance * (24389.0/27.0);\n    }\n    else\n    {\n        return pow(luminance, (1.0 / 3.0)) * 116.0 - 16.0;\n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv);\n    \n    //This calculates the luminance\n    float lum = (0.2126 * sRGBtoLin(color.r) + 0.7152 * sRGBtoLin(color.g) + 0.0722 * sRGBtoLin(color.b));\n    float perLight = lumToPerLight(lum) / 100.0;\n    \n    \n    //mod() part checks if it's on on of the vertical lines. Play around with the 0.01 and the 0.003 if you want.\n    if(mod(uv.x - uv.y, 0.01) <= 0.003 && perLight <= 0.5)\n    {\n        color = vec4(color.r -(0.2126*0.1), color.g -(0.7152*0.1), color.b - (0.0722*1.0), 1.0);\n    }\n\n    fragColor = color;\n\n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}