{
    "Shader": {
        "info": {
            "date": "1722875902",
            "description": "//3.2\n//Colores\n//Funci칩nes HSB y RGB: \n ",
            "flags": 0,
            "hasliked": 0,
            "id": "Mcjyzd",
            "likes": 0,
            "name": "Colores Mezcla 3.2",
            "published": 3,
            "tags": [
                "mix",
                "tutorial",
                "sin",
                "color",
                "cos",
                "shaders",
                "shaders",
                "livecoding",
                "functions",
                "taller",
                "tutoriales",
                "osciladores"
            ],
            "usePreview": 0,
            "username": "jpupper",
            "viewed": 41
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define resolution iResolution\n\n//FUNCIONES SACADAS DE https://thebookofshaders.com/06/: \n//esta es para transformar si pensamos un color en hsb a rgb, nunca lo use.\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from I침igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n       vec2 uv = gl_FragCoord.xy / resolution.xy; // De esta manera obtenemos las coordenadas cartesianas\n    \n    \n     //Puedo utilizar la funci칩n hsb2rgb para expresar los colores en hsb.\n     //HSB SIGNIFICA : HUE-SATURATION-BRIGHTNESS (tono,saturacion y brillo).\n     //De esta manera el segundo parametro corresponde a la saturaci칩n.\n     //Y el tercer parametro al brillo\n     \n    vec3 color = hsb2rgb(vec3(uv.x,1.0-uv.y,uv.y));\n\n    fragColor = vec4(color,1.0); \n    \n       \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}