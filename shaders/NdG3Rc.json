{
    "Shader": {
        "info": {
            "date": "1631833364",
            "description": "A single line function creates a nice RGB rainbow by just taking a value from 0...1\nOriginal by keyuliang https://www.shadertoy.com/view/Nt2XWc\n",
            "flags": 0,
            "hasliked": 0,
            "id": "NdG3Rc",
            "likes": 8,
            "name": "Cosine Rainbow",
            "published": 3,
            "tags": [
                "color",
                "gradient",
                "rgb",
                "rainbow"
            ],
            "usePreview": 0,
            "username": "Krischan",
            "viewed": 530
        },
        "renderpass": [
            {
                "code": "#define rainbow(u) .5 + .5 * cos( atan(u.x,u.y) + 6.3 * iTime + vec3(0,23,21) )\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    U -= .5* iResolution.xy;\n    O = vec4(rainbow(U),1.0);\n}\n\n// original version\n/*\n#define rainbow(a) .5 + .5 * cos(6.283 * (a + vec3(0.,.33,.66)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv.x+=length(uv);\n    \n    fragColor = vec4(rainbow(fract(atan(uv.x, uv.y) / 3.1415 + iTime)),1.0);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}