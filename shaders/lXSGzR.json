{
    "Shader": {
        "info": {
            "date": "1708098885",
            "description": "A geometric font created using 2D SDF functions. Still needs a bit of cleaning up to get it looking more consistent and to improve the accuracy of the distance functions at further distances. You should be able to extrude these shapes if you want 3D text.",
            "flags": 0,
            "hasliked": 0,
            "id": "lXSGzR",
            "likes": 15,
            "name": "Textureless, geometric SDF font",
            "published": 3,
            "tags": [
                "text",
                "font",
                "textureless"
            ],
            "usePreview": 0,
            "username": "hughsk",
            "viewed": 290
        },
        "renderpass": [
            {
                "code": "precision highp float;\n\nconst int MODE_SINGLE = 1;\nconst int MODE_GRID = 2;\nconst int MODE = MODE_GRID;\n\nvec2 squareFrame(vec2 screenSize, vec2 coord) {\n  vec2 position = 2.0 * (coord.xy / screenSize.xy) - 1.0;\n  float aspect = screenSize.x / screenSize.y;\n  return position * max(vec2(1.0), vec2(aspect, 1.0 / aspect));\n}\n\nfloat aastep(float threshold, float value) {\n  float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\n  return smoothstep(threshold-afwidth, threshold+afwidth, value);\n}\n\nvec2 rotate2D(vec2 p, float a) {\n  return p * mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid pR(inout vec2 p, float a) {\n  p = cos(a) * p + sin(a) * vec2(p.y, -p.x);\n}\n\nvoid pR45(inout vec2 p) {\n  p = (p + vec2(p.y, -p.x)) * sqrt(0.5);\n}\n\nfloat sdBox(vec2 position, vec2 dimensions) {\n  vec2 d = abs(position) - dimensions;\n  return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n}\n\nfloat sdRing(vec2 p, float r1, float r2) {\n  float lp = length(p);\n  return max(r1 - lp, lp - r2);\n}\n\nvoid pElongate(inout float p, float h) {\n  p -= clamp(p, -h, h);\n}\n\nfloat letterV(vec2 p);\n\nfloat letterA(vec2 p) {\n  p.x = abs(p.x);\n  float d = sdBox(p + vec2(0.0, 0.15), vec2(0.45, 0.08125));\n  p.y = -p.y;\n  return min(d, letterV(p));\n}\n\nfloat letterP(vec2 p);\n\nfloat letterB(vec2 p) {\n  p.y = abs(p.y);\n  return letterP(p);\n}\n\nfloat letterC(vec2 p) {\n  p.x -= 0.08;\n  p.y = abs(p.y);\n  vec2 q = p;\n  p.x = abs(p.x);\n  float d = sdRing(p, 0.9 - 0.08125 * 2.0, 0.9);\n  q.x -= 0.7;\n  pR45(q);\n  d = max(d, -q.y + 0.5);\n  return d;\n}\n\nfloat letterD(vec2 p) {\n  p.x += 0.165;\n  vec2 q = p;\n  p.x += 0.45;\n  float dEdge = sdBox(q + vec2(0.45, 0.0), vec2(0.08125, 0.8));\n  pElongate(p.x, 0.45);\n  float dBump = sdRing(p, 0.9 - 0.08125 * 2.0, 0.9);\n  float d = min(dBump, dEdge);\n  d = max(d, -q.x - 0.53);\n  return d;\n}\n\nfloat letterF(vec2 p);\n\nfloat letterE(vec2 p) {\n  p.y = abs(p.y);\n  return letterF(p);\n}\n\nfloat letterF(vec2 p) {\n  p.x -= 0.25;\n  float dTop = sdBox(p + vec2(0.25, -0.9 + 0.08125), vec2(0.65, 0.08125));\n  float dMid = sdBox(p + vec2(0.4, 0.0), vec2(0.5, 0.08125));\n  p.x += 0.9 - 0.08125;\n  float dSide = sdBox(p, vec2(0.08125, 0.9));\n  return min(dTop, min(dMid, dSide));\n}\n\nfloat letterG(vec2 p) {\n  float d = letterC(p);\n  d = min(d, sdBox(p + vec2(0.08125 - 0.75, 0.5), vec2(0.08125, 0.4)));\n  d = min(d, sdBox(p + vec2(-0.5, 0.1 + 0.08125), vec2(0.2, 0.08125)));\n  return d;\n}\n\nfloat letterH(vec2 p) {\n  p.x = abs(p.x);\n  float d = sdBox(p, vec2(0.6, 0.08125));\n  p.x -= 0.6 - 0.08125;\n  d = min(d, sdBox(p, vec2(0.08125, 0.9)));\n  return d;\n}\n\nfloat letterI(vec2 p) {\n  p.y = abs(p.y);\n  float d = sdBox(p, vec2(0.08125, 0.9));\n  p.y -= 0.9 - 0.08125;\n  d = min(d, sdBox(p, vec2(0.3, 0.08125)));\n  return d;\n}\n\nfloat letterJ(vec2 p) {\n  p.x -= 0.35;\n  float d = sdBox(p + vec2(0.0, -0.225), vec2(0.08125, 0.65));\n  p.x += 0.3 + 0.08125;\n  p.y += 0.5 - 0.08125;\n  float dRing = sdRing(p, 0.3, 0.3 + 0.08125 * 2.0);\n  dRing = max(dRing, p.y);\n  d = min(d, dRing);\n  return d;\n}\n\nfloat letterK(vec2 p) {\n  p.x -= 0.1;\n  vec2 q = p;\n  float d = sdBox(p + vec2(0.6, 0.0), vec2(0.08125, 0.9));\n  p.x += 0.5;\n  p.y = abs(p.y);\n  pR(p, 0.82);\n  d = min(d, sdBox(p, vec2(1.5, 0.08125)));\n  d = max(d, -0.9 + abs(q.y));\n  return d;\n}\n\nfloat letterL(vec2 p) {\n  p.x -= 0.25;\n  float dTop = sdBox(p + vec2(0.25, 0.9 - 0.08125), vec2(0.65, 0.08125));\n  p.x += 0.9 - 0.08125;\n  float dSide = sdBox(p, vec2(0.08125, 0.9));\n  return min(dTop, dSide);\n}\n\nfloat letterM(vec2 p) {\n  vec2 q = p;\n  p.x = abs(p.x);\n  float d = sdBox(p - vec2(0.7, 0.0), vec2(0.08125, 0.9));\n  pR(p, 1.1);\n  p.y += 0.18;\n  d = min(d, sdBox(p, vec2(1.3, 0.08125)));\n  d = max(d, q.y - 0.9);\n  return d;\n}\n\nfloat letterN(vec2 p) {\n  vec2 q = p;\n  vec2 m = p;\n  p.x = abs(p.x);\n  float d = sdBox(p - vec2(0.5, 0.0), vec2(0.08125, 0.9));\n  pR(q, -1.07);\n  p.y += 0.18;\n  d = min(d, sdBox(q, vec2(1.3, 0.08125)));\n  d = max(d, abs(m.y) - 0.9);\n  return d;\n}\n\nfloat letterO(vec2 p) {\n  pElongate(p.y, 0.25);\n  float d = sdRing(p, 0.65 - 0.08125 * 2.0, 0.65);\n  return d;\n}\n\nfloat letterP(vec2 p) {\n  p.x -= 0.05;\n  vec2 q = p;\n  p.x += 0.45;\n  float dEdge = sdBox(q + vec2(0.45, 0.0), vec2(0.08125, 0.9));\n  pElongate(p.x, 0.45);\n  float dBumps = sdRing(p - vec2(0.0, 0.5 - 0.08125), 0.48 - 0.08125 * 2.0, 0.48);\n  float d = min(dBumps, dEdge);\n  d = max(d, -q.x - 0.53);\n  return d;\n}\n\nfloat letterQ(vec2 p) {\n  float d = letterO(p);\n  p += vec2(-0.6, 0.85);\n  pR45(p.yx);\n  d = min(d, sdBox(p, vec2(0.225, 0.08125)));\n  return d;\n}\n\nfloat letterR(vec2 p) {\n  p.x += 0.05;\n  vec2 q = p;\n  float d = letterP(p);\n  p.y += 0.5;\n  p.x -= 0.25;\n  pR(p, -0.9);\n  d = min(d, sdBox(p, vec2(0.7, 0.08125)));\n  d = max(d, -0.9 - q.y);\n  return d;\n}\n\nfloat letterSPortion(vec2 p) {\n  p.y -= 0.5 - 0.08125;\n  float d0 = sdRing(p, 0.5 - 0.08125 * 2.0, 0.5);\n  pR45(p);\n  return max(d0, -p.y - 0.2);\n}\n\nfloat letterS(vec2 p) {\n  pElongate(p.x, 0.125);\n  float d = min(letterSPortion(p), letterSPortion(-p));\n  pR(p, -0.19);\n  d = min(d, sdBox(p, vec2(0.18, 0.08125)));\n  return d;\n}\n\nfloat letterT(vec2 p) {\n  float d = sdBox(p, vec2(0.08125, 0.9));\n  p.y -= 0.9 - 0.08125;\n  d = min(d, sdBox(p, vec2(0.6, 0.08125)));\n  return d;\n}\n\nfloat letterU(vec2 p) {\n  vec2 q = p;\n  p.y -= 0.5;\n  pElongate(p.y, 0.5);\n  float d = letterO(p);\n  return max(d, q.y - 0.9);\n}\n\nfloat letterV(vec2 p) {\n  p.x = abs(p.x);\n  p.x -= 0.35;\n  float d = sdBox(rotate2D(p, -1.11), vec2(1.5, 0.08125));\n  d = max(d, p.y - 0.9);\n  return d;\n}\n\nfloat letterW(vec2 p) {\n  p.y = -p.y;\n  return letterM(p);\n}\n\nfloat letterX(vec2 p) {\n  p = abs(p);\n  vec2 q = p;\n  pR(p, 0.9);\n  float d = sdBox(p, vec2(1.5, 0.08125));\n  d = max(d, q.y - 0.9);\n  return d;\n}\n\nfloat letterY(vec2 p) {\n  p.x = abs(p.x);\n  vec2 q = p;\n  pR(p, 0.9);\n  float d = sdBox(p, vec2(1.5, 0.08125));\n  d = min(d, sdBox(q + vec2(0.0, 0.5 - 0.08125), vec2(0.08125, 0.5)));\n  d = max(d, abs(q.y) - 0.9);\n  return d;\n}\n\nfloat letterZ(vec2 p) {\n  p.x -= 0.04;\n  vec2 q = p;\n  vec2 m = p;\n  p.y = abs(p.y);\n  float d = sdBox(p - vec2(0.0, 0.9 - 0.08125), vec2(0.62, 0.08125));\n  pR(q, 0.95);\n  p.y += 0.18;\n  d = min(d, sdBox(q, vec2(1.3, 0.08125)));\n  d = max(d, abs(m.y) - 0.9);\n  return d;\n}\n\nvec2 gridOffset(int x, int y) {\n  vec2 uv = vec2(float(x) / 5.0, float(y) / 4.0);\n  uv = uv * 2.0 - 1.0;\n  uv *= 5.0;\n  uv.x = -uv.x;\n  return uv;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = squareFrame(iResolution.xy, fragCoord.xy);\n  float border = 0.35 * step(0.9, max(abs(uv.x), abs(uv.y)));\n  if (MODE == MODE_SINGLE) {\n    uv *= 1.5;\n    fragColor.rgb = vec3(border) + vec3(fract(letterZ(uv) * 5.0), step(letterZ(uv), 0.0), step(letterA(uv), 0.0));\n  }\n  else if (MODE == MODE_GRID) {\n    float d = 999999.0;\n    uv *= 8.0;\n    d = min(d, letterA(uv + gridOffset(0, 0)));\n    d = min(d, letterB(uv + gridOffset(1, 0)));\n    d = min(d, letterC(uv + gridOffset(2, 0)));\n    d = min(d, letterD(uv + gridOffset(3, 0)));\n    d = min(d, letterE(uv + gridOffset(4, 0)));\n    d = min(d, letterF(uv + gridOffset(5, 0)));\n    d = min(d, letterG(uv + gridOffset(0, 1)));\n    d = min(d, letterH(uv + gridOffset(1, 1)));\n    d = min(d, letterI(uv + gridOffset(2, 1)));\n    d = min(d, letterJ(uv + gridOffset(3, 1)));\n    d = min(d, letterK(uv + gridOffset(4, 1)));\n    d = min(d, letterL(uv + gridOffset(5, 1)));\n    d = min(d, letterM(uv + gridOffset(0, 2)));\n    d = min(d, letterN(uv + gridOffset(1, 2)));\n    d = min(d, letterO(uv + gridOffset(2, 2)));\n    d = min(d, letterP(uv + gridOffset(3, 2)));\n    d = min(d, letterQ(uv + gridOffset(4, 2)));\n    d = min(d, letterR(uv + gridOffset(5, 2)));\n    d = min(d, letterS(uv + gridOffset(0, 3)));\n    d = min(d, letterT(uv + gridOffset(1, 3)));\n    d = min(d, letterU(uv + gridOffset(2, 3)));\n    d = min(d, letterV(uv + gridOffset(3, 3)));\n    d = min(d, letterW(uv + gridOffset(4, 3)));\n    d = min(d, letterX(uv + gridOffset(5, 3)));\n    d = min(d, letterY(uv + gridOffset(0, 4)));\n    d = min(d, letterZ(uv + gridOffset(1, 4)));\n    fragColor.rgb = vec3(1.0 - aastep(0.0, d) + border);\n  }\n  fragColor.a = 1.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}