{
    "Shader": {
        "info": {
            "date": "1725295167",
            "description": "along time, randomly change the phase of successive Gabor splats. ( line32 #if variant: random change location ).\nThis is perceive as a local motion to left or right.\nmouse.x : frequency",
            "flags": 0,
            "hasliked": 0,
            "id": "lcjBz3",
            "likes": 10,
            "name": "illusion of motion in GaborNoise",
            "published": 3,
            "tags": [
                "noise",
                "illusion",
                "complex",
                "gabor",
                "perception"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 178
        },
        "renderpass": [
            {
                "code": "// paper variant: https://www.shadertoy.com/view/lf2fzw\n// Gabor variant: https://www.shadertoy.com/view/lcjBz3 (this one)\n// Perlin variant: https://www.shadertoy.com/view/MXlczl\n// FBM variant by rikr: https://www.shadertoy.com/view/4Xlczf\n\n\n// Gabor noise: Fork of  https://shadertoy.com/view/XlsGDs\n\n#define NB 1600.        // number or gabor blobs\nfloat SIZE   = 0.02566; // size of gabor blobs\n\n// --- utilities ------------------------------\n\n#define PI         3.14159265358979\n#define gauss1(x,s) exp(-.5*(x*x)/(s*s))\n#define gauss(v,s)  gauss1(v.x,s) * gauss1(v.y,s)\n\n\n//#define rndi(i,j) fract(1e5*sin(i+3.*j+0.567))\n#define rndi(i,j)  fract(sin(dot(vec2(i,j), vec2(12.9898, 78.233))) * 3758.5453)\n\n// --- complex Gabor ------------------------------\nvec2 Gabor(vec2 pos, float freq, float a) {\n    float g = gauss(pos,SIZE);\n    if (g < 1e-3) return vec2(0);\n    float phi = ( freq*pos.x + a ) * 2.*PI;\n    return g*vec2(cos(phi),sin(phi));\n\n}\n\n// --- complex Gabor noise = kernel * point distrib\nvec2 GaborNoise(vec2 U, float freq) {\n    vec2 f, P; \n    float t = iTime*1000., d;\n\tfor (float i; i < NB; i++ ) { \n        d = floor(t/NB)+step(i,mod(t,NB));\n#if 1        \n\t\tP = vec2(1.8*rndi(i,0.),rndi(i,1.13));\n\t\tf += Gabor(U-P, freq, rndi(i,d) );         // modify phase\n#else        \n        P = vec2(1.8*rndi(i,0.+d),rndi(i,1.13+d)); // modify splat location\n        f += Gabor(U-P, freq, 0. ); \n#endif        \n\t}\n\n\treturn f *sqrt(200./NB);\n}\n\n// ------------------------------------------------\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u / R.y,\n         M = iMouse.xy / R;\n    float freq = length(iMouse.xy)<20.? 21. : 80.*M.x;\n    O = .5 + .5* GaborNoise( U, freq ).yyyy;\n\n#define S(v)  smoothstep(1.5/R.y,0., v)\n // O = mix(O, vec4(1,0,0,1), Gabor(U-.1,freq,0.).x );\n    float d = length(U-.1) - 1.5*SIZE;\n    O = mix(O, vec4(1,0,0,1), max(S(abs(d)) , S(d) * step(0.,sin(freq*(U-.1).x*2.*PI)))  ); // draw ref splat in red\n  // O = sqrt(O);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}