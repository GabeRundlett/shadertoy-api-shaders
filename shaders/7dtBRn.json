{
    "Shader": {
        "info": {
            "date": "1655942578",
            "description": "This is a simple voronoi shader",
            "flags": 0,
            "hasliked": 0,
            "id": "7dtBRn",
            "likes": 1,
            "name": "Simple voronoi",
            "published": 3,
            "tags": [
                "voronoisimple"
            ],
            "usePreview": 0,
            "username": "marvpaul",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0); \n    int points = 4;\n     vec2 array[4] = vec2[4](\n     vec2(0.1+0.2*sin(iTime), 0.3),\n     vec2(0.3+cos(iTime)*0.05, 0.1),\n     vec2(0.8+sin(iTime)*0.02, 0.7-cos(iTime)*0.01),\n     vec2(0.1, 0.3));\n     float dmin = 1000.0;\n     int point = 0; \n     vec2 factor = vec2(100.0, 100.0*iResolution.y/iResolution.x);\n     for (int i = 0; i < points; i++){\n         float uv_x = float(int(uv.x*factor.x))/factor.x;\n         float uv_y = float(int(uv.y*factor.y))/factor.y;\n         \n         float uv_x_a = float(int(array[i].x*factor.x))/factor.x;\n         float uv_y_a = float(int(array[i].y*factor.y))/factor.y;\n         if(vec2(uv_x, uv_y) == vec2(uv_x_a, uv_y_a)){\n             col = vec3(1,0,0);\n         }\n         \n         if(length(array[i] - uv) < dmin){\n             point = i; \n             dmin = length(array[i] - uv);\n         }\n     }\n\n    // Output to screen\n    vec2 vector = vec2(0.2*float(point),0.2*float(point));\n        vec2 vector2 = vec2(sin(0.2*float(point)),cos(0.2*float(point)));\n                vec2 vector3 = vec2(cos(0.2*float(point)),sin(0.2*float(point)));\n    \n    fragColor = vec4(col+vec3(rand(vector),rand(vector2), rand(vector3)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}