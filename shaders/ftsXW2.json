{
    "Shader": {
        "info": {
            "date": "1626600920",
            "description": "just a random coding session among friends at 5 am",
            "flags": 0,
            "hasliked": 0,
            "id": "ftsXW2",
            "likes": 35,
            "name": "5 AM With Friends",
            "published": 3,
            "tags": [
                "circles",
                "gold",
                "gridlines",
                "livecode"
            ],
            "usePreview": 0,
            "username": "blackle",
            "viewed": 772
        },
        "renderpass": [
            {
                "code": "//CC0 1.0 Universal https://creativecommons.org/publicdomain/zero/1.0/\n//To the extent possible under law, Blackle Mori has waived all copyright and related or neighboring rights to this work.\n\nfloat stg;\nvec3 erot(vec3 p, vec3 ax, float ro) {\n  return mix(dot(ax,p)*ax, p, cos(ro)) + sin(ro)*cross(ax,p);\n}\n\nfloat smin(float a, float b, float k) {\n  float h = max(k-abs(a-b), 0.)/k;\n  return min(a,b) - h*h*h*k/6.;\n}\n\nfloat comp(vec3 p) {\n  p = asin(sin(p)*.999);\n  return dot(p,normalize(vec3(1,2,3)));\n}\n\nfloat linedist(vec3 p, vec3 a, vec3 b) {\n  float k = dot(p-a,b-a)/dot(b-a,b-a);\n  return distance(p,mix(a,b,clamp(k,0.,1.)));\n}\n\nfloat w, dts;\nfloat scene(vec3 p) {\n  float h1 = comp(erot(p,normalize(vec3(1,2,3)),2.));\n  float h2 = comp(erot(p,normalize(vec3(3,-1,2)),stg));\n  float h3 = comp(erot(p,normalize(vec3(0,3,2)),stg*2.));\n  float cave = (h1+h2+h3)/2.5;\n  float lvl1 = -smin(-cave,-p.z,.1);\n  float lvl2 = -smin(-cave-.5,1.-p.z,.1);\n  vec3 p2 = p;\n  p2.xy = asin(sin(p2.xy*3.))/3.;\n  p2.xy = abs(p2.xy);\n  if(p2.x < p2.y) p2.xy = p2.yx;\n  p2.z += asin(sin(iTime+stg*2.)*.9)*.5+2.;\n  w = smin(lvl2,lvl1,.1);\n  dts = linedist(p2,vec3(1,0,0), vec3(-1,0,0))-.02;\n  return min(w, dts);\n}\n\nvec3 norm(vec3 p ) {\n  mat3 k = mat3(p,p,p) - mat3(0.001);\n  return normalize(scene(p) - vec3(scene(k[0]), scene(k[1]), scene(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n  \n  stg = floor(iTime);\n\n\tvec3 cam = normalize(vec3(1.5,uv));\n  vec3 init = vec3(-15,0,0);\n  float roz = iTime*.1;\n  if (mod(stg, 2.) < 1.) roz *= -1.;\n  float roy = .8 + sin(stg)*.2;\n  cam = erot(cam,vec3(0,1,0),roy);\n  init = erot(init,vec3(0,1,0),roy);\n  cam = erot(cam,vec3(0,0,1),roz);\n  init = erot(init,vec3(0,0,1),roz);\n  vec3 p = init;\n  bool hit = false;\n  float dist;\n  float glo = 0.;\n  for (int i = 0; i < 150 && !hit; i++) {\n    dist = scene(p);\n    hit = dist*dist < 1e-6;\n    glo += dist/(.1+dts*500.)*10.;\n    p += cam*dist;\n  }\n  bool isgrd = (dts == dist);\n  vec3 n = norm(p);\n  vec3 r = reflect(cam,n);\n  float fres = 1. - abs(dot(cam,n))*.98;\n  r.xy = abs(r.xy);\n  n.xy = abs(n.xy);\n  float ao = smoothstep(-.5,.5,scene(p+n*.5));\n  float ro = smoothstep(-.2,.2,scene(p+r*.2));\n  float spec = length(sin(r*3.5)*.5+.5)/sqrt(3.);\n  float diff = length(sin(n*3.5)*.5+.5)/sqrt(3.);\n  spec = fres*(spec*.1 + pow(spec,8.)*10.) * ro;\n  vec3 col1 = vec3(1,0.4,0.1) * spec; \n  vec3 col2 = vec3(diff)*vec3(.01,.03,.1)*ao + spec*.05;\n  float aaa = sin(p.x*3.+p.y*2.+p.z*8.);\n  vec3 col = mix(col2, col1, smoothstep(-.94,-.96,aaa));\n  if (isgrd) col = vec3(.1,.2,.5)*6.;\n  col = mix(col, vec3(.01), smoothstep(0.,-7.,p.z));\n  col += glo*vec3(.1,.2,.5)+glo*glo;\n  fragColor.xyz = col;\n  fragColor *= 1. - dot(uv,uv);\n  fragColor = smoothstep(-.05,1.1,sqrt(fragColor) + vec4(0.08,0.02,0.1,0));\n  float dt = length(uv);\n  float f1 = step(0.,sin(stg*.7));\n  float f2 = step(0.,sin(stg*1.7));\n  float f3 = step(0.,sin(stg*2.7));\n  float circles = abs(abs(abs(dt-mix(.7,.5,f3))-.1*f1)-.03*f2)-.002;\n  fragColor = mix(vec4(0.2), fragColor,smoothstep(0.,fwidth(dt)*3.,circles));\n  fragColor = mix(vec4(1), fragColor,smoothstep(0.,fwidth(dt)*1.5,circles));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}