{
    "Shader": {
        "info": {
            "date": "1586843171",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "tsSyRy",
            "likes": 5,
            "name": "dice counter - golfed ( 254 ch )",
            "published": 3,
            "tags": [
                "2tweets",
                "digits",
                "short",
                "golf",
                "count"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 361
        },
        "renderpass": [
            {
                "code": "// Golfing https://shadertoy.com/view/wdBczG\n// See there for comments\n\n\n// --- new counting algorithm\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  R = iResolution.yy,\n          U = 3.*u/R  ,       F = floor(U),\n          D = 3.6*(U-F)-.3,   A = abs(D-1.5);\n    int t = int( iDate.w *pow(10.,F.x-4.*F.y) ) % 10;\n    max(A.x,A.y) < 1.5\n        ? O = min( vec4( int[](t-t%2,5,3,7,1)\n                            [ abs( int(D)%3+int(D.y)%3*3-4 ) ] < t ),\n                   1. - R.y/15.* ( length( fract(D)-.5 ) -.4 ))\n        : O; }                                                       /*\n\n\n\n\n\n// --- 264 chars\n\n#define mainImage(O,u)                                              \\\n    vec2  R = iResolution.yy,                                       \\\n          U = 3.*u/R  ,       F = floor(U),                         \\\n          D = 3.6*(U-F)-.3,   A = abs(D-1.5);                       \\\n    int t = int( iDate.w *pow(10.,F.x-4.*F.y) ) % 10;               \\\n    max(A.x,A.y) < 1.5                                              \\\n        ? O = min( vec4( int[](0,257,325,365,495)[t/2] + t%2 *16    \\\n                         >> int(D)%3+int(D.y)%3*3& 1 ),             \\\n                   1. - R.y/15.* ( length( fract(D)-.5 ) -.4 ))     \\\n        : O                                                        /*\n\n\n\n\n\n// --- 278 chars\n\n#define mainImage(O,u)                                              \\\n    vec2  R = iResolution.xy,                                       \\\n          U = 3.*u/R.y,       F = floor(U),                         \\\n          D = 3.6*(U-F)-.3,   A = abs(D-1.5);                       \\\n    ivec2 C = ivec2(D) % 3;                                         \\\n         max(A.x,A.y) < 1.5                                         \\\n    && ( int[](0,16,257,273,325,341,365,381,495,511)                \\\n              [ int( iDate.w *pow(10.,F.x-4.*F.y) ) % 10 ]          \\\n         >> C.x+3*C.y& 1                                            \\\n       ) > 0                                                        \\\n        ? O += min(1., 1. - R.y/15.* ( length( fract(D)-.5 ) -.4 )) \\\n        : O                                                        /*\n\n\n\n\n\n// --- 292 chars\n\n#define mainImage(O,u)                                              \\\n    vec2  R = iResolution.xy,                                       \\\n          U = 3.*u/R.y,                                             \\\n          F = floor(U),                                             \\\n          D = 3.6*(U-F)-.3, A = abs(D-1.5);                         \\\n    int t = int(iDate.w*pow(10.,F.x-4.*F.y)) % 10,                  \\\n        m = int[](0,16,257,273,325,341,365,381,495,511)[t];         \\\n    ivec2 C = ivec2(D) % 3;                                         \\\n    max(A.x,A.y) < 1.5 && ( m >> (C.x+3*C.y)  & 1 ) > 0             \\\n        ? O += min(1., 1. - R.y/15.* ( length( fract(D)-.5 ) -.4 )) \\\n        : O                                                        /*\n\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}