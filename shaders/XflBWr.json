{
    "Shader": {
        "info": {
            "date": "1723614921",
            "description": " https://www.shadertoy.com/view/DtGyWh https://www.shadertoy.com/view/lcsBzM",
            "flags": 0,
            "hasliked": 0,
            "id": "XflBWr",
            "likes": 3,
            "name": "caleidoscope fmR",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 80
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\nvec2 N(float angle) {\n  return vec2(sin(angle), cos(angle));\n}\n\nfloat oscillate(float minv, float maxv) {\n    return minv + (sin(iTime) + 1.0) * (maxv - minv) / 2.0;\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n     vec2 uv = (C.xy - iResolution.xy * .5) / iResolution.y;\n  uv *= 2.;\nuv*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n  vec3 col = vec3(0.0);\n  float snowflakeA = 5./6. * 3.1415;\n  vec2 snowflakeN = N(snowflakeA);\n  \n  float hatA = oscillate(1./2., 2./3.) * 3.1415;\n  vec2 hatN = N(hatA);\n     \n  uv.x = abs(uv.x);\n  uv.y += cos(snowflakeA) * 0.5;\n  uv -= snowflakeN*max(0., dot(uv-vec2(.5, 0), snowflakeN))*2.;\nfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n  uv*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n      uv*=ma;\n      uv*=mat2(cos(iTime*0.05),sin(iTime*0.05),-sin(iTime*0.05), cos(iTime*0.05));\n  uv.x += 0.5;\n  float scale = 1.;\n  for(int i = 0; i < 4; i++) {\n    uv *= 3.;\n      uv*=ma;\n    uv.x -= 1.5;\n    scale *= 3.;\n\n    uv.x = abs(uv.x);\n    uv.x -= 0.5;\n    uv -= hatN*min(0., dot(uv, hatN))*2.;\n  }\n\n  float d = length(uv - vec2(clamp(uv.x, -1., 1.), 0.));\n  col += smoothstep(2./iResolution.y, 0.0, d/scale);\n  \n  uv /= scale;\n  col += texture(iChannel0, uv*2.-iTime*.03).rgb;\n    vec3 p,q,r=iResolution,\n    d2=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p=g*d2;\n        p.z+=iTime*6.5;\n        a=10.;\n        p=mod(p-a,a*2.)-a;\n        s=6.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            p.y<p.x?p=p.zyx:p;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 )*col;\n         }\n     \n         g+=e=length(p.yx)/s;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}