{
    "Shader": {
        "info": {
            "date": "1722874931",
            "description": "//2.3\n//Frecuencia y tiempo.\n//Taller de Livecoding con visuales en GLSL \n",
            "flags": 0,
            "hasliked": 0,
            "id": "lfjcRd",
            "likes": 0,
            "name": "Osciladores 2.3",
            "published": 3,
            "tags": [
                "tutorial",
                "sin",
                "cos",
                "shaders",
                "shaders",
                "livecoding",
                "functions",
                "taller",
                "tutoriales",
                "osciladores"
            ],
            "usePreview": 0,
            "username": "jpupper",
            "viewed": 34
        },
        "renderpass": [
            {
                "code": "//2.2\n//Intro senoidales\n//Taller de Livecoding con visuales en GLSL \n\n\n//COMO EL NUMERO PI NO VIENE INCLUDO EN GLSL LO DEFINIMOS MANUALMENTE.\n//Utilizamos la estructura #define para definir constantes en el programa.\n#define PI 3.14159265359\n#define resolution iResolution\n#define time iTime\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = gl_FragCoord.xy / resolution.xy; //Obtengo las coordenadas UV(coordenadas cartesianas.\n   \n    //Si a la función senoidal le sumamos una variable. veremos que oscilara en relación en esa variable. \n    //En este caso si le colocamos uv.x va a ir haciendo un constante degrade : \n    \n    \n    //Si a la frecuencia la multiplicamos por PI obtendremos exactamente ese numero de \"lineas\".\n    float freq = 10.*PI; \n    \n    float forma = sin(time+uv.x*freq)*0.5+0.5; //Degrade constante en X\n    //float forma = sin(time+uv.y*freq)*0.5+0.5; //Degrade constante en Y\n    //float forma = sin(time+uv.y*freq+uv.x*freq)*0.5+0.5; //Degrade constante en X+Y\n    //float forma = sin(time+uv.y*freq+uv.x*freq); //Así se ve cuando una oscilación es entre -1 y 1\n          \n    fragColor = vec4(vec3(forma),1.0); \n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}