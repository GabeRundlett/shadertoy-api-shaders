{
    "Shader": {
        "info": {
            "date": "1614043700",
            "description": "A fox\n\nMade using blackle https://www.shadertoy.com/view/wtVyWK\nAnd this wonderful tutorial https://www.youtube.com/watch?v=8pwXpfi-0bU\n\nUsing Ida Faber model - CC Attribution\nhttps://sketchfab.com/3d-models/stylized-fox-92c2a35e54664974b8564c674cc712da\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3lyfzw",
            "likes": 31,
            "name": "Neural Fox",
            "published": 3,
            "tags": [
                "neural",
                "fox",
                "neuralnetworks"
            ],
            "usePreview": 0,
            "username": "PauloFalcao",
            "viewed": 760
        },
        "renderpass": [
            {
                "code": "//CC0 1.0 Universal https://creativecommons.org/publicdomain/zero/1.0/\n// Model trained by PauloFalcao\n//\n// Made using blackle https://www.shadertoy.com/view/wtVyWK\n// And this wonderful tutorial https://www.youtube.com/watch?v=8pwXpfi-0bU\n//\n// Using Ida Faber model - CC Attribution - https://creativecommons.org/licenses/by/4.0/\n// https://sketchfab.com/3d-models/stylized-fox-92c2a35e54664974b8564c674cc712da\n//\n\n\nvec3 erot(vec3 p, vec3 ax, float ro) {\n    return mix(dot(p,ax)*ax,p,cos(ro))+sin(ro)*cross(ax,p);\n}\n\nfloat scene(vec3 p) {\n    //sdf is undefined outside the unit sphere, uncomment to witness the abominations\n    if (length(p) > 1.) {\n        return length(p)-.8;\n    }\n    p.y=-sqrt(p.y*p.y+0.001)+0.01;\n    //neural networks can be really compact... when they want to be\nvec4 f0_0=sin(p.y*vec4(1.627,-3.273,.822,-1.929)+p.z*vec4(4.114,.716,-3.074,2.185)+p.x*vec4(2.235,.937,3.908,-1.072)+vec4(6.915,3.461,-1.359,1.899));\nvec4 f0_1=sin(p.y*vec4(-.001,-3.255,1.831,.966)+p.z*vec4(-3.328,.890,1.475,-.323)+p.x*vec4(.290,-1.169,-4.054,3.146)+vec4(-4.517,-2.674,6.099,.070));\nvec4 f0_2=sin(p.y*vec4(3.113,-1.089,2.397,-.459)+p.z*vec4(-4.309,1.202,1.134,2.052)+p.x*vec4(-1.018,.550,-3.955,4.027)+vec4(-7.136,2.863,-1.640,-5.590));\nvec4 f0_3=sin(p.y*vec4(.343,1.509,4.401,-1.962)+p.z*vec4(1.198,1.852,2.207,-4.658)+p.x*vec4(2.067,.056,-.156,-.631)+vec4(-4.943,.051,7.095,3.128));\nvec4 f1_0=sin(mat4(.234,.264,-.181,.015,1.018,-.023,.417,-.338,.527,-.030,.056,-.005,-.843,.446,-.139,-.079)*f0_0+\n    mat4(-.512,.346,-.264,.380,.135,.249,.118,-.188,-.110,.210,.101,-.157,.126,.259,.262,.446)*f0_1+\n    mat4(.595,.318,.262,-.279,.802,.891,-.050,-.347,.131,-.369,.420,-.025,-.217,-.197,.152,.931)*f0_2+\n    mat4(.522,.906,-.530,.246,.685,.684,-.106,.175,.437,.507,-.459,.127,.342,-.398,-.243,.008)*f0_3+\n    vec4(.376,-.814,1.500,-1.007))/1.0+f0_0;\nvec4 f1_1=sin(mat4(.124,.489,-.159,-.094,.099,.611,-.257,-.614,-.108,.309,-.121,-.389,.049,-.606,.030,-.723)*f0_0+\n    mat4(.511,.456,-.645,-1.008,.009,-.461,-.198,-.754,.978,.413,-.641,-.412,-1.068,-.308,.291,-.170)*f0_1+\n    mat4(.428,-.220,-.163,-.356,.744,.548,.221,.563,.242,-.214,-.224,-.567,.391,.045,-.061,-.186)*f0_2+\n    mat4(-.001,-.252,.747,-.435,.539,.003,-.305,-.643,-.261,.164,-.336,.295,.383,-.395,-.136,-.008)*f0_3+\n    vec4(-1.007,-1.304,1.076,1.194))/1.0+f0_1;\nvec4 f1_2=sin(mat4(-.502,.308,-.174,.023,-.560,-.534,.624,-.555,.309,.630,-.122,.310,.368,.878,-.206,-.350)*f0_0+\n    mat4(.684,.334,-.702,.420,-.698,.960,-.053,-.676,-.272,.365,-.074,.407,-.375,.202,.532,-.207)*f0_1+\n    mat4(-.116,-.269,.153,-.453,-.530,.488,-.724,.065,.405,.667,-.642,.043,-.103,.430,-.562,.346)*f0_2+\n    mat4(.472,-.026,-.433,.070,-.210,-.057,-.253,.310,-.344,.047,.386,.552,.246,-.111,.331,.350)*f0_3+\n    vec4(-.725,-1.197,.825,-3.455))/1.0+f0_2;\nvec4 f1_3=sin(mat4(.027,.173,.253,-.822,-.478,.458,.101,.045,.025,.248,.759,.184,-.317,-.014,-.077,-.353)*f0_0+\n    mat4(-.283,-.201,.219,-.248,-.571,-.458,.401,-.226,.432,.245,-.160,-.065,-.421,-1.315,-.569,-.520)*f0_1+\n    mat4(.313,-.258,.291,-.284,-.732,.295,-.087,-.441,.836,-.701,.566,.889,-.116,-.252,-.542,-.396)*f0_2+\n    mat4(-.381,-.907,.516,.431,-.273,.257,.027,-.179,-.214,.077,-.130,-.282,-.368,-.270,.618,-.041)*f0_3+\n    vec4(2.580,-.950,1.416,.227))/1.0+f0_3;\nvec4 f2_0=sin(mat4(.288,.277,.179,.290,-.968,-1.492,.495,-.421,.153,-.177,.580,-.388,.971,-.335,.007,.032)*f1_0+\n    mat4(-.194,-.137,.202,.157,-.160,1.025,-.550,-.053,.485,.030,-.537,.065,.021,-.384,-.109,-.452)*f1_1+\n    mat4(-.748,.241,.386,-.441,-.620,-.869,.559,.681,.367,.256,-.459,-1.047,.260,.241,-.793,.494)*f1_2+\n    mat4(-.958,-.093,-.110,-.074,-.260,-.856,.521,.613,-.562,.079,.238,.056,-.413,-1.011,.118,-.104)*f1_3+\n    vec4(.980,1.564,-2.935,-.589))/1.4+f1_0;\nvec4 f2_1=sin(mat4(.181,.166,-.082,.469,.474,.703,.969,.559,.998,-.016,.193,-.363,.452,.152,.543,-.394)*f1_0+\n    mat4(-.711,-.586,.015,.459,.404,.538,.575,-.249,-.562,-.484,.549,.673,-1.160,.144,-.010,-.093)*f1_1+\n    mat4(.663,.424,.164,.089,1.168,.000,.636,-.309,.088,-.779,.352,-.722,-1.071,-.059,-.089,.310)*f1_2+\n    mat4(-.156,-.515,.176,-.125,.034,.431,.367,.228,.394,.263,.039,.195,1.077,.460,-.456,-.031)*f1_3+\n    vec4(.495,.756,-2.986,-1.239))/1.4+f1_1;\nvec4 f2_2=sin(mat4(-.586,-.569,-.492,-.407,-.224,-.624,.373,-.080,-.216,.279,.704,.072,-.780,-.607,.575,.568)*f1_0+\n    mat4(.070,-.760,.980,.566,-.124,-.326,.463,.559,-.297,.161,-.449,-.236,-.369,-.591,-.190,-.548)*f1_1+\n    mat4(.054,.276,-.894,-.120,.795,1.111,-.473,.031,.387,.292,.974,1.024,.150,.184,.253,-.287)*f1_2+\n    mat4(.435,1.658,.294,-.403,-.377,.175,-.493,.204,-.499,-.614,.119,-.557,-.799,-.168,-.481,-.192)*f1_3+\n    vec4(-2.130,-2.233,-.605,-3.251))/1.4+f1_2;\nvec4 f2_3=sin(mat4(.884,.369,.064,-.009,.434,.437,-.618,.117,.046,-.601,-.376,-.182,1.130,-.913,-.029,.602)*f1_0+\n    mat4(.314,-1.064,.861,-.572,-.633,.111,-.122,-.179,.277,-.615,-.069,.678,.109,.024,-1.124,-.553)*f1_1+\n    mat4(.243,.009,.461,.333,-.624,-.670,.328,.350,1.132,-.523,-.099,.402,.183,.245,-.232,.186)*f1_2+\n    mat4(-.057,.076,.660,-.139,.729,.450,.109,-.177,.088,-.111,.020,-.546,-.487,-1.286,.100,.117)*f1_3+\n    vec4(.529,-2.910,3.311,2.936))/1.4+f1_3;\nreturn dot(f2_0,vec4(.021,-.057,.076,-.038))+\n    dot(f2_1,vec4(-.022,-.081,.064,-.063))+\n    dot(f2_2,vec4(-.049,-.057,.048,.076))+\n    dot(f2_3,vec4(.014,-.049,.060,.071))+\n    -0.010;\n}\n\nvec3 norm(vec3 p) {\n    mat3 k = mat3(p,p,p)-mat3(0.001);\n    return normalize(scene(p) - vec3(scene(k[0]),scene(k[1]),scene(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = (iMouse.xy-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 cam = normalize(vec3(1.5,uv));\n    vec3 init = vec3(-3.,0,0);\n    \n    float yrot = 0.5;\n    float zrot = iTime*.2;\n    if (iMouse.z > 0.) {\n        yrot += -4.*mouse.y;\n        zrot = 4.*mouse.x;\n    }\n    cam = erot(cam, vec3(0,1,0), yrot);\n    init = erot(init, vec3(0,1,0), yrot);\n    cam = erot(cam, vec3(0,0,1), zrot);\n    init = erot(init, vec3(0,0,1), zrot);\n    \n    vec3 p = init;\n    bool hit = false;\n    for (int i = 0; i < 150 && !hit; i++) {\n        float dist = scene(p);\n        hit = dist*dist < 1e-6;\n        p+=dist*cam;\n        if (distance(p,init)>5.) break;\n    }\n    vec3 n = norm(p);\n    vec3 r = reflect(cam,n);\n    //don't ask how I stumbled on this texture\n    vec3 nz = p - erot(p, vec3(1), 2.) + erot(p, vec3(1), 4.);\n    float spec = length(sin(r*3.5+sin(nz*120.)*.15)*.4+.6)/sqrt(3.);\n    spec *= smoothstep(-.3,.2,scene(p+r*.2));\n    vec3 col = vec3(.1,.1,.12)*spec + pow(spec,8.);\n    float bgdot = length(sin(cam*8.)*.4+.6)/2.;\n    vec3 bg = vec3(.1,.1,.11) * bgdot + pow(bgdot, 10.);\n    fragColor.xyz = hit ? col : bg;\n    fragColor = smoothstep(-.02,1.05,sqrt(fragColor)) * (1.- dot(uv,uv)*.5);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}