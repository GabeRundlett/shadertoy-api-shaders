{
    "Shader": {
        "info": {
            "date": "1702824599",
            "description": "Some Experimentation with the purple coridor shader code.\nWork in progress!!!",
            "flags": 0,
            "hasliked": 0,
            "id": "XflGR4",
            "likes": 2,
            "name": "Dancin Seaweet?",
            "published": 3,
            "tags": [
                "abstract",
                "vortex",
                "seaweed"
            ],
            "usePreview": 0,
            "username": "KingJ",
            "viewed": 125
        },
        "renderpass": [
            {
                "code": "vec3 seaweetColor = vec3(255., 53., 94.)/vec3(256.);\nvec3 oceanColor = vec3(79., 66., 181.)/vec3(255.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy/iResolution.xy-vec2(.5);\n    uv.y *= iResolution.y/iResolution.x;\n    //uv *= 3.;\n    \n    float dist = length(uv);\n    float angle = atan(uv.y,uv.x);\n    \n    vec2 ruv = uv;\n    uv = vec2(cos(angle+dist*3.),dist+(iTime*0.2));\n    \n    int lineAmount = 9;\n    float lineEndDist = .3;\n    float lineMaxWidth = 1.;\n    float lineSmoothWidth = .3;\n    float centerRotations = 30.;\n    float borderRotations = 10.;\n    float whobles = 10.;\n    \n    float rotations = mix(centerRotations, borderRotations, dist/lineEndDist);\n    \n    vec3 lines = vec3(smoothstep(lineMaxWidth+lineSmoothWidth, lineMaxWidth, .5*cos(angle * float(lineAmount) + cos(sin(iTime*1.5)*rotations) + iTime*borderRotations + sin(iTime*.9)*rotations)+.5 + dist/lineEndDist));\n    vec3 color = mix(oceanColor, seaweetColor, lines);\n\tfragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}