{
    "Shader": {
        "info": {
            "date": "1512833376",
            "description": "Click Screen Water Simulation!\nAdopt my:\n[url]https://github.com/TNWX-Z/ClickScreenWaterWaveBufferPro[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "4tXBRs",
            "likes": 18,
            "name": "Water Simulation",
            "published": 3,
            "tags": [
                "simulation",
                "water",
                "grad"
            ],
            "usePreview": 1,
            "username": "834144373",
            "viewed": 2154
        },
        "renderpass": [
            {
                "code": "/*\n\tWater Simulation.glsl by 834144373\n\t2017/12/9\n----------------------------------------------\n\t1.Buffer A is 2D Water simulation buffer\t\n\t2.Image is calculate grad.\n\n\tAdopt my:\n    https://github.com/TNWX-Z/ClickScreenWaterWaveBufferPro\n*/\n\n/*\n\tAnd if you want to know more about fluid simulation\n\tthe below can help you:\n\t\n\n\thttps://github.com/TNWX-Z/EnhanceSmokeSimulationPro\n\n\tPS: Enhance Smoke Simulation Pro(ESSP) is not surpport on ShaderToy,\n\t\tand ESSP with new color transform technology I called it \"Magic Color\".\n*/\n\n#define time iTime\n#define _BufferA iChannel0 \n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 q = U/iResolution.xy;\n    vec3 e = vec3(1./iResolution.xy,0.0);\n    float p10 = texture(_BufferA, q-e.zy).x;\n    float p01 = texture(_BufferA, q-e.xz).x;\n    float p21 = texture(_BufferA, q+e.xz).x;\n    float p12 = texture(_BufferA, q+e.zy).x;\n\n    vec3 grad = normalize(vec3(p21 - p01,p12 - p10, 1.));\n\n    //To see normal\n    C = (grad.xyzz+1.)/2.;\n \t//To see Water   \n    C = texture(iChannel1,q + grad.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define time iTime\n#define _BufferA iChannel0 \n\nfloat GetVelocity(sampler2D _Tex,vec2 p){\n\treturn texture(_Tex, p).x;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 iScreenSize = iResolution.xy;\n    vec3 e = vec3(vec2(1.)/iScreenSize.xy,0.);\n    vec2 q = gl_FragCoord.xy/iScreenSize.xy;\n    vec4 c = texture(_BufferA, q);\n    float p00 = c.y;\n    float p0_1 = GetVelocity(_BufferA, q-e.zy);\n    float p_10 = GetVelocity(_BufferA, q-e.xz);\n    float p10 = GetVelocity(_BufferA, q+e.xz);\n    float p01 = GetVelocity(_BufferA, q+e.zy);\n\n    float p11 = GetVelocity(_BufferA, q+e.xy);\n    float p1_1 = GetVelocity(_BufferA, q+vec2(e.x,-e.y));\n    float p_1_1 = GetVelocity(_BufferA, q-e.xy);\n    float p_11 = GetVelocity(_BufferA, q+vec2(-e.x,e.y));\n\n    float d = 0.;\n    if (iMouse.w > 0.) {\n        d = length(iMouse.xy - U);\n        d = smoothstep(5.5,0.5,d);\n    }\n    d += -p00 + (p0_1 + p_10 + p10 + p01 + (p11+p1_1+p_1_1+p_11))*.25;\n    d *= 0.95;\n\t\t\t\t\n    C = vec4(d,c.xy,0.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}