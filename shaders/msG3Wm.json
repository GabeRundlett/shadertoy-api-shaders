{
    "Shader": {
        "info": {
            "date": "1678650206",
            "description": "interpolation",
            "flags": 0,
            "hasliked": 0,
            "id": "msG3Wm",
            "likes": 0,
            "name": "another interpolation",
            "published": 3,
            "tags": [
                "interpolation"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 172
        },
        "renderpass": [
            {
                "code": "float f_n_by_o(vec2 o){\n    o.x += o.x*0.1;\n    float n =  sin(\n        o.x * o.y + 1.234 * 3.13347\n    ) * 1.2341 *o.x + 12.3414*o.y;\n    return fract((fract(n)+o.x*o.x+o.y*o.y));\n}\nfloat f_n_noise_interpolated(\n    vec2 o\n){\n    vec2 o_xp0yp0 = o + vec2(0.,0.);\n    vec2 o_xp0yp1 = o + vec2(0.,1.);\n    vec2 o_xp1yp0 = o + vec2(1.,0.);\n    vec2 o_xp1yp1 = o + vec2(1.,1.);\n\n    float n_xp0yp0 = f_n_by_o(floor(o_xp0yp0));\n    float n_xp0yp1 = f_n_by_o(floor(o_xp0yp1));\n    float n_xp1yp0 = f_n_by_o(floor(o_xp1yp0));\n    float n_xp1yp1 = f_n_by_o(floor(o_xp1yp1));\n\n    vec2 o_fract = fract(o);\n    float n1 = \n        (1.-o_fract.x) * n_xp0yp0\n        + o_fract.x * n_xp1yp0;\n    float n2 = \n        (1.-o_fract.x) * n_xp0yp1\n        + o_fract.x * n_xp1yp1;\n    float n3 = \n        (1.-o_fract.y) * n1\n        + o_fract.y * n2;\n    \n    //float n_1 = mix(n_xp0yp0, n_xp1yp0, (o_fract.x));\n    //float n_2 = mix(n_xp0yp1, n_xp1yp1, (o_fract.x));\n    //float n_3 = mix(n_1, n_2, (o_fract.y));\n    return n3; \n}\nfloat f_n_noise_interpolated_stacked(\n    vec2 o, \n    float n_its, \n    float n_it_factor_freq,\n    float n_it_factor_amp\n){\n    float n_freq = 1.;\n    float n_amp = 1.;\n    float n_sum = 0.;\n    float n_factor_amp_sum = 0.;\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n        n_freq *= n_it_factor_freq; \n        n_amp *= n_it_factor_amp;\n        n_factor_amp_sum += n_amp;\n        n_sum += f_n_noise_interpolated(o*n_freq)*n_amp;\n    }\n    return n_sum/n_factor_amp_sum;\n}\nfloat f_n_noise_interpolated_blurred(vec2 o_fc){\n    vec2 o_scl_krn = vec2(3.);\n    float n_sum = 0.;\n    vec2 o_scl_krn_half = floor(o_scl_krn/2.);\n    for(float n_x = 0.; n_x < o_scl_krn.x; n_x+=1.){\n        for(float n_y = 0.; n_y < o_scl_krn.x; n_y+=1.){\n            vec2 o_trn = vec2(\n                n_x -o_scl_krn_half.x,\n                n_y -o_scl_krn_half.y \n            );\n            n_sum += f_n_noise_interpolated(\n                o_fc+o_trn\n            );\n        }   \n    }\n    return n_sum / (o_scl_krn.x * o_scl_krn.y);\n}\nfloat f_n_noise_interpolated_blurred_stacked(\n    vec2 o, \n    float n_its, \n    float n_it_factor_freq,\n    float n_it_factor_amp\n){\n    float n_freq = 1.;\n    float n_amp = 1.;\n    float n_sum = 0.;\n    float n_factor_amp_sum = 0.;\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n        n_freq *= n_it_factor_freq; \n        n_amp *= n_it_factor_amp;\n        n_factor_amp_sum += n_amp;\n        n_sum += f_n_noise_interpolated_blurred(o*n_freq)*n_amp;\n    }\n    return n_sum/n_factor_amp_sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_fc = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    fragColor = vec4(1.0);\n\n    float n_5 = f_n_noise_interpolated(o_fc*5.);\n    float n_10 = f_n_noise_interpolated(o_fc*10.);\n    float n_20 = f_n_noise_interpolated(o_fc*20.);\n    float n_200 = f_n_noise_interpolated(o_fc*200.);\n\n    float n_sum = \n        n_5 /4. \n        + n_10 / 4. \n        + n_20 / 4.;\n        + n_200 / 4.;\n\n\n    float n_11 = f_n_noise_interpolated(o_fc*11.) * .5;\n    float n_22 = f_n_noise_interpolated(o_fc*22.) * .25;\n    float n_44 = f_n_noise_interpolated(o_fc*44.) * .125;\n    float n_88 = f_n_noise_interpolated(o_fc*88.) * 0.0625;\n\n    float n_s = n_11+n_22+n_44+n_88;\n\n    fragColor = vec4(\n        n_s\n    );\n\n\n    float n_noise_interpolated_stacked = f_n_noise_interpolated_stacked(\n        o_fc, \n        20., \n        6., \n        0.5\n    );\n    float n_fac = 222.;\n    float n_noise_interpolated_blurred = f_n_noise_interpolated_blurred(o_fc*n_fac);\n    float n_noise_interpolated = f_n_noise_interpolated(o_fc*n_fac);\n    fragColor = vec4(\n        n_noise_interpolated_blurred \n        // n_noise_interpolated\n    );\n\n    float n_noise_interpolated_stacked_10 = f_n_noise_interpolated_stacked(\n        o_fc, \n        10.,\n        10., \n        0.5\n    );\n    float n_noise_interpolated_blurred_stacked_10 = f_n_noise_interpolated_blurred_stacked(\n        o_fc, \n        10.,\n        10., \n        0.5\n    );\n\n    fragColor = vec4(\n        n_noise_interpolated_blurred_stacked_10 \n        // n_noise_interpolated_stacked_10\n    );\n    if(o_fc.x > 0.){\n\n        fragColor = vec4(\n            // n_noise_interpolated_blurred_stacked_10 \n            n_noise_interpolated_stacked_10\n        );\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}