{
    "Shader": {
        "info": {
            "date": "1514797252",
            "description": "Weight of the World (ATITC)!\nWebgl 2.0!                                     wow! 2018.1.1 !\n834244373's Audio Player!",
            "flags": 96,
            "hasliked": 0,
            "id": "lt2fRz",
            "likes": 35,
            "name": "Weight Of The World(ATITC)",
            "published": 3,
            "tags": [
                "sound",
                "audio",
                "ui",
                "unicode",
                "2b",
                "player"
            ],
            "usePreview": 0,
            "username": "834144373",
            "viewed": 1700
        },
        "renderpass": [
            {
                "code": "/********************************************\n    Weight Of The World.glsl webgl2.0 Created by 834144373\n    2018.1.1\n\tPS：834144373 is TNWX or 恬纳微晰 or 祝元洪\n*********************************************/\n/*\n\tThis Cover Texture Compression technology is used by ATC (ATITC) \n\tAnd it's 4bpp!\n\t1. BufA and BufB is fast store full 32bit float into 16bit half-float buffer,\n\t2. BufC is ATC Decoder,\n\t3. Image is 834144373's Audio Player.\n\nIf you want to know more about GPU Texture Compression,\n\t\tthe below Texture Compression Can help you.:)\n------------------------------------------------------------------------\nDXT1           4bpp : https://www.shadertoy.com/view/MtBfRR by 834144373\nBC4            4bpp : https://www.shadertoy.com/view/Xlffz2 by 834144373\nShaderToyTC I  1bpp : https://www.shadertoy.com/view/MtyGzV by 834144373\nPVRTC          4bpp : https://www.shadertoy.com/view/ltV3zD by 834144373\nYUV Special    2bpp : https://www.shadertoy.com/view/XlGGzh by 834144373\n...more Confidentiality Texture Compression will be coming soon and GIF!!!\n------------------------------------------------------------------------\n\nNode : Yes! You didn't read the wrong words!\n       more Confidentiality Texture Compression will be coming soon!!!\n\t   Crack Crack and Crack!!!\n*/\n//---------------------------Change-----------------------\n#define Cover_Color_Version 2. //1.,2.or 3.  (I like version 2.)\n//\n#define R iResolution.xy\n#define A_time iChannelTime[2]\n#define d_ddxddy length(1./R*(R.x/R.y)*1.5) //Perfect Pixel Edge\n#define PI 3.14159265354\nfloat box(vec2 p,vec2 size){\n\treturn length(max(abs(p)-size,0.));\n}\nfloat sphere(vec2 p){\n\treturn length(p);\n}\nfloat line(vec2 p,vec2 a,vec2 b)\n{\n    vec2 pos = p - a;\n    vec2 ab = b - a; // ->ab\n    return length(pos-ab*clamp(dot(pos,ab)/dot(ab,ab),0.,1.));\n}\n//fast-tiny Bezier2D https://www.shadertoy.com/view/MsKGDV from 834144373\n#define M(k,t) (k*mat2(t.y,-t.x,0,0)).xx,\nfloat bezier(vec2 p,vec2 A,vec2 B,vec2 C){\n\tA -= p,B -= p,C -= p;\n    vec2 x = .5*M(C,A) y=M(B,C) z=M(A,B) D=B-C,\n    u = x*(A-C)+y*(A-=B)+z*D;\n    u.x = -u.x;\n    A -= D;\n    x = clamp(.5*M((C+(y*z-x*x)*u.yx/dot(u,u)),A)  x-x, y+=x+x+z ) / y;\n    return length(C + x * (D+D + x * A));\n}\n\nfloat GetAlpha(float d){\n\treturn smoothstep(d_ddxddy,0.,d);\n}\nfloat Cover_Size = 600.;\nvec2 Cover_Offset = vec2(260.,340.);\nfloat Cover_Radius = 128.;\nfloat Texture_Size = 128.;\n//\nvec2 Rotation(vec2 uv,float time){\n\tmat2 rot = mat2(cos(time-.78*vec4(0,6,2,0)));\n    return uv*rot;\n}\nvec3 GetBackGround(vec2 uv){\n    //Fast Blur With Mipmap For BackGround\n\tvec3 blur_tex = texture(iChannel0,uv/(R/Texture_Size),4.2).rgb;\n     for(float i = 0.;i<12. ;i++){\n\t\t  blur_tex += texture(iChannel0,uv/(R/Texture_Size)-i/R,mod(i,6.)+6.).rgb;\n    }\n    blur_tex /= 11.*1.3;\n    return blur_tex;\n}\nvec3 GetCoverTex(vec2 uv){\n\tvec3 cover = texture(iChannel0,uv/R.xy/2./(R.y/Cover_Size)).rgb;\n    cover *= 1.24;\n    //color version 1\n    if(Cover_Color_Version == 1.){\n    \tcover = pow(cover,vec3(1.15,1.2,1.1));\n    \tcover = pow(cover,vec3(1.15,1.1,1.3));\n    }\n    else if(Cover_Color_Version == 2.){\n\t    cover = pow(cover,vec3(1.5,1.3,1.1));\n    }\n    else if(Cover_Color_Version == 3.){\n    \tcover = pow(cover,vec3(1.2,1.3,1.13));\n    }\n    return cover;\n}\nvec3 GetCover(vec2 U){\n\tvec2 uv = U/R;    \n    U -= Cover_Offset*(R.y/Cover_Size);\n    U = Rotation(U,iTime*0.15);\n\tU += Cover_Radius*(R.y/Cover_Size);\n    \n    vec2 uv_ring = (U+U)/R.y-(Texture_Size*2./Cover_Size);\n    float d_Cover = sphere(uv_ring);\n    float c = GetAlpha(d_Cover- Texture_Size*2./Cover_Size);\n    \n    float ring_black = GetAlpha(d_Cover- 270./Cover_Size);\n    float ring_disk = GetAlpha(d_Cover- 375./Cover_Size);\n    float ring_white = GetAlpha(d_Cover- 390./Cover_Size);\n    float ring_disk_anisotropic  = smoothstep(0.68,0.9,0.386+abs(atan(uv_ring.y,abs(uv_ring.x))/PI));\n    \n    vec3 BackGround_tex = GetBackGround(uv);\n    vec3 Cover_tex = GetCoverTex(U);\n\n    BackGround_tex = mix(BackGround_tex,vec3(1.,1.,1.),ring_white*0.1);\n    BackGround_tex = mix(BackGround_tex,(1.-ring_black)*ring_disk_anisotropic/7.5+vec3(sin(d_Cover*400.+0.1)/70.),ring_disk*0.97);\n    BackGround_tex = mix(BackGround_tex,vec3(0.,0.,0.),ring_black*5.);\n\n    Cover_tex = mix(Cover_tex,vec3(0.1)+BackGround_tex,1.-c);\n    return Cover_tex;\n}\n\nvec2 Tin_Offset = vec2(260.,600.);\nvec4 GetTin(vec2 U){\n    vec2 uv = U/R;\n    U -= Tin_Offset*(R.y/Cover_Size);\n\tU += Cover_Radius*(R.y/Cover_Size);\n    \n    vec2 uv_Tin = (U+U)/R.y-(Texture_Size*2./Cover_Size);\n\tfloat d_Tin = sphere(uv_Tin);\n    float l_Tin = line(uv_Tin,vec2(3.,-10.)/Cover_Size,vec2(72.2,-170.)/Cover_Size);\n  \t//Bezier!!!!!\n    float b_Tin = bezier(uv_Tin,vec2(72.62,-170.)/Cover_Size,vec2(85.6,-199.)/Cover_Size,vec2(123,-226.)/Cover_Size);\n    uv_Tin = Rotation(uv_Tin,0.52);\n    float box_Tin_1 = box(uv_Tin-vec2(260.,-134.)/Cover_Size,vec2(27.,5.)/Cover_Size);\n    float line_Tin_1_1 = line(uv_Tin,vec2(215.,-133.)/Cover_Size,vec2(240.,-134.)/Cover_Size);\n    float box_Tin_2 = box(uv_Tin-vec2(315.,-134.)/Cover_Size,vec2(15.,15.)/Cover_Size);\n    float line_Tin_2_1 = line(uv_Tin,vec2(306.,-146.)/Cover_Size,vec2(325.,-146.)/Cover_Size);\n    float line_Tin_2_2 = line(uv_Tin,vec2(306.,-122.)/Cover_Size,vec2(325.,-122.)/Cover_Size);\n\n    \n    float ring_white = GetAlpha(d_Tin- 23./Cover_Size);\n    float ring_black = GetAlpha(d_Tin- 8./Cover_Size);\n    float ring_white_tiny = GetAlpha(d_Tin- 35./Cover_Size);\n    float line_white = GetAlpha(l_Tin- 7./Cover_Size);\n    float bezier_white = GetAlpha(b_Tin- 7./Cover_Size);\n\tfloat line_white_1_1 = GetAlpha(line_Tin_1_1- 1./Cover_Size);\n\tfloat box_white_1 = GetAlpha(box_Tin_1- 7./Cover_Size);\n\tfloat box_white_2 = GetAlpha(box_Tin_2- 7./Cover_Size);\n    float line_white_2_1 = GetAlpha(line_Tin_2_1- 1./Cover_Size);\n    float line_white_2_2 = GetAlpha(line_Tin_2_2- 1./Cover_Size);\n    \n    vec3 tin_col = vec3(0.);\n    tin_col = mix(tin_col,vec3(1.,1.,1.),line_white);\n    tin_col = mix(tin_col,vec3(0.65,0.65,0.65),ring_white_tiny);\n    tin_col = mix(tin_col,vec3(1.,1.,1.),ring_white);\n    tin_col = mix(tin_col,vec3(0.45,0.45,0.45),ring_black);\n    tin_col = mix(tin_col,vec3(1.,1.,1.),bezier_white);\n    tin_col = mix(tin_col,vec3(0.3,0.3,0.3),line_white_1_1);\n    tin_col = mix(tin_col,vec3(1.,1.,1.),box_white_1);\n    tin_col = mix(tin_col,vec3(1.,1.,1.),box_white_2);\n    tin_col = mix(tin_col,vec3(0.4,0.4,0.4),line_white_2_1);\n    tin_col = mix(tin_col,vec3(0.4,0.4,0.4),line_white_2_2);\n\n    float alpha = ring_black + ring_white + line_white + ring_white_tiny*0.2\n        + bezier_white + box_white_1 + box_white_1 + box_white_2\n        + line_white_2_1 + line_white_2_2;\n    return vec4(tin_col,alpha);\n}\n\nfloat GetFrontAlpha(vec2 uv,vec2 index){\n    //uv.x *= R.x/R.y;\n    if(any(bvec4(greaterThanEqual(uv,vec2(0.0625)),lessThanEqual(uv,vec2(0.)))))\n\t    return 0.;\n    vec2 d = texture(iChannel1,uv+index*0.0625).wx;\n\t//return smoothstep(0.52,0.47,d.x)*0.5+smoothstep(0.,1.0,d.y)*0.5;\n\treturn d.y;\n}\n\nfloat GetTime(float second,float level){\n\tfloat b = second;//秒\n    if(level >= 1.){ //十秒\n    \tsecond /= 10.;\n        b = mod(second,6.);\n    }\n    if(level >= 2.){ //分\n    \tsecond /= 6.;\n        b = second;\n    }\n    if(level >= 3.){ //十分\n    \tsecond /= 10.;\n        b = mod(second,6.);\n    }\n    if(level >= 4.){ //时\n\t\tsecond /= 6.;\n        b = second;\n    }\n    return floor(mod(b,10.));\n}\n\nvec4 GetPlayerUI(vec2 U){\n    vec2 uv = U/R*1.4 - vec2(70.,40.)/Cover_Size;\n\t\n    vec2 offset = vec2(-10.,2.)/Cover_Size;\n    float ui_play = GetFrontAlpha(uv-offset,vec2(6.,15.));\n    float ui_left = GetFrontAlpha(uv-offset-vec2(-0.07,0.),vec2(1.,15.));\n    float ui_right = GetFrontAlpha(uv-offset-vec2( 0.07,0.),vec2(7.,15.));\n\t//float ui_rest = GetFrontAlpha(uv-offset-vec2(-0.14,0.),vec2(4.,15.));\n    float ui_panel = GetAlpha(uv.y-55./Cover_Size);\n \tfloat ui_panel_1 = GetAlpha(uv.y+20./Cover_Size);\n    // range at 0-500\n    float t = floor(500.* fract(A_time/344.));\n\tvec2 uv_Slider = uv/vec2(1.,R.x/R.y);\n    float ui_line = GetAlpha(line(uv_Slider,vec2(160.,10.)/Cover_Size,vec2(660.,10.)/Cover_Size)-2./Cover_Size);\n    float ui_line_1 = GetAlpha(line(uv_Slider,vec2(160.,10.)/Cover_Size,vec2(160. + t,10.)/Cover_Size)-1.7/Cover_Size);\n    float d_slip = sphere(uv_Slider-vec2(160.+t,10.)/Cover_Size);\n    \n    float ui_slip = GetAlpha(d_slip - 4./Cover_Size);\n    float ui_slip_1 = GetAlpha(d_slip - 1./Cover_Size);\n    float ui_slip_2 = GetAlpha(d_slip - 6./Cover_Size);\n    \n    vec2 uv_Time = uv_Slider*2.;vec2 offset_left = vec2(-8.,0.)/Cover_Size*2.;\n    float ui_time_left_0 = GetFrontAlpha(uv_Time-offset_left-vec2(100.,3.)/Cover_Size*2.,vec2(GetTime(A_time,3.),12.));\n    float ui_time_left_1 = GetFrontAlpha(uv_Time-offset_left-vec2(110.,3.)/Cover_Size*2.,vec2(GetTime(A_time,2.),12.));\n    float ui_time_left_2 = GetFrontAlpha(uv_Time-offset_left-vec2(120.,4.)/Cover_Size*2.,vec2(10.,12.));\n    float ui_time_left_3 = GetFrontAlpha(uv_Time-offset_left-vec2(130.,3.)/Cover_Size*2.,vec2(GetTime(A_time,1.),12.));\n    float ui_time_left_4 = GetFrontAlpha(uv_Time-offset_left-vec2(140.,3.)/Cover_Size*2.,vec2(GetTime(A_time,0.),12.));\n\tvec2 offset_right = vec2(570,0.)/Cover_Size*2.;\n    float ui_time_right_0 = GetFrontAlpha(uv_Time-offset_right-vec2(100.,3.)/Cover_Size*2.,vec2(0.,12.));\n    float ui_time_right_1 = GetFrontAlpha(uv_Time-offset_right-vec2(110.,3.)/Cover_Size*2.,vec2(5.,12.));\n    float ui_time_right_2 = GetFrontAlpha(uv_Time-offset_right-vec2(120.,4.)/Cover_Size*2.,vec2(10.,12.));\n    float ui_time_right_3 = GetFrontAlpha(uv_Time-offset_right-vec2(130.,3.)/Cover_Size*2.,vec2(4.,12.));\n    float ui_time_right_4 = GetFrontAlpha(uv_Time-offset_right-vec2(140.,3.)/Cover_Size*2.,vec2(4.,12.));\n    \n    float ui_right_5 = GetFrontAlpha((1.-uv_Slider)*1.2+vec2(98,-343)/Cover_Size*2.,vec2(15.,14.));\n\n\n    vec3 UI_col = vec3(0.);\n    UI_col += vec3(0.2,0.22,0.2)*ui_panel;\n    UI_col += vec3(0.2,0.22,0.2)*ui_panel_1 * uv.x*(1.-uv.x)*1.5;\n    UI_col += vec3(0.55,0.55,0.55) * ui_play;\n    UI_col += vec3(0.55,0.55,0.55) * ui_left;\n    UI_col += vec3(0.55,0.55,0.55) * ui_right;\n    //UI_col += 0.8 * ui_rest;\n    UI_col += vec3(0.8) * ui_line;\n    UI_col = mix(UI_col,vec3(1.,0.,0.4) , ui_line_1);\n    UI_col = mix(UI_col,vec3(0.2,0.2,0.2), ui_slip_2*0.25);\n    UI_col = mix(UI_col,vec3(0.9),ui_slip);\n    UI_col = mix(UI_col,vec3(1.,0.,0.7), ui_slip_1);\n    \n    UI_col += ui_time_left_0;\n    UI_col += ui_time_left_1;\n    UI_col += ui_time_left_2;\n    UI_col += ui_time_left_3;\n    UI_col += ui_time_left_4;\n    UI_col += ui_time_right_0;\n    UI_col += ui_time_right_1;\n    UI_col += ui_time_right_2;\n    UI_col += ui_time_right_3;\n    UI_col += ui_time_right_4;\n    UI_col += ui_right_5;\n    \n    float UI_alpha = (ui_play + ui_left + ui_right)*(uv.y*uv.y)*500.\n        + ui_panel*0.8 + ui_panel_1*0.1 + ui_slip \n        + ui_time_left_0 + ui_time_left_1 + ui_time_left_2 + ui_time_left_3 + ui_time_left_4\n        + ui_time_right_0 + ui_time_right_1 + ui_time_right_2 + ui_time_right_3 + ui_time_right_4\n        + ui_right_5;//+ ui_rest;\n    return vec4(UI_col,UI_alpha);\n}\n//------------------------------------------------\n//=================Unicode Font===============================================\n/*\n\thttps://www.shadertoy.com/view/XsGXzt by 834144373(恬纳微晰)\n\thttps://github.com/TNWX-Z/Unicode-For-Shadertoy\n*/\nvec2 FontUV = vec2(0.);\nint num4row = int(1.);\n#define start_pos(where_x,where_y) FontUV.x=FontBaseUV.x-=where_x;FontUV.y-=16.*(float(num4row)-1.)-where_y;\nint adjacency_width = 2;\nint adjacency_height= 0;\n#define first_word_pos(with) FontUV.x-= float(15+adjacency_width)*float(with);\nstruct DataFont{\n    vec3 a,c;\n    vec2 b,d;\n};\nDataFont F;\n#define Font FontCol+=font(F);\n#define next FontUV.x = FontBaseUV.x;FontUV.y += 16.+ float(adjacency_height);\n#define Next(step) FontUV.x = FontBaseUV.x;FontUV.y += 16.*float(step)+ float(adjacency_height);\n#define T F.a=vec3(0x80,0xff,0x427f00);F.b=vec2(0x42c242,0x7f42);F.c=vec3(0x700,0x408ff,0x242400);F.d=vec2(0x447f24,0x444c4);Font\n#define N F.a=vec3(0x44e644,0x4848,0x2010ff);F.b=vec2(0x8000c0,0xfe0162);F.c=vec3(0x350c04,0x8c6,0x8080f);F.d=vec2(0x8ff08,0xf0808);Font\n#define W F.a=vec3(0xff0080,0x7c0201,0x7c4040);F.b=vec2(0xe61108,0x1e618);F.c=vec3(0x231108,0x7901cc,0x9f909);F.d=vec2(0x1b0479,0x80fe8);Font\n#define X F.a=vec3(0x808fc,0x8060fc,0x4180ff);F.b=vec2(0xfe,0xff);F.c=vec3(0x21213f,0x9083f,0x8ff);F.d=vec2(0x22223f,0x24243);Font\n#define J_1 F.a=vec3(0xF80C08,0x221010,0x3F2824);F.b=vec2(0x2478A1,0x21312A);F.c=vec3(0xFF0404,0x200404,0x29292F);F.d=vec2(0x2FF92F,0x2F2929);Font\n#define J_2 F.a=vec3(0,0x1008FC,0x804020);F.b=vec2(0,0);F.c=vec3(0x100000,0xF,0);F.d=vec2(0x40201,0);Font\n#define J_3 F.a=vec3(0x820200,0x880404,0xD02050);F.b=vec2(0x8,0);F.c=vec3(0,0x780601,0x101010);F.d=vec2(0x103C13,0);Font\n#define J_4 F.a=vec3(0,0x202FE,0x2222E2);F.b=vec2(0x2E222,0x202);F.c=vec3(0x40404,0x4047F,0x404FF);F.d=vec2(0x4FF04,0x40404);Font\n#define J_5 F.a=vec3(0x201010,0x784621,0x800080);F.b=vec2(0x20407F,0x101020);F.c=vec3(0,0x49497F,0x497F49);F.d=vec2(0x7F4949,0);Font\n#define J_6 F.a=vec3(0,0x80402,0x806010);F.b=vec2(0,0);F.c=vec3(0,0,0x10000);F.d=vec2(0x3806,0);Font\n#define J_7 F.a=vec3(0x487800,0x17A48,0x100FE);F.b=vec2(0xC03806,0x10638);F.c=vec3(0x555D41,0x415D55,0x4417D);F.d=vec2(0x13F018,0x181410);Font\n#define S_1 F.a=vec3(0x7E2020,0x80,0x2020F0);F.b=vec2(0x102F0,0xFE);F.c=vec3(0x400608,0x200031,0x242427);F.d=vec2(0x202027,0x20203F);Font\n#define\tS_2 F.a=vec3(0x222302,0x24FC22,0x2424);F.b=vec2(0xFE0102,0x8000);F.c=vec3(0x497F00,0x497F49,0x7F49);F.d=vec2(0x4B5242,0x36256);Font\n#define S_3 F.a=vec3(0,0x800000,0x604080);F.b=vec2(0x98,0);F.c=vec3(0x80000,0x80808,0x80808);F.d=vec2(0x1C0B08,0x8);Font\n#define S_4 F.a=vec3(0,0xC10100,0x300C02);F.b=vec2(0xC0,0);F.c=vec3(0,0x3F0000,0);F.d=vec2(0x7F,0);Font\n#define S_5 F.a=vec3(0,0xC0200,0xC030);F.b=vec2(0,0);F.c=vec3(0x40400,0x40404,0x47F04);F.d=vec2(0x40404,0x40C);Font\n\nfloat Bin(float n,float _u,float v,inout float c){\n    return (_u>=0. && v>=0. && _u<=2. && v<=7.) ? mod(floor(n/(exp2(8.*_u+v))),2.) : c;\n}\nfloat arrayBin(DataFont f){\n    float c = 0.,o = 3., y = FontUV.y-8.;\n    c = Bin(f.a.r,FontUV.x,FontUV.y,c);c = Bin(f.c.r,FontUV.x,y,c);\n    FontUV.x -= o;c = Bin(f.a.g,FontUV.x,FontUV.y,c);c = Bin(f.c.g,FontUV.x,y,c);\n    FontUV.x -= o;c = Bin(f.a.b,FontUV.x,FontUV.y,c);c = Bin(f.c.b,FontUV.x,y,c);\n    FontUV.x -= o;c = Bin(f.b.r,FontUV.x,FontUV.y,c);c = Bin(f.d.r,FontUV.x,y,c);\n    FontUV.x -= o;c = Bin(f.b.g,FontUV.x,FontUV.y,c);c = Bin(f.d.g,FontUV.x,y,c);\n    return c;\n}\nfloat font(DataFont f){\n    FontUV.x -= 3.+ float(adjacency_width);\n    return arrayBin(f);\n}\nvec4 GetRunMarquee(vec2 U){\n    float FontCol = 0.;\n    float time_wrap = sin(iTime*0.2)*70. + sin(U.y)*clamp((sin(iTime*2.)+0.3)*500.,0.,1.);\n    vec2 FontBaseUV = U-0.5 - floor(vec2(530.-time_wrap,340.)*(R/vec2(800.,450.)));\n\tFontUV = FontBaseUV;\n    start_pos(0.,10.);\n    Next(0)\n        first_word_pos(0)\n        J_1 J_2 J_3 J_4 J_5 J_6 J_7\n        first_word_pos(3)\n        S_1 S_2 S_3 S_4 S_5\n    return vec4(0.9,0.9,0.9,FontCol);\n}\n/*----------------------------------------------------\nFrom https://www.shadertoy.com/view/XdX3z2 by guycook \n----------------------------------------------------*/\n#define bars 50.0                 // How many buckets to divide spectrum into\n#define barSize 1.0 / bars        // Constant to avoid division in main loop\n#define barGap 0.1 * barSize      // 0.1 represents gap on both sides, so a bar is\n#define sampleSize 0.02           // How accurately to sample spectrum, must be a factor of 1.0\nfloat h2rgb(float h) {\n\tif(h < 0.0) h += 1.0;\n\tif(h < 0.166666) return 0.1 + 4.8 * h;\n\tif(h < 0.5) return 0.9;\n\tif(h < 0.666666) return 0.1 + 4.8 * (0.666666 - h);\n\treturn 0.1;\n}\nvec3 intensityToColour(float i) {\n\tfloat h = 0.666666 - (i * 0.666666);\n\treturn vec3(h2rgb(h + 0.333333), h2rgb(h), h2rgb(h - 0.333333));\n}\nvec4 GetVisual( vec2 U ) {\n\tvec2 uv = U.xy / R.xy*vec2(2.,2.4)-vec2(550.,400.)/Cover_Size;\n    if(any(bvec4(greaterThan(uv,vec2(1.)),lessThan(uv,vec2(0.))))){\n    \treturn vec4(0.);\n    }\n    float barStart = floor(uv.x * bars) / bars;\n\tif(uv.x - barStart < barGap || uv.x > barStart + barSize - barGap) \n\t\treturn vec4(0.0);\n    else\n    {\n        float intensity = 0.0;\n        for(float s = 0.0; s < barSize; s += barSize * sampleSize)\n            intensity += texture(iChannel2, vec2(barStart + s, 0.0)).r;\n\t\tintensity *= sampleSize; \n\t\tintensity = clamp(intensity, 0.005, 1.0); \n\t\tfloat i = float(intensity > uv.y);\n\t\treturn vec4(clamp(intensityToColour(intensity)*0.9,0.,1.) * i, clamp(i * uv.y*5.0,0.,1.));\n    }\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = GetCover(U).rgbb;\n\tvec4 Tin = GetTin(U);\n    C.rgb = mix(C.rgb,Tin.rgb,Tin.a);\n\tvec4 UI = GetPlayerUI(U);\n    C.rgb = mix(C.rgb,UI.rgb,UI.a);\n    vec4 Visual = GetVisual(U);\n    C.rgb = mix(C.rgb,Visual.rgb,Visual.a);\n    vec4 RunMarquee = GetRunMarquee(U);\n    C.rgb = mix(C.rgb,RunMarquee.rgb,RunMarquee.a);\n}\n\n\n\n\n\n/*---------- Shader Story ------------\n\tWow!You are so lucky to see the Shader Story!\n\tI hidden it in a inconspicuous place,but you found.\n\t\n\tATITC(ATC) is also 4bpp texture compression,hum...but it seems that is a black technology.\n\tAnd I can't find more about ATC ,so I decided crack it at 2017.12.15,\n\tIt takes me around one week,but at finally I crake it a success.\n\tIn short, it's not smart encode format than DXTn,but it has a higher PSNR.\n\n\tThis 834144373's Audio Player cover texture is from \"NieR:Automata\",\n\tand the audio is also from it;I like the music it's so good at the game.\n\tThe player is inspire from 网易云 music mobile player.\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "musicstream",
                        "id": 13996,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/whatareyouevenlookingat/nier-automata-the-weight-of-the-world"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "highp ivec2 SV_DispatchThreadID = ivec2(0,0);\nhighp int Double_pixelID = 0;\nhighp vec4 col = vec4(0.,0.,0.,0.);\nint i = 0;\n\n//pass !\nvoid A(uvec4 data){\n    \n    if(Double_pixelID == i++){\n        if((SV_DispatchThreadID.x & 0x1) == 0){\n        \tcol.xy = unpackUnorm2x16(data.s);\n    \t\tcol.zw = unpackUnorm2x16(data.t);\n        }\n        else{\n        \tcol.xy = unpackUnorm2x16(data.p);\n    \t\tcol.zw = unpackUnorm2x16(data.q);\n        }\n    }\n}\n\nvoid mainImage( out vec4 C, in vec2 U)\n{\n    SV_DispatchThreadID = ivec2(floor(U-0.5));\n    if(SV_DispatchThreadID.x >= 32 || SV_DispatchThreadID.y >= 32){\n    \tC = vec4(1./3.);\n        //return;\n    }\n    if(iFrame > 2){\n    \tC = texture(iChannel0,U/iResolution.xy);\n        //discard;\n    }\n    //1个像素存一个数据块\n    //16 x 32, 16为其中2个像素存2个块数据\n    //像素ID编号\n    Double_pixelID = (SV_DispatchThreadID.x>>1) + (SV_DispatchThreadID.y<<4); \n    //-------------------------------------------------------------------------\n\tA(uvec4(0x2A270083u,0x11BF1040u,0x430D0083u,0xC0000000u));\n    A(uvec4(0x5B8F0084u,0x2FBDE480u,0x42E90083u,0x10105303u));\n    A(uvec4(0x11A60084u,0xC53CD240u,0x2AC90084u,0x34000001u));\n    A(uvec4(0x2A270063u,0x21141Eu,0x9440063u,0x401A35Du));\n    A(uvec4(0x1650063u,0xE494A555u,0x9670064u,0x50D0804u));\n    A(uvec4(0x324A0083u,0x400054F4u,0x2A290484u,0x209105Fu));\n    A(uvec4(0x21C70063u,0xD28555BAu,0x2A270484u,0x472FD440u));\n    A(uvec4(0x426A0484u,0x47152u,0x2A080084u,0x16D4105Bu));\n    A(uvec4(0x21A70063u,0x40430E25u,0x532D0063u,0xE0C00000u));\n    A(uvec4(0x4B0C10E7u,0xFFFFFFFCu,0x7C711507u,0x2565B9E5u));\n    A(uvec4(0x5B6D08A4u,0x60185A13u,0x3A680063u,0xDFEFFED1u));\n    A(uvec4(0x530B14E6u,0xF5665181u,0x5B2B10E5u,0x71B18064u));\n    A(uvec4(0x4A880041u,0x35766BEFu,0xF79D1907u,0xD0000000u));\n    A(uvec4(0xAD960CC5u,0xFFF94000u,0xA57404A5u,0xFF6A0500u));\n    A(uvec4(0x8CB204A4u,0x7E090000u,0x4B0B0484u,0xDBD00000u));\n    A(uvec4(0x849104A5u,0xFEA4FDD0u,0x9D14258Bu,0x6B102A15u));\n    A(uvec4(0x849304A4u,0x2DFCC001u,0x536D0084u,0xAAFFEF4u));\n    A(uvec4(0x4B2E0483u,0x51A0Fu,0x32280063u,0x1006FEu));\n    A(uvec4(0x2A070063u,0x4541AFu,0x19A70064u,0xD0125100u));\n    A(uvec4(0x19A60063u,0x12EB141u,0x9640063u,0xBDA8826Fu));\n    A(uvec4(0x11A50042u,0x95162F6Du,0x4B0C0063u,0xE5800001u));\n    A(uvec4(0x536F0484u,0x43254000u,0x32270063u,0xBFA1892u));\n    A(uvec4(0x32070063u,0x7F950u,0x3A470063u,0xD4500308u));\n    A(uvec4(0x3A6700A4u,0x51031D50u,0x32270084u,0x7FD00001u));\n    A(uvec4(0x3A6804A5u,0x8346E950u,0x9D540CE6u,0x686070u));\n    A(uvec4(0x8CD20CC6u,0x90097A95u,0xA533296Au,0xC6848005u));\n    A(uvec4(0x636B0484u,0x7FAF8D5Fu,0x4A680CA4u,0x43431A89u));\n    A(uvec4(0x4ACA0CA5u,0x8202C1E6u,0x638C14C5u,0xB0707272u));\n    A(uvec4(0xC67614E7u,0x60E46000u,0xEF5C2569u,0x629F0u));\n    A(uvec4(0xCE381D48u,0x95FAu,0xB5B5216Au,0x5000A657u));\n    A(uvec4(0x84911929u,0x1A00BF6Eu,0x42CB0463u,0xEA3FE75Fu));\n    A(uvec4(0x84B1258Bu,0x4556DF9u,0x94D329ACu,0x94591A2Bu));\n    A(uvec4(0x740F04A3u,0x1556BFu,0x2A270083u,0x28D51B4Au));\n    A(uvec4(0x5B6D04A3u,0xF4015400u,0x63CD0063u,0xE60E0000u));\n    A(uvec4(0x430B0064u,0xB004000u,0x3A8A0084u,0x30504000u));\n    A(uvec4(0x32290063u,0x5E014204u,0x330904A3u,0x10001Cu));\n    A(uvec4(0x3A8C0062u,0x54A5C468u,0x42AC0063u,0x4105AF7Fu));\n    A(uvec4(0x42AA0043u,0x6E90022Du,0x53280064u,0xFA561000u));\n    A(uvec4(0x4B070484u,0xFFE44000u,0x530904A4u,0xE5814A74u));\n    A(uvec4(0x42680043u,0x55660BFDu,0x5B490484u,0xBF900000u));\n    A(uvec4(0x52C904A4u,0x4707B440u,0x428904A4u,0xFFE45FBBu));\n    A(uvec4(0x6B8D0CE6u,0xB6A9A090u,0xE71C2148u,0xF9000001u));\n    A(uvec4(0x953214E7u,0xB295414u,0x94F010E6u,0xB8701041u));\n    A(uvec4(0x8CCD04A4u,0x90A0F085u,0x63F52148u,0x1586F100u));\n    A(uvec4(0x6C2914E7u,0xA470100u,0x42C91CE6u,0x40A6FEBEu));\n    A(uvec4(0x534B1D28u,0x4041F450u,0x63AC1948u,0xAA5E9B05u));\n    A(uvec4(0x638C1928u,0x1B5A5902u,0x4ACA1928u,0x58D66419u));\n    A(uvec4(0x4AEB1508u,0xFFFFFCFCu,0x6C0F1929u,0x556A28AEu));\n    A(uvec4(0x4B6A08C3u,0xD0000100u,0x63D008A3u,0xFD940001u));\n    A(uvec4(0x536C08A2u,0xFF8FF0DDu,0x742F0463u,0xFFFE901Fu));\n    A(uvec4(0x744F0483u,0x2A0F0100u,0x32270084u,0x9400000Du));\n    A(uvec4(0x3A6704A3u,0xFE00A589u,0x324604A3u,0x7F7F8206u));\n    A(uvec4(0x5BAD08A4u,0x18E88510u,0x42CA08A4u,0x77AE5u));\n    A(uvec4(0x2A670CA5u,0xAEu,0x29C608A4u,0xFAE9800Eu));\n    A(uvec4(0x3A470483u,0x6E5591FDu,0x42A910C5u,0xE0904Bu));\n    A(uvec4(0x636A04A5u,0xF0419FFEu,0x6BAB1507u,0x810128EBu));\n    A(uvec4(0x73CE14E7u,0xAE4C0494u,0xB5B62129u,0xE9140500u));\n    A(uvec4(0xFFFF0CC5u,0x80C080u,0xF7DE0CC5u,0x10B2FBFu));\n    A(uvec4(0x63AC0CE5u,0xBFFCE040u,0x73EC298Au,0x990102EDu));\n    A(uvec4(0x5B8B10E7u,0x4382C190u,0x6BEB2588u,0x7EF90E18u));\n    A(uvec4(0x6BCA18C5u,0x5547070Au,0x6BCB10C6u,0xFFAFB040u));\n    A(uvec4(0xA5321927u,0xFE514000u,0x7C6F2569u,0x9F765919u));\n    A(uvec4(0x73EE2149u,0xAFE90111u,0x844F1D49u,0xF9010100u));\n    A(uvec4(0x5B6C1D29u,0x3741E969u,0x9D11256Au,0xE0000100u));\n    A(uvec4(0x63ED0CC5u,0x4BF2F6Fu,0x6C3104A4u,0x14FFFFu));\n    A(uvec4(0x84B208C3u,0x40007E1Fu,0x4AEC0CC3u,0xFEFE54AEu));\n    A(uvec4(0x4B0C0CC5u,0xFFFFF921u,0x32270063u,0xE383C7BFu));\n    A(uvec4(0x32470483u,0xAF6003EFu,0x2A260063u,0x9F41401Bu));\n    A(uvec4(0x19C50063u,0xF9FDA103u,0x2AA608A4u,0xAB945140u));\n    A(uvec4(0x3A070CC5u,0xAC855040u,0x426814E6u,0xE9D5A554u));\n    A(uvec4(0x7BCC14E6u,0x31110000u,0x94AF0CA5u,0x4F080u));\n    A(uvec4(0x846F0CA6u,0x6000FF96u,0x9D522DACu,0xAA9A6BF4u));\n    A(uvec4(0xB5F6422Fu,0xC00040FFu,0xF7BE39EDu,0xBEFCF8F5u));\n    A(uvec4(0xF79E14E6u,0xB030201u,0x5B6D14E7u,0xF8C870C1u));\n    A(uvec4(0x94EE298Bu,0xE880414Cu,0x848D29ABu,0xBFAB0050u));\n    A(uvec4(0x73EB1529u,0xFFFBFE0Eu,0x8CAD2167u,0xAB6A161Au));\n    A(uvec4(0x73EB2167u,0x1E0F8140u,0x8CAC25A7u,0xA9FAF0E8u));\n    A(uvec4(0x9D3035EAu,0x142B8E1Bu,0xA5701507u,0x9A9EBF0Au));\n    A(uvec4(0x5B6D1D29u,0x4252BF04u,0xA4F325ABu,0x54B0F9u));\n    A(uvec4(0xAD752DACu,0x1444B1F6u,0x5B8D10E7u,0xFFFF02AAu));\n    A(uvec4(0x4B8F0CC5u,0xD6151410u,0x328B04A4u,0x3010000u));\n    A(uvec4(0x4B0C04A4u,0xF8ECF0C0u,0x63AF1909u,0x6CAD65A6u));\n    A(uvec4(0x84920CC5u,0x2F292565u,0x21C70063u,0x100143u));\n    A(uvec4(0x19E70063u,0x80FDu,0x2A270063u,0x10F1816Fu));\n    A(uvec4(0x32E70063u,0x406E916Au,0x3A480483u,0x9AD1F5A4u));\n    A(uvec4(0x4AA914E5u,0x16ADAA55u,0xA5331D27u,0xF4400000u));\n    A(uvec4(0xEF7C1CE8u,0x20D1Cu,0xB5F518E7u,0xB8D08010u));\n    A(uvec4(0x94F1254Au,0xFFFFFEECu,0x9D124650u,0x3628510u));\n    A(uvec4(0x9D333E0Eu,0x75E99929u,0xF7BE4651u,0x4040C0E0u));\n    A(uvec4(0xF7DE1D28u,0xA91B160Du,0x9CD008A5u,0xFFF4A0A5u));\n    A(uvec4(0x8CAF31CCu,0xBF3FADECu,0x8CCE31CCu,0xAAE0BFFEu));\n    A(uvec4(0xA4EF3A0Cu,0x4544F102u,0xC5F42DA9u,0x56160B69u));\n    A(uvec4(0x7C492DABu,0x685D9E5u,0x8CAA2569u,0xA94011FFu));\n    A(uvec4(0xB5B52188u,0xAAF6F515u,0xAD9431CBu,0x420A7DA7u));\n    A(uvec4(0x8CAE2D8Bu,0x1E5F686u,0x9D0F31CCu,0xFBBA40u));\n    A(uvec4(0xAD8E2DCBu,0x416ABE41u,0xA54E2DCBu,0x2D20B00u));\n    A(uvec4(0x4B2E0063u,0x1000FFAu,0x19E70063u,0x5541D051u));\n    A(uvec4(0x428A0483u,0xFFCEAF9u,0x7CB40483u,0x54E56AAEu));\n    A(uvec4(0x5BB10463u,0x61430E1Bu,0x19A60063u,0xA7EA1559u));\n    A(uvec4(0x32690084u,0x57A400u,0x2A080063u,0x15A9EA00u));\n    A(uvec4(0x3A690083u,0x40056F54u,0x9CF20CA5u,0x30302450u));\n    A(uvec4(0x9CF214E7u,0xE0F0F0C0u,0xA53314C7u,0x30B3Fu));\n    A(uvec4(0xAD7314E7u,0xF0E4D040u,0xFFDE5293u,0x4060Du));\n    A(uvec4(0xB5B34A71u,0x5716C168u,0xC6374E91u,0x83u));\n    A(uvec4(0xA5534650u,0x6A29570Fu,0xA573422Fu,0xD9B50101u));\n    A(uvec4(0xE71B4E91u,0xF0EA00u,0xE71A3E2Eu,0x1255FF99u));\n    A(uvec4(0xC678360Cu,0x84001728u,0xE71B422Du,0x18C0C004u));\n    A(uvec4(0xD6BA3A0Eu,0x13F9F40u,0xBE3831CAu,0x7E000105u));\n    A(uvec4(0xB5B52DCBu,0xFD010010u,0xB5D62DCAu,0x1D7AC014u));\n    A(uvec4(0xB5B429ABu,0x6FFED081u,0xADB52D8Au,0x42B4B11u));\n    A(uvec4(0x63EE2D69u,0x95C55666u,0x5B6C258Bu,0x8713AD7Du));\n    A(uvec4(0x63CC2169u,0xFFF90061u,0x63EB2169u,0xD2578304u));\n    A(uvec4(0x63EF1084u,0x17000000u,0x19650083u,0xF5A5A5E4u));\n    A(uvec4(0x29E70063u,0xE5A56943u,0x532D0484u,0xE94000B0u));\n    A(uvec4(0x530B0483u,0x5665A0B0u,0x29E804A5u,0xE001006u));\n    A(uvec4(0x29E80485u,0xDB544100u,0x19460085u,0x7F960580u));\n    A(uvec4(0x218708A5u,0x6A56D001u,0x426908A4u,0x65656570u));\n    A(uvec4(0x5ACA14C7u,0xD504430u,0xA55218E8u,0xF0C04000u));\n    A(uvec4(0xA59310A7u,0xFFFFFEF8u,0xC6344E92u,0x80609575u));\n    A(uvec4(0xC6154E92u,0x2C0E0E19u,0xADD34650u,0x1705059Bu));\n    A(uvec4(0xADD34650u,0x250201F7u,0xAD734650u,0x7811FCE4u));\n    A(uvec4(0xCE373E2Fu,0x45005A6Bu,0x951131ECu,0x3EBB6F91u));\n    A(uvec4(0xADB13A2Du,0x2877E414u,0xE71A35C9u,0xC565E6A9u));\n    A(uvec4(0xE71856B2u,0x12E81308u,0xDEDA35ECu,0x661F071Au));\n    A(uvec4(0xD69531CBu,0xBF641458u,0xB5F331ECu,0xFFBFD1A7u));\n    A(uvec4(0xB5F32DCBu,0x3F0F0F20u,0x5BAC298Au,0xAB7E9F40u));\n    A(uvec4(0x742E258Au,0xEAE56054u,0x63AD256Au,0xC7CFCFEAu));\n    A(uvec4(0x6C0D29ABu,0x2714BCF5u,0x6BCE256Au,0x56E6A5A1u));\n    A(uvec4(0x7C710CC7u,0x2E1B1661u,0x29C708A5u,0x8654F87Cu));\n    A(uvec4(0x4AEC0CA5u,0xFA941540u,0x63AF10C7u,0xC0004050u));\n    A(uvec4(0x6BCE14E5u,0x5F010602u,0x31E708A4u,0x3F7F1A1Eu));\n    A(uvec4(0x426A0CA6u,0x56120701u,0x31E908A5u,0x7061510u));\n    A(uvec4(0x73CD10A6u,0x41300000u,0x9C4D14C7u,0xF0E3D040u));\n    A(uvec4(0xBDB43DABu,0xD968A524u,0xB5940CA5u,0xFFFFFEF8u));\n    A(uvec4(0xADD34A71u,0x4549A5D9u,0xADF24A72u,0x96005ABBu));\n    A(uvec4(0xB5B34A71u,0x2914ADDBu,0xA5524250u,0x5E2B2F5Bu));\n    A(uvec4(0x95113E2Fu,0xD459079Fu,0xAD734650u,0xD3D993Eu));\n    A(uvec4(0x9D1131EDu,0x56079AEAu,0xADB231ECu,0x1921FE59u));\n    A(uvec4(0xB5F5362Cu,0xBD9184C1u,0xBE1535CCu,0x826E7CFEu));\n    A(uvec4(0xC657464Fu,0x15235DE3u,0xD6F8466Fu,0x294C0E4u));\n    A(uvec4(0xDEF63A0Du,0x6B1EFEu,0xCE9629ABu,0x15Fu));\n    A(uvec4(0x6C0F258Au,0x9510824Fu,0x7C6E29ACu,0x10D054u));\n    A(uvec4(0x744E31EDu,0x68DBB3AFu,0x84AF296Au,0xF5805480u));\n    A(uvec4(0xAD912D8Cu,0x7F1A0600u,0x848E298Cu,0xB050408u));\n    A(uvec4(0x6BED2149u,0x2FDF6E20u,0x5B8B08A6u,0xF1F0F0D0u));\n    A(uvec4(0x74101D28u,0x9042FDA6u,0x951410E7u,0x41D1E0A0u));\n    A(uvec4(0x8CD73E11u,0xFC052209u,0x94F51D07u,0x3F5A0A06u));\n    A(uvec4(0x3A0810C7u,0xAFAF5916u,0x3A080CA4u,0xEA6AE6C6u));\n    A(uvec4(0xB5F518E8u,0xA4F9040u,0xAD1114E7u,0x2CBFFFF9u));\n    A(uvec4(0xB5112149u,0x11Fu,0xBDB414C7u,0xBDBCFCFFu));\n    A(uvec4(0xCE164A71u,0x2945FA1Eu,0xA5323A0Fu,0xD367BAEBu));\n    A(uvec4(0xAD534230u,0x454BAB6u,0xBDD53A2Fu,0xA1B5A95Du));\n    A(uvec4(0xA552360Eu,0x420215D5u,0xA5533E2Fu,0x1131B9AFu));\n    A(uvec4(0x7C8E31EDu,0x75FB8BA1u,0xAD53360Eu,0xD0A00000u));\n    A(uvec4(0xAD7335EDu,0x12070304u,0x9D332DCBu,0x7540866Cu));\n    A(uvec4(0xA55231EDu,0xCEu,0xCE9131ECu,0x401000Bu));\n    A(uvec4(0x848F218Au,0xFFB555A1u,0x746F258Au,0x1EB65A54u));\n    A(uvec4(0x63CD29ABu,0xDEEFA5F1u,0x63CD2DACu,0xE6465654u));\n    A(uvec4(0x9D5031EDu,0x8444C0B4u,0xBE143A0Eu,0xBDFAA0C0u));\n    A(uvec4(0x94D035CDu,0x11072E75u,0x9CF035CDu,0x8040699Bu));\n    A(uvec4(0x742F1D28u,0x2550E1Bu,0x7C0E10C7u,0xC1824191u));\n    A(uvec4(0x94D12149u,0x10D000u,0xA57314E7u,0x14183C3u));\n    A(uvec4(0xB5D42569u,0xA1F7Fu,0xB5942569u,0xFDF8F471u));\n    A(uvec4(0xC6581D08u,0x7030000u,0x3A0918E8u,0xCA160101u));\n    A(uvec4(0x73CD18E8u,0xC0F01006u,0xA55314E7u,0x30B0Eu));\n    A(uvec4(0xB5941508u,0xFDF49080u,0xBDB43DEDu,0xEBF7FFBCu));\n    A(uvec4(0xBDB44630u,0x67AB5CB9u,0xA512360Fu,0x1F4B8695u));\n    A(uvec4(0xA5123A0Fu,0xA1F0B566u,0xA5323E0Fu,0x3E2A89D6u));\n    A(uvec4(0xC5B431EEu,0xA070706u,0x7C2F2DCDu,0x58589F9u));\n    A(uvec4(0x8CB129CCu,0x53529393u,0xC5F531EDu,0x8247560u));\n    A(uvec4(0x9D322DCCu,0xD51A1969u,0xAD9431CDu,0x1579AB25u));\n    A(uvec4(0x9D7131EEu,0x7C416D0Cu,0xA5923A0Eu,0xD0131206u));\n    A(uvec4(0xD696360Du,0xE96A5504u,0xCE7531CCu,0xB9150400u));\n    A(uvec4(0x742E2DACu,0x7AFDE824u,0x84902DACu,0x1BD4u));\n    A(uvec4(0x94D1298Bu,0x4065F5FEu,0xC5F639EDu,0xE1A48129u));\n    A(uvec4(0xBDD639EEu,0xAB255500u,0x9CD239CCu,0x54D0FAF9u));\n    A(uvec4(0x5B6B2149u,0x48D1E161u,0x5B4B14E7u,0x17135241u));\n    A(uvec4(0xB5D32569u,0xFFFB041Cu,0xC6741D29u,0xF0B0600u));\n    A(uvec4(0xB5D51D08u,0xF4FCF8C0u,0xD6F95AD5u,0x7A296D13u));\n    A(uvec4(0xB5942129u,0xF6F3F1Fu,0x3A4914E8u,0x2D1F1655u));\n    A(uvec4(0x5B2A18E8u,0x434u,0x8CB11908u,0xF0F0C000u));\n    A(uvec4(0xBDB44651u,0x98C8D5BBu,0xC5D44230u,0x373A2E9Eu));\n    A(uvec4(0xC5D43A0Fu,0xF0749DADu,0xB5733A0Fu,0xC966232Au));\n    A(uvec4(0x9D1231EEu,0x40C0u,0x9CF131EEu,0xF0E4FAFFu));\n    A(uvec4(0xB5733A0Eu,0x51C0Du,0x63CD2DCDu,0x5357655Au));\n    A(uvec4(0x9CF12DCDu,0xD0D04001u,0x9D313A0Eu,0xA0D3C34Fu));\n    A(uvec4(0x9D113A0Eu,0x5BD10526u,0x9D5235EEu,0x1F120F0Fu));\n    A(uvec4(0xC67535EEu,0xC0000005u,0xB5F335EEu,0x43EA74E0u));\n    A(uvec4(0xBE34424Fu,0xCDBBCFB8u,0xE75735EDu,0x1227DEFu));\n    A(uvec4(0xAD2F298Bu,0x1A014B06u,0x6C0E296Au,0xEFA65151u));\n    A(uvec4(0x6C0E2D8Bu,0xBFBDA501u,0x9CF22DACu,0xE8B598E4u));\n    A(uvec4(0xC61735EEu,0x14595867u,0x8CB231CDu,0x40A7FAA5u));\n    A(uvec4(0x6BAC1D29u,0x69A561C5u,0xA5521D09u,0xB060101u));\n    A(uvec4(0xB5F414E7u,0xF8FCFDFEu,0xBE1418E8u,0x1F0F0F0Fu));\n    A(uvec4(0xC6761908u,0xF0F0F0F0u,0xDF1656B3u,0x11297D6Bu));\n    A(uvec4(0xA5331D29u,0xFFFF2F0Fu,0x9D1214E7u,0xFFFFFDD0u));\n    A(uvec4(0x9CF21908u,0xAF5FAB01u,0x9C6F1928u,0x5AFBF7F8u));\n    A(uvec4(0xBDD44651u,0x40C01070u,0xC5D54651u,0x657u));\n    A(uvec4(0xD6563E0Fu,0x104000C0u,0xA5123E2Fu,0x36110F0Bu));\n    A(uvec4(0xAD5331EEu,0x86450303u,0xBDD431EDu,0x80C04090u));\n    A(uvec4(0xA51235EEu,0xDEBF2700u,0x94D12DCDu,0x3010000u));\n    A(uvec4(0x9D122DCDu,0x94D01090u,0xB5B43E2Fu,0x120347u));\n    A(uvec4(0x9D523A0Eu,0xDB409155u,0x9CF135EEu,0x3030244u));\n    A(uvec4(0x73EE31EEu,0x5D405100u,0x7C4F35EEu,0xE9D4D0D0u));\n    A(uvec4(0x953131CDu,0x656561Bu,0x8CD135EEu,0x45010003u));\n    A(uvec4(0xBE543A0Eu,0xB0540040u,0xB6143A0Eu,0x42E86D49u));\n    A(uvec4(0xC65435EEu,0x270F0544u,0xA53435EEu,0xF9A8FCADu));\n    A(uvec4(0x8C912DADu,0x1D292E2Fu,0x6BEE2DADu,0x20312697u));\n    A(uvec4(0xAD73298Au,0xF0805084u,0xAD731D2Au,0xBF3F1F0Fu));\n    A(uvec4(0xBE341D08u,0x80C0E0F0u,0xBE1318E8u,0x3F3F3F2Fu));\n    A(uvec4(0xFFFC1909u,0xD0909090u,0xAD744E72u,0x3E36357Au));\n    A(uvec4(0x9CF24A72u,0x15175F7Fu,0x9D134A51u,0x1CA9ADADu));\n    A(uvec4(0xDEB92D6Cu,0xF5695915u,0xF75B256Bu,0xBBE59580u));\n    A(uvec4(0xA5124230u,0x20301u,0xB5734230u,0x70500000u));\n    A(uvec4(0xA5323E30u,0x241C0F0u,0xB59431CDu,0x395D96A8u));\n    A(uvec4(0xA5123A0Eu,0x7F6A8D05u,0x8C902DCDu,0x30302C6u));\n    A(uvec4(0x8C9031EDu,0x94E672DBu,0xA53229ACu,0x291D0D0Au));\n    A(uvec4(0xBE1731CDu,0xF0000000u,0x8CD12DCCu,0xC065D424u));\n    A(uvec4(0xBE173A0Eu,0xBF00A084u,0xB5D631CDu,0xFF000102u));\n    A(uvec4(0xB5D731EEu,0xE7000000u,0xC6383A0Fu,0xE4500000u));\n    A(uvec4(0xBDF731CDu,0xAB490505u,0xADB62DACu,0xEA004155u));\n    A(uvec4(0xA55435CBu,0xEE505459u,0xC6563A0Eu,0x57040C64u));\n    A(uvec4(0xA5743A0Fu,0xB7000011u,0xB5B54630u,0xAE245018u));\n    A(uvec4(0xA5132DACu,0xBB455605u,0x8C902DACu,0xF0460040u));\n    A(uvec4(0xA532298Au,0xFFFEF9F4u,0xC63452B2u,0x8460D084u));\n    A(uvec4(0x5B4C0CA6u,0xAB5A1A99u,0xD6D5254Au,0x24253F3Fu));\n    A(uvec4(0xE75814E8u,0x80C0C0u,0xC6944651u,0x2E3F2Fu));\n    A(uvec4(0x9D134230u,0x5076A5u,0xA5544230u,0xB8793969u));\n    A(uvec4(0xC6174651u,0xC0u,0xCE574230u,0xFu));\n    A(uvec4(0x7C503A0Fu,0x6A5A5A2Bu,0xA5323A0Fu,0x40C0u));\n    A(uvec4(0xAD533A0Fu,0xB8AC6B16u,0xAD533E2Fu,0x40C0A034u));\n    A(uvec4(0x9CF131EDu,0x43C4E4F9u,0x94D12DCDu,0x7030201u));\n    A(uvec4(0x740E2DCCu,0x40BCF9BAu,0xDEFB31EDu,0xB055u));\n    A(uvec4(0xF7DE2DCDu,0x143C27u,0xFFFF31EDu,0x409AFEu));\n    A(uvec4(0xFFFF3A0Eu,0x5451F3EFu,0xFFFF360Du,0x44A5FFFFu));\n    A(uvec4(0xFFFF31CCu,0x457777u,0xFFFF2DCCu,0x55FB69u));\n    A(uvec4(0xF7BE2DACu,0x55FFA6u,0xFFDF31CCu,0x55EFE9u));\n    A(uvec4(0xFFFF39EDu,0x1469FD66u,0xFFFF3A0Eu,0x55FF55u));\n    A(uvec4(0xF7BE3E0Fu,0x55F7AAu,0xFFFF420Eu,0x55FF99u));\n    A(uvec4(0xFFFF3E0Fu,0x113767u,0x8C7035CDu,0x646A45BCu));\n    A(uvec4(0x9D122549u,0xBC3ABBFFu,0x8C9018E8u,0x101041Bu));\n    A(uvec4(0x6BCD14E8u,0x2020715u,0x426A10C7u,0x1D2D1977u));\n    A(uvec4(0x21870CA7u,0x24BBFFFEu,0x84900CA7u,0xA1F4F0FDu));\n    A(uvec4(0x84703A0Fu,0x93B1B1F6u,0x9D143E0Fu,0xF8F8B8F9u));\n    A(uvec4(0x8C9139EEu,0x4A96E6F9u,0x94F33E0Fu,0x1035655u));\n    A(uvec4(0x7C5035EEu,0x4D57EBFFu,0x740F35EEu,0xCE5FFBBFu));\n    A(uvec4(0x9CF235EEu,0x81F0u,0x847031EDu,0x1191B7Bu));\n    A(uvec4(0x94F131EDu,0x14040807u,0xC6992DCCu,0x30303075u));\n    A(uvec4(0xFFFF29ACu,0xD0C0C080u,0xF7DE3E2Fu,0xD4E4D429u));\n    A(uvec4(0xEF7D29ABu,0x700B416Au,0xFFDF258Bu,0x4707070Au));\n    A(uvec4(0xCE9929ABu,0x3E35FAFu,0xC6782DACu,0xDC2C9D2Fu));\n    A(uvec4(0xFFFF4250u,0x23265588u,0xF7DE258Au,0xCCCC9D55u));\n    A(uvec4(0xE75C2DACu,0x64FFCF28u,0xF79D3E0Fu,0xF3D7B308u));\n    A(uvec4(0xFFFF3E2Fu,0xDBDBDB8Eu,0xFFDF4250u,0xF959C910u));\n    A(uvec4(0xF7DE39EEu,0x32333355u,0xFFFF3DEEu,0xFF5FCB18u));\n    A(uvec4(0xF7DF39EEu,0x32337355u,0xB5D6298Bu,0x6010566Bu));\n    //-------------------------------------------------------------------------\n\tC = col;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "highp ivec2 SV_DispatchThreadID = ivec2(0,0);\nhighp int Double_pixelID = 0;\nhighp vec4 col = vec4(0.,0.,0.,0.);\nint i = 256;\n\n//pass !\nvoid A(uvec4 data){\n    \n    if(Double_pixelID == i++){\n        if((SV_DispatchThreadID.x & 0x1) == 0){\n        \tcol.xy = unpackUnorm2x16(data.s);\n    \t\tcol.zw = unpackUnorm2x16(data.t);\n        }\n        else{\n        \tcol.xy = unpackUnorm2x16(data.p);\n    \t\tcol.zw = unpackUnorm2x16(data.q);\n        }\n    }\n}\n\nvoid mainImage( out vec4 C, in vec2 U)\n{\n    SV_DispatchThreadID = ivec2(floor(U-0.5));\n    if(SV_DispatchThreadID.x >= 32 || SV_DispatchThreadID.y >= 32){\n    \tC = vec4(1./3.);\n        //return;\n    }\n    if(iFrame > 2){\n    \tC = texture(iChannel1,U/iResolution.xy);\n        //discard;\n    }\n    //1个像素存一个数据块\n    //16 x 32, 16为其中2个像素存2个块数据\n    //像素ID编号\n    Double_pixelID = (SV_DispatchThreadID.x>>1) + (SV_DispatchThreadID.y<<4); \n    //--------------------------------------------------------------------------\n\tA(uvec4(0x94D12D8Bu,0x84ADF6FFu,0x94D114E8u,0x1F0E0702u));\n\tA(uvec4(0x530B10E8u,0xC0C0906u,0x3A490CC8u,0x14182Du));\n\tA(uvec4(0xD6B604A6u,0xC0C04000u,0x9D140CC7u,0xFFF9F0D0u));\n\tA(uvec4(0x9D143E0Fu,0xC1C19151u,0x94F33E2Fu,0xB9B9B1B0u));\n\tA(uvec4(0x8CB13A0Eu,0x27074208u,0x8CD239EEu,0x3E796965u));\n\tA(uvec4(0x7C2F31CEu,0x116D67Eu,0x7C4F2DADu,0xC0BE1BA9u));\n\tA(uvec4(0x7C4F2DADu,0xD25C2F96u,0x63CD29ADu,0x5798A5B9u));\n\tA(uvec4(0x6C0E2DCCu,0x8551D075u,0xD6BA2DCCu,0xA0F03030u));\n\tA(uvec4(0xEF9E2169u,0x90C2CFF8u,0xD6DA2DCCu,0x152A29ADu));\n\tA(uvec4(0xE75C258Bu,0x4000003Au,0xF7BE2169u,0xAA0747FFu));\n\tA(uvec4(0xF7BE29ABu,0x20B8300u,0xFFFF2DACu,0x80D0A020u));\n\tA(uvec4(0xFFFF31EDu,0x10273u,0xF7DE3A0Eu,0x40C0CCu));\n\tA(uvec4(0xC6583E30u,0xDB2u,0xFFFE3E0Eu,0x2048B6u));\n\tA(uvec4(0xFFFF3E0Fu,0x4024E951u,0xF79E3E0Eu,0x1A1F5CAFu));\n\tA(uvec4(0xFFFF420Fu,0x9A43A22u,0xFFDF5293u,0x51F3FE4Du));\n\tA(uvec4(0xF7DE31ACu,0x2A3F3F32u,0x844F258Bu,0x31313132u));\n\tA(uvec4(0x8CB13E0Fu,0x156ABEFFu,0x84700445u,0x47EBFF7Fu));\n\tA(uvec4(0xAD521509u,0x3010000u,0x3A4A08A7u,0xC0400000u));\n\tA(uvec4(0xC6340486u,0x554B0E0u,0x94F30CA5u,0xFEFEFCFFu));\n\tA(uvec4(0xA5563E0Fu,0x5B824241u,0xA5344230u,0xE3A15170u));\n\tA(uvec4(0x9CD23A0Eu,0x57460906u,0x847031CDu,0x3B373A7Du));\n\tA(uvec4(0x6BCE2DADu,0x9005243u,0x63AE2DADu,0x2C000011u));\n\tA(uvec4(0x7C4E29ACu,0x404004BDu,0x742F256Bu,0x92D6E56Du));\n\tA(uvec4(0x8C902DCDu,0x94FD5E41u,0x8CB129ACu,0x551A1705u));\n\tA(uvec4(0x740E258Bu,0x56F4B131u,0x63CC258Bu,0x6B6F5640u));\n\tA(uvec4(0x8CCF2DCCu,0xE4A40010u,0x7C8F25ABu,0xE6BD9500u));\n\tA(uvec4(0x951025ABu,0xEDBEFA40u,0xADD32DCCu,0xA6EB1000u));\n\tA(uvec4(0x9D723A0Eu,0x6B152550u,0x94D13E2Fu,0xE5EF8B4u));\n\tA(uvec4(0x9D1235EEu,0x40027ADAu,0xB5942D8Bu,0xA595410Bu));\n\tA(uvec4(0xBDD431CDu,0x81979E9u,0x7C2F2DACu,0x1959AAFEu));\n\tA(uvec4(0x9CB1256Bu,0x8091FDF6u,0xB55335CDu,0xD89B4F4Eu));\n\tA(uvec4(0x9490256Au,0xFEFE5F0Eu,0x844F2D8Cu,0xBBFFFA81u));\n\tA(uvec4(0x84903A0Fu,0x50D9u,0x7C500485u,0x1B1B5706u));\n\tA(uvec4(0x84900CE7u,0x3D793D0Cu,0x534C08C7u,0x20C00000u));\n\tA(uvec4(0x7C4F0486u,0xD0C09588u,0x9D3435CDu,0xA4A5E4E4u));\n\tA(uvec4(0xAD964650u,0x1215060Fu,0xB5F84A51u,0x76B62E41u));\n\tA(uvec4(0xB5D739EDu,0x7070702u,0x94D239EDu,0x3B393539u));\n\tA(uvec4(0x7C0F298Cu,0xFF5B0A09u,0x7C10298Cu,0xBFAA0014u));\n\tA(uvec4(0x73CF29ACu,0xAE9BA440u,0x638D216Bu,0xA7A7D7C3u));\n\tA(uvec4(0x740F2DCDu,0xC9807DFDu,0x742F29ACu,0x86465795u));\n\tA(uvec4(0x5BCD258Bu,0xA5E98EF3u,0x5BAC25ABu,0x37FFAFFEu));\n\tA(uvec4(0x744E258Au,0xB896E5F5u,0x9D71360Du,0xAD136621u));\n\tA(uvec4(0xADF33A0Du,0x32DA16u,0xC674422Fu,0xC86C4085u));\n\tA(uvec4(0x94D13A0Fu,0xFFDD6D6Cu,0x9D1235EEu,0x5451030Eu));\n\tA(uvec4(0x9D1235EEu,0x7AB94104u,0x8C9031CDu,0x3C9B9B2Cu));\n\tA(uvec4(0x94B1258Bu,0x11556A7u,0x73CD298Bu,0xF4C00006u));\n\tA(uvec4(0x9490216Au,0x6EFBE9A0u,0xAD3335CCu,0x9045DBDEu));\n\tA(uvec4(0xA51239EEu,0x9B2B551Au,0x8C503A0Eu,0x24D8E466u));\n\tA(uvec4(0x740F31CDu,0x426EBFFFu,0x6BEE0CC7u,0x2F1F0F0Bu));\n\tA(uvec4(0xD5D20485u,0xF4D82828u,0xD5B20CC7u,0xF121010u));\n\tA(uvec4(0x73EE04A7u,0xF8F4F0E0u,0xB5D839EEu,0x80C04050u));\n\tA(uvec4(0xBE1A3E0Fu,0xB93D2815u,0xC69C4A73u,0xEC7CA965u));\n\tA(uvec4(0xC69B35EDu,0x1E1F0F0Bu,0xD6DC4230u,0x6D6C3010u));\n\tA(uvec4(0xA512298Cu,0x6075B99u,0x6BCE256Bu,0x1466FFu));\n\tA(uvec4(0x6BCF256Bu,0x4546D546u,0x6BAC298Bu,0x1A2C2951u));\n\tA(uvec4(0x94D231CDu,0xC0404040u,0x7C5029ACu,0x47494B06u));\n\tA(uvec4(0x63ED258Bu,0xD75D8472u,0x8CF1256Au,0x99691917u));\n\tA(uvec4(0xADD231EDu,0xE865C090u,0xB5F43A0Eu,0x15C47944u));\n\tA(uvec4(0xBE7435EEu,0x3091A19u,0x94F135EDu,0x818Du));\n\tA(uvec4(0xAD533A0Eu,0xDA4A1929u,0x9D123A0Eu,0x36FF594u));\n\tA(uvec4(0x94D13A0Eu,0x9501030Fu,0x94B131CCu,0xFB810105u));\n\tA(uvec4(0xA53235CCu,0x4B5E9100u,0x94902DACu,0xFFE017FDu));\n\tA(uvec4(0x949031CDu,0xBEAFBCC2u,0xA51239EEu,0x84DED8DEu));\n\tA(uvec4(0x94D1258Bu,0x60F6FFFu,0x94902DACu,0x40E4FFu));\n\tA(uvec4(0x6C0E2DACu,0x146157F6u,0x63CD08C7u,0x3F2F2F3Fu));\n\tA(uvec4(0xE65408A6u,0x55E4F8F4u,0xD5B210E8u,0x101030Bu));\n\tA(uvec4(0x6BEE08A6u,0xF0F8F0E4u,0x8C9131CDu,0x9080C0D0u));\n\tA(uvec4(0xD71E4672u,0xF0F4E464u,0xE75E35EEu,0xFFFDEDE8u));\n\tA(uvec4(0xC69B3A0Fu,0xE2AA9F0Fu,0xCE9A4671u,0x4A4D0D1Fu));\n\tA(uvec4(0xCDF6256Bu,0xA5B1A05u,0x6BCE256Bu,0x875FB810u));\n\tA(uvec4(0x5B6D256Bu,0x5194064Fu,0x638C256Bu,0xBD7FBCBCu));\n\tA(uvec4(0x8CB22DACu,0xD0C090D0u,0x84912DCDu,0x6F8F8B0Bu));\n\tA(uvec4(0x744F2DACu,0x317F22Cu,0x94B0258Bu,0x1AE6E885u));\n\tA(uvec4(0xB5F335EDu,0x92C0u,0xB5F33A0Du,0x50314053u));\n\tA(uvec4(0xBE3435EDu,0x41138u,0x7C2F35CDu,0xE4405D51u));\n\tA(uvec4(0xAD743A0Eu,0x59564AB6u,0x94D135EDu,0xFBFA9901u));\n\tA(uvec4(0xAD933E0Eu,0x5BF79A4u,0x9CF13E0Du,0x1F651717u));\n\tA(uvec4(0xA4F139EDu,0x1AD15BF9u,0x9CD12DACu,0x656BEEBu));\n\tA(uvec4(0x94902DACu,0x96Fu,0x7C0F298Bu,0xE1E1E5D6u));\n\tA(uvec4(0x7C0E298Bu,0x3030302u,0x8C2E29ACu,0xD0000010u));\n\tA(uvec4(0x6BED2DCCu,0x406FFC17u,0x742F1D4Bu,0x5BAAD535u));\n\tA(uvec4(0x5B2B0465u,0xFF7FECDDu,0x742F08A7u,0xE0D00100u));\n\tA(uvec4(0x73EE0086u,0xFFFDF8F6u,0x849131ACu,0xE0B09591u));\n\tA(uvec4(0xF7DF3E0Fu,0x4080D0u,0xF7BE4A92u,0x44697FBBu));\n\tA(uvec4(0xD6DC360Fu,0x1A7BEBD7u,0xDEDA360Eu,0x490187ABu));\n\tA(uvec4(0xB5B6258Bu,0x5055070Bu,0xBDD5258Bu,0xC011100u));\n\tA(uvec4(0x6BEF216Bu,0xC10u,0x73EC216Bu,0x7594B868u));\n\tA(uvec4(0x94F3298Cu,0xF0D0D0D0u,0xBE3A3A0Fu,0x103011u));\n\tA(uvec4(0x63AE2DADu,0x6E8BC2E6u,0x7C0F256Bu,0xE3A7A4E9u));\n\tA(uvec4(0x846F31CDu,0x581B1350u,0x9D1231CCu,0x30505050u));\n\tA(uvec4(0x73EF2DABu,0xF9F1F6DEu,0x9D1235EEu,0xC0D48080u));\n\tA(uvec4(0xA5324650u,0x6A6B2343u,0x9D1135EDu,0x8F5BA597u));\n\tA(uvec4(0xB5D63E0Eu,0xD9EA5B15u,0x94B0298Au,0x2D7F6FFFu));\n\tA(uvec4(0x7C2F298Bu,0x411546F7u,0x8470298Bu,0x4051FE01u));\n\tA(uvec4(0x7C0F2DACu,0x50FF0212u,0x73EE258Bu,0x11E2E1E1u));\n\tA(uvec4(0x9CB0298Bu,0xFDE04103u,0xAD5335ECu,0xF659A990u));\n\tA(uvec4(0x742E298Bu,0x6B757865u,0x848F31CCu,0xE8B41445u));\n\tA(uvec4(0xC5F431CCu,0xAFFFFC10u,0xAD500485u,0xEFFFBFB0u));\n\tA(uvec4(0x8C9235EDu,0xA6911AD7u,0x8CB131CCu,0xFE94B5E4u));\n\tA(uvec4(0x846F2DACu,0x8757DBFFu,0xC69C424Eu,0x20F4B468u));\n\tA(uvec4(0xB5D535EEu,0x703070Eu,0x9D3531CDu,0x60343Du));\n\tA(uvec4(0x9CF31D4Au,0x13535E1u,0xFFFF214Au,0x182Du));\n\tA(uvec4(0x4B0B1D4Au,0xF7196E1Bu,0x73ED256Bu,0x3300092Du));\n\tA(uvec4(0xA59629ACu,0xB0B0B0B0u,0x7C702DADu,0x75162737u));\n\tA(uvec4(0x5BAD298Bu,0x2F7F7F7Fu,0x848F2DACu,0x50D00040u));\n\tA(uvec4(0x8CD02DACu,0xD1A1959u,0xA51231CCu,0xC0C2830u));\n\tA(uvec4(0xAD5335CDu,0xA0D00000u,0xD65639EEu,0x3B0DB4A0u));\n\tA(uvec4(0xC5F539EEu,0x5493AF98u,0xCE754A70u,0x4B020306u));\n\tA(uvec4(0xADB63A0Fu,0x4A8386C5u,0x6BCD298Bu,0x41C69A00u));\n\tA(uvec4(0x7BEE298Cu,0x51030307u,0x638C298Cu,0xEBFEE554u));\n\tA(uvec4(0xA4F131CCu,0xFEE04000u,0xCE36258Bu,0xF6AAA990u));\n\tA(uvec4(0xC5F64A50u,0x3040010u,0xAD323E0Fu,0x7FB77AEu));\n\tA(uvec4(0x94CF35ECu,0x1E2D2112u,0x94AF3A0Du,0xB35E1540u));\n\tA(uvec4(0xBDF6422Eu,0xF008156Au,0xEF5D35ECu,0x17A28041u));\n\tA(uvec4(0xA53235ECu,0x54C0ECEAu,0xA5333E0Du,0x7BF5F05u));\n\tA(uvec4(0x9D113A0Eu,0x1417A0EEu,0xCEDD3E0Eu,0xA1E09095u));\n\tA(uvec4(0x9D533A2Fu,0x3F5F0303u,0x957131CCu,0x1408001Cu));\n\tA(uvec4(0x7C8F258Bu,0x2FC68101u,0x9531256Bu,0x10C00u));\n\tA(uvec4(0x6BAC216Bu,0x4140E0A0u,0x844F2DACu,0x5C2C2E1Fu));\n\tA(uvec4(0xC65A258Bu,0xF4F0B060u,0x84B129ACu,0xD2C2516u));\n\tA(uvec4(0x63AD258Bu,0xE1F5A569u,0x7C2E256Bu,0x5B59A4A5u));\n\tA(uvec4(0x6BED258Bu,0x89C2535Bu,0x740E298Bu,0xD4515B5Eu));\n\tA(uvec4(0xC5F631CCu,0xF1E8A054u,0xDEB84651u,0xFFBF7A39u));\n\tA(uvec4(0x8CB13A0Eu,0xFAE4B4F5u,0xCE1535CDu,0x55425DBEu));\n\tA(uvec4(0xC6583E0Fu,0x68094Bu,0x7BEE2DACu,0xD74A8941u));\n\tA(uvec4(0xAD3231CDu,0xFEE44000u,0xBD9335CCu,0xEFBEAA90u));\n\tA(uvec4(0xE6D85292u,0xB78E500u,0xDE975271u,0xA868E9F5u));\n\tA(uvec4(0xAD1239EEu,0x207465Bu,0x8C4F31CCu,0x400090D3u));\n\tA(uvec4(0x9CEF35EDu,0x2F2F0F06u,0xA531422Eu,0x7A6EA028u));\n\tA(uvec4(0x9D123A0Du,0xC443824u,0x8CB031CCu,0xBDA4170Au));\n\tA(uvec4(0x9D1231CCu,0x3071E5D8u,0x949035EDu,0x90D4A9AFu));\n\tA(uvec4(0xA5CE3E0Eu,0x400040F0u,0xBE1A422Eu,0xD0D0D1A4u));\n\tA(uvec4(0xB5D631EEu,0x7757562Fu,0xADB231CDu,0x5A313A04u));\n\tA(uvec4(0x844F256Bu,0x6B940001u,0x6BAD216Bu,0xAEFFE840u));\n\tA(uvec4(0x7C0E216Bu,0x6A5A9740u,0x9D1331CDu,0xD4040C04u));\n\tA(uvec4(0xDF1C2DCCu,0xB0E7CF8u,0x84B129ACu,0x5050503u));\n\tA(uvec4(0x5B6D216Bu,0x854506DBu,0x5B8C256Bu,0x3F3C3DFBu));\n\tA(uvec4(0x6BCE258Bu,0xB4B4D1C5u,0x84702DACu,0xEDEAE8D0u));\n\tA(uvec4(0xC6163E0Fu,0x4082C4E0u,0xE6F962D5u,0xF8B4ECAAu));\n\tA(uvec4(0xDEB84A51u,0x8030702u,0x84703DEDu,0xDB8BDBFFu));\n\tA(uvec4(0xB5744230u,0x94E09000u,0xBD94422Fu,0xE99BEF50u));\n\tA(uvec4(0xF7595272u,0x7654140u,0xD6564E51u,0x7B4u));\n\tA(uvec4(0xB55339EDu,0x10253FBFu,0xD65735CDu,0x104463u));\n\tA(uvec4(0x8C7035CDu,0xC0400205u,0xB5532DACu,0x65F5E140u));\n\tA(uvec4(0x9D4F29ACu,0x185D5E5Bu,0x9CD02DEDu,0xB051AB9Bu));\n\tA(uvec4(0x8C902DCCu,0x215FAE6Fu,0xB5932DACu,0xE4E5A46Au));\n\tA(uvec4(0xB5B535EDu,0xDA961130u,0x9D1231CDu,0xBFDB6E60u));\n\tA(uvec4(0x94CF3A0Eu,0x23377u,0xC69C35EDu,0xD0D090E0u));\n\tA(uvec4(0xBE183E0Eu,0x1B1B175Bu,0xC6353A0Eu,0xFu));\n\tA(uvec4(0x7C4F2DACu,0xFA5525Du,0x6BCE2DACu,0xFFDB593Au));\n\tA(uvec4(0x740F298Cu,0x78B8EE15u,0xB5F831CEu,0xC08081DCu));\n\tA(uvec4(0xC65A2DACu,0x2030706u,0x63AD256Bu,0x15A5A56Bu));\n\tA(uvec4(0x63EE258Bu,0xF8C04040u,0x5B8C256Bu,0x77574F1Fu));\n\tA(uvec4(0x63AD298Bu,0xDECFFDBCu,0x847031EDu,0xF5FCF4E0u));\n\tA(uvec4(0x847031ACu,0xAAA1425Eu,0xDED839CDu,0x6468B469u));\n\tA(uvec4(0xBDF54230u,0x80021117u,0xBDD44631u,0x2034304u));\n\tA(uvec4(0xC6144630u,0x16579010u,0xC5F54A2Fu,0x9090A0EBu));\n\tA(uvec4(0xBD944A50u,0x1BBBFA42u,0x9CD139EEu,0x1102136Bu));\n\tA(uvec4(0x73EE31CCu,0xD8035A5Bu,0xE69831CDu,0x81D09040u));\n\tA(uvec4(0xC5F531CCu,0x361E4u,0xB57339EDu,0x10043u));\n\tA(uvec4(0x744E10E7u,0xE8F9FFFEu,0xADD231EDu,0x40000FC5u));\n\tA(uvec4(0xBE33360Eu,0x314BFAAu,0xC655360Eu,0x47u));\n\tA(uvec4(0xB5F73E2Eu,0x846458E2u,0xA59631CDu,0x1A5F1F1Fu));\n\tA(uvec4(0x7C6F2DADu,0x4409A6Fu,0xD6DC39EEu,0xDCC0C0D0u));\n\tA(uvec4(0xC65A4251u,0x1F0B1B07u,0x7C2F298Cu,0xC286D307u));\n\tA(uvec4(0x73EE298Bu,0xBF6A1F21u,0x740E29ACu,0xFFB9ACF1u));\n\tA(uvec4(0x8CD32DCDu,0xC5C4C014u,0xD6DC31CEu,0x1480D0C0u));\n\tA(uvec4(0x7450216Bu,0x14101557u,0x84B2258Cu,0x4111B901u));\n\tA(uvec4(0x5B6D216Bu,0xAB9D93EAu,0x63AD258Bu,0xE6F5A993u));\n\tA(uvec4(0x63AD2DACu,0xFBA782C3u,0x8C9035EDu,0x7974B4B8u));\n\tA(uvec4(0x847035EDu,0xD4A55655u,0xC6364650u,0xC0C0u));\n\tA(uvec4(0xC5F54650u,0xD00040C1u,0x9491420Eu,0x9E3F7FBEu));\n\tA(uvec4(0x94B1422Fu,0x2A1F6F7Fu,0xB553422Fu,0x50E0u));\n\tA(uvec4(0xA4D13A0Eu,0x1919566Bu,0x8C9035EDu,0xC0950151u));\n\tA(uvec4(0x94D135EDu,0x402C6C4u,0x9CF22D8Bu,0x5D2A1ACEu));\n\tA(uvec4(0x73EE2DACu,0xD2949657u,0x7C2E35CDu,0x203A955u));\n\tA(uvec4(0x84EF0CC7u,0x9090B0B4u,0xADD229CCu,0x400164F0u));\n\tA(uvec4(0xB6132DEDu,0x4040400Fu,0xB6123A2Eu,0x42031100u));\n\tA(uvec4(0x94F235EEu,0x169AE694u,0xF7BD3A0Eu,0xE0E4C400u));\n\tA(uvec4(0xBE1729ACu,0x97A23000u,0xF79C298Bu,0x94BCBCADu));\n\tA(uvec4(0xD6BC2DACu,0x30F3F6Fu,0x73EE298Cu,0xA5EAFD3u));\n\tA(uvec4(0x73EE2DADu,0xD84A65EAu,0x8C912DADu,0x6002E3Fu));\n\tA(uvec4(0x742F216Bu,0x22396E9Fu,0xC69C258Cu,0x30201125u));\n\tA(uvec4(0x5BCF1D6Bu,0x68586667u,0x63AE256Bu,0xA1A1D1F1u));\n\tA(uvec4(0x63AE298Cu,0xEFCF9A67u,0x63CD2DACu,0x58E4E0D0u));\n\tA(uvec4(0x73EE31CCu,0x4A66F5F2u,0xA53239EEu,0x4102030u));\n\tA(uvec4(0x7C4F35EEu,0xB568F8E4u,0x94D13E0Fu,0xE4A5A9A5u));\n\tA(uvec4(0xC5F54A51u,0xC4100070u,0xCE164A51u,0x43004040u));\n\tA(uvec4(0xCE364651u,0xD8030100u,0xF75A420Fu,0xB5500000u));\n\tA(uvec4(0xEF193E0Eu,0x3F1F0400u,0x847035CDu,0x324081C0u));\n\tA(uvec4(0x7C2F31CCu,0x455A687Du,0x8C7035CDu,0x100040Cu));\n\tA(uvec4(0x7C2F35CDu,0xD0304001u,0xA53335EDu,0xE0504040u));\n\tA(uvec4(0x5B6C04A5u,0x110000D0u,0x5BAD0485u,0x505056BFu));\n\tA(uvec4(0x84AC14E8u,0x40C081u,0x84AF29ACu,0x45E8A2E4u));\n\tA(uvec4(0xBE1331EDu,0x4404475u,0xF77C2DCDu,0x101010D5u));\n\tA(uvec4(0x8CD2298Cu,0x40940053u,0xA59631ADu,0x2A0D1D59u));\n\tA(uvec4(0xC65A2DACu,0xB070303u,0x7C2F256Bu,0x20351Au));\n\tA(uvec4(0x7C0E216Bu,0x3024259Du,0x63CE258Bu,0x941080DDu));\n\tA(uvec4(0x6C0F1D6Bu,0xEDB9F635u,0xBE3A2DCDu,0x74743030u));\n\tA(uvec4(0x740E258Bu,0x55FABA40u,0x740F29ACu,0x74BB5300u));\n\tA(uvec4(0x63AE2DACu,0x4D7FBEBFu,0x73EE2DACu,0xFCBC9D54u));\n\tA(uvec4(0x94D131CDu,0x2C09030u,0xD6573E0Eu,0x3000000u));\n\tA(uvec4(0x94913A0Eu,0xF1F5F1A1u,0xE71B4A71u,0x90010300u));\n\tA(uvec4(0xD6784E72u,0xBE151080u,0xFFFD5272u,0x1557u));\n\tA(uvec4(0xF79C5272u,0x50549AE5u,0xEF5B5ED4u,0x98FCF5F8u));\n\tA(uvec4(0xF77C56B4u,0x3D3F2F3Fu,0xE73B39EEu,0x9090C040u));\n\tA(uvec4(0xA53335CDu,0xEE500105u,0x7C2F35CDu,0x6D734450u));\n\tA(uvec4(0x8C7035EDu,0xA6D11040u,0xBDB53E0Eu,0xAE905440u));\n\tA(uvec4(0x2A0804A5u,0x77EFFD83u,0x326908A6u,0xD5E195A0u));\n\tA(uvec4(0x63CD1508u,0xA91D0400u,0xC6941929u,0x505Cu));\n\tA(uvec4(0x6C2E1509u,0x80B66AAAu,0x9D33258Bu,0xCEE0F1B2u));\n\tA(uvec4(0x9D732DABu,0xD98A8544u,0x951331CDu,0xA2EDE187u));\n\tA(uvec4(0xC63931CDu,0xA151B0Fu,0x8CB0258Bu,0x9E996000u));\n\tA(uvec4(0xAD942DCBu,0xB9900100u,0xB5532DCCu,0x54F95000u));\n\tA(uvec4(0x9D1229CBu,0xFFEFF998u,0xF79D2DCCu,0xAB64B850u));\n\tA(uvec4(0xEF5C4E94u,0xFF844D00u,0xE71B35EEu,0xFFFFFD12u));\n\tA(uvec4(0xE71C31ADu,0x7F2F1F09u,0x7C2F2DACu,0xFAEAB6D8u));\n\tA(uvec4(0xBDB539EDu,0xE0A00000u,0xB5733E0Eu,0x184Du));\n\tA(uvec4(0x9CD239EDu,0xA9D5C190u,0xF75C4E51u,0xC1E0F0E0u));\n\tA(uvec4(0xF77C739Bu,0xA8E9AA05u,0xE71A5292u,0x2077F1Bu));\n\tA(uvec4(0xCE375272u,0x71750D0u,0xD6975692u,0xE2FCFDEAu));\n\tA(uvec4(0xDEB86716u,0xC00098D3u,0xF77B52B3u,0x99A9AE41u));\n\tA(uvec4(0xCE164E71u,0xFF5F6F1Fu,0xC5B54A51u,0x5BAAB910u));\n\tA(uvec4(0xCE165693u,0x5EAA41u,0xC5D55693u,0x4099FE0Du));\n\tA(uvec4(0x21C704A5u,0x1009Bu,0x2A0808A6u,0xE050A068u));\n\tA(uvec4(0x32490CC6u,0x1901EAEu,0x2A080485u,0xCBF5F8FFu));\n\tA(uvec4(0x3AAA0CC7u,0x5025FA1Au,0x742F0CC7u,0x40B00050u));\n\tA(uvec4(0x63AE04A6u,0x7A1500ADu,0x7C700CC7u,0xC0B4FDu));\n\tA(uvec4(0xF79C31CDu,0x7F7D9010u,0xB5D63E2Eu,0x9E954142u));\n\tA(uvec4(0xD6DA3E2Eu,0xD9C0C401u,0xE73C3E2Du,0xFFAB9300u));\n\tA(uvec4(0xE71B56D4u,0xFFFEFEACu,0xEF5C739Bu,0xAB89403Du));\n\tA(uvec4(0xE73C52B4u,0xCFFFFFFFu,0xE73C3E10u,0x4FFFFFFFu));\n\tA(uvec4(0xE73C6718u,0x1EFBFFFFu,0xEF5D3E0Eu,0x43020100u));\n\tA(uvec4(0x842F39EEu,0x83D8E7C5u,0xC5F5422Fu,0xC8E0B0u));\n\tA(uvec4(0xBDB4422Fu,0x12034040u,0xD6564A50u,0xE85u));\n\tA(uvec4(0xE73B4E71u,0x4044FEu,0xAD534A50u,0x8441FEu));\n\tA(uvec4(0xBD944650u,0x1094797Eu,0xCE365292u,0x109172u));\n\tA(uvec4(0xD6765AB3u,0xB8ACB9B6u,0xE7196B36u,0xC4800000u));\n\tA(uvec4(0xDE976F56u,0xFFFFFCFFu,0xE6B96716u,0x1595716Du));\n\tA(uvec4(0xD67862D5u,0x565B5F1Bu,0xD6375AB3u,0xFFFFFF01u));\n\tA(uvec4(0x198604A5u,0x2F1F0302u,0x11660000u,0xFFFFFFFFu));\n\tA(uvec4(0x4B2B08A6u,0xD0000000u,0x42CA08A6u,0x43000004u));\n\tA(uvec4(0x29E808A6u,0xEBF8BD7Fu,0x9D5208A6u,0x80E4FD47u));\n\tA(uvec4(0xE6FA1929u,0xFEFEBE00u,0xDEFA0CC6u,0xFFFFEB3Bu));\n\tA(uvec4(0xF79DDEF6u,0x7F4BE1BDu,0xD6BA94E8u,0xF8FFFFFFu));\n\tA(uvec4(0xE71C4A92u,0xFFFFFFF8u,0xE75C739Bu,0x45C55555u));\n\tA(uvec4(0xE73C739Cu,0x177DF77Du,0xE75C35CEu,0xFF2F0F3Fu));\n\tA(uvec4(0xE71B31CDu,0x7BF5B0CDu,0xC63831CDu,0x6502004Bu));\n\tA(uvec4(0xD69A31CCu,0x2A7A0005u,0x9CB339EEu,0x5050D010u));\n\tA(uvec4(0xB594420Fu,0x105C01u,0x9CD1422Fu,0xB9F54114u));\n\tA(uvec4(0xAD324650u,0xDCEBAD50u,0xB5524230u,0xFE3F1941u));\n\tA(uvec4(0x9D124650u,0x20000B4u,0x9CF14650u,0xAD040155u));\n\tA(uvec4(0xA5524650u,0x953854A0u,0xBDD44E71u,0xD48010u));\n\tA(uvec4(0xDE975291u,0x588929B2u,0xDE9756B3u,0xF1FBBEAFu));\n\tA(uvec4(0xEF3B6316u,0xB6FEA515u,0xEF5B62D6u,0xFFFF5A00u));\n\tA(uvec4(0xF75B62F6u,0xFFFF0040u,0xF77C62F6u,0x5F454000u));\n    //--------------------------------------------------------------------------\n\tC = col + texelFetch(iChannel0,SV_DispatchThreadID,0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/********************************************************\n\tHere is ATITC(ATC) Decoder\nATITC is also Block Compression,\n\nAbout knowledge:\nNone Find!!!\n*********************************************************/\n//-----------------------------------------------\nvec4 data = vec4(0.);\nvoid CombineBinary(ivec2 coord){\n    data = texelFetch(iChannel0,coord>>2,0);//x,y,z,w 16,16,16,16\n}\n//-----------------------------------------------\nuvec2 uintData = uvec2(0u);\nvoid GetUintData(){\n\tuintData.x = packUnorm2x16(data.st);//32bits\n\tuintData.y = packUnorm2x16(data.pq);//32bits\n}\n//-----------------------------------------------\nstruct BlockData{\n\tvec3 color0;\n    vec3 color1;\n    uint index;\n};\nBlockData myBlockData;\nvoid Unpack2BlockData(){\n    myBlockData.color0.b = float((uintData.x & 31u) << 3);\n    uintData.x >>= 5;\n    myBlockData.color0.g = float((uintData.x & 31u) << 3);\n    uintData.x >>= 5;\n    myBlockData.color0.r = float((uintData.x & 31u) << 3);\n    uintData.x >>= 6;\n    \n    myBlockData.color1.b = float((uintData.x & 31u) << 3);\n    uintData.x >>= 5;\n    myBlockData.color1.g = float((uintData.x & 63u) << 2);\n    uintData.x >>= 6;\n    myBlockData.color1.r = float((uintData.x & 31u) << 3);\n    myBlockData.index = uintData.y;\n}\n//------------------------------------------------\nvec3 DeocodeDigit(uint index){\n    vec3 tmpCol = vec3(0.);\n    if(index == 0u){\n    \ttmpCol = myBlockData.color0;\n    }\n    else if(index == 3u){\n\t\ttmpCol = myBlockData.color1;\n    }\n    if(index == 2u)\n        tmpCol = mix(myBlockData.color0,myBlockData.color1,2./3.);\n    else if(index == 1u)\n        tmpCol = mix(myBlockData.color0,myBlockData.color1,1./3.);\n    return tmpCol;\n}\n//------------------------------------------------\nvec3 color = vec3(0.);\nvoid DecodeATITC(ivec2 coord){\n\tivec2 chunkCoord = coord & 3;\n    int pixelID = chunkCoord.x + (chunkCoord.y<<2);\n\tcolor = DeocodeDigit((myBlockData.index >> (pixelID*2)) & 3u);\n}\n//------------------------------------------------\nvec3 GetATITC_Color(ivec2 coord){\n    if(coord.x>=128 || coord.y>=128){\n        return vec3(0.);\n    }\n    CombineBinary(coord);\n    GetUintData();\n    Unpack2BlockData();\n    DecodeATITC(coord);\n\treturn color/255.;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n\thighp ivec2 SV_DispatchThreadID = ivec2(U-0.5);\n    //-----------\n\tC = vec4(GetATITC_Color(SV_DispatchThreadID),1.); \n\t\t\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}