{
    "Shader": {
        "info": {
            "date": "1485871124",
            "description": "remix of https://www.shadertoy.com/view/MlVXDy\nby yousry\ntried my own implementation =)\n\noriginal source : http://quietkit.com/box-breathing/\n\nnot perfect though",
            "flags": 0,
            "hasliked": 0,
            "id": "4tyXDK",
            "likes": 0,
            "name": "Box Breathing Remix",
            "published": 3,
            "tags": [
                "2d",
                "flat",
                "remix"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 704
        },
        "renderpass": [
            {
                "code": "#define PI 3.14\n#define _Smooth(p,r,s) smoothstep(-s, s, p-(r))\n\n#define CYCLE_DURATION 16.\n\n\n//I need to add comment to make this more readable\n\n//edit added code to handle phone in portrait mode\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv =(fragCoord - iResolution.xy/2.); \n    float smoothFactor = 1.; \n    \n    float scaleSelect = step(iResolution.x,iResolution.y);\n   \tfloat scaleDown = scaleSelect * iResolution.x + (1. - scaleSelect) * iResolution.y;\n    \n    uv /= scaleDown;\n    smoothFactor /= scaleDown;\n    \n    float len = length(uv);\n    \n    float time = fract(iTime / CYCLE_DURATION);\n    \n    \n    fragColor = vec4(1.);\n    float backRadius = .4;\n    float background = _Smooth(len,backRadius,.01);\n    \n    vec4 backgroundColor = vec4(.8);\n    \n    fragColor = mix(fragColor,backgroundColor,background);\n    \n    vec4 circleColor = vec4(0.,0.,1.,1.);\n    \n    float circleMinRadius = .12;\n    float circleMaxRadius = .36;\n    \n    float currentCircleProgression = (abs(time * 2. - 1.) * 2. - .5);\n    currentCircleProgression = clamp(currentCircleProgression,0.,1.);\n    currentCircleProgression = sin(currentCircleProgression * PI - PI / 2.) * .5 + .5;\n    \n    float innerCircle =1. - _Smooth(len, circleMinRadius + (circleMaxRadius - circleMinRadius) * currentCircleProgression, smoothFactor);\n    \n    \n    fragColor = mix(fragColor,circleColor,innerCircle);\n    \n    \n    float rimThikness = .025;\n    float rim =_Smooth(len, backRadius - rimThikness,smoothFactor) * _Smooth(backRadius + rimThikness,len,smoothFactor);\n    \n    vec4 rimColor = vec4(0.,0.,0.,1.);\n    float angle = atan(uv.y,uv.x);\n    vec4 rimFilledColor = vec4(.1,.2,.1,1.);\n    \n    float rimAnimationSpeed = PI * 2. * 2. ;\n    \n    float timeOffset = -2.;\n    time = fract((iTime + timeOffset) / CYCLE_DURATION);\n    \n    float fill = _Smooth(angle + PI ,time * rimAnimationSpeed,smoothFactor);\n    float unFill =  1. - _Smooth(angle + PI ,(time - .5) * rimAnimationSpeed,smoothFactor);\n    float separator = step(time,.5);\n    float currentFill = separator * fill + (1. - separator) * unFill;\n    \n    rimColor = mix(rimColor,rimFilledColor,currentFill);\n    \n    fragColor = mix(fragColor,rimColor,rim);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}