{
    "Shader": {
        "info": {
            "date": "1693577127",
            "description": "Third Iteration of Blobby Lights. Each blob now consists of several subblobs, leading to more complicated shapes. Movement is mostly random, inspired by a Lava Lamp projector.",
            "flags": 0,
            "hasliked": 0,
            "id": "ctffDl",
            "likes": 1,
            "name": "Blobby Lights III",
            "published": 3,
            "tags": [
                "blobs",
                "simple",
                "metablobs",
                "colorful",
                "lavalamp",
                "ambient"
            ],
            "usePreview": 0,
            "username": "Dem0g",
            "viewed": 101
        },
        "renderpass": [
            {
                "code": "#define LINES 10.0\n#define METABLOBS 10.0\n#define SUBBLOBS 5.0\n#define FF 1.0\n#define SMOOTHNESS 1.5\n#define EXPOSURE 0.9\n\nfloat rand(float x) {\n    return fract(sin(dot(vec2(x,x),\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvec2 cubic_hermite(vec2 p0, vec2 p1, vec2 v0, vec2 v1, float t) {\n    float sq = t*t;\n    float cu = t*t*t;\n    \n    float h1 = 2.*cu-3.*sq+1.;\n    float h2 = -2.*cu+3.*sq;\n    float h3 = cu - 2.*sq + t;\n    float h4 = cu - sq;\n    return h1*p0+h2*p1+h3*v0+h4*v1;\n}\n\n//sinc comb. Good start: sharpness of 10\nfloat comb(float phase, float density, float sharpness){\n    float signed_mod = mod(phase,density) - density/2.0;\n    float sinc = sin(signed_mod * sharpness)/(signed_mod*sharpness);\n    return pow(sinc,SMOOTHNESS);\n}\n\nvec2 random_path(float t, float seed){\n    vec2 pos0 = random2(vec2(seed,floor(t)));\n    vec2 pos1 = random2(vec2(seed,floor(t+1.)));\n    vec2 vel0 = random2(vec2(floor(t),seed));\n    vec2 vel1 = random2(vec2(floor(t+1.),seed));\n    return cubic_hermite(pos0,pos1,vel0,vel1,fract(t));\n}\n\nvec2 combed_path(float t, float seed, float comb) {\n    float offset = max(0.5,2.0*comb);\n    vec2 pos0 = random2(vec2(seed,floor(t)));\n    vec2 pos1 = random2(vec2(seed,floor(t+1.)));\n    float a0 = atan(pos0.x,pos0.y);\n    float a1 = atan(pos1.x,pos1.y);\n    float r0 = length(pos0)*offset;\n    float r1 = length(pos1)*offset;\n    pos0.x = r0 * cos(a0);\n    pos0.y = r0 * sin(a0);\n    pos1.x = r1 * cos(a1);\n    pos1.y = r1 * sin(a1);\n    vec2 vel0 = random2(vec2(floor(t),seed));\n    vec2 vel1 = random2(vec2(floor(t+1.),seed));\n    return cubic_hermite(pos0,pos1,vel0,vel1,fract(t));\n}\n\nfloat blob(vec2 uv, vec2 pos, float brightness, float spotlight, float cutoff){\n    float d = distance(uv,pos);\n    float mul = 2.0*(d*d*d)/(cutoff*cutoff*cutoff) - 3.0*(d*d)/(cutoff*cutoff) + 1.0;\n    return d < cutoff ? mul*brightness*exp(-spotlight*d) : 0.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv *= 2.;\n    float a = 1.3;//+noise(vec2(iTime*0.01,1.0))*10.;\n    float b = 4.0;//+noise(vec2(iTime*0.01,2.0))*10.;\n    float c = 10.0;\n    float field = 0.0;\n    vec3 color_field = vec3(0.0,0.0,0.0);\n\n    for(float i = 0.0; i<METABLOBS; i = i + 1.0){\n        float t = iTime * 0.03 * FF + (i)*1.0/(METABLOBS);\n        float blob_field = 0.0;\n        vec3 col = vec3(\n            rand(i)*EXPOSURE,\n            rand(i+0.1)*EXPOSURE,\n            rand(i-0.1)*EXPOSURE);\n        vec2 pos = combed_path(t, i,comb(iTime*0.05*FF+i,METABLOBS,0.3));\n        for( float j = 0.0; j<SUBBLOBS; j = j + 1.0){\n            float index = (i*METABLOBS+j);\n            col = mix( col, vec3(0.0), 0.12);\n            vec2 offset = 0.3*random_path(t, index);\n            float blob = blob( uv, pos+offset, a, b, c);\n            blob_field += blob;\n            color_field += col * blob;\n        }\n    }\n    \n\n\n    //vec3 col = vec3(field);\n    vec3 col = color_field;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}