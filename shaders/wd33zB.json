{
    "Shader": {
        "info": {
            "date": "1568777158",
            "description": "homework",
            "flags": 0,
            "hasliked": 0,
            "id": "wd33zB",
            "likes": 0,
            "name": "Equipotential lines",
            "published": 3,
            "tags": [
                "distance"
            ],
            "usePreview": 0,
            "username": "10000volts",
            "viewed": 423
        },
        "renderpass": [
            {
                "code": "#define VOLTAGE         15.\n#define CHARGE_COUNT    4\n#define EPSILON         8.854187817e-12\n#define PI              3.1415927\n// iResolution.y / meter\n#define RATIO           30.\n// hint point\n#define RADIUS          .75\n#define ACCURACY        .9\n\nstruct Charge{\n    float q;\n    vec2 position;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.y;\n    float p = iResolution.x / iResolution.y;\n    \n    Charge c[4];\n    c[0] = Charge(-1.0e-7, vec2(p * 7./24., 1./3.));\n    c[1] = Charge(1.0e-7, vec2(p * 15./24., 1./3.));\n    c[2] = Charge(1.0e-7, vec2(p * 9./24., 2./3.));\n    c[3] = Charge(-1.0e-7, vec2(p * 17./24., 2./3.));\n    \n    float e; // potential\n    float k = 1. / EPSILON / 4. / PI;\n    for(int i = 0; i < CHARGE_COUNT; ++i){\n        if(distance(uv, c[i].position) * RATIO <= RADIUS){\n    \t\tfragColor = vec4(c[i].q * 3. * 10e5, 0., c[i].q * 3. * -10e5, 1.0);\n            return;\n        }\n    \te += c[i].q * k / distance(uv, c[i].position) / RATIO;\n    }\n    float flag = 1.;\n    if(e < 0.){\n    \te = -e;\n        flag = 0.;\n    }\n    float col = 0.2;\n    \n    float f = ceil((e - VOLTAGE / 2.) / VOLTAGE);\n    if (f > 0.) {\n        e -= f * VOLTAGE;\n        col += f * .04;\n    }\n    if(abs(e) <= ACCURACY){\n        if(f == 0.){\n            fragColor = vec4(1.0);\n            return;\n        }\n        if(flag == 1.){\n        \tfragColor = vec4(col, 0., 0.2, 1.0);\n        }\n        else{\n        \tfragColor = vec4(0.2, 0., col, 1.0);\n        }\n        return;\n    }\n    fragColor = vec4(0.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}