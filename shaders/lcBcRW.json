{
    "Shader": {
        "info": {
            "date": "1721963722",
            "description": "bruh",
            "flags": 0,
            "hasliked": 0,
            "id": "lcBcRW",
            "likes": 1,
            "name": "jul252024",
            "published": 3,
            "tags": [
                "popart"
            ],
            "usePreview": 0,
            "username": "brendanluu",
            "viewed": 78
        },
        "renderpass": [
            {
                "code": "vec3 palette(float t) {\n    vec3 a = vec3(0.027,0.494,0.690);\n    vec3 b = vec3(0.333,0.169,0.263);\n    vec3 c = vec3(0.310,0.012,0.216);\n    vec3 d = vec3(0.416,0.165,0.165);\n    \n    return a + b*cos(6.28318*(c*t-d) );\n}\n\nfloat vignette(vec2 uv, float radius, float softness) {\n    float d = length(uv);\n    float v = smoothstep(radius, radius - softness, d);\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; \n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 1.; i++) {\n        float d = length(uv);\n        vec3 col = palette(iTime / 3.0 + i);\n        d = sin(d * 3.0 + (iTime) / 4.0) / 8.0;\n        d = abs(d);\n        d = 0.05 / d;\n        finalColor += col / d;\n    }\n\n    float d = length(uv);\n    vec3 col = palette(d);\n    d = cos(d*1.3 + (iTime))/8.;\n    d = abs(d);\n    d = 0.035 / d;\n    col *= d;\n\n    // Apply vignette\n    float vig = vignette(uv, 0.95, 0.85);  // Adjust radius and softness as needed\n    finalColor *= vec3(vig);\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}