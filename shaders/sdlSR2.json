{
    "Shader": {
        "info": {
            "date": "1618906267",
            "description": "距离场测试,api来源https://www.shadertoy.com/view/4syGWK\n通过图片生成距离场\nGenerate a distance field from an image",
            "flags": 32,
            "hasliked": 0,
            "id": "sdlSR2",
            "likes": 0,
            "name": "距离场测试",
            "published": 3,
            "tags": [
                "2d",
                "distance"
            ],
            "usePreview": 0,
            "username": "AFStar",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y,1.0); \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = (uv * 2.0 - 1.0) * aspect;    \n    vec2 nearest = texture(iChannel1,fragCoord.xy / iResolution.xy).xy / iResolution.xy;\n    vec2 p = (nearest * 2.0 - 1.0) * aspect;\n    float d = length(uv - p) * 5.;// * iMouse.x * 0.05;\n    fragColor = vec4(nearest,0.0, 1.0);\n    fragColor = vec4(d);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 uv = fragCoord / iResolution.xy;\n        vec4 color = texture(iChannel1,uv);\n     \n        fragColor=color;\n\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 load0(ivec2 p) {\n    vec2 uv = (vec2(p)-0.5) / iChannelResolution[0].xy;\n    return texture(iChannel0, uv);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //float nb = iMouse.y / iResolution.y;\n    float iter = mod(float(iFrame),500.0) / 50.;\n    if (iter < 0.5) {\n        vec2 uv = fragCoord / iResolution.xy;\n        //uv.x = clamp(uv.x * iResolution.x / iResolution.y, 0.0, 1.0);\n        vec4 color = texture(iChannel1,uv);\n        float lum = step(color.r,0.5);\n        if (lum < 0.4) {\n            fragColor=vec4(fragCoord,0.0,0.0);\n        } else {\n            fragColor= vec4(0.0);\n        }\n    } else {\n        float level = clamp(iter-1.0,0.0,11.0);\n        int stepwidth = int(exp2(11.0 - level)+0.5);        \n        ivec2 tc = ivec2(fragCoord + 0.5);        \n        float best_dist = 999999.0;\n        vec2 best_coord = vec2(0.0);\n        vec2 center = vec2(tc);\n        for (int y = -1; y <= 1; ++y) {\n            for (int x = -1; x <= 1; ++x) {\n                ivec2 fc = tc + ivec2(x,y)*stepwidth;\n\t\t        vec2 ntc = load0(fc).xy;\n                float d = length(ntc - center);\n                if ((ntc.x != 0.0) && (ntc.y != 0.0) && (d < best_dist)) {\n                    best_dist = d;\n                    best_coord = ntc;\n                }\n            }\n        }        \n        fragColor=vec4(best_coord,0.0,0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}