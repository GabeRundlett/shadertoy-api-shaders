{
    "Shader": {
        "info": {
            "date": "1682058559",
            "description": "A zellij tile pattern.\nClick and drag to move around.",
            "flags": 40,
            "hasliked": 0,
            "id": "clcGRM",
            "likes": 4,
            "name": "Zellij pattern 6 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic",
                "zellige"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        abs(fract((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 draggedPos = texelFetch(iChannel0, ivec2(1,0), 0).xy;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/8.0;\n    uv -= draggedPos/iResolution.y/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    //uv = mod(uv,1.)+vec2(1.,0.);\n    for(int k = 0; k < 12; k++){\n        uv =\n            abs(.5-uv+t2)/1.5\n        ;\n        b = uv.y<uv.x;\n        if(b) uv = uv.yx;\n        t2 =\n            -triangle_wave(uv+.5).yx\n        ;\n        uv =\n            t2-triangle_wave(uv.yx-1.).yx\n        ;\n        {uv=uv*sign(uv.y-uv.x);}\n        col.x =\n            max(sign(uv.x-t2.y),col.x)\n        ;\n        //if(uv.y<0.)\n        col =\n            abs(col.yzx-float(b)/2.)\n        ;\n        //if(t2.x>t2.y) uv.x -= .5;\n\n    }\n    if (!b) col = 1.-col;\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a, float b,float f1){\n    //a += floor(a/b)/b*8.;\n    return\n        mod(floor(a/f1),b)\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  //time *= 2.;\n  float\n  s1 = 8.,\n  f1 = pow(2.,2.+mod(floor(time/2.),3.)),\n  t=time/(1.+fmod(time*f1,2.,f1)),\n  m3 =\n      floor(fmod(floor(t*f1+fmod(t*s1,s1,f1)),s1,f1)/2.)\n  ;\n  t *= s1*s1/(1.+fmod(t*f1/s1,2.,f1));\n  float a=2.*sqrt((1.-sqrt(max(fract(t/s1/s1/2.),fract(t/s1/2.))))),\n  nb = pow(2.,(m3+1. + fmod(t/s1,s1,f1))/5.+6.5);\n  return abs(.5-vec2(fract(time*nb*.998),fract(time*nb)))*a;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "//from https://www.shadertoy.com/view/dtGGzK\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = vec4(0);\n    if (floor(fragCoord) == vec2(1,0)) {\n        vec2 prevpos = texelFetch(iChannel0, ivec2(1,0), 0).zw; //previous dragged mouse pos\n        vec4 mp = texelFetch(iChannel0, ivec2(2,0), 0); //prev mouse pos\n        vec4 m = iMouse; //current mouse pos\n        \n        //if mouse button up\n        if (m.z < 0.0 && mp.z >= 0.0){\n            col = texelFetch(iChannel0, ivec2(1,0), 0).xyxy;\n        } else if (m.z >= 0.0){\n            col = vec4(m.xy - abs(m.zw) + prevpos, prevpos);\n        } else {\n            col = texelFetch(iChannel0, ivec2(1,0), 0);\n        }\n    }\n    //the last mouse position\n    if (floor(fragCoord) == vec2(2,0)) {\n        col = iMouse;\n    }\n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}