{
    "Shader": {
        "info": {
            "date": "1578654385",
            "description": "Just learning 2D sdfs :)",
            "flags": 0,
            "hasliked": 0,
            "id": "WdtXz2",
            "likes": 64,
            "name": "Moving ink",
            "published": 3,
            "tags": [
                "2d",
                "sdf",
                "ink"
            ],
            "usePreview": 0,
            "username": "jaszunio15",
            "viewed": 2030
        },
        "renderpass": [
            {
                "code": "//Shader License: CC BY 3.0\n//Author: Jan Mr√≥z (jaszunio15)\n\nfloat sphereSDF(vec2 point, float radius)\n{\n\treturn length(point) - radius;\n}\n\nvec2 sphereCenter(vec2 rootUV)\n{\n \tfloat hash = hash12(rootUV);\n    vec2 relativePos = vec2(sin(hash * 532.121 + TIME * 2.0), cos(hash * 532.121 + TIME * 2.0)) * 0.5 + 0.5;\n    return rootUV + relativePos;\n}\n\n\nfloat addObjects(float o1, float o2)\n{\n \treturn min(o1, o2);   \n}\n\nfloat addObjectsSmooth(float o1, float o2, float smoothness)\n{\n    float k = clamp((o1 - o2) / smoothness * 0.5 + 0.5, 0.0, 1.0);\n    return mix(o1, o2, k) - k * (1.0 - k) * smoothness;\n}\n\nfloat sphereGridSDF(vec2 point, float radius, float gridScale)\n{\n    point *= gridScale;\n \tvec2 rootUV = floor(point);\n    float minSDF = 99999.0;\n    for (float x = -1.0; x <= 1.0; x++)\n    {\n     \tfor (float y = -1.0; y <= 1.0; y++)\n        {\n        \tfloat sphereSDF = sphereSDF(point - sphereCenter(rootUV + vec2(x, y)), radius);\n            minSDF = addObjectsSmooth(minSDF, sphereSDF, 0.3);\n        }\n    }\n    \n    return minSDF / gridScale;\n}\n\nfloat objSDF(vec2 point)\n{\n \tfloat object = sphereSDF(point, 0.2);\n    \n    vec2 circularMovement = vec2(sin(TIME * 0.2), cos(TIME * 0.2)) * 2.0;\n    vec2 dotsShift = vec2(-cos(TIME * 0.2), sin(TIME * 0.2));\n    float gridSphereRadius = (smoothstep(0.5, 0.0, length(point - dotsShift * 0.1)) - 0.4);\n    float smallGridSphereRadius = (smoothstep(0.4, 0.0, length(point - dotsShift * 0.1)) - 0.5);\n    object = addObjectsSmooth(object, sphereGridSDF(point + circularMovement, gridSphereRadius, 10.0), 0.1);\n    object = addObjectsSmooth(object, sphereGridSDF(point + circularMovement, smallGridSphereRadius, 20.0), 0.01);\n    return object;\n}\n\nvec3 objSDFToTestColor(float objSDF)\n{\n\tvec3 col = vec3(0.0);\n    float positive = smoothstep(-BORDER_WIDTH, BORDER_WIDTH, objSDF);\n    float border = smoothstep(BORDER_WIDTH, BORDER_WIDTH * 0.5, abs(objSDF));\n    \n    float lines = smoothstep(0.5, 0.0, abs(fract(objSDF * 40.0) - 0.5)) * 0.8;\n    \n    col += POSITIVE_COLOR * positive * lines;\n    col += NEGATIVE_COLOR * (1.0 - positive) * lines;\n    col += BORDER_COLOR * border;\n    \n    return col;\n}\n\nvec3 objSDFToColor(float objSDF)\n{\n    float positive = smoothstep(-BORDER_WIDTH, BORDER_WIDTH, objSDF);\n\n    return vec3(1.0) * positive;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x;\n\n    float sdf = objSDF(uv);\n    vec3 col = objSDFToColor(sdf);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define NEGATIVE_COLOR vec3(0.4, 0.4, 1.0)\n#define POSITIVE_COLOR vec3(0.4, 1.0, 0.4)\n#define BORDER_COLOR vec3(1.0, 1.0, 1.0)\n#define BORDER_WIDTH 0.004\n\n#define TIME (iTime * 1.0)\n\nfloat hash12(vec2 x)\n{\n \treturn fract(sin(dot(x, vec2(533.59731, 821.49221))) * 4315.212331);   \n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}