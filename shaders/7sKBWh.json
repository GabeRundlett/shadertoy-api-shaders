{
    "Shader": {
        "info": {
            "date": "1658109302",
            "description": "Another fractal carpet pattern.",
            "flags": 0,
            "hasliked": 0,
            "id": "7sKBWh",
            "likes": 9,
            "name": "Glowing carpet",
            "published": 3,
            "tags": [
                "fractal",
                "carpet",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 250
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 to_return = abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n    return to_return;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.5*3.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = 1.5;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 9; k++){\n            float p1 = sign(uv.x);\n            uv += t2;\n            uv /= scale;\n            t2 = p1*triangle_wave(uv-.5);\n            t3 = -p1*triangle_wave(uv.yx);\n            uv = t2+t3;\n            col.x = min(uv.x-uv.y+col.x*p1,-p1*col.x/3.);\n            col = abs(col.yzx-vec3(col.x)/3.);\n        }\n\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}