{
    "Shader": {
        "info": {
            "date": "1467171120",
            "description": "Sketch on the 'jazz' solo cup design, in the style of an Earthbound battle background. :P",
            "flags": 0,
            "hasliked": 0,
            "id": "XdKXDc",
            "likes": 15,
            "name": "fluid jazz",
            "published": 3,
            "tags": [
                "earthbound",
                "solo",
                "jazz",
                "cup"
            ],
            "usePreview": 0,
            "username": "RavenWorks",
            "viewed": 1486
        },
        "renderpass": [
            {
                "code": "const float pi = 3.14159;\n\nfloat noiseSource(vec2 uv, float t){\n    \n    float waveA = sin(\n        uv.x*150.0 +\n        sin(uv.x*15.1)*(1.5+sin(uv.y*1.1)*0.3) +\n        t*(1.0+sin(t*0.25)*0.005) +\n        sin(uv.y*100.0 + sin(uv.x*110.0) + t*5.0) +\n        sin(uv.y*8.0 + t*0.2)*15.0 +\n        sin(uv.y* (150.0+sin(uv.y*20.0)*4.0+sin(uv.x*10.0)*3.5) + t*1.0)\n    );\n    \n    float waveB = sin(\n        uv.y*140.0 +\n        sin(uv.y*15.1)*(1.5+sin(uv.x*1.1)*0.3) +\n        t*(1.1+sin(t*0.2)*0.004) +\n        sin(uv.x*110.0 + sin(uv.y*120.0) + t*4.0) +\n        sin(uv.x*9.0 + t*0.1)*14.0 +\n        sin(uv.x* (160.0+sin(uv.x*25.0)*5.0+sin(uv.y*12.0)*2.5) + t*2.0 )\n    );\n    \n    return pow((waveA*0.5+0.5)*(waveB*0.5+0.5),0.5);\n    \n}\n\nfloat blur(vec2 uv, float t){\n    float col = 0.0;\n    const float offAmt = 0.005;\n    const float samps = 5.0;\n    for(float i=0.0; i<samps; i++){\n        float ang = i/samps*6.28;\n        col += noiseSource(uv+vec2(cos(ang),sin(ang))*offAmt,t);\n    }\n    col += noiseSource(uv,t);\n    col /= (samps+1.0);\n    return col;\n}\n\nfloat noise(vec2 uv, float t){\n    return pow(blur(uv,t),2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\tfloat extent = min(iResolution.x,iResolution.y);\n\tvec2 uv = fragCoord.xy / extent;\n\tuv *= 2.0;\n\tuv -= 1.0;\n\tuv -= ((iResolution.xy/extent)-1.0);\n\t\n\tvec3 col = vec3(1.0);\n    \n    float t = iTime;\n    \n    \n    const vec3 purple = vec3(0.8,0.1,0.9);\n    vec2 uvP = uv;\n    uvP.x -= sin(uvP.y*-2.0)*0.8;\n    uvP.x += sin(uvP.x)*0.2;\n    uvP.x -= sin(uvP.y*-2.0)*0.2;\n    uvP.y += sin(uvP.x*0.5+t*1.1)*0.25;\n    uvP.y += sin(uvP.x*3.8)*0.1;\n    uvP.y += sin(uvP.x*11.0-t*1.0)*(0.2+0.05*sin(uvP.x*2.0+t*2.0));\n    \n    float pAmt = abs(uvP.y) / 0.15;\n    pAmt = pow(pAmt,1.5);\n    pAmt += (noise(uv*1.9,t))*0.7;\n    pAmt = pow(pAmt,20.0);\n    pAmt = min(pAmt,1.0);\n    pAmt = max(pAmt,0.0);\n    col *= 1.0-((1.0-purple)*(1.0-pAmt));\n    \n    \n    const vec3 blue = vec3(0.4,0.95,0.95);\n    float majorSpdB = 6.0;\n    vec2 uvB = uv;\n    uvB.x -= sin(uvB.y*-2.0)*0.6;\n    uvB.x += sin(uvB.x)*0.2;\n    uvB.y += sin(uvB.x*0.5)*0.3;\n    uvB.y += sin(uvB.x*3.8-t*0.25)*0.2;\n    uvB.y += sin(uvB.x*majorSpdB+t)*0.4;\n    \n    float bAmt = abs(uvB.y) / 0.6;\n    bAmt = pow(bAmt,0.5);\n    float bEdge = sin((uvB.x+(uvB.y>0.0?0.0:pi*0.5)+pi*0.25)*majorSpdB)*0.5+0.5;\n    bEdge = bEdge*0.7 + 0.3;\n    bAmt += noise(uv*1.6,t*2.0)*bEdge;\n    bAmt = pow(bAmt,50.0);\n    bAmt = min(bAmt,1.0);\n    bAmt = max(bAmt,0.0);\n    col *= 1.0-((1.0-blue)*(1.0-bAmt));\n    \n    fragColor = vec4(col,1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}