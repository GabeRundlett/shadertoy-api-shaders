{
    "Shader": {
        "info": {
            "date": "1622313046",
            "description": "visual experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "ftsGRS",
            "likes": 15,
            "name": "Fabric skirt",
            "published": 3,
            "tags": [
                "noise",
                "lines",
                "cloth"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 450
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926 \n#define PI2 6.2831852 \n \n#define SF 1./min(iResolution.x,iResolution.y)\n#define SS(l,s) smoothstep(SF,-SF,l-s)\n\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\n#define MOD3 vec3(.1031, .11369, .13787)\n\nfloat hash11(float p)\n{\n    p = fract(p * 0.1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec3 hash33(vec3 p3)\n{\n    p3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz + 19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y) * p3.z, (p3.x + p3.z) * p3.y, (p3.y + p3.z) * p3.x));\n}\n\nfloat snoise(vec3 p)\n{\n    const float K1 = 0.333333333;\n    const float K2 = 0.166666667;\n\n    vec3 i = floor(p + (p.x + p.y + p.z) * K1);\n    vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\n\n    vec3 e = step(vec3(0.0), d0 - d0.yzx);\n    vec3 i1 = e * (1.0 - e.zxy);\n    vec3 i2 = 1.0 - e.zxy * (1.0 - e);\n\n    vec3 d1 = d0 - (i1 - 1.0 * K2);\n    vec3 d2 = d0 - (i2 - 2.0 * K2);\n    vec3 d3 = d0 - (1.0 - 3.0 * K2);\n\n    vec4 h = max(0.6 - vec4(dot(d0, d0), dot(d1, d1), dot(d2, d2), dot(d3, d3)), 0.0);\n    vec4 n = h * h * h * h * vec4(dot(d0, hash33(i)), dot(d1, hash33(i + i1)), dot(d2, hash33(i + i2)), dot(d3, hash33(i + 1.0)));\n\n    return dot(vec4(31.316), n);\n}\n \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{     \n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n          \n    float l = length(uv);\n    \n    vec3 result = vec3(0.);     \n    \n    for(float i=40.; i>0.; i-=1.){\n    \n        float a = sin(atan(uv.y, uv.x) + i*.1);\n        float am = abs(a-.5)/4.;\n    \n        float zn = .0125 + snoise(vec3(a,a, 10.*i*.005 + iTime*1.25-i*.11))*i*.0025 + i*.01;\n        float d = SS(l, zn);\n        \n        float rn = hash11(i);\n        vec3 col = hue(rn).rgb;\n        \n        result = mix(result, col, d);\n        \n        float dd =  SS(l, zn) * SS(zn-SF, l);\n        \n        result = mix(result, vec3(0.), dd);\n    }\n    \n\n    fragColor = vec4(vec3(result), 1.0);\n} \n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}