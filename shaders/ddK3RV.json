{
    "Shader": {
        "info": {
            "date": "1678836696",
            "description": "Written by Chat GPT",
            "flags": 0,
            "hasliked": 0,
            "id": "ddK3RV",
            "likes": 0,
            "name": "ChatGPT-3 Fireworks",
            "published": 3,
            "tags": [
                "gpt4"
            ],
            "usePreview": 0,
            "username": "kmcurry",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0; // Normalize pixel coordinates\n\n    // Set up firework properties\n    vec2 fireworkPos = vec2(0.0, -0.5);\n    float fireworkRadius = 0.05;\n    float fireworkExplosionRadius = 0.1;\n    float fireworkSpeed = 0.5;\n    float explosionSpeed = 0.5;\n    float explosionDuration = 1.0;\n    float explosionStartTime = 0.5;\n    vec3 fireworkColor = vec3(1.0, 1.0, 1.0);\n    vec3 explosionColor = vec3(1.0, 1.0, 0.0);\n    \n    // Calculate distance to firework center\n    float fireworkDist = length(p - fireworkPos);\n\n    // Check if firework should explode\n    if (fireworkDist < fireworkRadius) {\n        // Calculate explosion time\n        float explosionTime = (iTime - explosionStartTime) * explosionSpeed;\n        float explosionProgress = 1.0 - smoothstep(0.0, explosionDuration, explosionTime);\n\n        // Calculate explosion radius\n        float explosionRadius = mix(fireworkExplosionRadius, 0.0, explosionProgress);\n\n        // Calculate explosion color\n        vec3 color = mix(fireworkColor, explosionColor, explosionProgress);\n\n        // Calculate distance to explosion center\n        float explosionDist = length(p - fireworkPos);\n\n        // Check if pixel is within explosion radius\n        if (explosionDist < explosionRadius) {\n            // Set pixel color\n            fragColor = vec4(color, 1.0);\n        } else {\n            // Set pixel to black\n            fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    } else {\n        // Move firework up\n        fireworkPos.y += fireworkSpeed * iTime;\n\n        // Set pixel to black\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}