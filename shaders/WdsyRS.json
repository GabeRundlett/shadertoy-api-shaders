{
    "Shader": {
        "info": {
            "date": "1585036924",
            "description": "After seeing a tutorial video by Inigo Quilez years ago I was inspired to modify his sunset shader (covered in the tutorial) to add swaying palm fronds.  I used a shadertoy-like program I wrote in order to do it.  So, years later here it is in shadertoy.",
            "flags": 8,
            "hasliked": 0,
            "id": "WdsyRS",
            "likes": 2,
            "name": "Sunset2 with Ocean Sound",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "sound",
                "sunset",
                "ocean",
                "painting",
                "palmtree",
                "asmr",
                "vacation",
                "swaying"
            ],
            "usePreview": 0,
            "username": "mrmcsoftware",
            "viewed": 395
        },
        "renderpass": [
            {
                "code": "// Original image code by inigo quilez - iq ( https://www.shadertoy.com/view/XssSRX )\n//     but modified by me (Mark Craig) to add swaying palm fronds and ocean sound\n// Inigo's comment header:    \n   // Created by inigo quilez - iq/2014\n   // License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n   // The final product of some live coding improv. The process is live narrated in this \n   // video: https://www.youtube.com/watch?v=0ifChJ0nJfM\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 q = p - vec2(0.33,0.7);\n\t\t\n\tvec3 col = mix( vec3(1.0,0.3,0.0), vec3(1.0,0.8,0.3), sqrt(p.y) );\n\t\n\t// was: float r = 0.2 + 0.1*cos( atan(q.y,q.x)*10.0 + 20.0*q.x + 1.0);  // my change:\n    \tfloat r = 0.2 + 0.1*cos( atan(q.y,q.x)*10.0 + (20.0+(sin(iTime*2.0)*2.0))*q.x + 1.0);\n\n\tcol *= smoothstep( r, r+0.01, length( q ) );\n\n\tr = 0.015;\n\tr += 0.002*sin(120.0*q.y);\n\tr += exp(-40.0*p.y);\n    col *= 1.0 - (1.0-smoothstep(r,r+0.002, abs(q.x-0.25*sin(2.0*q.y))))*(1.0-smoothstep(0.0,0.1,q.y));\n\t\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// ocean sound by reinder https://www.shadertoy.com/view/4tjGRh\n//----------------------------------------------------------------------\n//\n//----------------------------------------------------------------------\n// Wind function by Dave Hoskins https://www.shadertoy.com/view/4ssXW2\n\n\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453123);\n}\nvec2 Hash( vec2 p) {\n    return vec2( hash(p.x), hash(p.y) );\n}\n\n//--------------------------------------------------------------------------\nvec2 Noise( in vec2 x ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    vec2 res = mix(mix( Hash(p + 0.0), Hash(p + vec2(1.0, 0.0)),f.x),\n                   mix( Hash(p + vec2(0.0, 1.0) ), Hash(p + vec2(1.0, 1.0)),f.x),f.y);\n    return res-.5;\n}\n\n//--------------------------------------------------------------------------\nvec2 FBM( vec2 p ) {\n    vec2 f;\n\tf  = 0.5000\t * Noise(p); p = p * 2.32;\n\tf += 0.2500  * Noise(p); p = p * 2.23;\n\tf += 0.1250  * Noise(p); p = p * 2.31;\n    f += 0.0625  * Noise(p); p = p * 2.28;\n    f += 0.03125 * Noise(p);\n    return f;\n}\n\n//--------------------------------------------------------------------------\nvec2 Wind(float n) {\n    vec2 pos = vec2(n * (162.017331), n * (132.066927));\n    vec2 vol = Noise(vec2(n*23.131, -n*42.13254))*1.0 + 1.0;\n    \n    vec2 noise = vec2(FBM(pos*33.313))* vol.x *.5 + vec2(FBM(pos*4.519)) * vol.y;\n    \n\treturn noise;\n}\n\n//----------------------------------------------------------------------\n\n\n\nvec2 mainSound( in int samp,float time) {\n    //16 - 38\n //   time -= 7.5;\n    time *= .7;\n    float vol = 1.-smoothstep(6.,8.5, time);\n    vol += smoothstep(16.5,20., time);\n    vol *= 1.-smoothstep(23.5,25.5, time);\n    vol += smoothstep(47.5,51.5, time);\n    vol = vol*.8+.2;\n    \n\treturn Wind(time*.05) * vol;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}