{
    "Shader": {
        "info": {
            "date": "1673394918",
            "description": "mouse speed ",
            "flags": 32,
            "hasliked": 0,
            "id": "clj3Ww",
            "likes": 7,
            "name": "mouse speed",
            "published": 3,
            "tags": [
                "mouse",
                "speed",
                "buffer"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 201
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float n_ratio_1to_iresx = 1./ iResolution.x;\n    //needed for anti aliasing ?\n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n\n \n    vec4 o_col = texture(iChannel0, o_trn_fc_nor);\n    // Output to screen\n    fragColor = o_col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float f_n_rand(float n){\n    n += 1.23;\n    n *= 3.12;\n    n = sin(1234.23*n+n)*123.;\n    n = cos(n*0.123);\n    return fract(n);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // the info of the mouse will be stored in the first pixel\n    ivec2 o_p_o_trn_mo_nor_offset = ivec2(0.,0.);\n    \n    float n_ratio_1to_iresx = 1./ iResolution.x;\n    //needed for anti aliasing ?\n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    if(iMouse.z == 0.){\n        float n_rand = f_n_rand(iTime);\n        o_trn_mo_nor_offset = vec2(\n            cos((iTime+((n_rand-0.5)*0.02))*3.)*0.3,\n            sin(iTime+((n_rand-0.5)*0.02))*0.3\n        );\n    }\n    float n_d = length(o_trn_fc_nor_offset - o_trn_mo_nor_offset);\n    \n    vec4 o_col_last = texture(iChannel0, o_trn_fc_nor);\n    \n    float n_length_mouse = length(o_trn_mo_nor_offset);\n    vec4 o_trn_mo_nor_offset_last = texelFetch(iChannel0, o_p_o_trn_mo_nor_offset, 0);\n    vec2 o_trn_mo_nor_offset_delta = abs(o_trn_mo_nor_offset.xy - o_trn_mo_nor_offset_last.xy);\n    //n_d = smoothstep(0.1, 0.11, n_d);\n    float n_mouse_speed = o_trn_mo_nor_offset_delta.x;\n    \n    //n_d = (1.-n_d)*(1.+n_mouse_speed*100.);\n    float n_sms = n_mouse_speed*0.2;\n    float n_aa = n_ratio_1to_iresx*50.+n_ratio_1to_iresx*n_mouse_speed*20.+n_mouse_speed*2.;\n    n_d = smoothstep(n_sms+n_aa, n_sms, n_d);\n    vec4 o_col = mix(o_col_last, vec4(n_d),0.01+n_mouse_speed*0.1);\n    o_col += vec4(n_d);\n    fragColor = o_col;\n    //fragColor = vec4(o_trn_mo_nor_offset_delta.x);\n    \n\n    if(ivec2(fragCoord.xy) == ivec2(o_p_o_trn_mo_nor_offset)){\n        fragColor = o_trn_mo_nor_offset.xyxy;//swizzeling :0\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}