{
    "Shader": {
        "info": {
            "date": "1707596452",
            "description": "it's a bubble experiment yo",
            "flags": 0,
            "hasliked": 0,
            "id": "l3XGRB",
            "likes": 2,
            "name": "SKEENSAVUH",
            "published": 3,
            "tags": [
                "bubble"
            ],
            "usePreview": 0,
            "username": "JesseHufstetler",
            "viewed": 539
        },
        "renderpass": [
            {
                "code": "vec3 ScreenSpaceDither(vec2 vScreenPos, float colorDepth)\n{\n    // lestyn's RGB dither (7 asm instructions) from Portal 2 X360, slightly modified for VR\n    vec3 vDither = vec3(dot(vec2(131.0, 312.0), vScreenPos.xy + iTime));\n    vDither.rgb = fract(vDither.rgb / vec3(103.0, 71.0, 97.0)) - vec3(0.5, 0.5, 0.5);\n    return (vDither.rgb / colorDepth) * 0.375;\n}\nvoid bub(inout vec4 fragColor, in vec2 fragCoord, float radius, vec2 bubbleCenter, vec3 bubbleColor, float exp) {\n        float dis = length( fragCoord - bubbleCenter);\n        float disN = dis/radius;\n        if (dis < radius) {\n            fragColor.xyz += pow((1.-disN),exp)*bubbleColor;\n        }\n}\nvoid slideBub(inout vec4 fragColor, in vec2 fragCoord, float radius, vec2 speed, vec3 bubbleColor, float exp) {\n    vec2 bubbleCenter;\n    bubbleCenter = (sin(iTime*speed+speed*500.)*iResolution.xy+iResolution.xy)/2.;\n    bub(fragColor, fragCoord, radius, bubbleCenter, bubbleColor, exp);\n}\n\n\nfloat myTime = 0.;\nfloat oldTime = 0.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = (iResolution.x + iResolution.y)/2.;\n    fragColor = vec4(0.0,0.0,0.0,1.0);\n\n    \n    float divvy = .999;\n    float size = 3.;\n    vec3 pink = vec3(1.,.5, 1.);\n    vec3 yellow = vec3(1.,1.,.5);\n    vec3 blue = vec3(0.5,.9,1.0);\n    vec3 lightPink = vec3(1.,.9,1.);\n    vec3 white = vec3(1.,1.,1.);\n    slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.11/divvy,.16/divvy), pink,5.);\n    divvy *= 1.1;\n    //slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.1/divvy,.13/divvy), yellow, 5.);\n    divvy *= 1.1;\n    slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.1/divvy,.14/divvy), blue, 5.);\n    divvy *= 1.1;\n    //slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.1/divvy,.15/divvy), lightPink,5.);\n    divvy *= 1.13;\n    //slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.11/divvy,.16/divvy), pink,5.);\n    divvy *= 1.1;\n    slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.1/divvy,.13/divvy), yellow, 5.);\n    divvy *= 1.1;\n    slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.1/divvy,.14/divvy), blue,5.);\n    divvy *= 1.1;\n    slideBub(fragColor, fragCoord, iResolution.y*size/divvy, vec2(.1/divvy,.15/divvy), lightPink,5.);\n    //slideBub(fragColor, fragCoord, iResolution.y*1., vec2(.1,.003), white, 5.);\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    fragColor *= fragColor;\n    //fragColor *= fragColor;\n    //fragColor += fragColor;\n    //fragColor *= fragColor;\n    //fragColor *= fragColor;\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    \n    \n    \n    fragColor *= fragColor;\n    fragColor += vec4(ScreenSpaceDither(fragCoord.xy, 20.0), 1.);\n    //fragColor += (vec4(rand(), rand(), rand(), 1.)-.5)/10.;\n}\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}