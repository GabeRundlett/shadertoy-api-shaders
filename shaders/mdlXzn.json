{
    "Shader": {
        "info": {
            "date": "1668457096",
            "description": "St Elmo's Fire pulsing and mouse responsive.\nThe explosion changes as it is dragged around (mouse down)...\nan automatic figure 8 path in lieu of mouse might be a great addition\n",
            "flags": 0,
            "hasliked": 0,
            "id": "mdlXzn",
            "likes": 4,
            "name": "Tie Dye Explosion Hypnosis",
            "published": 3,
            "tags": [
                "mouse",
                "interactive",
                "iterated"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 188
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14;\n\nfloat steps = 12.0;\nvec3 HUEtoRGB(in float hue)\n{\n    // Hue [0..1] to RGB [0..1]\n    // See http://www.chilliant.com/rgb2hsv.html\n    vec3 rgb = abs(hue * 6. - vec3(3, 2, 4)) * vec3(1, -1, -1) + vec3(-1, 2, 2);\n    return clamp(rgb, 0., 1.);\n}\nvec3 HSVtoRGB(in vec3 hsv)\n{\n    // Hue-Saturation-Value [0..1] to RGB [0..1]\n    vec3 rgb = HUEtoRGB(hsv.x);\n    return ((rgb - 1.) * hsv.y + 1.) * hsv.z;\n}\n\n\nvec2 applyTransformation(vec2 pos,float iteration){\n\n    float angle = atan(pos.y,pos.x);\n    float initialDist = length(vec3(pos,1)) * (iteration+1.0);\n    float currentStep = mod(floor(initialDist * steps),steps);\n    vec2 outVec = vec2(1);\n    float sinDist = (sin(angle*(3.0 * currentStep) + iTime * sin(currentStep))*0.05 + 1.0);\n    \n    outVec.xy = pos.xy * sinDist;\n    \n    return outVec;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n        \n    vec2 center = vec2(0.5,0.5) + ((iMouse.xy==vec2(0.)) ? vec2(.5,.5) : iMouse.xy/iResolution.xy)-vec2(0.5);\n   \n    vec2 offset = (uv - center) * 1.8;\n    offset.y *= iResolution.y/iResolution.x;\n\n    offset *= 4.5;\n    \n   //clamp keeps 1 & 2 'large' pattern explosions out   for(float i = 0.0; i < clamp((mod(fract(iTime)*abs(iMouse.x+1.)*1000.0,37.0)),3.0,37.0); i++){\n    for(float i = 0.0; i < (mod(fract(iTime)*abs(iMouse.x+1.)*1000.0,37.0)); i++){\n       offset = applyTransformation(offset,i/0.1);\n    }\n    \n    \n    float initialDist = length(offset);\n    float currentStep = mod(floor(initialDist * steps*fract(iTime)*10.),steps);\n    \n    \n    float clampedDist = step(fract(length(offset)*steps),0.5);\n    \n    \n    vec3 col = HSVtoRGB(vec3(currentStep/steps,1,1));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}