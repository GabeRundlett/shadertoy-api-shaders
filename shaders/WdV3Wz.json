{
    "Shader": {
        "info": {
            "date": "1570047867",
            "description": "Gaze into the empty mind",
            "flags": 0,
            "hasliked": 0,
            "id": "WdV3Wz",
            "likes": 7,
            "name": "Shadertober 02 - Mindless",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "mindless",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 508
        },
        "renderpass": [
            {
                "code": "float rand (vec2 p)\n{\n    return fract(sin(dot(p.xy,vec2(12389.1283,8941.1283)))*12893.128933);\n}\n\nfloat noise(in vec2 v)\n{\n    vec2 i=floor(v);\n    vec2 f = fract(v);\n    \n    float a = rand(i);\n    float b = rand(i+vec2(1,0));\n    float c = rand(i+vec2(0,1));\n    float d = rand(i+vec2(1,1));\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix(a,b,u.x)+(c-a)*u.y*(1.0-u.x)+(d-b)*u.x*u.y;\n}\n\nfloat fbm(vec2 p)\n{\n    float ret = 0.;\n    float amp = .4;\n    int oct = 8;\n    for(int i=0;i<oct;i++)\n    {\n        ret+=amp*noise(iTime+20.*p);\n        p*=2.;\n        amp*=.5;\n    }\n    \n    return ret+.15;\n}\n\nfloat map(in vec3 p)\n{    \n    return length(p)-1.+cos(sin(iTime-p.y*20.)/5.+sin(iTime-p.z*20.)/5.+sin(iTime-p.x*20.)/5.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n   \n    float time = iTime/4.;\n\tvec3 ro = vec3(sin(time)*2.,1.,cos(time));\n    vec3 ta = vec3(0.0,0.,0.);\n    vec3 ww = normalize(ta-ro);\n    vec3 uu =normalize(cross(ww, vec3(0,1,0)));\n    vec3 vv = normalize(cross(uu,ww));\n        \n   \tvec3 rd = normalize(p.x*uu+p.y*vv+2.*ww);\n\tvec3 pos = ro;\n    float m = 1000.0;\n    float t = 0.0;\n    for(int i=0;i<128;i++)\n    {\n        pos = ro+rd*t;\n        \n       \tfloat h = map(pos);\n        m= min(m,h);\n        if(h<.00001)break;\n        \n        t+=h/30.;\n    }\n    \n    \n    float d = 400.;\n    vec3 col =vec3(m)*vec3(fbm(pos.xy/d),fbm(pos.yz/d),fbm(pos.zx/d))*(2.5-(length(p)-.1));\n    fragColor = vec4(pow(col,vec3(1.5)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}