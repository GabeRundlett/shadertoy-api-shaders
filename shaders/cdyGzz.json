{
    "Shader": {
        "info": {
            "date": "1678099455",
            "description": "squircle\n",
            "flags": 0,
            "hasliked": 0,
            "id": "cdyGzz",
            "likes": 4,
            "name": "squircle heart",
            "published": 3,
            "tags": [
                "squircle"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "#define n_tau 6.2831\nfloat f_n_d_squircle_4(\n    vec2 o_fc, \n    vec4 o_corner_normalized\n){\n    float n_crc = length(o_fc);\n    float n_sqr = max(abs(o_fc.y), abs(o_fc.x));\n\n    // 1|0\n    // ---\n    // 3|2\n\n    float n_index_quadrant = float(o_fc.y > 0.)*2. + (float(o_fc.x > 0.)*1.);\n    float n_crc_intensity = o_corner_normalized[int(n_index_quadrant)];\n    return n_sqr*(1.-n_crc_intensity) + n_crc*n_crc_intensity;\n    // return n_index_quadrant/4.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_fc = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n\n    float n_ang_nor = 0.25/2.;\n    float n_cos = cos(n_tau*n_ang_nor);\n    float n_sin = sin(n_tau*n_ang_nor);\n    o_fc *=1.2;\n    o_fc = mat2(n_cos,n_sin,-n_sin,n_cos)*o_fc;\n\n\n    vec2 o_p1 = vec2(0.)-o_fc;\n    vec2 o_p2 = vec2(-(sin(iTime)*.5+.5)*.5, 0.)-o_fc;\n    vec2 o_p3 = vec2(0., (sin(iTime)*.5+.5)*.5)-o_fc;\n    \n    float n1 = f_n_d_squircle_4(o_p1,vec4(1., 1., sin(iTime*3.)*.5+.5,1.));\n    float n2 = f_n_d_squircle_4(o_p2,vec4(1., 1., sin(iTime*3.)*.5+.5,1.));\n    float n3 = f_n_d_squircle_4(o_p3,vec4(1., 1., sin(iTime*3.)*.5+.5,1.));\n\n    fragColor = vec4(0.);\n    // n = smoothstep(0., 0.2, n);\n    // n = step(.2, n);\n    float n_thick = 0.2;\n    float n_aa = (1./iResolution.x)*10.;\n    n1 = smoothstep(n_thick, n_thick+n_aa, n1);\n    n2 = smoothstep(n_thick, n_thick+n_aa, n2);\n    n3 = smoothstep(n_thick, n_thick+n_aa, n3);\n    vec3 o_c1 = vec3(1., 0., 0.);\n    vec3 o_c2 = vec3(0., 1., 0.);\n    vec3 o_c3 = vec3(0., 0., 1.);\n    vec3 o_c = \n        ((1.-n1)*o_c1)\n        + ((1.-n2)*o_c2)\n        + ((1.-n3)*o_c3);\n\n    fragColor = vec4(o_c, 1.);\n\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}