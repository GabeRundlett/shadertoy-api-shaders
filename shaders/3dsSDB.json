{
    "Shader": {
        "info": {
            "date": "1552074740",
            "description": "Projection of a 3D cube.",
            "flags": 0,
            "hasliked": 0,
            "id": "3dsSDB",
            "likes": 9,
            "name": "3D cube grid",
            "published": 3,
            "tags": [
                "3d",
                "grid",
                "projection"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 721
        },
        "renderpass": [
            {
                "code": "#define eyes\n#define showpoints\n//#define singleview\n\nconst float eyeDist=10.;\n\nvec2 project(vec3 point,vec3 focus){\n    return point.xy-point.z*(point.xy-focus.xy)/(point.z-focus.z)-focus.xy;\n}\nfloat point(vec3 p,vec3 focus,vec2 uv){\n    vec2 w=project(p,focus);\n\treturn 0.5/dot(uv-w,uv-w);\n}\nfloat line(vec3 p,vec3 p2,vec3 f,vec2 uv){\n    vec2 p_=project(p,f);\n    vec2 p2_=project(p2,f);\n    \n    vec2 n=uv-p_;\n\tvec2 w=p2_-p_;\n\treturn smoothstep(100./iResolution.y,0.,length(n-w*clamp(dot(n,w)/dot(w,w),0.,1.)));\n}\n\nvoid mainImage( out vec4 o, in vec2 fragCoord ){\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y*50.;\n\to=vec4(0);\n    \n    vec3 eye[2];\n\teye[0]=vec3(eyeDist/2.,0,-30);\n    eye[1]=vec3(-eyeDist/2.,0,-30);\n    \n    vec3 points[8];\n    points[0]=vec3(10,10,5);\n    points[1]=vec3(10,-10,5);\n    points[2]=vec3(-10,10,5);\n    points[3]=vec3(-10,-10,5);\n    points[4]=vec3(10,10,25);\n    points[5]=vec3(10,-10,25);\n    points[6]=vec3(-10,10,25);\n    points[7]=vec3(-10,-10,25);\n    \n    vec3 center=vec3(0,0,15);\n    vec3 move=vec3(0,0,0);\n    for(int i=0;i<8;i++){\n        points[i]-=center;\n\t\tpoints[i].xy*=mat2(cos(iTime),-sin(iTime),sin(iTime),cos(iTime));\n        points[i].xz*=mat2(cos(iTime*2.),-sin(iTime*2.),sin(iTime*2.),cos(iTime*2.));\n        points[i].yz*=mat2(cos(iTime*3.),-sin(iTime*3.),sin(iTime*3.),cos(iTime*3.));\n        points[i]+=center+move;\n    }\n    #ifdef singleview\n    eye[0]=(eye[0]+eye[1])/2.;\n    o+=line(points[0],points[1],eye[0],uv);\n   \to+=line(points[0],points[2],eye[0],uv);\n\to+=line(points[0],points[4],eye[0],uv);\n   \to+=line(points[3],points[1],eye[0],uv);\n   \to+=line(points[3],points[7],eye[0],uv);\n   \to+=line(points[3],points[2],eye[0],uv);\n   \to+=line(points[6],points[2],eye[0],uv);\n   \to+=line(points[6],points[7],eye[0],uv);\n   \to+=line(points[6],points[4],eye[0],uv);\n   \to+=line(points[5],points[7],eye[0],uv);\n   \to+=line(points[5],points[4],eye[0],uv);\n   \to+=line(points[5],points[1],eye[0],uv);\n    #ifdef showpoints\n    for(int u=0;u<8;u++){\n        o+=point(points[u],eye[0],uv);\n\t\t\n    }\n    #endif\n    #else\n    vec2 uv_;\n    for(int i=0;i<2;i++){\n        #ifdef eyes\n        uv_=vec2(uv.x-(float(i)-0.5)*30.,uv.y);\n    \to+=line(points[0],points[1],eye[i],uv_);\n    \to+=line(points[0],points[2],eye[i],uv_);\n\t\to+=line(points[0],points[4],eye[i],uv_);\n    \to+=line(points[3],points[1],eye[i],uv_);\n    \to+=line(points[3],points[7],eye[i],uv_);\n    \to+=line(points[3],points[2],eye[i],uv_);\n    \to+=line(points[6],points[2],eye[i],uv_);\n    \to+=line(points[6],points[7],eye[i],uv_);\n    \to+=line(points[6],points[4],eye[i],uv_);\n    \to+=line(points[5],points[7],eye[i],uv_);\n    \to+=line(points[5],points[4],eye[i],uv_);\n    \to+=line(points[5],points[1],eye[i],uv_);\n        #else\n        o[i]+=line(points[0],points[1],eye[i],uv);\n    \to[i]+=line(points[0],points[2],eye[i],uv);\n\t\to[i]+=line(points[0],points[4],eye[i],uv);\n    \to[i]+=line(points[3],points[1],eye[i],uv);\n    \to[i]+=line(points[3],points[7],eye[i],uv);\n    \to[i]+=line(points[3],points[2],eye[i],uv);\n    \to[i]+=line(points[6],points[2],eye[i],uv);\n    \to[i]+=line(points[6],points[7],eye[i],uv);\n    \to[i]+=line(points[6],points[4],eye[i],uv);\n    \to[i]+=line(points[5],points[7],eye[i],uv);\n    \to[i]+=line(points[5],points[4],eye[i],uv);\n    \to[i]+=line(points[5],points[1],eye[i],uv);\n        #endif\n    }\n   \t#ifdef showpoints\n    for(int i=0;i<2;i++){\n        for(int u=0;u<8;u++){\n            #ifdef eyes\n            uv_=vec2(uv.x-(float(i)-0.5)*30.,uv.y);\n            o+=point(points[u],eye[i],uv_);\n            #else\n            o[i]+=point(points[u],eye[i],uv);\n            #endif\n        }\n    }\n    #endif\n    #endif\n    #ifdef eyes\n    #else\n    o.rgb=1.-vec3(o.g,0,o.r);\n    #endif\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}