{
    "Shader": {
        "info": {
            "date": "1637915056",
            "description": "Bloom ported from https://github.com/Oncorporation/obs-shaderfilter/",
            "flags": 0,
            "hasliked": 0,
            "id": "flK3zy",
            "likes": 1,
            "name": "Bloom 2",
            "published": 3,
            "tags": [
                "bloom"
            ],
            "usePreview": 1,
            "username": "turboplay",
            "viewed": 334
        },
        "renderpass": [
            {
                "code": " float Angle_Steps = 15.; //<range 1 - 20>\n float Radius_Steps = 9.; //<range 0 - 20>\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n float ampFactor = mod(iTime,10.f);\n\n  float radiusSteps = clamp(Radius_Steps, 0., 20.);\n\tfloat angleSteps = clamp(Angle_Steps, 1., 20.);\n\tfloat PI = 3.1415926535897932384626433832795;//acos(-1);\n\tfloat minRadius = (0.0 * uv.x);\n\tfloat maxRadius = (1.0 * uv.y);\n\n\tvec4 c0 = texture(iChannel0, uv);\n\tvec4 outputPixel = c0;\n\tvec4 accumulatedColor = vec4(0);\n\n\tfloat totalSteps = radiusSteps * angleSteps;\n\tfloat angleDelta = (2. * PI) / angleSteps;\n\tfloat radiusDelta = (maxRadius - minRadius) / radiusSteps;\n\n\tfor (float radiusStep = 0.; radiusStep < radiusSteps; radiusStep += 1.0) {\n\t\tfloat radius = minRadius + radiusStep * radiusDelta;\n\n\t\tfor (float angle=0.; angle <(2.*PI); angle += angleDelta) {\n\t\t\tvec2 currentCoord;\n\n\t\t\tfloat xDiff = radius * cos(angle);\n\t\t\tfloat yDiff = radius * sin(angle);\n\t\t\t\n\t\t\tcurrentCoord = uv + vec2(xDiff, yDiff);\n\t\t\tvec4 currentColor = texture(iChannel0, currentCoord);\n\t\t\tfloat currentFraction = ((radiusSteps+1. - radiusStep)) / (radiusSteps + 1.);\n\n\t\t\taccumulatedColor +=   currentFraction * currentColor / totalSteps;\n\t\t\t\n\t\t}\n\t}\n\n\toutputPixel += accumulatedColor * ampFactor;\n\n\tfragColor= outputPixel;\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}