{
    "Shader": {
        "info": {
            "date": "1531844829",
            "description": "Trying a way to render braids. Allows for some neat-looking distortions.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tdczN",
            "likes": 7,
            "name": "Colorful Braids",
            "published": 3,
            "tags": [
                "color"
            ],
            "usePreview": 0,
            "username": "bitman",
            "viewed": 548
        },
        "renderpass": [
            {
                "code": "const float pi = 3.1415926535;\nconst float tau = 2.*pi;\nconst float halfpi = pi/2.;\nconst float pi23 = pi*2./3.;\n\nvec3 hue(float theta){\n    return clamp(0.5+sin(vec3(theta+pi23, theta, theta-pi23)), 0., 1.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pixel = 6./min(iResolution.x, iResolution.y);\n    vec2 uv = pixel * (fragCoord - 0.5*iResolution.xy)-vec2(0.,1.);\n    vec2 pol = vec2(length(uv), atan(uv.x*9., uv.y));\n    vec3 col = vec3(0.);\n    float aa = pixel;\n    float t = iTime*tau/3.;\n    float pcos = cos(pol.y);\n    float w = 0.01/(1.1+pcos);\n    float s = 0.01/(1.+pcos);\n    float bc = 40.;\n    float th = pol.y*bc;\n    vec3 bsin = sin(vec3(th, th+pi23, th-pi23)-t);\n    vec3 sins = 3.4/(2.+pcos)+bsin/6.;\n    vec3 coss = 12.-bsin*bsin*2.; // -sin(x)*sin(x)*2. == -1. + cos(2.*x)\n    vec3 dists = vec3(\n        distance(pol, vec2(sins.x, pol.y)),\n        distance(pol, vec2(sins.y, pol.y)),\n        distance(pol, vec2(sins.z, pol.y))\n    );\n    vec3 braid = smoothstep(w*coss+aa, w*coss-aa, dists)*smoothstep(mix(w,s,smoothstep(-2.5, -1.5, uv.y))*coss-aa, s*coss+aa, dists).yzx;\n    vec3 c = hue((pol.y-t/bc)/3.);\n    col += mat3(c, c.gbr, c.brg)*braid;\n    if (all(equal(col, col.brg))) // mostly gets rid of an artifact at pol.y == pi\n        col = vec3(0.);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}