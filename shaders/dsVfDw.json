{
    "Shader": {
        "info": {
            "date": "1698297185",
            "description": "Dithering with line thicknesses",
            "flags": 2,
            "hasliked": 0,
            "id": "dsVfDw",
            "likes": 0,
            "name": "lineDither",
            "published": 3,
            "tags": [
                "dithering"
            ],
            "usePreview": 0,
            "username": "natet",
            "viewed": 261
        },
        "renderpass": [
            {
                "code": "//const float gridSize = iResolution.x*0.1;\n\nbool compare(float a, float b, float eta){\n    if(a > (b-eta) && a < (b+eta)){\n        return true;\n    } else {\n        return false;\n    }\n    \n}\n\nbool boxTest(vec2 pos, vec2 size, vec2 uv){\n    if(compare(uv.x,pos.x,size.x) && compare(uv.y,pos.y,size.y)){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    float gridSize = iResolution.x*0.05;\n    \n    uv = fract(uv*gridSize);\n    \n    vec4 cam = texture(iChannel0, floor((fragCoord/iResolution.xy)*gridSize)*(1.0/gridSize));\n    \n    float camVal = (cam.x+cam.y+cam.z)/6.0;\n\n    vec3 col;\n    \n    bool box = boxTest(vec2(0.5,0.5),vec2(camVal,1.0), uv);\n\n    // Output to screen\n    if(box){\n        col = vec3(1.0);\n    } else {\n        col = vec3(0.0);\n    }\n    fragColor = vec4(col,1.0);\n        \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}