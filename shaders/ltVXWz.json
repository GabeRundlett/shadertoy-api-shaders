{
    "Shader": {
        "info": {
            "date": "1483984452",
            "description": "some clock with a calendar built around it - very quick hack - hopefully i messed nothing up with the leap years...",
            "flags": 48,
            "hasliked": 0,
            "id": "ltVXWz",
            "likes": 29,
            "name": "Calendar Clock",
            "published": 3,
            "tags": [
                "time",
                "clock",
                "calendar"
            ],
            "usePreview": 1,
            "username": "flockaroo",
            "viewed": 1606
        },
        "renderpass": [
            {
                "code": "// created by florian berger (flockaroo) - 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat getVal(vec2 pos)\n{\n    vec4 c=texture(iChannel0,pos/iResolution.xy);\n    return dot(c.xyz,vec3(.333));\n}\n\nvec2 getGrad(vec2 pos,float delta)\n{\n    vec2 d=vec2(delta,0);\n    return vec2(\n        getVal(pos+d.xy)-getVal(pos-d.xy),\n        getVal(pos+d.yx)-getVal(pos-d.yx)\n    )/delta/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 coord=fragCoord-iResolution.xy*.5;\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    vec4 dcol=texture(iChannel0,uv);\n    \n    vec3 n = vec3(getGrad(fragCoord,1.*iResolution.y/500.)*iResolution.y/500.,.5);\n    n=normalize(n);\n    vec3 light = normalize(vec3(1,-1,1));\n    float diff=clamp(dot(n,light),0.0,1.0)*.4+.6;\n    float spec=clamp(dot(reflect(light,n),vec3(0,0,-1)),0.0,1.0);\n    spec=pow(spec,10.0)*.7;\n    float vign=1.-dot(coord,coord)/iResolution.x/iResolution.y;\n    vign*=smoothstep(-.05,.05,uv.x);\n    vign*=smoothstep(-.08,.08,uv.y);\n    vign*=smoothstep(-.05,.05,1.-uv.x);\n    vign*=smoothstep(-.08,.08,1.-uv.y);\n\n    fragColor = vec4(1.2)*dcol*diff;\n    fragColor += spec;\n    fragColor *= vign;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// created by florian berger (flockaroo) - 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//#define YEAROVERRIDE 1885.\n\n#define PI2 6.28318530717959\n\nvec4 dayColor(int wday,float month,vec2 coord)\n{\n    //return(vec4(coord,0,0));\n    coord-=.5;\n    float r=.25;\n    vec4 bg = vec4(.5);\n    if(mod(month,2.)>=1.) bg.xyz=vec3(.3);\n    vec4 fg = vec4(0,0,0,1);\n    if(wday==0) { r=.4 ; fg=vec4(.85); }\n    if(wday==6) { r=.35; fg=vec4(.75); }\n    \n    return mix(fg,bg,smoothstep(r-.05,r+.05,length(coord.xy)));\n}\n\nfloat getMonthNumDays(float month,float year)\n{\n    float d=31.;\n    if(mod(month,2.)>=1.) d=30.;\n    if(floor(month)==1.) \n    {\n        d=28.;\n        if(mod(year,4.  )==0.) d=29.;\n        if(mod(year,100.)==0.) d=28.;\n        if(mod(year,400.)==0.) d=29.;\n    }\n    if(month>6.) d+=mod(month,2.)*2.-1.;\n    return d;\n}\n\nfloat getWDayStart(float year, float month)\n{\n    float wday=.5+(year-2017.)+month*2.5;\n    wday+=floor((year-2016.-1.)/4.);\n    wday-=floor((year-2016.-1.)/100.);\n    wday+=floor((year-2016.-1.)/400.);\n    if (month>1.) \n    { \n        wday-=2.;\n        if(mod(year,4.  )==0.) wday++;\n        if(mod(year,100.)==0.) wday--;\n        if(mod(year,400.)==0.) wday++;\n    }\n    if(month>7.) wday+=.5;\n    return mod(floor(wday),7.);\n}\n\nvec4 alphaBlend(vec4 dest,vec4 src) {return mix(dest,src,src.w);}\n\nfloat block(float e1, float e2, float w, float x)\n{\n    return smoothstep(e1-.5*w,e1+.5*w,x)*(1.-smoothstep(e2-.5*w,e2+.5*w,x));\n}\n\nvec4 markColor(vec2 coord)\n{\n    coord-=.5;\n    return block(.3,.5,.05,length(coord))*vec4(1,1,0,.7);\n}\n\n#define LETTERS\n\n#define alpha_ 128.\n#define beta_ 129.\n#define gamma_ 130.\n#define psi_ 142.\n#define bo_ 40.\n#define bc_ 41.\n#define ebo_ 91.\n#define ebc_ 93.\n#define cbo_ 123.\n#define cbc_ 125.\n#define or_ 124.\n#define squared_ 178.\n#define space_ 32.\n#define doublepoint_ 58.\n#define D0_ 48.\n#define A_ 65.\n#define B_ 66.\n#define C_ 67.\n#define D_ 68.\n#define E_ 69.\n#define F_ 70.\n#define G_ 71.\n#define H_ 72.\n#define I_ 73.\n#define J_ 74.\n#define K_ 75.\n#define L_ 76.\n#define M_ 77.\n#define N_ 78.\n#define O_ 79.\n#define P_ 80.\n#define Q_ 81.\n#define R_ 82.\n#define S_ 83.\n#define T_ 84.\n#define U_ 85.\n#define V_ 86.\n#define W_ 87.\n#define X_ 88.\n#define Y_ 89.\n#define Z_ 90.\n#define a_ (A_+32.)\n#define b_ (B_+32.)\n#define c_ (C_+32.)\n#define d_ (D_+32.)\n#define e_ (E_+32.)\n#define f_ (F_+32.)\n#define g_ (G_+32.)\n#define h_ (H_+32.)\n#define i_ (I_+32.)\n#define j_ (J_+32.)\n#define k_ (K_+32.)\n#define l_ (L_+32.)\n#define m_ (M_+32.)\n#define n_ (N_+32.)\n#define o_ (O_+32.)\n#define p_ (P_+32.)\n#define q_ (Q_+32.)\n#define r_ (R_+32.)\n#define s_ (S_+32.)\n#define t_ (T_+32.)\n#define u_ (U_+32.)\n#define v_ (V_+32.)\n#define w_ (W_+32.)\n#define x_ (X_+32.)\n#define y_ (Y_+32.)\n#define z_ (Z_+32.)\n\nvoid writeChar(vec2 pos, float s, vec3 color, float c, inout vec4 col, vec2 coord)\n{\n    float x=pos.x;\n    float y=pos.y;\n    vec2 res2=iChannelResolution[2].xy;\n    //float dist=texture(iChannel2,vec2(c/16.,mod(c,16.)/16.)).x;\n    //col=mix(vec4(1,1,0,1),col,clamp(dist*dist*dist,0.,1.));\n    if( coord.x>x && coord.y>y && coord.x<x+s && coord.y<y+s )\n    {\n        vec2 dc = coord-vec2(x,y);\n        dc.y=s-dc.y;\n        vec2 uv=\n            vec2(floor(mod(c,16.))/16.,floor(c/16.)/16.)\n            +dc/s/16.;\n        uv.y=1.-uv.y/*+1./16.*/;\n        col=mix(col,1.*vec4(color,1),texture(iChannel1,uv).x);\n        //col+=vec4(0,1,0,1);\n    }\n}\n\nvoid write(vec2 pos, float s, vec3 color, mat4 txt,inout vec4 col, vec2 coord)\n{\n    pos.x-=s*.25; // shift into field to compensate for the dist sourrunding of ecery letter\n    for(int i=0;i<4;i++)\n    {\n    \tfor(int j=0;j<4;j++)\n    \t{\n            float c=txt[i][j];\n            if(c==0.) return;\n    \t\twriteChar(pos,s,color,c,col,coord); pos.x+=s*.5;\n        }\n    }\n}\n\nvoid writeC(vec2 pos, float s, vec3 color, mat4 txt, inout vec4 col, vec2 coord)\n{\n    float cnt=0.;\n    for(int i=0;i<4;i++)\n    {\n        bool br=false;\n    \tfor(int j=0;j<4;j++)\n    \t{\n            if(txt[i][j]==0.) { br=true; break; }\n            cnt+=1.;\n        }\n        if(br) break;\n    }\n    write(pos-vec2(s*cnt*.25,s*.5),s,color,txt,col,coord);\n}\n\nvec4 writeMonthCent(float month, vec2 coord)\n{\n#ifdef LETTERS\n    mat4 m;\n    if     (month<1. )  m=mat4(J_,A_,N_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<2. )  m=mat4(F_,E_,B_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<3. )  m=mat4(M_,A_,R_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<4. )  m=mat4(A_,P_,R_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<5. )  m=mat4(M_,A_,Y_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<6. )  m=mat4(J_,U_,N_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<7. )  m=mat4(J_,U_,L_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<8. )  m=mat4(A_,U_,G_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<9. )  m=mat4(S_,E_,P_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<10.)  m=mat4(O_,C_,T_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<11.)  m=mat4(N_,O_,V_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    else if(month<12.)  m=mat4(D_,E_,C_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0);\n    vec4 col;\n\t//write(vec2(0,0),1.,vec3(1),m,col,(coord*vec2(1,-1)+vec2(0,1))*vec2(5.,1.));\n\twriteC(vec2(2.5,.5),1.,vec3(.9),m,col,coord*vec2(5.,1.));\n    return vec4(col.xyz,col.x);\n#else\n    return vec4(0);\n#endif\n}\n\nbool isPixel(int x, int y, vec2 coord)\n{\n    return (floor(coord.x)==float(x) && floor(coord.y)==float(y));\n}\n\nvec4 getPixel(int x, int y)\n{\n    return texture(iChannel2,(vec2(x,y)+.5)/iResolution.xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 coord=fragCoord-iResolution.xy*.5;\n    float scale = 1.;\n    if(iMouse.w>.0 && iMouse.z>.0)\n    {\n        // click somewhere to zoom in\n        scale=mix(getPixel(0,0).x,.3,.1);\n    }\n    else\n    {\n        scale=mix(getPixel(0,0).x,1.,.1);\n    }\n    if(iFrame<60) scale=1.;\n    \n    coord=(coord-(iMouse.xy-.5*iResolution.xy))*scale+(iMouse.xy-.5*iResolution.xy);\n        \n    float actYear=iDate.x;\n    float actMonth=iDate.y;\n    float actDay=iDate.z;\n    float actTime=iDate.w;\n#ifdef YEAROVERRIDE\n    actYear=YEAROVERRIDE;\n#endif\n    \n    // bg\n    vec4 col=mix(vec4(.4),texture(iChannel0,fragCoord/iChannelResolution[0].xy).xxxx,.3);\n    //col=vec4(.5);\n    \n    float ang=atan(-coord.x,-coord.y)+PI2*.5;\n    float ang01=ang/PI2;\n    float dist=length(coord);\n    vec4 scol;\n    // decor rings\n    float iradius=iResolution.y*.5*.3;\n    float iW=iradius*.1;\n    scol = vec4(.1,.1,.1,.7)\n        *( \n            block(iradius-iW,iradius+iW,iW*.1,dist)\n           +block(iradius*1.17-iW*.2,iradius*1.17+iW*.2,iW*.1,dist)\n           +block(iradius*1.57-iW*.5,iradius*1.57+iW*.5,iW*.1,dist)\n           +block(iradius*2.-iW,iradius*2.+iW,iW*.1,dist)\n         );\n    col = alphaBlend(col,scol);\n \n    // calender\n    float ang12=ang01*12.;\n    float month=floor(ang12);\n    float wday=fract(ang12)*7.;\n    float year=actYear;\n    float wdayStart=getWDayStart(year,month);\n    float mradiusO=iResolution.y*.5*.9;\n    float mradiusI=iResolution.y*.5*.6;\n    float mweek=6.*(dist-mradiusO)/(mradiusI-mradiusO);\n    float mweekl=mweek;\n    // press 'A' key for pseudo-isotropic week-space\n    if(texture(iChannel3,vec2((65.+.5)/256.,.5/3.)).x>.5)\n    \tmweek = 6.*(1.-log(dist/mradiusI)/log(mradiusO/mradiusI));\n    float mday=wday-wdayStart+floor(mweek)*7.;\n    float monthNumDays=getMonthNumDays(month,year);\n    if(mday>=0. && mday<monthNumDays )\n    {\n    \tscol=dayColor(int(wday),month,vec2(fract(wday),fract(mweek)));\n\t\tcol = alphaBlend(col,scol);\n    }\n    if(floor(mday)==actDay-1. && floor(month)==actMonth)\n    {\n        scol=markColor(vec2(fract(wday),fract(mweek)));\n\t\tcol = alphaBlend(col,scol);\n    }\n    if(mweekl<0. && mweekl>-2.) \n    {\n        vec2 tcoord=vec2(fract(wday/7.),1.-fract(mweekl*.5));\n        scol=writeMonthCent(month,tcoord);\n\t\tcol = alphaBlend(col,scol);\n        //col = vec4(tcoord,0,0);\n    }\n    \n    // clock\n    float secRadius = mradiusI*.96;\n    float secW=secRadius*.05;\n    float sec=mod(actTime,60.);\n    scol = vec4(1,.7,0,.7)\n          *block(.0,sec,.1,ang01*60.)\n          *block(secRadius-.5*secW,secRadius+.5*secW,secW*.3,dist);\n\tcol = alphaBlend(col,scol);\n    \n    float minRadius = secRadius*.88;\n    float minW=minRadius*.12;\n    float minute=mod(actTime/60.,60.);\n    scol = vec4(.8,.8,.8,.45)\n          *block(.0,minute,.1,ang01*60.)\n          *block(minRadius-.5*minW,minRadius+.5*minW,minW*.1,dist);\n\tcol = alphaBlend(col,scol);\n    \n    float hrRadius = secRadius*.67;\n    float hrW=hrRadius*.35;\n    float hr=mod((actTime/3600.),12.);\n    float hr24=mod((actTime/3600.),24.);\n    scol = vec4(.8,.8,.8,.45)\n          *block(.0,hr,.1/60.*12.,ang01*12.)\n          *block(hrRadius-.5*hrW,hrRadius+.5*hrW,hrW*.05,dist);\n\tcol = alphaBlend(col,scol);\n    \n    scol=vec4(0);\n    mat4 clockTxt=mat4(floor(hr24/10.)+D0_,mod(hr24,10.)+D0_,doublepoint_,\n                       floor(minute/10.)+D0_,mod(minute,10.)+D0_,doublepoint_,\n                       floor(sec/10.)+D0_,mod(sec,10.)+D0_,\n                       0,0,0,0, 0,0,0,0);\n    \n    writeC(vec2(0),.053,vec3(.9),clockTxt,scol,coord/iResolution.y);\n    //writeC(vec2(0),.1,vec3(1),mat4(A_,B_,C_,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),scol,coord/iResolution.y);\n    col = alphaBlend(col,scol);\n    if (isPixel(0,0,fragCoord)) col.x=scale;\n\n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}