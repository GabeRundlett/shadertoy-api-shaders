{
    "Shader": {
        "info": {
            "date": "1601178476",
            "description": "This uses a function I came up with to describe simple bouncing motions.",
            "flags": 0,
            "hasliked": 0,
            "id": "WdtczS",
            "likes": 1,
            "name": "Simple Bouncing",
            "published": 3,
            "tags": [
                "simple",
                "physics",
                "bouncing"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 147
        },
        "renderpass": [
            {
                "code": "float bounceHeight(float time, float period, float maxHeight) {\n    float modulus = mod(time / period, 1.0);\n    return modulus * (1.0 - modulus) * 4.0 * maxHeight;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float ballRadius = 50.0;\n\n    float bouncePeriod = 2.0;\n    float maxBounceHeight = 0.75 * (iResolution.y - ballRadius);\n\n    vec2 ballPosition = vec2(0.5 * iResolution.x, ballRadius + bounceHeight(iTime, bouncePeriod, maxBounceHeight));\n    vec3 ballColor = vec3(1.0, 0.0, 0.0);\n\n    vec3 color = vec3(0.0, 0.0, 0.0);;\n    if (length(fragCoord - ballPosition) <= ballRadius) {\n        color = ballColor;\n    }\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}