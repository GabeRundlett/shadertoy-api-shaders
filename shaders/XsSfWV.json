{
    "Shader": {
        "info": {
            "date": "1502141666",
            "description": "Tim Burton's 1989 Batman signal in the night sky.",
            "flags": 0,
            "hasliked": 0,
            "id": "XsSfWV",
            "likes": 6,
            "name": "Bat Signal",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "sdf",
                "batman"
            ],
            "usePreview": 0,
            "username": "k_kondrak",
            "viewed": 818
        },
        "renderpass": [
            {
                "code": "// ----------------------------------------------------\n//  \"Bat Signal\" by Krzysztof Kondrak @k_kondrak\n// ----------------------------------------------------\n\n// ----------------------------------------------------------------\n//  modified \"Batman Logo\" - https://www.shadertoy.com/view/ldXSDB\n// ----------------------------------------------------------------\nfloat ellipse(in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady)\n{\n\tvec2  q = p - vec2(x, y);\n\tfloat u = dot( q, vec2(dirx, diry));\n\tfloat v = dot( q, vec2(diry, dirx) * vec2(-1.0, 1.0));\n\treturn dot(vec2(u*u, v*v),vec2(1.0/(radx*radx), 1.0/(rady*rady))) - 1.0;\n}\n\nfloat box(in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady)\n{\n\tvec2  q = p - vec2(x, y);\n\tfloat u = dot( q, vec2(dirx, diry));\n\tfloat v = dot( q, vec2(diry, dirx) * vec2(-1.0, 1.0));\n\tvec2  d = abs(vec2(u, v)) - vec2(radx, rady);\n\treturn max(d.x, d.y);\n}\n\nfloat fillEllipse(in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady)\n{\n\tfloat d = ellipse(p, x, y ,dirx, diry, radx, rady);\n    float w = fwidth(d);\n\treturn 1.0 - smoothstep( -w, w, d);\n}\n\nfloat fillRectangle(in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady)\n{\n\tfloat d = box(p, x, y, dirx, diry, radx, rady);\n    float w = fwidth(d);\n\treturn 1.0 - smoothstep( -w, w, d);\n}\n\nfloat BatLogo(in vec2 p)\n{\n\tp.x = abs(p.x);\n    p.x *= 1.0 + 0.05 * p.x * sin(2.0 * iTime + 0.0);\n    p.y *= 1.0 + 0.05 * p.x * sin(2.0 * iTime + 1.3);\t\n\t\n\tfloat f = 1.0;\n\t\n\tf = mix( f, 0.0,     fillEllipse(   p, 0.000, 0.000,  1.0, 0.0, 0.500, 0.488) );\n\tf = mix( f, 1.0,     fillEllipse(   p, 0.188, 0.300,  1.0, 0.0, 0.089, 0.167) );\n\tf = mix( f, 1.0,     fillRectangle( p, 0.170, 0.400,  1.0, 0.0, 0.070, 0.100) );\n\tf = mix( f, 1.0,     fillRectangle( p, 0.000, 0.460,  1.0, 0.0, 0.040, 0.100) );\n\tf = mix( f, 1.0,     fillRectangle( p, 0.036, 0.448,  0.6, 0.8, 0.065, 0.057) );\n\tf = mix( f, 1.0,     fillEllipse(   p, 0.095,-0.450,  1.0, 0.0, 0.097, 0.333) );\n\tf = mix( f, 1.0,     fillEllipse(   p, 0.180,-0.350, -1.0, 0.5, 0.100, 0.278) );\n    f = mix( f, 0.0, 1.0-fillEllipse(   p, 0.000, 0.000,  1.0, 0.0, 0.550, 0.550) );\n\n\treturn f;\n}\n\n// --------------------\n//  sold spotlight ray\n// --------------------\nfloat Spotlight(in vec2 p)\n{\n    vec2 q = p;\n    q.x = abs(q.x);\n    q.x *= 1.0 + 0.05 * q.x * sin(2.0 * iTime + 0.0);\n    q.y *= 1.0 + 0.05 * q.x * sin(2.0 * iTime + 1.3);\n    float r = mix( 1.0, 0.0, 1.0-fillEllipse(q, 0.000, 0.000,  1.0, 0.0, 0.550, 0.550) );\n\tfloat f = 1.0;\n\t\n\tf = mix(f, 0.0, 1.0-fillRectangle( p, 0.75, -0.5,  -0.015, 0.01, 0.045, 0.00975) );\n    f = mix(f, 0.0, r);\n    f = mix(f, 0.0, fillRectangle( p, -0.75, 0.5,  -0.015, 0.01, 0.0175, 0.00995) );\n    f = mix(f, 1.0, r);\n    f = mix(f, 0.0, fillRectangle( p, 1.335, 0.05,  -0.013, 0.015, 0.07, 0.00975) );\n\n\treturn f;\n}\n\n// ----------------------\n//  spotlight \"god rays\"\n// ----------------------\nfloat SpotRays(in vec2 raySrc, in vec2 rayDir, in vec2 pos, in float speed)\n{\n\tfloat cosAngle = dot(normalize(pos - raySrc), rayDir);\n\t\n\treturn clamp(0.75 + 0.2  * sin( cosAngle * 66.22 + iTime * speed) +\n\t\t\t \t      + 0.15 * cos(-cosAngle * 43.11 + iTime * speed), 0.0, 1.0) *\n\t\t\t \t clamp((pos.x - length(pos - raySrc)) / pos.x, 0.5, 1.0);\n}\n\n// -----------\n//  night sky\n// -----------\nvec3 Sky(in vec2 pos)\n{\n    vec2 offset = vec2(0.004*iTime,0.0);\n    vec3 color  = vec3(1.0);\n\n    for(int i = 0; i < 3; i++) \n    {\n        color += mix(texture(iChannel0, pos - 0.25 * offset + 0.5),\n                     texture(iChannel0, pos - offset), \n                     abs(mod(float(i) * 0.666, 2.0) - 1.0)).xyz * color * color;\n    }\n\n    return color * vec3(.0111, 0.0111, .06);\n}\n\n\n// --------------------------\n//  Bat Signal - ray + symbol\n// --------------------------\nvec3 BatSignal(in vec2 uv, in vec2 pos, in float scale, in vec3 bgColor)\n{\n    vec2 rayOffset = vec2(2.6, -2.3);\n    vec2 p  = (uv + pos) * scale;\n\tfloat f = 0.5 * BatLogo(p) + 0.2 * Spotlight(p);\n    f *= bgColor.x + bgColor.y + bgColor.z;\n\t\t\n    return vec3(f) * SpotRays(pos, normalize(vec2(1.0, -0.11)), -uv + rayOffset/scale, 1.5);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy + 2.0 * fragCoord.xy)/iResolution.y;\n    vec3 color = Sky(p * 0.0322);\n\n    color += BatSignal(p, vec2(0.55, -0.35), 1.1, color) * 3.5;\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}