{
    "Shader": {
        "info": {
            "date": "1517570083",
            "description": "The Mandelbrot Set\nIf anyone knows how to implement a bigInt or something that'll make it so you can zoom in more, I'd like to know.",
            "flags": 32,
            "hasliked": 0,
            "id": "MlSfWt",
            "likes": 1,
            "name": "Mandelbrot Set test",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "zoom"
            ],
            "usePreview": 0,
            "username": "EFHIII",
            "viewed": 601
        },
        "renderpass": [
            {
                "code": "vec3 hsl2rgb( in vec3 c ){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\nbool inRect(float x,float y,float xa,float ya,float xb,float yb){\n    if(x>xa&&x<xb&&y>ya&&y<yb){\n    \treturn true;\n    }/*\n    if(x<xa&&x>xb&&y<ya&&y>yb){\n    \treturn true;\n    }\n    if(x>xa&&x<xb&&y<ya&&y>yb){\n    \treturn true;\n    }\n    if(x<xa&&x>xb&&y>ya&&y<yb){\n    \treturn true;\n    }*/\n    return false;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    vec4 c0=texture(iChannel0,vec2(0.));\n    vec2 at=c0.xy;\n    float width=c0.z;\n    float change=c0.w;\n    float AR=iResolution.x/iResolution.y;\n    \n\tvec2 p = fragCoord.xy / iResolution.xx;\n    vec4 m = iMouse / iResolution.xxxx;\n    \n\tvec3 col = vec3(0.0);\n    vec2 c = at + width * fragCoord.xy / iResolution.xy;\n    c.x *= AR;\n    //c.x=at.x+width*fragCoord.x/iResolution.x*(iResolution.x/iResolution.y);\n    \n    // iterate\n    float di =  1.0;\n    vec2 z  = vec2(0.0);\n    float m2 = 0.0;\n    float i=0.0;\n    for( ; i<10000.0; i++ ){\n        if(m2>1024.0){di=0.0;break;}\n\n        z = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+c;\n\t\t\t\n        m2 = dot(z,z);\n    }\n    col = hsl2rgb(vec3(i/255.0-floor(i/255.0),1,0.5));\n    if(di!=0.0){\n    \tcol = vec3(0,0,0);\n    }\n\tif( m.z>0.0 ){\n        //col= mix(col, vec3(1.0,1.0,1.0), (!inRect(p.x,p.y,m.z+.001,m.w-m.x+m.z+.001,m.x-.001,m.w-.001)&&inRect(p.x,p.y,m.z,m.w-m.x+m.z,m.x,m.w))?1.0:0.0);\n        col= mix(col, vec3(1.0,1.0,1.0), (!inRect(p.x,p.y,m.z+.001,m.w-m.x+m.z+.001,m.x+(m.x-m.z)*(AR-1.)-.001,m.w-.001)&&inRect(p.x,p.y,m.z,m.w-m.x+m.z,m.x+(m.x-m.z)*(AR-1.),m.w))?1.0:0.0);\n\t}\n    \n    fragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.x>1.||fragCoord.y>1.){return;}\n    \n    if(iFrame<1){\n        fragColor=vec4(-1.25,-1.25,2.5,0.);\n        return;\n    }\n    float AR=iResolution.x/iResolution.y;\n\tvec2 p = fragCoord.xy / iResolution.xx;\n    vec4 c0=texture(iChannel0,vec2(0.));\n    \n    vec4 m = iMouse / iResolution.xxxx;\n    vec2 at=c0.xy;\n    float width=c0.z;\n    float change=c0.w;\n    \n\tif( m.z>0.0 ){\n        change=1.;\n\t}\n    else if(change==1.){\n        if(m.x+m.z<=0.){\n\t        fragColor=vec4(-1.25,-1.25,2.5,0.);\n\t        change=0.;\n\t        return;\n        }\n        at=at + vec2(abs(m.z),(-m.w-m.x-m.z)*AR)*width;\n        width=(m.x+m.z)*AR*width;\n        change=0.;\n    }\n    else{\n        change=0.;\n    }\n    fragColor=vec4(at,width,change);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}