{
    "Shader": {
        "info": {
            "date": "1497280431",
            "description": "Shader making Voronoi diagram from given points (now points are taken from channel)",
            "flags": 0,
            "hasliked": 0,
            "id": "XslBRf",
            "likes": 1,
            "name": "Voronoi diagram",
            "published": 3,
            "tags": [
                "voronoi",
                "diagram"
            ],
            "usePreview": 0,
            "username": "Tamamo",
            "viewed": 485
        },
        "renderpass": [
            {
                "code": "#define POINTS 300\n#define START vec2(0.1, 0.31)\n#define INPUT iChannel1\n\nfloat d1(vec2 p1, vec2 p2) {\n\treturn abs(p1.x-p2.x)+abs(p1.y-p2.y);\n}\n\nfloat d2(vec2 p1, vec2 p2) {\n\treturn distance(p1, p2);\n}\n\nconst float d3pow1 = 3.0;\nconst float d3pow2 = 1.0/d3pow1;\n\nfloat d3(vec2 p1, vec2 p2) {\n\treturn pow(abs(pow(p1.x-p2.x, d3pow1))+abs(pow(p1.y-p2.y, d3pow1)), d3pow2);\n}\n\nfloat d4(vec2 p1, vec2 p2) {\n\treturn max(abs(p1.x-p2.x), abs(p1.y-p2.y));\n}\n\nfloat d(vec2 p1, vec2 p2) {\n    return d4(p1, p2);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 startingPoint = START;\n    float dist = d(uv, startingPoint);\n    vec4 color = texture(INPUT, startingPoint);\n    for (int i=1;i<POINTS;i++) {\n        vec4 newColor = texture(INPUT, startingPoint);\n        startingPoint = newColor.xy;\n        float newD = d(uv, startingPoint);\n        if (newD < dist) {\n            dist = d(uv, startingPoint);\n            color = newColor;\n        }\n    }\n    if (dist<0.002) fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\telse fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}