{
    "Shader": {
        "info": {
            "date": "1654468891",
            "description": "click the screen",
            "flags": 32,
            "hasliked": 0,
            "id": "NsGcRW",
            "likes": 11,
            "name": "Interactive \"Fluid\"",
            "published": 3,
            "tags": [
                "fun"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "vec4 cell(in ivec2 p) {\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return texelFetch(iChannel0, p, 0 );\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float zm = 1.;\n    vec2 res = 0.5 * floor(iResolution.xy);    \n    ivec2 px = ivec2(zm * fragCoord + (1.-zm) * res);\n    \n    vec4 c = cell(px);\n    vec3 col = c.rgb + vec3(0.15,0.1,0.25);\n\n    fragColor.rgb = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\n\nvec4 cell(in ivec2 p) {\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return texelFetch(iChannel0, p, 0 );\n} \n\nfloat L_in_power_P(vec2 b, vec2 e, float p) {\n    vec2 be = e - b;\n    return pow( pow(abs(be.x), p) + pow(abs(be.y), p), 1.0 / p );\n}\n\nvoid mainImage( out vec4 col, in vec2 f )\n{\n    vec2 res = floor(0.5 * iResolution.xy);\n    vec2 ms = iMouse.xy;\n    \n    // doing something similar but without bias would be nice\n    ivec2 px = ivec2(f + 20.);\n    // px = ivec2(f * L_in_power_P(f, res, 0.1 + abs(cos(iTime))));  \n    \n    vec4 c = cell(px);\n    float v = pi * 5. * c.a;\n    \n    // Change me! (higher -> faster + more grainy)\n    float m = 2.;\n    \n    px = ivec2(f + m * vec2(cos(v), sin(v)));\n    vec4 c2 = cell(px);\n    \n    float d = length(f - ms);\n    float s = exp(-0.05 * d - 0. * (0.5 + 0.5 * cos(v)));\n    //col = 0.96 * c2 + 0.02* c + s;\n    col = 0.99 * c2 + s;\n     col = clamp(col, 0., 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}