{
    "Shader": {
        "info": {
            "date": "1665965748",
            "description": "school",
            "flags": 0,
            "hasliked": 0,
            "id": "DslGDn",
            "likes": 0,
            "name": "test_2022_10_17",
            "published": 3,
            "tags": [
                "fragmentshader"
            ],
            "usePreview": 0,
            "username": "xlat",
            "viewed": 155
        },
        "renderpass": [
            {
                "code": "float circleShape_1(vec2 position, float radius)\n{\n\treturn step(radius, length(position));\n}\n\n///--------|\n/// аналог |\n///--------:\nfloat circleShape_2(vec2 position, float radius)\n    {if (length(position) > radius) return 1.0;\n    else                            return 0.0;\n}\n\n///--------|\n/// ещё    |\n///--------:\nfloat circleShape_3(vec2 position, float radius)\n{\n    radius /= 2.0;\n    if(  position.x > -radius &&\n         position.x <  radius &&\n         position.y > -radius &&\n         position.y <  radius) return 0.0;\n    else                       return 1.0;\n}\n\n///--------|\n///  test01|\n///--------:\nvoid test01( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 position = fragCoord / iResolution.x;\n    \n\tvec2 translate = vec2(sin(iTime), cos(iTime)) * 0.2 - vec2(0.5,0.5 * iResolution.y/iResolution.x);\n\tposition += translate;\n\n    //float circle = circleShape_1(position, 0.1);\n    //float circle = circleShape_2(position, 0.1);\n\t  float circle = circleShape_3(position, 0.1);\n\n\tvec3 color = vec3(circle);\n\n\tfragColor = vec4(color, 1.0);\n\n}\n\n///--------|\n///  test02|\n///--------:\nvoid test02( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 position = fragCoord / iResolution.xy;\n    \n    position -= 0.5;\n\n\t  float circle = circleShape_1(position, 0.1);\n    //float circle = circleShape_2(position, 0.1);\n\t//float circle = circleShape_3(position, 0.1);\n\n\tvec3 color = vec3(circle);\n\n\tfragColor = vec4(color, 1.0);\n\n}\n\n///---------------------------------------------------|\n/// Тесты вместе.\n///---------------------------------------------------:\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      test01(fragColor, fragCoord);\n      \n      vec4 Color;\n     \n      test02(Color, fragCoord);\n      \n      \n      if(Color.r == 0.0) fragColor = Color;\n      \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}