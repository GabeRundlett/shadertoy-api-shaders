{
    "Shader": {
        "info": {
            "date": "1611587829",
            "description": "Creating the puzzle that changes shapes and colors and line thickness based on time. ",
            "flags": 0,
            "hasliked": 0,
            "id": "WlVyzt",
            "likes": 0,
            "name": "the puzzle",
            "published": 3,
            "tags": [
                "noise",
                "line",
                "texture",
                "sin",
                "gradient",
                "rotate",
                "cos",
                "fract",
                "abs",
                "position",
                "puzzle",
                "tan"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 259
        },
        "renderpass": [
            {
                "code": "// wood texture and moving colors \n\n#define PI 3.141592653\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\n// Value noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ),\n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ),\n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat lines(in vec2 pos, float b){\n    float scale = 10.0;\n    pos *= scale;\n    return smoothstep(0.0,\n                    .5+b*.5,\n                    abs((sin(pos.x*3.1415)+b*2.0))*.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.y *= iResolution.y/iResolution.x;\n\n    vec2 pos = st.yx*vec2(10.,7.);\n\n    float pattern = pos.x*sin(iTime)*10.;\n\n    // Add noise\n    pos = rotate2d( noise(pos)*PI*PI*sin(iTime)) * pos;\n    pos /=  abs(tan(iTime))*PI*0.5;\n    pos +=  cos(iTime)*PI*0.1;\n    \n    pos.x+=(abs(sin(iTime)))*10.;\n\n    // Draw lines\n    pattern = lines(pos,0.2+cos(iTime));\n\n    fragColor = vec4(vec3(pattern)/vec3(st.y,st.x+pos.x,pos.y)*fract(abs(tan(iTime))/2.5),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}