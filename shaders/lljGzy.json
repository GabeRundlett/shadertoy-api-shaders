{
    "Shader": {
        "info": {
            "date": "1430128661",
            "description": "checker",
            "flags": 4,
            "hasliked": 0,
            "id": "lljGzy",
            "likes": 7,
            "name": "ngTile1",
            "published": 3,
            "tags": [
                "reactive",
                "blackandwhite",
                "audio",
                "checker",
                "tile",
                "microphone",
                "mic",
                "ska"
            ],
            "usePreview": 0,
            "username": "netgrind",
            "viewed": 855
        },
        "renderpass": [
            {
                "code": "float mic(float x, float y){\n return texture(iChannel0, vec2(abs(mod(x+1., 2.)-.1),y)).r;   \n}\n\nfloat com(vec2 uv, float i){\n    float d = length(uv)*.1;\n    \n    //uv*= mat2(d,sin(i+d),sin(-i+d),d);\n    //uv*= mat2(0,sin(i+d),sin(-i+d),0);\n    //uv*= mat2(1,sin(i+d),sin(-i+d),1);\n    //uv*= mat2(sin(i-d),0,0,sin(i-d));\n    //uv*= mat2(tan(d+1.5),sin(i),cos(i),tan(d+1.5));\n    //uv*= mat2(cos(i),sin(d),cos(d),sin(i));\n    //uv*= mat2(cos(i),d,d,sin(i));\n    //uv*= mat2(sin(i+d),cos(i+sin(i+d)),sin(i+cos(i-d)),cos(d));\n    uv*= mat2(d+mic(d, .3),cos(i+sin(i+d)),sin(i+cos(i-d)),d);\n    \n    float v =  floor(mod(uv.y,2.0));\n    return floor(mod(uv.x+v,2.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = iTime*.333;\n    \n    fragCoord.xy -= iResolution.xy*.5;\n\tvec2 uv = fragCoord.xy / iResolution.xx;\n    uv*=.4+mic(.1,.3)*0.1;\n    float o = sin(i)+1.;\n    float f = com(uv*20.,i);\n    f = max(f,com(uv*(20.+o),i)*.6);\n    f = max(f,com(uv*(20.+o*2.),i)*.3);\n    \n\tfragColor = vec4(f,f,f,1.0); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}