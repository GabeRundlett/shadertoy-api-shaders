{
    "Shader": {
        "info": {
            "date": "1591464871",
            "description": "Random truchet generator",
            "flags": 0,
            "hasliked": 0,
            "id": "tllcR8",
            "likes": 4,
            "name": "Random Truchet",
            "published": 3,
            "tags": [
                "truchet"
            ],
            "usePreview": 0,
            "username": "Oggbog",
            "viewed": 287
        },
        "renderpass": [
            {
                "code": "\n\nfloat hash21(vec2 p) {\n    p = fract(p * vec2(233.34, 851.74));\n    p += dot(p, p + 23.45);\n    return fract(p.x * p.y);\n}\n\n\nvec2 rot(vec2 uv,float a){\n    return uv * mat2(sin(a),-sin(a),sin(a),cos(a));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 6.0;\n    uv += 0.5;\n    \n    \n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv);\n    \n\tfloat n = hash21(id);\n    \n    n = floor(n*4.0);\n    n =  mod(floor(iTime*2.0)+n,4.0);\n   \t\n    if (n==1.0){\n        gv.x *= -1.0;\n    } else if (n==2.0) {\n        gv.y *= -1.0;\n    } else if (n==3.0) {\n        gv.x *= -1.0;\n        gv.y *= -1.0;\n    }\n    \n    \n    \n    float m = smoothstep(gv.x,gv.x + 0.01,gv.y);\n     \n    vec3 col = vec3(m);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}