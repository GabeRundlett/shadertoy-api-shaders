{
    "Shader": {
        "info": {
            "date": "1625166744",
            "description": "имя и фамилия",
            "flags": 0,
            "hasliked": 0,
            "id": "sllSRH",
            "likes": 1,
            "name": "Имя и фамилия Филипенко",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "filipenkonikita",
            "viewed": 214
        },
        "renderpass": [
            {
                "code": "    const int font[] = int[](\n     0x69f99, 0x79797, 0xe111e, 0x79997, 0xf171f, 0xf1711, 0xe1d96, 0x99f99, \n     0xf444f, 0x88996, 0x95159, 0x1111f, 0x9f999, 0x9bd99, 0x69996, 0x79971,\n     0x69b5a, 0x79759, 0xe1687, 0xf4444, 0x99996, 0x999a4, 0x999f9, 0x99699,\n     0x99e8e, 0xf843f, 0x6bd96, 0x46444, 0x6942f, 0x69496, 0x99f88, 0xf1687,\n     0x61796, 0xf8421, 0x69696, 0x69e84, 0x66400, 0x0faa9, 0x0000f, 0x00600,\n     0x0a500, 0x02720, 0x0f0f0, 0x08421, 0x33303, 0x69404, 0x00032, 0x00002,\n     0x55000, 0x00000, 0x00202, 0x42224, 0x24442);\n\n    const ivec2 MAP_SIZE = ivec2(4,5);\n\n\n    int drawChar( in int char, in vec2 pos, in vec2 size, in vec2 uv )\n    {\n    uv = vec2(MAP_SIZE)*(uv-pos)/size;\n     ivec2 iuv = ivec2(round(uv));\n     if( iuv.x<0 || iuv.x>MAP_SIZE.x-1 ||\n         iuv.y<0 || iuv.y>MAP_SIZE.y-1 ) return 0;\n      int index = MAP_SIZE.x*iuv.y + iuv.x;\n    return (font[char]>>index)&1;\n\n}\n    vec2  charSize;\n    float spaceSize;\n    vec2  charPos;\n    int   chr;\n\n#define DRAW(a) chr += drawChar( a, charPos, charSize, uv); charPos.x += spaceSize;\n#define A DRAW(0)\n#define E DRAW(4)\n#define F DRAW(5)\n#define I DRAW(8)\n#define K DRAW(10)\n#define L DRAW(11)\n#define N DRAW(13)\n#define O DRAW(14)\n#define P DRAW(15)\n#define T DRAW(19)\n#define SPACE DRAW(49)\n    float End( void )\n    {\n        return float(chr);\n    }\n\n    void SetSize( float size )\n    {\n        charSize = size*vec2(MAP_SIZE) / float(MAP_SIZE.x);\n        spaceSize = charSize.x*1.6;\n    }\n\n    void SetPos( in vec2 pos )\n    {\n        charPos = pos;\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.y;\n    SetSize( 0.04 );\n\tSetPos( vec2(0.38, 0.5) );\n    F I L I P E N K O SPACE N I K I T A      \n\tfragColor = vec4(0,0,End(),0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}