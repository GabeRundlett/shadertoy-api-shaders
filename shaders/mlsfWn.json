{
    "Shader": {
        "info": {
            "date": "1692812507",
            "description": "- Add this Common content to the one of buggy shader to test if it fixes compatibility issues.\n- testing the size of a vector / float / void ( B&W tiles:see Image ).\n\nAFTER SHADER LOAD, SET Common:26 #if TO 1 AND RECOMPILE. Compiler complains but it works",
            "flags": 0,
            "hasliked": 0,
            "id": "mlsfWn",
            "likes": 14,
            "name": "macro tricks ( compat & more)",
            "published": 3,
            "tags": [
                "compatibility",
                "tricks",
                "macros"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 326
        },
        "renderpass": [
            {
                "code": "// see tricks in Common\n// all compatibility issues: https://shadertoyunofficial.wordpress.com/2016/07/22/compatibility-issues-in-shadertoy-webglsl/\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec3 R = iResolution;\n    vec2 I = floor(4.*U/R.xy);\n    float a;                   // column = dimension 1...4\n    O = vec4(   I==vec2(0,3) ?  dim(R)==1 : I==vec2(1,3) ?  dim(R)==2 : I==vec2(2,3) ?  dim(R)==3  // top line:    dim of vec3\n              : I==vec2(0,2) ?  dim(U)==1 : I==vec2(1,2) ?  dim(U)==2 : I==vec2(2,2) ?  dim(U)==3  //              dim of vec2\n              : I==vec2(0,1) ?  dim(a)==1 : I==vec2(1,1) ?  dim(a)==2 : I==vec2(2,1) ?  dim(a)==3  //              dim of float\n              : I==vec2(0,0) ?  dim( )==1 : I==vec2(1,0) ?  dim( )==2 : I==vec2(2,0) ?  dim( )==3  // bottom line: dim of void\n              : false );\n              \n    ivec2 G = ivec2(U) % ivec2(R/4.);          // red separators\n    if ( G.x*G.y==0 ) O = vec4(1,0,0,0);\n  \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//=== to be copied in Common in the shader to debug ===========================\n\n// --- find the dimension of vectors / float /Â empty argument ( dim(empty) = 1 )\n\n#define dim(v) int(dot( v+1.-(v+0.) ,v+1.-(v+0.) ))\n\n\n// --- to test if a compatibility issue is causing a bug\n\n#define pow(a,b)       pow(abs(a),b)             // Windows wrongly adds abs() to avoid NaN\n#define sqrt(a)        sqrt(abs(a))\n#define inversesqrt(a) inversesqrt(abs(a)) \n#define log(a)         log(abs(a))\n#define log2(a)        log2(abs(a))\n#define clamp(x,m,M)   min(max(x, m), M)         // wrong clamp implem on Windows\n#define sin(a)         sin(mod(a,6.28318530718)) // precision issues on Windows\n#define cos(a)         cos(mod(a,6.28318530718))\n#define atan(y,x)      atan(y+1e-15,x+1e-15)     // Windows hack degenerate cases to avoid NaN\n#define mod(a,b)     ( dot(b,b)==0. ? (a)*0. : mod(a,b) )\n#define normalize(v)   normalize( v+1e-15 )\n//#define length(v)    length( v+1e-15 )         // this one won't work if array.length() is used\n#define dot(a,b)     ( dot(a,b) + 1e-15 )\n\n\n// --- force all out to be inout, with turnover for MainImage.\n\n#if 0 // <<<  AFTER SHADER LOAD, SET TO 1 AND RECOMPILE <<< ( Compiler complains, but it works :-) )\n\nvoid mainImage_( inout vec4 O, vec2 U );\nvoid mainImage ( out vec4 O, vec2 U ){ mainImage_(O,U); }\n#define mainImage mainImage_\n#define out inout                                // wrong out implem on Windows\n\n#endif\n\n\n// --- to prevent loop unrolling, making compilation a lot faster\n// replace value 0 or 0. in loops with iZ of fZ :\n\n// #define iZ min(0, iFrame)\n// #define dZ min(0., iTime)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}