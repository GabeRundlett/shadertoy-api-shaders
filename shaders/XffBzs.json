{
    "Shader": {
        "info": {
            "date": "1724174033",
            "description": "Some kind of fireball ",
            "flags": 0,
            "hasliked": 0,
            "id": "XffBzs",
            "likes": 17,
            "name": "Fieryball",
            "published": 3,
            "tags": [
                "noise",
                "flame",
                "fire",
                "fireball"
            ],
            "usePreview": 1,
            "username": "kuvkar",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358\n\nfloat fbm(in vec2 uv)\n{\n    float f = texture(iChannel2, uv).r * 0.5;\n    f += texture(iChannel2, uv * 2.0).r * 0.5 * 0.5;\n    \n    f += texture(iChannel2, uv * 4.0).r * 0.5 * 0.5 * 0.5;\n    f += texture(iChannel2, uv * 5.0).r * 0.5 * 0.5 * 0.5 * 0.5;\n    return f * .77;\n}\n\n\nfloat flameTexture(in vec2 uv, float T)\n{\n    float a = fbm(vec2(T, 0.0) * .02 + uv * 0.01);\n    mat2 rm = mat2(cos(a), -sin(a), sin(a), cos(a));\n    vec2 ruv = rm * vec2(0., 1.0);\n    float r = fbm(.01 * uv + 0.04 * ruv);\n    \n    float a2 = fbm(vec2(T, 0.0) * .02 + uv * 0.025);\n    mat2 rm2 = mat2(cos(a2), -sin(a2), cos(a2), sin(a2));\n    vec2 ruv2 = rm2 * vec2(.5, .5);\n    r += fbm(.05 * uv + 0.07 * ruv2) * .5;\n    return r;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 screenUv = uv;\n    \n    uv -= vec2(0.5);\n    uv.y /= iResolution.x / iResolution.y;\n    uv *= 0.95;\n    \n    vec3 col = vec3(0.0);\n    float T = iTime * .13;\n    \n    float f = 0.;\n    for (float a = 0.0; a < PI * 2.0; a = a + PI * .25)\n    {\n        mat2 rm = mat2(cos(a), -sin(a), sin(a), cos(a));\n        float ba = a - PI * 0.5;\n        f += flameTexture(vec2(a * .3, 0.0) + 2.5 * uv * rm, T) * mix(1.0, dot(normalize(uv), vec2(sin(ba), cos(ba))), 0.5 * smoothstep(-0.3, 0.1, length(uv)));    \n    }\n    \n    float b = 0.3 + length(uv) * 1.;\n    b -= f * .1;\n    b = smoothstep(0.27, 0.23, b);\n    col = vec3(b);\n    vec3 c1 = vec3(1.0, 0.2, 0.5);\n    vec3 c2 = vec3(1.0, 1., .4);\n    \n    col = clamp(col, 0.0, 1.0);\n    col *= f;\n    col.rgb *= mix(c1, c2 * 1.5, smoothstep(1., 3.35, f)) * .45;\n    vec3 shadows = mix(vec3(0.15), c1 * .6, smoothstep(2., 2.6, f));\n    col *= mix(shadows, col, shadows.r);\n    col = clamp(col, 0.0, 1.0);\n    \n    b = clamp(b, 0.0, 1.0);\n    col = mix(col, vec3(1.0, 1., 1.), smoothstep(.4, .6, (shadows.r) * b));\n    \n    col += 0.4 * vec3(1.0 - b) * f * smoothstep(1.15, .02, f * .15 + length(uv) - 0.2) * vec3(.95, .35, 0.2);\n    col += 0.6 * vec3(1.0 - b) * f * smoothstep(1.0, .01, f * .3 + length(uv) - 0.15) * vec3(1., .4, .2);\n    \n    col /=  (1.0 - (vec3(1.0 - b) * f * smoothstep(.8, .2, f * .3 + length(uv) - 0.15) * vec3(.8, .7, .8)));\n    \n    col = clamp(col, 0.0, 1.0);\n    col *= smoothstep(0.6, 0.4, length(uv.x));\n    col *= smoothstep(0.35, 0.2, length(uv.y));\n    \n    fragColor.rgb = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}