{
    "Shader": {
        "info": {
            "date": "1540126518",
            "description": "test",
            "flags": 2,
            "hasliked": 0,
            "id": "lttBzS",
            "likes": 1,
            "name": "testfftmirror",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "XIX",
            "viewed": 554
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433832795\n\n\n\n// Number of mirror segments\n\n#define N 16.0\n\n\n// Speed of rotation\n\n#define S (PI/16.0)\n\n\n// ZOOM\n\n#define Z 1.5\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 cc = uv - vec2(0.5,0.5);\n    vec2 po = vec2( atan(cc.x,cc.y) , length(cc) );\n    \n    float fft1=(texture(iChannel1,vec2(0.1,0.25)).r    \n               +texture(iChannel1,vec2(0.5,0.25)).r\n               +texture(iChannel1,vec2(0.8,0.25)).r)*8.0;\n\n    float fft2=(texture(iChannel1,vec2(0.6,0.25)).r    \n               +texture(iChannel1,vec2(0.7,0.25)).r\n               +texture(iChannel1,vec2(0.8,0.25)).r)*1.0;\n\n    float s=1.0;\n    float n=1.0+ceil(fft1);\n    float z=fft2;\n    \n\tfloat f=(2.0*PI/n);\n\n    float m=mod((2.0*PI)+po.x,f);\n    \n    if(m>f/2.0){ m=f-m; }\n       \n    po.x = m+(iTime*s);\n    po.y /=z;\n    \n    cc= vec2(cos(po.x),sin(po.x))*po.y;\n\n\n    // Output to screen\n    fragColor = texture( iChannel0, cc+vec2(0.5,0.5) ).rgba;\n    \n    fragColor=fragColor*8.0-4.0; // contrast\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "music",
                        "id": 19,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3"
                    },
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}