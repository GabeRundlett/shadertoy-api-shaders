{
    "Shader": {
        "info": {
            "date": "1720687459",
            "description": "origianls from  https://www.shadertoy.com/view/lXVSWt https://www.shadertoy.com/view/X3KXWt",
            "flags": 0,
            "hasliked": 0,
            "id": "4fXczr",
            "likes": 2,
            "name": "hexagon map",
            "published": 3,
            "tags": [
                "color",
                "hexagon",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "float sdHexagon( in vec2 p, in float r ){\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p+sin(iTime)/10.)*sign(p.y);\n}\nvoid mainImage(out vec4 O, in vec2 I)\n{\n    vec2 uv = 10. * (2. * I - iResolution.xy) / iResolution.y;\n    \n    float sd = sdHexagon(uv,10.);\n    float val = cos(length(uv) - 4. * iTime + cos(2. * iTime*0.1) * (iTime*0.1 + 3. * atan(uv.y, uv.x)));\n    val = abs(val - 1.1);\n    vec3 col =  ceil(val-sd) * clamp(abs(mod((0.25 * iTime + 0.318309886184 * atan(uv.y,uv.x))*10.0+vec3(1.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    O = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}