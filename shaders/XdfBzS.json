{
    "Shader": {
        "info": {
            "date": "1496602444",
            "description": "My 1st project. ",
            "flags": 0,
            "hasliked": 0,
            "id": "XdfBzS",
            "likes": 3,
            "name": "Musical Star by Ncortiz",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "mouse",
                "interactive",
                "music",
                "star",
                "space",
                "planets",
                "render"
            ],
            "usePreview": 0,
            "username": "ncortiz",
            "viewed": 700
        },
        "renderpass": [
            {
                "code": "//By nico\n\n//Linear interpolation from v0 to v1 by t\nfloat lerp(float v0, float v1, float t) {\n  return v0 + t * (v1 - v0);\n}\n\n//Trace-Star \nvec4 traceStar(in vec2 fragCoord, vec2 lightpos, vec3 coreColor, vec3 outerColor, vec3 backgroundColor,\n               float totalRadius, float centerRadius, float surfaceRadius) {  \n    //Distance from fragCoord to the star's position\n    float xdist = (lightpos.x-fragCoord.x)*(lightpos.x-fragCoord.x);\n    float ydist = (lightpos.y-fragCoord.y)*(lightpos.y-fragCoord.y);\n    \n    //Distance from the star's center position\n    float distFromCenter = sqrt(xdist+ydist);\n    \n    //Attenuation depending on the distance from the star's surface\n    float attenuation = 1.0f-clamp(distFromCenter/totalRadius, 0.0f, 1.0f);\n\n    //Gradient from core-colour to outer-color\n    coreColor.x = lerp(coreColor.x, outerColor.x, attenuation/(distFromCenter*(1.0f/surfaceRadius)));\n    coreColor.y = lerp(coreColor.y, outerColor.y, attenuation/(distFromCenter*(1.0f/surfaceRadius)));\n    coreColor.z = lerp(coreColor.z, outerColor.z, attenuation/(distFromCenter*(1.0f/surfaceRadius)));\n    \n    //Gradient from outer-color to bg-color\n    coreColor.x = lerp(backgroundColor.x, coreColor.x, attenuation/(distFromCenter*(1.0f/centerRadius)));\n    coreColor.y = lerp(backgroundColor.y, coreColor.y, attenuation/(distFromCenter*(1.0f/centerRadius)));\n    coreColor.z = lerp(backgroundColor.z, coreColor.z, attenuation/(distFromCenter*(1.0f/centerRadius)));\n    \n    //Return result\n\treturn vec4(coreColor, 0.0f);   \n}\n\n//Main function\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {     \n    //Settings for big-star\n    float freq = texture( iChannel0, vec2( 0.01, 0.25 ) ).x;\n    float scale = lerp(0.3f, 0.7f, sin(iTime*(freq/100.0f)));  \n    \n    float totalRadius = 4000.0f*scale;\n    float centerRadius = 120.0f*scale;\n    float surfaceRadius = 100.0f*scale;\n        \n    vec3 originalColor = vec3(1.0f, 0.5f, 0.3f);\n    vec3 outerColor = vec3(1.0f, 1.0f, 0.7f);\n    vec3 backgroundColor = vec3(0.0f, 0.0f, 0.0f);\n\n    //Big star\n    fragColor = traceStar(fragCoord, iMouse.xy, originalColor, outerColor, backgroundColor, \n                          totalRadius, centerRadius, surfaceRadius);\n    \n    //Small stars\n    fragColor +=traceStar(fragCoord, vec2(200.0f, 200.0f), originalColor, outerColor, backgroundColor, \n                          40.0f, 1.2f, 1.0f);\n    fragColor +=traceStar(fragCoord, vec2(340.0f, 800.0f), originalColor, outerColor, backgroundColor, \n                          40.0f, 1.2f, 1.0f);\n    fragColor +=traceStar(fragCoord, vec2(267.0f, 560.0f), originalColor, outerColor, backgroundColor, \n                          40.0f, 1.2f, 1.0f);\n    fragColor +=traceStar(fragCoord, vec2(780.0f, 330.0f), originalColor, outerColor, backgroundColor, \n                          40.0f, 1.2f, 1.0f);\n    fragColor +=traceStar(fragCoord, vec2(980.0f, 130.0f), originalColor, outerColor, backgroundColor, \n                          40.0f, 1.2f, 1.0f);\n    fragColor +=traceStar(fragCoord, vec2(850.0f, 630.0f), originalColor, outerColor, backgroundColor, \n                          40.0f, 1.2f, 1.0f);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}