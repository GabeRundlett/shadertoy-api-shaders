{
    "Shader": {
        "info": {
            "date": "1676038778",
            "description": "synchrotron radiation and bremsstrahlung 同步辐射和轫致辐射",
            "flags": 0,
            "hasliked": 0,
            "id": "NtyfR1",
            "likes": 2,
            "name": "同步辐射和轫致辐射",
            "published": 3,
            "tags": [
                "electrodynamics"
            ],
            "usePreview": 0,
            "username": "yjx",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "const float e=2.718281828;\nconst float pi=3.141592653;\nconst float R=1.;\nconst float c=0.5;\nconst vec2 o=vec2(0.);\n\nfloat circle(float r,vec2 o,vec2 uv){\nreturn abs(length(uv-o)-r);}\n\nfloat sq(float x){\n    return x*x;}\n\nfloat vbeta(float iTime){return sq(sin(0.1*iTime));}\n\nfloat abetapara(float iTime){return 0.1*sin(0.2*iTime);}\n\nfloat s(float iTime){return c*(iTime/2.-2.5*sin(0.2*iTime));}\n\nfloat angle(float iTime){return mod(s(iTime)/R,2.*pi);}\n\nvec2 position(float iTime){return R*vec2(cos(angle(iTime)),sin(angle(iTime)));}\n\nmat2 rotate2(float angle){\n    return mat2(vec2(cos(angle),-sin(angle)),\n                vec2(sin(angle),cos(angle)));}\n    \nfloat r(float x,float y){\n    return sqrt(x*x+y*y);}\n\n\nfloat intensityvert(float theta,float phi,float beta,float abetavert,float abetapara){\n    return 60.*sq(abetavert)*(sq(1.-beta*cos(theta))-\n    (1.-sq(beta))*sq(sin(theta)))/pow(1.-beta*cos(theta),5.);}\n           \nfloat intensitypara(float theta,float phi,float beta,float abetavert,float abetapara){\n    return 60.*sq(abetapara)*sq(sin(theta))/pow(1.-beta*cos(theta),5.);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cof=20.;\n    vec2 uv=cof*(fragCoord-iResolution.xy*vec2(.5))/iResolution.x;\n    vec2 XY=vec2(rotate2(angle(iTime))*(uv.xy-position(iTime)));\n    vec2 UV=XY;\n    float intensityvert=intensityvert(atan(-XY.x,XY.y),0.,vbeta(iTime),\n    sq(c*vbeta(iTime))/R,abetapara(iTime))\n    *cos(20.*r(UV.x,UV.y)-10.*iTime)*10.*pow(e,-e*r(UV.x,UV.y));\n    float intensitypara=intensitypara(atan(-XY.x,XY.y),0.,vbeta(iTime),\n    sq(c*vbeta(iTime))/R,abetapara(iTime))\n    *cos(20.*r(UV.x,UV.y)-10.*iTime)*10.*pow(e,-e*r(UV.x,UV.y));\n    \n    vec3 col = mix(vec3(254.,204.,17.)/256.,vec3(0.,intensityvert,0.),\n    smoothstep(0.,0.02,circle(R,o,uv)));\n    col=col+vec3(intensitypara,0.,0.);\n     \n    fragColor = vec4(vec3(col),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}