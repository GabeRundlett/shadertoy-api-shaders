{
    "Shader": {
        "info": {
            "date": "1569519097",
            "description": "using [url]https://shadertoy.com/view/3d3GzS[/url] on text\nMouse.y tunes noise.   bottom-left to go back to demo mode.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsdGWs",
            "likes": 17,
            "name": "smart perlin blend on text",
            "published": 3,
            "tags": [
                "noise",
                "perlin",
                "short",
                "artefact",
                "paradoxical",
                "textperception"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 572
        },
        "renderpass": [
            {
                "code": "// using https://shadertoy.com/view/3d3GzS on text\n// PS: this is just a sketch of test: noise is too low quality as it is.\n\n#define L  10.\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a)) // rot\n#define T(u) ( 2.* texture(iChannel0, (u)/1e3 ).r -1. )\n#define B(T) ( 1. - abs( T ) )\n#define R (iResolution.xy)\n\n// --- utils from https://www.shadertoy.com/view/llySRh ------\n\n#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n\nvec4 char(vec2 p, int c) {\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n    //if (p.x<.25|| p.x>.75 || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5); // strange bug with an old driver\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx(p/16.), dFdy(p/16.) );\n}\n\nint CAPS=0;\n#define low CAPS=32;\n#define caps CAPS=0;\n#define spc  U.x-=.45;\nfloat dist = 1e5;\n#define C(c) spc dist = min(dist,char(U,64+CAPS+c).a);\n\n// -----------------------------------------------------------\n\nfloat N(vec2 u0, vec2 u1, float a) { // --- smart blend of 2 perlin noise \n\tmat2 M = rot(1.7);                        // to decorelate layers\n    float v = 0., S = 0., s=1.;\n    \n    for (float k=0.; k<L; k++) {              // loop on harmonics\n        vec2  x0 = 10.*M*u0/s,\n              x1 = 10.*M*u1/s;\n        float t0 = T(x0), t1 = T(x1),\n              t = mix(t0,t1,a)/sqrt(a*a + (1.-a)*(1.-a)), // morph: blend random bases\n              b = B(t) - .5;                              // morphing\n \t    v += (.5 + b ) *s; \n        S += s;\n\t\tM *= M; s/=2.; \n\t}\n    return v/S;\n}\n\nvoid mainImage( out vec4 O, vec2 u ) {\n\tvec2 U = u/R.y;\n  //U = ( U - vec2(-.35,.2) ) * 2.; caps C(16) low C(18)C(15)C(3)C(5)C(4)C(21)C(18)C(1)C(12) // \"Procedural\"\n    U = ( U - vec2(-.45,.15) ) * 1.4; caps C(14) low C(15)C(9)C(19)C(5) // \"Noise\"\n    float T = 1.5*iTime, v,\n          e =  .1,                                   // tunes text transition\n       mask = smoothstep(e,-e, dist-.5);    \n  //O += mask; return;                               // test text\n\n    U = (u-.5*R)/R.y;\n    e =  length(iMouse.xy) > 30. ? .5*iMouse.y/R.y: .5+.5*sin(iTime), // .05,                                        // tunes noise transition\n    v = N(U+vec2(0,.2*T), U-vec2(0,.2*T)+10., mask); // smart perlin  \n    v = smoothstep(.7-e,.7+e, v );                   // .7 because of interp ( otherwise .5 )\n    O = mix( vec4(.5,0,0,1), vec4(1,1,.4,1)*1.3, v); // to colors\n  //O = pow( vec4(.5,.2,.05,1), vec4(v));            // to colors\n  //O = vec4( pow(v,1./2.2) );                       // antialiasing + to SRGB\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}