{
    "Shader": {
        "info": {
            "date": "1628284169",
            "description": "I don't like my code. :)",
            "flags": 0,
            "hasliked": 0,
            "id": "7t2Szc",
            "likes": 8,
            "name": "Orange Glow",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "noise"
            ],
            "usePreview": 0,
            "username": "user_name",
            "viewed": 345
        },
        "renderpass": [
            {
                "code": "float n(vec2 v) {\nreturn fract(cos(dot(v, vec2(3.12394978, 6.24381234))) * 203489.1234);\n}\nfloat snap(float a, float b){\n    return floor(a / b) * b;\n}\nfloat n2(vec2 v){\nv.y=snap(v.y,1.0);\nfloat a=n(vec2(v.x,v.y));\nfloat b=n(vec2(v.x,v.y+1.0));\nreturn mix(a,b,v.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = fragCoord/iResolution.x;\n    vec2 uv3 = fragCoord/iResolution.x;\n    uv3.y += iTime * 0.1 * (n(vec2(snap(uv2.x, 0.02), 0.0)) * 0.5 + 0.5);\n    uv3.y+=n2(vec2(snap(uv3.x,0.02),uv3.y/0.015))*0.04;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    float dith = length(vec2(snap(uv.x, 0.02), snap(uv.y, 0.04 * iResolution.x / iResolution.y)) - 0.5);\n    float mid = n(vec2(snap(uv2.x, 0.02), snap(uv2.y, 0.02)))*0.2+0.4;\n    mid -= 2.0;\n    mid += dith * 3.0;\n    mid += length(uv - 0.5) * 1.0 - 0.2;\n    uv3.y += n(vec2(snap(uv3.x, 0.02), 0.0));\n    float mad = n(vec2(snap(uv3.x, 0.02), snap(uv3.y, 0.06)));\n    float fac=fract(uv.x/0.02);\n    fac=smoothstep(0.0,0.1,fac)*smoothstep(1.0,0.9,fac);\n    float fac2=fract(uv3.y/0.06);\n    fac*=smoothstep(0.0,0.05,fac2)*smoothstep(1.0,0.95,fac2);\n    float gry=smoothstep(mid+0.01,mid,mad)*fac + pow(length(uv - 0.5),2.0);\n    fragColor = vec4(vec3(gry)*vec3(1.2,0.55,0.2),1.0);\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}