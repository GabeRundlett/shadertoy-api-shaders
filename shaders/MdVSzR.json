{
    "Shader": {
        "info": {
            "date": "1463028628",
            "description": "Tweaked version of my feedback shader, just messing around to fit the audio, feel free to use your own audio in iChannel0 of buf A ..\n\nNote: 'frame dependent effect': 60fps vsync pls, also: 'feedback' errors show up as cyan squares, awesome",
            "flags": 96,
            "hasliked": 0,
            "id": "MdVSzR",
            "likes": 20,
            "name": "Audio Feedback Landscape",
            "published": 3,
            "tags": [
                "audio",
                "feedback",
                "neon",
                "backbuffer"
            ],
            "usePreview": 0,
            "username": "weyland",
            "viewed": 1699
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvDist = fragCoord / vec2(iResolution.x,iResolution.y)+vec2(0.005,0.025+sin(time/6.)/1000.);\n    if(iFrame == 0) {\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    } else {\n        vec3 prev = texture(iChannel1, uvDist).rgb;\n        vec4 acol = texture(iChannel0, uv);\n        float alpha = acol.a;\n        vec3 bias = vec3(0.919,0.989,0.999);\n        fragColor = vec4(acol.rgb + prev*(1.0-alpha)*bias, 1.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec3 colorq = vec3(0.0, 0.0, 0.0);\n\tfloat piikit  = texture(iChannel0, vec2(uv.x/7.5, 0.25)).r;\n\t\n\tfloat flash = texture(iChannel0, vec2(0.12, 0.0)).r;\n\tfloat glow = (0.01 + flash*0.0012)/abs(piikit - uv.y + 0.05);\n\tcolorq = vec3(0.0, glow*0.15, glow);\n\tcolorq += vec3(sqrt(glow*0.05*(piikit+0.1)));\n\n    vec4 color= vec4(colorq,0.2);\n\n\tfragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 3863,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/orangemilk/nico-niquo-pandimension"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}