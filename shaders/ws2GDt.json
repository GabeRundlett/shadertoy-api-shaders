{
    "Shader": {
        "info": {
            "date": "1552247706",
            "description": "Pathtracer implementation from \"raytracing in a weekend\" book.",
            "flags": 0,
            "hasliked": 0,
            "id": "ws2GDt",
            "likes": 1,
            "name": "hello pathtracer!",
            "published": 3,
            "tags": [
                "raytracing",
                "pathtracer"
            ],
            "usePreview": 0,
            "username": "danim",
            "viewed": 374
        },
        "renderpass": [
            {
                "code": "// chapter's of the book\n#define CH_3 0\n#define CH_4 0\n#define CH_5 0\n#define CH_6 0\n#define CH_7 0\n#define CH_8 0\n#define CH_9 0\n#define CH_10 0\n#define CH_11 1\n#define CH_12 0 // careful with this one\n\n#if CH_4\n\nconst int nSP = 1;\n\nvec4[] sp_defs = vec4[1]\n(\n    vec4( 0.,0.,-1., 0.5 )\n);\n\n#elif CH_5\n\nconst int nSP = 2;\n\nvec4[] sp_defs = vec4[2]\n(\n    vec4( 0.,0.,-1., 0.5 ),\n    vec4( 0., -100.5, -1, 100 )\n);\n\n#elif CH_6\n\nconst int nSP = 2;\n\nvec4[] sp_defs = vec4[2]\n(\n    vec4( 0.,0.,-1., 0.5 ),\n    vec4( 0., -100.5, -1, 100 )\n);\n\n#elif CH_7\n\nconst int nSP = 2;\n\nvec4[] sp_defs = vec4[2]\n(\n    vec4( 0.,0.,-1., 0.5 ),\n    vec4( 0., -100.5, -1, 100 )\n);\n\n#elif CH_8\n\nconst int nSP = 4;\n\nvec4[] sp_defs = vec4[4]\n(\n    vec4( 0.,0.,-1., 0.5 ),\n    vec4( 0., -100.5, -1, 100 ),\n    vec4( 1., 0., -1., 0.5 ),\n    vec4( -1., 0., -1., 0.5 )\n);\n\nvec3[] albedos = vec3[4]\n(\n    vec3( 0.8, 0.3, 0.3 ),\n    vec3( 0.8, 0.8, 0. ),\n    vec3( 0.8, 0.6, 0.2 ),\n    vec3( 0.8, 0.8, 0.8 )\n);\n\nvec2[] m_r = vec2[4] // metallic and roughness factor\n(\n    vec2( 0., 1. ),\n    vec2( 0., 1. ),\n    vec2( 1., 1. ),\n    vec2( 1., 0.3 )\n);\n\n#elif CH_9 || CH_10 || CH_11\n\n#define N_SP 5\n\nconst int nSP = N_SP;\n\n\nvec4[] sp_defs = vec4[N_SP]\n(\n    vec4( 0.,0.,-1., 0.5 ),\n    vec4( 0., -100.5, -1, 100 ),\n    vec4( 1., 0., -1., 0.5 ),\n    vec4( -1., 0., -1., 0.5 ),\n    vec4( -1., 0., -1., -0.49 )\n);\n\nvec3[] albedos = vec3[N_SP]\n(\n    vec3( 0.8, 0.3, 0.3 ),\n    vec3( 0.8, 0.8, 0. ),\n    vec3( 0.8, 0.6, 0.2 ),\n    vec3( 1., 1., 1. ),\n    vec3( 1., 1., 1. )\n);\n\nvec3[] m_r_i = vec3[N_SP] // metallic, roughness, refraction factor\n(\n    vec3( 0., 1., 0. ),\n    vec3( 0., 1., 0. ),\n    vec3( 1., 1., 0. ),\n    vec3( 1., 0., 1.5 ),\n    vec3( 1., 0., 1.5 )\n);\n\n#elif CH_12\n\n#define N_SP 485\nconst int nSP = N_SP;\n\nvec4[] sp_defs = vec4[N_SP] (\nvec4( 0, -1000, 0, 1000),\nvec4( -10.9625, 0.2, -10.9991, 0.2),\nvec4( -10.2518, 0.2, -9.79014, 0.2),\nvec4( -10.2116, 0.2, -8.73162, 0.2),\nvec4( -10.2663, 0.2, -7.9309, 0.2),\nvec4( -10.389, 0.2, -6.65946, 0.2),\nvec4( -10.553, 0.2, -5.83212, 0.2),\nvec4( -10.5115, 0.2, -4.61495, 0.2),\nvec4( -10.9261, 0.2, -3.69914, 0.2),\nvec4( -10.3914, 0.2, -2.93316, 0.2),\nvec4( -10.1318, 0.2, -1.47983, 0.2),\nvec4( -10.1406, 0.2, -0.269945, 0.2),\nvec4( -10.8263, 0.2, 0.000452506, 0.2),\nvec4( -10.5266, 0.2, 1.76802, 0.2),\nvec4( -10.3188, 0.2, 2.86948, 0.2),\nvec4( -10.8711, 0.2, 3.71997, 0.2),\nvec4( -10.6177, 0.2, 4.14673, 0.2),\nvec4( -10.1516, 0.2, 5.27791, 0.2),\nvec4( -10.1261, 0.2, 6.63187, 0.2),\nvec4( -10.6596, 0.2, 7.26673, 0.2),\nvec4( -10.5271, 0.2, 8.19895, 0.2),\nvec4( -10.4707, 0.2, 9.41113, 0.2),\nvec4( -10.8131, 0.2, 10.1587, 0.2),\nvec4( -9.70359, 0.2, -10.422, 0.2),\nvec4( -9.6265, 0.2, -9.45067, 0.2),\nvec4( -9.74935, 0.2, -8.8372, 0.2),\nvec4( -9.72287, 0.2, -7.83669, 0.2),\nvec4( -9.15791, 0.2, -6.45632, 0.2),\nvec4( -9.81139, 0.2, -5.95509, 0.2),\nvec4( -9.74304, 0.2, -4.96953, 0.2),\nvec4( -9.23989, 0.2, -3.38197, 0.2),\nvec4( -9.40414, 0.2, -2.20195, 0.2),\nvec4( -9.41138, 0.2, -1.28922, 0.2),\nvec4( -9.90921, 0.2, -0.579172, 0.2),\nvec4( -9.96583, 0.2, 0.0567724, 0.2),\nvec4( -9.41531, 0.2, 1.43844, 0.2),\nvec4( -9.33318, 0.2, 2.8197, 0.2),\nvec4( -9.56824, 0.2, 3.38343, 0.2),\nvec4( -9.76214, 0.2, 4.02629, 0.2),\nvec4( -9.86083, 0.2, 5.07261, 0.2),\nvec4( -9.76958, 0.2, 6.05929, 0.2),\nvec4( -9.21892, 0.2, 7.36462, 0.2),\nvec4( -9.5786, 0.2, 8.51864, 0.2),\nvec4( -9.19623, 0.2, 9.1624, 0.2),\nvec4( -9.19211, 0.2, 10.4524, 0.2),\nvec4( -8.59047, 0.2, -10.7648, 0.2),\nvec4( -8.28414, 0.2, -9.92377, 0.2),\nvec4( -8.91142, 0.2, -8.15943, 0.2),\nvec4( -8.31284, 0.2, -7.78363, 0.2),\nvec4( -8.54314, 0.2, -6.52597, 0.2),\nvec4( -8.19335, 0.2, -5.89567, 0.2),\nvec4( -8.59282, 0.2, -4.16551, 0.2),\nvec4( -8.63245, 0.2, -3.96524, 0.2),\nvec4( -8.54919, 0.2, -2.96169, 0.2),\nvec4( -8.16882, 0.2, -1.22441, 0.2),\nvec4( -8.46756, 0.2, -0.611504, 0.2),\nvec4( -8.48172, 0.2, 0.0533377, 0.2),\nvec4( -8.97138, 0.2, 1.00141, 0.2),\nvec4( -8.62557, 0.2, 2.09445, 0.2),\nvec4( -8.38198, 0.2, 3.37908, 0.2),\nvec4( -8.49897, 0.2, 4.15638, 0.2),\nvec4( -8.38174, 0.2, 5.67744, 0.2),\nvec4( -8.63284, 0.2, 6.01237, 0.2),\nvec4( -8.64016, 0.2, 7.33704, 0.2),\nvec4( -8.33998, 0.2, 8.11074, 0.2),\nvec4( -8.60065, 0.2, 9.81104, 0.2),\nvec4( -8.35842, 0.2, 10.3309, 0.2),\nvec4( -7.52785, 0.2, -10.2721, 0.2),\nvec4( -7.57464, 0.2, -9.86644, 0.2),\nvec4( -7.80492, 0.2, -8.56937, 0.2),\nvec4( -7.27596, 0.2, -7.76148, 0.2),\nvec4( -7.43262, 0.2, -6.68864, 0.2),\nvec4( -7.35569, 0.2, -5.5677, 0.2),\nvec4( -7.2247, 0.2, -4.45407, 0.2),\nvec4( -7.37631, 0.2, -3.90581, 0.2),\nvec4( -7.47847, 0.2, -2.4532, 0.2),\nvec4( -7.97979, 0.2, -1.95354, 0.2),\nvec4( -7.38158, 0.2, -0.370212, 0.2),\nvec4( -7.48682, 0.2, 0.371153, 0.2),\nvec4( -7.44422, 0.2, 1.2097, 0.2),\nvec4( -7.37814, 0.2, 2.39873, 0.2),\nvec4( -7.21505, 0.2, 3.5994, 0.2),\nvec4( -7.71604, 0.2, 4.80635, 0.2),\nvec4( -7.48045, 0.2, 5.66946, 0.2),\nvec4( -7.16276, 0.2, 6.7236, 0.2),\nvec4( -7.1165, 0.2, 7.49758, 0.2),\nvec4( -7.43525, 0.2, 8.47913, 0.2),\nvec4( -7.30335, 0.2, 9.43176, 0.2),\nvec4( -7.63567, 0.2, 10.2826, 0.2),\nvec4( -6.52003, 0.2, -10.5587, 0.2),\nvec4( -6.14888, 0.2, -9.21857, 0.2),\nvec4( -6.94473, 0.2, -8.83199, 0.2),\nvec4( -6.23591, 0.2, -7.77644, 0.2),\nvec4( -6.36056, 0.2, -6.58803, 0.2),\nvec4( -6.45229, 0.2, -5.75367, 0.2),\nvec4( -6.61393, 0.2, -4.81829, 0.2),\nvec4( -6.63099, 0.2, -3.15441, 0.2),\nvec4( -6.47146, 0.2, -2.50693, 0.2),\nvec4( -6.60398, 0.2, -1.91842, 0.2),\nvec4( -6.14923, 0.2, -0.650811, 0.2),\nvec4( -6.19884, 0.2, 0.827709, 0.2),\nvec4( -6.43945, 0.2, 1.26362, 0.2),\nvec4( -6.11276, 0.2, 2.81068, 0.2),\nvec4( -6.78825, 0.2, 3.6567, 0.2),\nvec4( -6.92523, 0.2, 4.67414, 0.2),\nvec4( -6.25392, 0.2, 5.62834, 0.2),\nvec4( -6.47565, 0.2, 6.12503, 0.2),\nvec4( -6.91936, 0.2, 7.08973, 0.2),\nvec4( -6.73612, 0.2, 8.66211, 0.2),\nvec4( -6.93017, 0.2, 9.04144, 0.2),\nvec4( -6.16948, 0.2, 10.4849, 0.2),\nvec4( -5.88568, 0.2, -10.5642, 0.2),\nvec4( -5.5771, 0.2, -9.58814, 0.2),\nvec4( -5.3469, 0.2, -8.91876, 0.2),\nvec4( -5.76134, 0.2, -7.77458, 0.2),\nvec4( -5.56789, 0.2, -6.76519, 0.2),\nvec4( -5.60781, 0.2, -5.98273, 0.2),\nvec4( -5.94903, 0.2, -4.23858, 0.2),\nvec4( -5.53401, 0.2, -3.71533, 0.2),\nvec4( -5.4002, 0.2, -2.17463, 0.2),\nvec4( -5.99331, 0.2, -1.42108, 0.2),\nvec4( -5.10146, 0.2, -0.837913, 0.2),\nvec4( -5.78101, 0.2, 0.0823501, 0.2),\nvec4( -5.51996, 0.2, 1.54129, 0.2),\nvec4( -5.80676, 0.2, 2.51375, 0.2),\nvec4( -5.71551, 0.2, 3.5312, 0.2),\nvec4( -5.37301, 0.2, 4.17595, 0.2),\nvec4( -5.22314, 0.2, 5.4684, 0.2),\nvec4( -5.80502, 0.2, 6.45391, 0.2),\nvec4( -5.87699, 0.2, 7.52847, 0.2),\nvec4( -5.25213, 0.2, 8.4579, 0.2),\nvec4( -5.97923, 0.2, 9.42443, 0.2),\nvec4( -5.88144, 0.2, 10.1907, 0.2),\nvec4( -4.20197, 0.2, -10.7567, 0.2),\nvec4( -4.8071, 0.2, -9.16919, 0.2),\nvec4( -4.50533, 0.2, -8.58725, 0.2),\nvec4( -4.42097, 0.2, -7.53857, 0.2),\nvec4( -4.11937, 0.2, -6.70433, 0.2),\nvec4( -4.6188, 0.2, -5.53679, 0.2),\nvec4( -4.66125, 0.2, -4.99396, 0.2),\nvec4( -4.15022, 0.2, -3.65734, 0.2),\nvec4( -4.68036, 0.2, -2.42684, 0.2),\nvec4( -4.53593, 0.2, -1.76469, 0.2),\nvec4( -4.36749, 0.2, -0.914268, 0.2),\nvec4( -4.74533, 0.2, 0.0840712, 0.2),\nvec4( -4.5425, 0.2, 1.77961, 0.2),\nvec4( -4.25977, 0.2, 2.51225, 0.2),\nvec4( -4.77312, 0.2, 3.85528, 0.2),\nvec4( -4.58346, 0.2, 4.59341, 0.2),\nvec4( -4.53292, 0.2, 5.88795, 0.2),\nvec4( -4.31823, 0.2, 6.14144, 0.2),\nvec4( -4.47067, 0.2, 7.11616, 0.2),\nvec4( -4.72285, 0.2, 8.83456, 0.2),\nvec4( -4.69692, 0.2, 9.49559, 0.2),\nvec4( -4.76025, 0.2, 10.3445, 0.2),\nvec4( -3.14536, 0.2, -10.2662, 0.2),\nvec4( -3.18215, 0.2, -9.56385, 0.2),\nvec4( -3.95669, 0.2, -8.73237, 0.2),\nvec4( -3.64983, 0.2, -7.33464, 0.2),\nvec4( -3.89856, 0.2, -6.53777, 0.2),\nvec4( -3.84976, 0.2, -5.76108, 0.2),\nvec4( -3.43314, 0.2, -4.60598, 0.2),\nvec4( -3.79916, 0.2, -3.20827, 0.2),\nvec4( -3.95943, 0.2, -2.98675, 0.2),\nvec4( -3.2566, 0.2, -1.67146, 0.2),\nvec4( -3.7438, 0.2, -0.48378, 0.2),\nvec4( -3.84404, 0.2, 0.361758, 0.2),\nvec4( -3.85337, 0.2, 1.86359, 0.2),\nvec4( -3.39244, 0.2, 2.06584, 0.2),\nvec4( -3.90431, 0.2, 3.82692, 0.2),\nvec4( -3.23448, 0.2, 4.72122, 0.2),\nvec4( -3.26696, 0.2, 5.28203, 0.2),\nvec4( -3.36371, 0.2, 6.39125, 0.2),\nvec4( -3.4634, 0.2, 7.23164, 0.2),\nvec4( -3.93721, 0.2, 8.29241, 0.2),\nvec4( -3.58233, 0.2, 9.28244, 0.2),\nvec4( -3.69753, 0.2, 10.7399, 0.2),\nvec4( -2.12805, 0.2, -10.2609, 0.2),\nvec4( -2.59836, 0.2, -9.48858, 0.2),\nvec4( -2.29754, 0.2, -8.12558, 0.2),\nvec4( -2.81247, 0.2, -7.89729, 0.2),\nvec4( -2.73398, 0.2, -6.10468, 0.2),\nvec4( -2.70374, 0.2, -5.31451, 0.2),\nvec4( -2.10664, 0.2, -4.30687, 0.2),\nvec4( -2.76763, 0.2, -3.18854, 0.2),\nvec4( -2.6097, 0.2, -2.7557, 0.2),\nvec4( -2.44391, 0.2, -1.95085, 0.2),\nvec4( -2.81676, 0.2, -0.753757, 0.2),\nvec4( -2.15842, 0.2, 0.351271, 0.2),\nvec4( -2.2325, 0.2, 1.02287, 0.2),\nvec4( -2.15031, 0.2, 2.7882, 0.2),\nvec4( -2.84867, 0.2, 3.19318, 0.2),\nvec4( -2.45848, 0.2, 4.51614, 0.2),\nvec4( -2.25633, 0.2, 5.78889, 0.2),\nvec4( -2.78467, 0.2, 6.5075, 0.2),\nvec4( -2.75543, 0.2, 7.74521, 0.2),\nvec4( -2.49543, 0.2, 8.12296, 0.2),\nvec4( -2.54047, 0.2, 9.45484, 0.2),\nvec4( -2.82866, 0.2, 10.7366, 0.2),\nvec4( -1.61306, 0.2, -10.9699, 0.2),\nvec4( -1.48901, 0.2, -9.17104, 0.2),\nvec4( -1.52351, 0.2, -8.47281, 0.2),\nvec4( -1.65314, 0.2, -7.37369, 0.2),\nvec4( -1.24193, 0.2, -6.26093, 0.2),\nvec4( -1.57856, 0.2, -5.36988, 0.2),\nvec4( -1.1649, 0.2, -4.69392, 0.2),\nvec4( -1.64355, 0.2, -3.23992, 0.2),\nvec4( -1.36782, 0.2, -2.58386, 0.2),\nvec4( -1.44905, 0.2, -1.86986, 0.2),\nvec4( -1.46226, 0.2, -0.465248, 0.2),\nvec4( -1.32646, 0.2, 0.503009, 0.2),\nvec4( -1.70459, 0.2, 1.89417, 0.2),\nvec4( -1.56933, 0.2, 2.50593, 0.2),\nvec4( -1.94181, 0.2, 3.59254, 0.2),\nvec4( -1.95176, 0.2, 4.84017, 0.2),\nvec4( -1.31837, 0.2, 5.58298, 0.2),\nvec4( -1.28807, 0.2, 6.40885, 0.2),\nvec4( -1.27145, 0.2, 7.31507, 0.2),\nvec4( -1.37907, 0.2, 8.2902, 0.2),\nvec4( -1.28272, 0.2, 9.3333, 0.2),\nvec4( -1.71686, 0.2, 10.7568, 0.2),\nvec4( -0.614621, 0.2, -10.7559, 0.2),\nvec4( -0.134218, 0.2, -9.26429, 0.2),\nvec4( -0.171595, 0.2, -8.72891, 0.2),\nvec4( -0.262218, 0.2, -7.43301, 0.2),\nvec4( -0.637177, 0.2, -6.39981, 0.2),\nvec4( -0.37833, 0.2, -5.19741, 0.2),\nvec4( -0.190381, 0.2, -4.54035, 0.2),\nvec4( -0.49754, 0.2, -3.91819, 0.2),\nvec4( -0.661557, 0.2, -2.82712, 0.2),\nvec4( -0.113126, 0.2, -1.60223, 0.2),\nvec4( -0.297972, 0.2, -0.903513, 0.2),\nvec4( -0.346252, 0.2, 0.514309, 0.2),\nvec4( -0.768702, 0.2, 1.13014, 0.2),\nvec4( -0.152378, 0.2, 2.58358, 0.2),\nvec4( -0.835537, 0.2, 3.69193, 0.2),\nvec4( -0.194827, 0.2, 4.51844, 0.2),\nvec4( -0.971382, 0.2, 5.40187, 0.2),\nvec4( -0.523792, 0.2, 6.74939, 0.2),\nvec4( -0.309375, 0.2, 7.58925, 0.2),\nvec4( -0.58636, 0.2, 8.20387, 0.2),\nvec4( -0.945238, 0.2, 9.86934, 0.2),\nvec4( -0.611926, 0.2, 10.8351, 0.2),\nvec4( 0.804082, 0.2, -10.1925, 0.2),\nvec4( 0.524149, 0.2, -9.88448, 0.2),\nvec4( 0.446149, 0.2, -8.19254, 0.2),\nvec4( 0.700837, 0.2, -7.32747, 0.2),\nvec4( 0.747016, 0.2, -6.50389, 0.2),\nvec4( 0.0923239, 0.2, -5.80895, 0.2),\nvec4( 0.735807, 0.2, -4.8763, 0.2),\nvec4( 0.0493524, 0.2, -3.21338, 0.2),\nvec4( 0.22856, 0.2, -2.94815, 0.2),\nvec4( 0.702863, 0.2, -1.45214, 0.2),\nvec4( 0.0866998, 0.2, -0.940212, 0.2),\nvec4( 0.862663, 0.2, 0.10744, 0.2),\nvec4( 0.29213, 0.2, 1.00433, 0.2),\nvec4( 0.0973795, 0.2, 2.64241, 0.2),\nvec4( 0.327865, 0.2, 3.05901, 0.2),\nvec4( 0.394942, 0.2, 4.83079, 0.2),\nvec4( 0.136978, 0.2, 5.03945, 0.2),\nvec4( 0.260317, 0.2, 6.44927, 0.2),\nvec4( 0.377964, 0.2, 7.391, 0.2),\nvec4( 0.0188821, 0.2, 8.06949, 0.2),\nvec4( 0.423936, 0.2, 9.60373, 0.2),\nvec4( 0.0292886, 0.2, 10.8281, 0.2),\nvec4( 1.41418, 0.2, -10.1817, 0.2),\nvec4( 1.13487, 0.2, -9.97217, 0.2),\nvec4( 1.35785, 0.2, -8.42396, 0.2),\nvec4( 1.05799, 0.2, -7.94608, 0.2),\nvec4( 1.85365, 0.2, -6.91041, 0.2),\nvec4( 1.46496, 0.2, -5.94034, 0.2),\nvec4( 1.56808, 0.2, -4.14954, 0.2),\nvec4( 1.75263, 0.2, -3.14999, 0.2),\nvec4( 1.23115, 0.2, -2.90814, 0.2),\nvec4( 1.80889, 0.2, -1.96515, 0.2),\nvec4( 1.87693, 0.2, -0.962202, 0.2),\nvec4( 1.29771, 0.2, 0.326903, 0.2),\nvec4( 1.24627, 0.2, 1.74389, 0.2),\nvec4( 1.87683, 0.2, 2.599, 0.2),\nvec4( 1.8755, 0.2, 3.71237, 0.2),\nvec4( 1.31129, 0.2, 4.27777, 0.2),\nvec4( 1.6606, 0.2, 5.50552, 0.2),\nvec4( 1.47739, 0.2, 6.25494, 0.2),\nvec4( 1.07686, 0.2, 7.4521, 0.2),\nvec4( 1.50604, 0.2, 8.84963, 0.2),\nvec4( 1.10089, 0.2, 9.05175, 0.2),\nvec4( 1.60634, 0.2, 10.2324, 0.2),\nvec4( 2.26373, 0.2, -10.7472, 0.2),\nvec4( 2.27501, 0.2, -9.56432, 0.2),\nvec4( 2.05334, 0.2, -8.27771, 0.2),\nvec4( 2.47714, 0.2, -7.62551, 0.2),\nvec4( 2.11287, 0.2, -6.85414, 0.2),\nvec4( 2.46121, 0.2, -5.42734, 0.2),\nvec4( 2.48027, 0.2, -4.53792, 0.2),\nvec4( 2.24386, 0.2, -3.36874, 0.2),\nvec4( 2.85442, 0.2, -2.9842, 0.2),\nvec4( 2.43261, 0.2, -1.1738, 0.2),\nvec4( 2.3488, 0.2, -0.152538, 0.2),\nvec4( 2.27154, 0.2, 0.490598, 0.2),\nvec4( 2.63699, 0.2, 1.30696, 0.2),\nvec4( 2.0043, 0.2, 2.67099, 0.2),\nvec4( 2.18054, 0.2, 3.89553, 0.2),\nvec4( 2.41205, 0.2, 4.09487, 0.2),\nvec4( 2.0638, 0.2, 5.35325, 0.2),\nvec4( 2.17001, 0.2, 6.80897, 0.2),\nvec4( 2.34511, 0.2, 7.62044, 0.2),\nvec4( 2.00013, 0.2, 8.01388, 0.2),\nvec4( 2.10597, 0.2, 9.16633, 0.2),\nvec4( 2.47932, 0.2, 10.2253, 0.2),\nvec4( 3.35661, 0.2, -10.8654, 0.2),\nvec4( 3.18799, 0.2, -9.61783, 0.2),\nvec4( 3.13371, 0.2, -8.57396, 0.2),\nvec4( 3.13837, 0.2, -7.90834, 0.2),\nvec4( 3.36029, 0.2, -6.28333, 0.2),\nvec4( 3.50181, 0.2, -5.42125, 0.2),\nvec4( 3.61217, 0.2, -4.66646, 0.2),\nvec4( 3.66956, 0.2, -3.46794, 0.2),\nvec4( 3.0749, 0.2, -2.6635, 0.2),\nvec4( 3.78634, 0.2, -1.15464, 0.2),\nvec4( 3.06085, 0.2, -0.711168, 0.2),\nvec4( 3.54975, 0.2, 1.42917, 0.2),\nvec4( 3.51646, 0.2, 2.04974, 0.2),\nvec4( 3.64272, 0.2, 3.13191, 0.2),\nvec4( 3.42818, 0.2, 4.88466, 0.2),\nvec4( 3.6408, 0.2, 5.69325, 0.2),\nvec4( 3.59693, 0.2, 6.50565, 0.2),\nvec4( 3.33509, 0.2, 7.31208, 0.2),\nvec4( 3.61734, 0.2, 8.16647, 0.2),\nvec4( 3.76807, 0.2, 9.58517, 0.2),\nvec4( 3.54924, 0.2, 10.6597, 0.2),\nvec4( 4.55491, 0.2, -10.7192, 0.2),\nvec4( 4.51885, 0.2, -9.7482, 0.2),\nvec4( 4.55923, 0.2, -8.33562, 0.2),\nvec4( 4.41738, 0.2, -7.43506, 0.2),\nvec4( 4.30424, 0.2, -6.32072, 0.2),\nvec4( 4.4496, 0.2, -5.50773, 0.2),\nvec4( 4.18484, 0.2, -4.80086, 0.2),\nvec4( 4.54549, 0.2, -3.53224, 0.2),\nvec4( 4.39241, 0.2, -2.83971, 0.2),\nvec4( 4.30381, 0.2, -1.55274, 0.2),\nvec4( 4.02376, 0.2, 1.69046, 0.2),\nvec4( 4.20319, 0.2, 2.16065, 0.2),\nvec4( 4.30433, 0.2, 3.80704, 0.2),\nvec4( 4.20039, 0.2, 4.61444, 0.2),\nvec4( 4.49142, 0.2, 5.31551, 0.2),\nvec4( 4.76697, 0.2, 6.68223, 0.2),\nvec4( 4.8544, 0.2, 7.30169, 0.2),\nvec4( 4.57113, 0.2, 8.20588, 0.2),\nvec4( 4.27065, 0.2, 9.82548, 0.2),\nvec4( 4.27844, 0.2, 10.8308, 0.2),\nvec4( 5.80005, 0.2, -10.5327, 0.2),\nvec4( 5.16042, 0.2, -9.6436, 0.2),\nvec4( 5.80788, 0.2, -8.9536, 0.2),\nvec4( 5.86073, 0.2, -7.73807, 0.2),\nvec4( 5.45345, 0.2, -6.56017, 0.2),\nvec4( 5.00828, 0.2, -5.74859, 0.2),\nvec4( 5.4564, 0.2, -4.9432, 0.2),\nvec4( 5.12304, 0.2, -3.46755, 0.2),\nvec4( 5.44373, 0.2, -2.19931, 0.2),\nvec4( 5.19283, 0.2, -1.25439, 0.2),\nvec4( 5.16044, 0.2, -0.551263, 0.2),\nvec4( 5.42419, 0.2, 0.0499236, 0.2),\nvec4( 5.66812, 0.2, 1.82038, 0.2),\nvec4( 5.23828, 0.2, 2.03698, 0.2),\nvec4( 5.61414, 0.2, 3.49581, 0.2),\nvec4( 5.85466, 0.2, 4.20929, 0.2),\nvec4( 5.44142, 0.2, 5.00407, 0.2),\nvec4( 5.7392, 0.2, 6.45109, 0.2),\nvec4( 5.00872, 0.2, 7.21968, 0.2),\nvec4( 5.75168, 0.2, 8.1819, 0.2),\nvec4( 5.36391, 0.2, 9.51854, 0.2),\nvec4( 5.65997, 0.2, 10.0016, 0.2),\nvec4( 6.22322, 0.2, -10.6403, 0.2),\nvec4( 6.84478, 0.2, -9.97302, 0.2),\nvec4( 6.17196, 0.2, -8.94082, 0.2),\nvec4( 6.19204, 0.2, -7.3296, 0.2),\nvec4( 6.1167, 0.2, -6.43121, 0.2),\nvec4( 6.1802, 0.2, -5.73312, 0.2),\nvec4( 6.68254, 0.2, -4.3847, 0.2),\nvec4( 6.23271, 0.2, -3.97935, 0.2),\nvec4( 6.17368, 0.2, -2.80498, 0.2),\nvec4( 6.75379, 0.2, -1.67269, 0.2),\nvec4( 6.2864, 0.2, -0.527823, 0.2),\nvec4( 6.01602, 0.2, 0.407877, 0.2),\nvec4( 6.04683, 0.2, 1.40776, 0.2),\nvec4( 6.05282, 0.2, 2.32703, 0.2),\nvec4( 6.80845, 0.2, 3.855, 0.2),\nvec4( 6.09077, 0.2, 4.10639, 0.2),\nvec4( 6.54422, 0.2, 5.79929, 0.2),\nvec4( 6.38627, 0.2, 6.7064, 0.2),\nvec4( 6.81109, 0.2, 7.6108, 0.2),\nvec4( 6.41759, 0.2, 8.66216, 0.2),\nvec4( 6.60758, 0.2, 9.80937, 0.2),\nvec4( 6.52981, 0.2, 10.1489, 0.2),\nvec4( 7.19926, 0.2, -10.6745, 0.2),\nvec4( 7.02268, 0.2, -9.51243, 0.2),\nvec4( 7.37482, 0.2, -8.9486, 0.2),\nvec4( 7.7181, 0.2, -7.1393, 0.2),\nvec4( 7.17361, 0.2, -6.23328, 0.2),\nvec4( 7.60853, 0.2, -5.96818, 0.2),\nvec4( 7.79936, 0.2, -4.71702, 0.2),\nvec4( 7.163, 0.2, -3.72001, 0.2),\nvec4( 7.49951, 0.2, -2.16035, 0.2),\nvec4( 7.11624, 0.2, -1.63849, 0.2),\nvec4( 7.4731, 0.2, -0.381137, 0.2),\nvec4( 7.8821, 0.2, 0.681072, 0.2),\nvec4( 7.25336, 0.2, 1.02524, 0.2),\nvec4( 7.44414, 0.2, 2.76639, 0.2),\nvec4( 7.35181, 0.2, 3.44362, 0.2),\nvec4( 7.38445, 0.2, 4.54549, 0.2),\nvec4( 7.39586, 0.2, 5.37008, 0.2),\nvec4( 7.13835, 0.2, 6.02727, 0.2),\nvec4( 7.32973, 0.2, 7.169, 0.2),\nvec4( 7.35264, 0.2, 8.8989, 0.2),\nvec4( 7.09098, 0.2, 9.69046, 0.2),\nvec4( 7.50207, 0.2, 10.7148, 0.2),\nvec4( 8.83528, 0.2, -10.6105, 0.2),\nvec4( 8.04391, 0.2, -9.52705, 0.2),\nvec4( 8.19231, 0.2, -8.19078, 0.2),\nvec4( 8.54909, 0.2, -7.3846, 0.2),\nvec4( 8.60871, 0.2, -6.16769, 0.2),\nvec4( 8.25728, 0.2, -5.58475, 0.2),\nvec4( 8.49613, 0.2, -4.95184, 0.2),\nvec4( 8.27583, 0.2, -3.35641, 0.2),\nvec4( 8.26312, 0.2, -2.79334, 0.2),\nvec4( 8.88703, 0.2, -1.92339, 0.2),\nvec4( 8.02094, 0.2, -0.808899, 0.2),\nvec4( 8.16051, 0.2, 0.0107472, 0.2),\nvec4( 8.48617, 0.2, 1.65403, 0.2),\nvec4( 8.29876, 0.2, 2.75469, 0.2),\nvec4( 8.60544, 0.2, 3.57467, 0.2),\nvec4( 8.53077, 0.2, 4.82242, 0.2),\nvec4( 8.53725, 0.2, 5.29621, 0.2),\nvec4( 8.69198, 0.2, 6.56717, 0.2),\nvec4( 8.06438, 0.2, 7.52167, 0.2),\nvec4( 8.32085, 0.2, 8.4591, 0.2),\nvec4( 8.87652, 0.2, 9.26258, 0.2),\nvec4( 8.18151, 0.2, 10.1525, 0.2),\nvec4( 9.28324, 0.2, -10.1928, 0.2),\nvec4( 9.41873, 0.2, -9.42038, 0.2),\nvec4( 9.38658, 0.2, -8.36399, 0.2),\nvec4( 9.19869, 0.2, -7.69503, 0.2),\nvec4( 9.81442, 0.2, -6.92493, 0.2),\nvec4( 9.70064, 0.2, -5.90552, 0.2),\nvec4( 9.03149, 0.2, -4.48215, 0.2),\nvec4( 9.13124, 0.2, -3.99997, 0.2),\nvec4( 9.25741, 0.2, -2.63052, 0.2),\nvec4( 9.19972, 0.2, -1.93063, 0.2),\nvec4( 9.85934, 0.2, -0.563229, 0.2),\nvec4( 9.8778, 0.2, 0.665473, 0.2),\nvec4( 9.32052, 0.2, 1.29599, 0.2),\nvec4( 9.37208, 0.2, 2.49758, 0.2),\nvec4( 9.76717, 0.2, 3.14318, 0.2),\nvec4( 9.2479, 0.2, 4.82525, 0.2),\nvec4( 9.67817, 0.2, 5.40198, 0.2),\nvec4( 9.81447, 0.2, 6.17914, 0.2),\nvec4( 9.51787, 0.2, 7.6555, 0.2),\nvec4( 9.47426, 0.2, 8.55278, 0.2),\nvec4( 9.80233, 0.2, 9.82811, 0.2),\nvec4( 9.75816, 0.2, 10.5494, 0.2),\nvec4( 10.3009, 0.2, -10.1596, 0.2),\nvec4( 10.3906, 0.2, -9.89138, 0.2),\nvec4( 10.0731, 0.2, -8.10317, 0.2),\nvec4( 10.4909, 0.2, -7.95402, 0.2),\nvec4( 10.4572, 0.2, -6.19775, 0.2),\nvec4( 10.8145, 0.2, -5.67705, 0.2),\nvec4( 10.3911, 0.2, -4.18323, 0.2),\nvec4( 10.3883, 0.2, -3.68971, 0.2),\nvec4( 10.3941, 0.2, -2.55709, 0.2),\nvec4( 10.454, 0.2, -1.50691, 0.2),\nvec4( 10.6508, 0.2, -0.702788, 0.2),\nvec4( 10.5254, 0.2, 0.235729, 0.2),\nvec4( 10.028, 0.2, 1.41827, 0.2),\nvec4( 10.177, 0.2, 2.88993, 0.2),\nvec4( 10.7825, 0.2, 3.7847, 0.2),\nvec4( 10.4053, 0.2, 4.8279, 0.2),\nvec4( 10.7285, 0.2, 5.88093, 0.2),\nvec4( 10.7223, 0.2, 6.39622, 0.2),\nvec4( 10.8957, 0.2, 7.6157, 0.2),\nvec4( 10.1374, 0.2, 8.02655, 0.2),\nvec4( 10.3895, 0.2, 9.58647, 0.2),\nvec4( 10.3005, 0.2, 10.1631, 0.2),\nvec4( 0, 1, 0, 1),\nvec4( -4, 1, 0, 1),\nvec4( 0, 0, 0, 0)\n);\nvec3[] albedos = vec3[N_SP] (\nvec3( 0.5, 0.5, 0),\nvec3( 0.256642, 0.0084296, -10.9991),\nvec3( 0.0145086, 0.0282673, -9.79014),\nvec3( 0.167, 0.417721, -8.73162),\nvec3( 0.0255632, 0.701255, -7.9309),\nvec3( 0.0780969, 0.00388971, -6.65946),\nvec3( 0.325107, 0.257698, -5.83212),\nvec3( 0.0404452, 0.716053, -4.61495),\nvec3( 1, 1, -3.69914),\nvec3( 0.43329, 0.291538, -2.93316),\nvec3( 0.588464, 0.696414, -1.47983),\nvec3( 0.843094, 0.569458, -0.269945),\nvec3( 0.347306, 0.0124492, 0.000452506),\nvec3( 0.0880927, 0.366705, 1.76802),\nvec3( 0.0170179, 0.113404, 2.86948),\nvec3( 0.835526, 0.283486, 3.71997),\nvec3( 0.095833, 0.482036, 4.14673),\nvec3( 0.955692, 0.965256, 5.27791),\nvec3( 0.00345279, 0.0775949, 6.63187),\nvec3( 0.00501775, 0.11417, 7.26673),\nvec3( 0.0656274, 0.0456579, 8.19895),\nvec3( 0.111921, 0.330161, 9.41113),\nvec3( 0.996322, 0.579457, 10.1587),\nvec3( 0.860631, 0.911741, -10.422),\nvec3( 0.30899, 0.0122732, -9.45067),\nvec3( 0.382135, 0.307276, -8.8372),\nvec3( 0.975727, 0.504591, -7.83669),\nvec3( 0.0616108, 0.197499, -6.45632),\nvec3( 0.20869, 0.271875, -5.95509),\nvec3( 0.521792, 0.853051, -4.96953),\nvec3( 0.0130348, 0.00511327, -3.38197),\nvec3( 0.546489, 0.53817, -2.20195),\nvec3( 0.0353144, 0.184097, -1.28922),\nvec3( 0.018765, 0.00825492, -0.579172),\nvec3( 0.723657, 0.638333, 0.0567724),\nvec3( 0.221861, 0.284549, 1.43844),\nvec3( 0.0355126, 0.00964554, 2.8197),\nvec3( 0.535657, 0.554443, 3.38343),\nvec3( 1, 1, 4.02629),\nvec3( 0.0726093, 0.12085, 5.07261),\nvec3( 0.742099, 0.00600814, 6.05929),\nvec3( 0.711667, 0.60424, 7.36462),\nvec3( 0.0134826, 0.126047, 8.51864),\nvec3( 0.260949, 0.116378, 9.1624),\nvec3( 1, 1, 10.4524),\nvec3( 0.0882757, 0.0159222, -10.7648),\nvec3( 0.0954786, 0.00528704, -9.92377),\nvec3( 0.507119, 0.588821, -8.15943),\nvec3( 0.740525, 0.77118, -7.78363),\nvec3( 0.0976803, 0.00716312, -6.52597),\nvec3( 0.350329, 0.140975, -5.89567),\nvec3( 0.186241, 0.279322, -4.16551),\nvec3( 0.764891, 0.552581, -3.96524),\nvec3( 0.335572, 0.0121388, -2.96169),\nvec3( 0.078961, 0.171491, -1.22441),\nvec3( 0.374835, 0.579853, -0.611504),\nvec3( 0.914327, 0.775587, 0.0533377),\nvec3( 0.0339681, 0.130254, 1.00141),\nvec3( 0.0780904, 0.00205855, 2.09445),\nvec3( 0.543519, 0.0539181, 3.37908),\nvec3( 0.515438, 0.1925, 4.15638),\nvec3( 0.853954, 0.680366, 5.67744),\nvec3( 0.00416706, 0.0548508, 6.01237),\nvec3( 0.506965, 0.314564, 7.33704),\nvec3( 0.0899137, 0.0369762, 8.11074),\nvec3( 0.816617, 0.344103, 9.81104),\nvec3( 0.57607, 0.249295, 10.3309),\nvec3( 0.087562, 0.34968, -10.2721),\nvec3( 0.149737, 0.0862633, -9.86644),\nvec3( 0.603871, 0.551352, -8.56937),\nvec3( 0.41623, 0.189282, -7.76148),\nvec3( 0.331584, 0.326902, -6.68864),\nvec3( 0.510804, 0.376079, -5.5677),\nvec3( 0.414442, 0.0615464, -4.45407),\nvec3( 0.105429, 0.201477, -3.90581),\nvec3( 0.655109, 0.0471245, -2.4532),\nvec3( 0.407302, 0.396118, -1.95354),\nvec3( 0.333757, 0.325914, -0.370212),\nvec3( 0.0325347, 0.0701656, 0.371153),\nvec3( 0.32735, 0.102958, 1.2097),\nvec3( 0.37912, 0.464048, 2.39873),\nvec3( 0.546133, 0.575584, 3.5994),\nvec3( 0.247134, 0.148231, 4.80635),\nvec3( 0.823277, 0.922735, 5.66946),\nvec3( 0.114355, 0.802027, 6.7236),\nvec3( 0.0182898, 0.0886437, 7.49758),\nvec3( 0.686194, 0.0889335, 8.47913),\nvec3( 0.59897, 0.645862, 9.43176),\nvec3( 0.0334077, 0.0407074, 10.2826),\nvec3( 0.0168858, 0.371165, -10.5587),\nvec3( 0.117816, 0.171087, -9.21857),\nvec3( 0.59548, 0.655177, -8.83199),\nvec3( 1, 1, -7.77644),\nvec3( 0.30352, 0.0030672, -6.58803),\nvec3( 0.597206, 0.609099, -5.75367),\nvec3( 0.0337066, 0.579547, -4.81829),\nvec3( 0.642072, 0.849556, -3.15441),\nvec3( 0.0794482, 0.6958, -2.50693),\nvec3( 0.164556, 0.272637, -1.91842),\nvec3( 0.521445, 0.277972, -0.650811),\nvec3( 0.285998, 0.0535989, 0.827709),\nvec3( 0.117388, 0.166026, 1.26362),\nvec3( 0.0268941, 0.00505215, 2.81068),\nvec3( 0.118137, 0.0112871, 3.6567),\nvec3( 0.822677, 0.365078, 4.67414),\nvec3( 0.443859, 0.646529, 5.62834),\nvec3( 0.750387, 0.598422, 6.12503),\nvec3( 0.454007, 0.12677, 7.08973),\nvec3( 0.607774, 0.0261489, 8.66211),\nvec3( 1, 1, 9.04144),\nvec3( 0.72873, 0.28696, 10.4849),\nvec3( 0.251263, 0.265283, -10.5642),\nvec3( 0.0991927, 0.0350839, -9.58814),\nvec3( 0.338993, 0.220763, -8.91876),\nvec3( 0.582262, 0.289514, -7.77458),\nvec3( 0.263896, 0.0435131, -6.76519),\nvec3( 0.269056, 0.0908812, -5.98273),\nvec3( 0.203332, 0.0154469, -4.23858),\nvec3( 0.226949, 0.439181, -3.71533),\nvec3( 0.161463, 0.00709597, -2.17463),\nvec3( 0.124509, 0.0333273, -1.42108),\nvec3( 0.079554, 0.329335, -0.837913),\nvec3( 0.448681, 0.159657, 0.0823501),\nvec3( 0.00991566, 0.474276, 1.54129),\nvec3( 0.681201, 0.440621, 2.51375),\nvec3( 0.14426, 0.0108192, 3.5312),\nvec3( 0.481465, 0.021734, 4.17595),\nvec3( 1, 1, 5.4684),\nvec3( 0.284398, 0.00021766, 6.45391),\nvec3( 0.0130052, 0.668873, 7.52847),\nvec3( 0.443992, 0.396702, 8.4579),\nvec3( 0.414207, 0.139481, 9.42443),\nvec3( 0.237385, 0.591076, 10.1907),\nvec3( 0.202026, 0.368379, -10.7567),\nvec3( 0.217339, 0.522713, -9.16919),\nvec3( 0.00126557, 0.00218113, -8.58725),\nvec3( 0.0995903, 0.00910007, -7.53857),\nvec3( 0.540709, 0.51971, -6.70433),\nvec3( 0.0590298, 0.127842, -5.53679),\nvec3( 0.0137182, 0.0406951, -4.99396),\nvec3( 0.847702, 0.911919, -3.65734),\nvec3( 0.154427, 0.408495, -2.42684),\nvec3( 0.0824904, 0.0588604, -1.76469),\nvec3( 0.0431585, 0.334143, -0.914268),\nvec3( 0.0707412, 0.186798, 0.0840712),\nvec3( 0.294514, 0.557602, 1.77961),\nvec3( 0.00305759, 0.570344, 2.51225),\nvec3( 0.556832, 0.334229, 3.85528),\nvec3( 0.538865, 0.32093, 4.59341),\nvec3( 0.988038, 0.535027, 5.88795),\nvec3( 0.0783874, 0.0920207, 6.14144),\nvec3( 0.354267, 0.173399, 7.11616),\nvec3( 0.122565, 0.109975, 8.83456),\nvec3( 0.0712731, 0.519207, 9.49559),\nvec3( 0.442009, 0.00586789, 10.3445),\nvec3( 0.0249989, 0.135656, -10.2662),\nvec3( 0.0307784, 0.00820357, -9.56385),\nvec3( 0.276473, 0.124793, -8.73237),\nvec3( 0.338562, 0.189991, -7.33464),\nvec3( 0.862568, 0.60665, -6.53777),\nvec3( 0.658089, 0.779865, -5.76108),\nvec3( 0.0310661, 0.139826, -4.60598),\nvec3( 0.852867, 0.219888, -3.20827),\nvec3( 0.289298, 0.0068956, -2.98675),\nvec3( 0.487513, 0.133035, -1.67146),\nvec3( 0.855066, 0.53012, -0.48378),\nvec3( 0.0654042, 0.0934969, 0.361758),\nvec3( 0.19407, 0.311404, 1.86359),\nvec3( 0.309507, 0.119627, 2.06584),\nvec3( 0.236492, 0.454228, 3.82692),\nvec3( 0.0357126, 0.0111424, 4.72122),\nvec3( 1, 1, 5.28203),\nvec3( 1, 1, 6.39125),\nvec3( 0.112522, 0.0218068, 7.23164),\nvec3( 0.376543, 0.115535, 8.29241),\nvec3( 0.271697, 0.00825908, 9.28244),\nvec3( 0.376789, 0.285599, 10.7399),\nvec3( 0.410554, 0.154387, -10.2609),\nvec3( 0.596637, 0.946459, -9.48858),\nvec3( 0.766297, 0.941108, -8.12558),\nvec3( 0.646771, 0.20115, -7.89729),\nvec3( 0.939843, 0.352433, -6.10468),\nvec3( 0.0316863, 0.248168, -5.31451),\nvec3( 0.356307, 0.225951, -4.30687),\nvec3( 0.489929, 0.511389, -3.18854),\nvec3( 0.121455, 0.82533, -2.7557),\nvec3( 0.0697612, 0.347257, -1.95085),\nvec3( 0.126453, 0.0668206, -0.753757),\nvec3( 0.746981, 0.884165, 0.351271),\nvec3( 0.532656, 0.75236, 1.02287),\nvec3( 0.100237, 0.105183, 2.7882),\nvec3( 0.110708, 0.000999516, 3.19318),\nvec3( 1, 1, 4.51614),\nvec3( 0.703572, 0.625181, 5.78889),\nvec3( 0.0685162, 0.0203391, 6.5075),\nvec3( 0.302258, 0.0248937, 7.74521),\nvec3( 0.0664432, 0.261371, 8.12296),\nvec3( 0.922715, 0.821051, 9.45484),\nvec3( 0.135085, 0.0871164, 10.7366),\nvec3( 0.282366, 0.092356, -10.9699),\nvec3( 1, 1, -9.17104),\nvec3( 0.172502, 0.294355, -8.47281),\nvec3( 0.366073, 0.0265071, -7.37369),\nvec3( 0.820893, 0.16356, -6.26093),\nvec3( 0.439347, 0.0577274, -5.36988),\nvec3( 0.425024, 0.189688, -4.69392),\nvec3( 0.123083, 0.723425, -3.23992),\nvec3( 0.00673464, 0.109112, -2.58386),\nvec3( 0.0190857, 0.32209, -1.86986),\nvec3( 0.0878539, 0.117352, -0.465248),\nvec3( 0.0197987, 0.226641, 0.503009),\nvec3( 0.0810694, 0.363216, 1.89417),\nvec3( 0.30477, 0.541464, 2.50593),\nvec3( 1, 1, 3.59254),\nvec3( 0.0357912, 0.25047, 4.84017),\nvec3( 0.194342, 0.0218016, 5.58298),\nvec3( 0.414117, 0.44746, 6.40885),\nvec3( 0.0619738, 0.212957, 7.31507),\nvec3( 0.18724, 0.602318, 8.2902),\nvec3( 0.101329, 0.349895, 9.3333),\nvec3( 0.543018, 0.535676, 10.7568),\nvec3( 0.207822, 0.0908619, -10.7559),\nvec3( 0.382228, 0.175085, -9.26429),\nvec3( 0.0958863, 0.540706, -8.72891),\nvec3( 0.758027, 0.94179, -7.43301),\nvec3( 0.7932, 0.239385, -6.39981),\nvec3( 0.841142, 0.150942, -5.19741),\nvec3( 0.0983364, 0.446539, -4.54035),\nvec3( 0.50405, 0.579153, -3.91819),\nvec3( 0.151736, 0.0351382, -2.82712),\nvec3( 0.577742, 0.625098, -1.60223),\nvec3( 0.118193, 0.818371, -0.903513),\nvec3( 0.229454, 0.0276603, 0.514309),\nvec3( 0.0971641, 0.262699, 1.13014),\nvec3( 0.239357, 0.267025, 2.58358),\nvec3( 0.0518397, 0.348195, 3.69193),\nvec3( 0.148329, 0.118569, 4.51844),\nvec3( 0.439851, 0.160078, 5.40187),\nvec3( 0.432783, 0.0753733, 6.74939),\nvec3( 0.180832, 0.494749, 7.58925),\nvec3( 0.578015, 0.948466, 8.20387),\nvec3( 0.0748517, 0.0162141, 9.86934),\nvec3( 0.00481667, 0.636413, 10.8351),\nvec3( 0.00319551, 0.527986, -10.1925),\nvec3( 0.304594, 0.219835, -9.88448),\nvec3( 0.656962, 0.852987, -8.19254),\nvec3( 0.572986, 0.701912, -7.32747),\nvec3( 0.944961, 0.619115, -6.50389),\nvec3( 0.329155, 0.355039, -5.80895),\nvec3( 0.0317327, 0.787785, -4.8763),\nvec3( 0.1652, 0.237671, -3.21338),\nvec3( 0.0332137, 0.0783273, -2.94815),\nvec3( 0.0105308, 0.450752, -1.45214),\nvec3( 0.0356951, 0.0396022, -0.940212),\nvec3( 0.86605, 0.924152, 0.10744),\nvec3( 0.511189, 0.75222, 1.00433),\nvec3( 0.426302, 0.0539764, 2.64241),\nvec3( 0.372206, 0.187684, 3.05901),\nvec3( 0.0631557, 0.010296, 4.83079),\nvec3( 0.13192, 0.323469, 5.03945),\nvec3( 0.0356964, 0.234255, 6.44927),\nvec3( 0.0431104, 0.317185, 7.391),\nvec3( 0.552154, 0.800255, 8.06949),\nvec3( 0.632366, 0.399033, 9.60373),\nvec3( 0.372132, 0.00487413, 10.8281),\nvec3( 0.0117604, 0.0243807, -10.1817),\nvec3( 0.346367, 0.27439, -9.97217),\nvec3( 0.575717, 0.581844, -8.42396),\nvec3( 0.0614552, 0.457644, -7.94608),\nvec3( 0.457212, 0.0131218, -6.91041),\nvec3( 0.260037, 0.207178, -5.94034),\nvec3( 0.128707, 0.0946782, -4.14954),\nvec3( 0.0393188, 0.506813, -3.14999),\nvec3( 0.580058, 0.817253, -2.90814),\nvec3( 0.0473536, 0.0164753, -1.96515),\nvec3( 0.161598, 0.353752, -0.962202),\nvec3( 0.0215255, 0.265688, 0.326903),\nvec3( 0.424075, 0.480756, 1.74389),\nvec3( 0.960784, 0.820083, 2.599),\nvec3( 0.454444, 0.42956, 3.71237),\nvec3( 0.0826003, 0.00510788, 4.27777),\nvec3( 0.927632, 0.819931, 5.50552),\nvec3( 0.77532, 0.610148, 6.25494),\nvec3( 0.227362, 0.0390091, 7.4521),\nvec3( 0.00667047, 0.438438, 8.84963),\nvec3( 0.602946, 0.949485, 9.05175),\nvec3( 0.020357, 0.0146567, 10.2324),\nvec3( 0.440306, 0.0261446, -10.7472),\nvec3( 0.34538, 0.459867, -9.56432),\nvec3( 0.0791653, 0.040167, -8.27771),\nvec3( 0.771564, 0.125415, -7.62551),\nvec3( 0.192059, 0.253188, -6.85414),\nvec3( 0.169496, 0.472063, -5.42734),\nvec3( 0.0229668, 0.5698, -4.53792),\nvec3( 0.0931123, 0.115334, -3.36874),\nvec3( 0.755879, 0.396545, -2.9842),\nvec3( 0.748538, 0.826781, -1.1738),\nvec3( 0.228854, 0.120451, -0.152538),\nvec3( 0.831959, 0.768466, 0.490598),\nvec3( 0.920566, 0.968366, 1.30696),\nvec3( 0.673368, 0.982972, 2.67099),\nvec3( 0.246236, 0.072132, 3.89553),\nvec3( 0.421269, 0.0806433, 4.09487),\nvec3( 0.830382, 0.864103, 5.35325),\nvec3( 0.191982, 0.314805, 6.80897),\nvec3( 0.50819, 0.664678, 7.62044),\nvec3( 0.300398, 0.933867, 8.01388),\nvec3( 0.320918, 0.4236, 9.16633),\nvec3( 0.113678, 0.131303, 10.2253),\nvec3( 0.150871, 0.112916, -10.8654),\nvec3( 0.532998, 0.131486, -9.61783),\nvec3( 1, 1, -8.57396),\nvec3( 0.0819346, 0.0520657, -7.90834),\nvec3( 0.0719441, 0.232986, -6.28333),\nvec3( 0.775028, 0.0126652, -5.42125),\nvec3( 0.281489, 0.0591197, -4.66646),\nvec3( 0.500156, 0.0269831, -3.46794),\nvec3( 0.899115, 0.67573, -2.6635),\nvec3( 0.294851, 0.519292, -1.15464),\nvec3( 0.0139313, 0.117258, -0.711168),\nvec3( 0.605212, 0.660645, 1.42917),\nvec3( 0.803842, 0.99533, 2.04974),\nvec3( 0.980932, 0.956277, 3.13191),\nvec3( 0.287843, 0.427194, 4.88466),\nvec3( 0.704793, 0.421553, 5.69325),\nvec3( 0.134306, 0.687986, 6.50565),\nvec3( 1, 1, 7.31208),\nvec3( 0.019358, 0.215625, 8.16647),\nvec3( 1, 1, 9.58517),\nvec3( 0.0683034, 0.12419, 10.6597),\nvec3( 0.384232, 0.284907, -10.7192),\nvec3( 0.0299427, 0.440582, -9.7482),\nvec3( 0.0923979, 0.331448, -8.33562),\nvec3( 0.375519, 0.879087, -7.43506),\nvec3( 0.542548, 0.0986272, -6.32072),\nvec3( 0.0808579, 0.0435609, -5.50773),\nvec3( 0.838766, 0.825417, -4.80086),\nvec3( 0.306892, 0.338349, -3.53224),\nvec3( 0.455349, 0.0867803, -2.83971),\nvec3( 0.552426, 0.97636, -1.55274),\nvec3( 0.00505332, 0.36542, 1.69046),\nvec3( 0.63783, 0.189218, 2.16065),\nvec3( 0.447832, 0.0144733, 3.80704),\nvec3( 0.744347, 0.848544, 4.61444),\nvec3( 0.0140967, 0.218708, 5.31551),\nvec3( 0.257816, 0.179212, 6.68223),\nvec3( 0.166588, 0.058651, 7.30169),\nvec3( 0.0805105, 0.517847, 8.20588),\nvec3( 0.668007, 0.299517, 9.82548),\nvec3( 0.178524, 0.0831568, 10.8308),\nvec3( 0.93924, 0.773759, -10.5327),\nvec3( 0.0595089, 0.108525, -9.6436),\nvec3( 0.715585, 0.00728262, -8.9536),\nvec3( 0.71121, 0.348984, -7.73807),\nvec3( 0.201366, 0.0730971, -6.56017),\nvec3( 0.580079, 0.603044, -5.74859),\nvec3( 0.521686, 0.753741, -4.9432),\nvec3( 0.270509, 0.595104, -3.46755),\nvec3( 0.317996, 0.018914, -2.19931),\nvec3( 0.109457, 0.122661, -1.25439),\nvec3( 0.0871007, 0.27106, -0.551263),\nvec3( 1, 1, 0.0499236),\nvec3( 0.903671, 0.579095, 1.82038),\nvec3( 0.611818, 0.161221, 2.03698),\nvec3( 0.375419, 0.238883, 3.49581),\nvec3( 0.83945, 0.797637, 4.20929),\nvec3( 0.338615, 0.232736, 5.00407),\nvec3( 0.65088, 0.182263, 6.45109),\nvec3( 0.556756, 0.53737, 7.21968),\nvec3( 0.246008, 0.244544, 8.1819),\nvec3( 0.0684649, 0.390265, 9.51854),\nvec3( 0.0956194, 0.777449, 10.0016),\nvec3( 0.660157, 0.518356, -10.6403),\nvec3( 0.90094, 0.8985, -9.97302),\nvec3( 0.264091, 0.414859, -8.94082),\nvec3( 0.0225116, 0.128989, -7.3296),\nvec3( 0.459998, 0.345451, -6.43121),\nvec3( 0.116939, 0.000290367, -5.73312),\nvec3( 0.259136, 0.0348051, -4.3847),\nvec3( 0.318828, 0.00926881, -3.97935),\nvec3( 0.880035, 0.792072, -2.80498),\nvec3( 0.0998123, 0.289023, -1.67269),\nvec3( 0.329608, 0.446171, -0.527823),\nvec3( 0.272298, 0.0810999, 0.407877),\nvec3( 0.827092, 0.0445578, 1.40776),\nvec3( 0.250933, 0.283386, 2.32703),\nvec3( 0.692653, 0.971536, 3.855),\nvec3( 1, 1, 4.10639),\nvec3( 0.0388854, 0.0677302, 5.79929),\nvec3( 0.125828, 0.34127, 6.7064),\nvec3( 0.00212257, 0.0869673, 7.6108),\nvec3( 0.0754152, 0.439034, 8.66216),\nvec3( 0.404322, 0.00315216, 9.80937),\nvec3( 0.156796, 0.0924223, 10.1489),\nvec3( 0.00641898, 0.25191, -10.6745),\nvec3( 0.321735, 0.050295, -9.51243),\nvec3( 0.0939251, 0.0376009, -8.9486),\nvec3( 0.296058, 0.35314, -7.1393),\nvec3( 0.0102747, 0.243435, -6.23328),\nvec3( 0.626203, 0.559557, -5.96818),\nvec3( 0.738742, 0.691761, -4.71702),\nvec3( 0.514457, 0.156897, -3.72001),\nvec3( 0.0696125, 0.0530956, -2.16035),\nvec3( 0.697011, 0.68285, -1.63849),\nvec3( 0.360153, 0.258151, -0.381137),\nvec3( 0.947081, 0.595109, 0.681072),\nvec3( 0.193641, 0.143828, 1.02524),\nvec3( 0.0319494, 0.00952086, 2.76639),\nvec3( 0.248648, 0.233272, 3.44362),\nvec3( 0.0800729, 0.136926, 4.54549),\nvec3( 0.00707992, 0.0638797, 5.37008),\nvec3( 0.575468, 0.657203, 6.02727),\nvec3( 0.252335, 0.0112519, 7.169),\nvec3( 0.0634193, 0.00240683, 8.8989),\nvec3( 0.00829897, 0.215634, 9.69046),\nvec3( 0.0316738, 0.340018, 10.7148),\nvec3( 0.11117, 0.0959946, -10.6105),\nvec3( 0.324446, 0.00339041, -9.52705),\nvec3( 0.308131, 0.0135654, -8.19078),\nvec3( 0.159782, 0.361801, -7.3846),\nvec3( 0.453949, 0.0971925, -6.16769),\nvec3( 0.852993, 0.886425, -5.58475),\nvec3( 0.0193524, 0.628822, -4.95184),\nvec3( 0.00982844, 0.225891, -3.35641),\nvec3( 0.0130822, 0.0121612, -2.79334),\nvec3( 0.715377, 0.432915, -1.92339),\nvec3( 0.489381, 0.00340269, -0.808899),\nvec3( 0.152443, 0.0646186, 0.0107472),\nvec3( 0.0896619, 0.000451988, 1.65403),\nvec3( 0.0425527, 0.354135, 2.75469),\nvec3( 0.0267988, 0.00779299, 3.57467),\nvec3( 0.0661772, 0.173997, 4.82242),\nvec3( 0.944987, 0.334494, 5.29621),\nvec3( 0.00355988, 0.178816, 6.56717),\nvec3( 0.388862, 0.00803628, 7.52167),\nvec3( 0.482581, 0.4727, 8.4591),\nvec3( 0.820675, 0.571457, 9.26258),\nvec3( 0.127977, 0.483014, 10.1525),\nvec3( 0.0919932, 0.117109, -10.1928),\nvec3( 0.00028112, 0.11956, -9.42038),\nvec3( 0.242891, 0.0321258, -8.36399),\nvec3( 0.870756, 0.773452, -7.69503),\nvec3( 0.68655, 0.220784, -6.92493),\nvec3( 0.361474, 0.365057, -5.90552),\nvec3( 0.0967874, 0.00787319, -4.48215),\nvec3( 0.261269, 0.47365, -3.99997),\nvec3( 0.598839, 0.0569951, -2.63052),\nvec3( 0.22723, 0.0143389, -1.93063),\nvec3( 0.00757139, 0.307276, -0.563229),\nvec3( 0.182086, 0.200679, 0.665473),\nvec3( 0.202785, 0.175643, 1.29599),\nvec3( 0.541119, 0.0779776, 2.49758),\nvec3( 0.741006, 0.0250536, 3.14318),\nvec3( 0.777345, 0.931802, 4.82525),\nvec3( 1, 1, 5.40198),\nvec3( 0.122629, 0.0272108, 6.17914),\nvec3( 0.810875, 0.0231249, 7.6555),\nvec3( 0.0262958, 0.194797, 8.55278),\nvec3( 0.178631, 0.625915, 9.82811),\nvec3( 0.127074, 0.423943, 10.5494),\nvec3( 0.876208, 0.337257, -10.1596),\nvec3( 0.621608, 0.253262, -9.89138),\nvec3( 0.00684613, 0.785122, -8.10317),\nvec3( 0.0673679, 0.984584, -7.95402),\nvec3( 0.533911, 0.53629, -6.19775),\nvec3( 0.709642, 0.501649, -5.67705),\nvec3( 0.185351, 0.834229, -4.18323),\nvec3( 0.741474, 0.0163272, -3.68971),\nvec3( 0.191902, 0.228104, -2.55709),\nvec3( 0.172597, 0.0638007, -1.50691),\nvec3( 0.0889745, 0.4659, -0.702788),\nvec3( 0.926307, 0.636329, 0.235729),\nvec3( 0.0404632, 0.16928, 1.41827),\nvec3( 0.302632, 0.070967, 2.88993),\nvec3( 0.0434039, 0.036601, 3.7847),\nvec3( 0.225124, 0.307379, 4.8279),\nvec3( 0.439163, 0.341115, 5.88093),\nvec3( 0.789942, 0.520136, 6.39622),\nvec3( 0.660259, 0.584727, 7.6157),\nvec3( 0.126573, 0.73793, 8.02655),\nvec3( 0.319456, 0.0267164, 9.58647),\nvec3( 0.171435, 0.805647, 10.1631),\nvec3( 1, 1, 0),\nvec3( 0.4, 0.2, 0),\nvec3( 0, 0, 0)\n);\nvec3[] m_r_i = vec3[N_SP] (\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 1, 0.0559345, 0),\nvec3( 1, 0.0634937, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.168859, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.340785, 0),\nvec3( 1, 0.328991, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.495377, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.00162606, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.324691, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.492412, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.20719, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.286477, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.0620288, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.331277, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.115496, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.337406, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.0488634, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.148502, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.144756, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 1, 0.186811, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.14649, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.456476, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.320753, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.173157, 0),\nvec3( 1, 0.252697, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.394308, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.0844826, 0),\nvec3( 1, 0.0213637, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.423811, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 1, 0.355404, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.0384848, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.11736, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.113515, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.138216, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.0197906, 0),\nvec3( 1, 0.203419, 0),\nvec3( 1, 0.0528989, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.14514, 0),\nvec3( 1, 0.468878, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.224295, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.283265, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.198965, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.455539, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.113623, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.344487, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.407318, 0),\nvec3( 1, 0.466376, 0),\nvec3( 1, 0.483819, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.368918, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.00854127, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.311035, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.128793, 0),\nvec3( 1, 0.398156, 0),\nvec3( 1, 0.0154137, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.46284, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.209817, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.106807, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.0152386, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.488516, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 1.5),\nvec3( 1, 0.18119, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.18015, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.465409, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.482656, 0),\nvec3( 1, 0.141522, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.122156, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.264441, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.019637, 0),\nvec3( 1, 0.347118, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.332581, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.229778, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.13168, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.20688, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.322185, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.2051, 0),\nvec3( 0, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.445021, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.196602, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0.155389, 0),\nvec3( 1, 0.0703193, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0),\nvec3( 1, 0, 1.5),\nvec3( 0, 0, 0),\nvec3( 0, 0, 0)\n);\n\n#else\n\nconst int nSP = 0;\n\nvec4[] sp_defs = vec4[1]\n(\n    vec4( 0.,0.,0., 0.5 )\n);\n\n#endif\n\n\nfloat hash(float seed)\n{\n\t// Return a \"random\" number based on the \"seed\"\n    return fract(sin(seed) * 43758.5453);\n}\n\nvec2 noise( in vec2 seed )\n{\n    return vec2( hash( seed.x ), hash( seed.y ) );\n}\n\nvec2 random_in_udisk( in vec2 seed )\n{\n\tfloat x = hash( seed.x );\n    float y = min( hash( seed.y ), sqrt( 1. - x * x ) );\n    \n    return 2. * vec2( x, y ) - 1.;\n}\n\nvec3 random_in_usphere( in vec3 seed )\n{\n\tfloat x = hash( seed.x );\n    float y = min( hash( seed.y ), sqrt( 1. - x * x ) );\n    float z = min( hash( seed.z ), sqrt( 1. - x * x - y * y ) );\n    \n    vec3 p = 2. * vec3( x, y, z ) - 1.;\n    \n    return mix( p, normalize( p ), step( 1., dot( p, p ) ) );\n}\n\nfloat schlick( in float cosine, in float ref_idx )\n{\n\tfloat r0 = ( 1. - ref_idx ) / ( 1. + ref_idx );\n    r0 *= r0;\n    return r0 + ( 1. - r0 ) * pow( 1. -cosine, 5. );\n}\n\nfloat sp_solve( in vec3 p, in vec3 dir, in vec3 center, in float r, in float T_MIN, out float t )\n{\n    vec3 oc = p - center;\n    float a = dot( dir, dir );\n    float b = 2. * dot( dir, oc );\n    float c = dot(oc,oc) - r * r;\n    \n    float d = b * b - 4. * a * c;\n\tfloat t1 = ( - b - sqrt( max( 0., d ) ) ) * 0.5 / a;\n    float t2 = ( - b + sqrt( max( 0., d ) ) ) * 0.5 / a;\n    float selector = step( T_MIN, t1 );\n    t = mix( t2, t1, selector );\n    return step( 0., d );\n}\n\n\nfloat sp_hit( in vec3 p, in vec3 dir, in vec3 center, in float r )\n{\n    vec3 oc = p - center;\n    float a = dot( dir, dir );\n    float b = 2. * dot( dir, oc );\n    float c = dot(oc,oc) - r * r;\n    \n    float d = b * b - 4. * a * c;\n    return step( 0., d );\n}\n\nfloat scatter( in vec3 p, in vec3 din, in vec3 n, in float metallic, in float roughness, \n              out vec3 dout )\n{\n    vec3 r = reflect( din, n );\n    vec3 l = normalize( n + random_in_usphere( p ) );\n    dout = mix( l, normalize( r + random_in_usphere( p ) * roughness ), \n               step( 0.0001, metallic ) );\n    return dot( dout, n );\n}\n\nfloat refraction( in vec3 i, in vec3 n, in float ior, out vec3 r )\n{\n    float r_mat = step( 1., ior ); // refraction index of 1 is vacuum, less than that is impossible\n    ior = max( 1., ior );\n    \n    float c1 = dot( i, n );\n    \n    float _in = step( 0., c1 ); // if c1 < 0, we are going from the outside (air) to inside\n    n = mix( n, -n, _in );\n    float r1 = mix( 1., ior, _in );\n    float r2 = mix( ior, 1., _in );\n    c1 = mix( -c1, c1, _in );\n    float r_idx = r1 / r2;\n    \n    float c2 = 1. - r_idx * r_idx * ( 1. - c1 * c1 );\n    float valid = step( 0., c2 ); // careful with the negative discriminant\n    \n    \n    r = r_idx * i + ( r_idx * c1 - sqrt( max( 0., c2 ) )) * n;\n    //r = r_idx * ( i + n * c1 ) - sqrt( max( 0., c2 ) ) * n;\n    \n    float reflect_prob = min( valid, schlick( mix( c1, ior * c1, _in ), r_idx ) );\n    //float reflect_prob = 1.;\n    \n    //float p = 1.;\n    float p = hash( c1 );\n    \n    \n    return ( 1.- step( p, reflect_prob ) ) * r_mat;\n}\n\nfloat scene( in vec3 ro, in vec3 rd, out float d )\n{\n    const float T_MAX = 999999.;\n\tconst float T_MIN = 0.001;\n    \n    float idx = -1.;\n    d = T_MAX;\n    \n    for( int i = 0; i != nSP; ++i )\n    {\n        float t = 0.;\n        float h = sp_solve( ro, rd, sp_defs[i].xyz, sp_defs[i].w, T_MIN, t );\n        float valid = step( T_MIN, t ); // make sure the hit point is positive\n        \n        h *= valid;\n        t = mix( T_MAX, t, h ); // no hit or negative hit == T_MAX\n        \n        idx = mix( float( i ), idx, step( d, t ) );\n        d = min( d, t );\n    }\n    \n    return idx;\n}\n\n#if CH_3\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    float t = 0.5 * ( d.y + 1. );\n    return mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), t );\n}\n\n#elif CH_4\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    float hit = sp_hit( from, d, sp_defs[0].xyz, sp_defs[0].w );\n    float t = 0.5 * ( d.y + 1. );\n    vec3 bg = mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), t );\n    return mix( bg, vec3( 1., 0., 0. ), hit );\n}\n\n#elif CH_5\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    const float T_MAX = 999999.;\n    float hit_t = T_MAX;\n    float idx = scene( from, d, hit_t );\n    int id = max( 0, int( idx ) );\n    vec3 normal = normalize( ( from + d * hit_t ) - sp_defs[id].xyz );\n    \n    float t = 0.5 * ( d.y + 1. );\n    vec3 bg = mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), t );\n    return mix( bg, 0.5 * ( normal + 1. ) , step( 0., idx ) );\n}\n\n#elif CH_6\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    const float T_MAX = 999999.;\n    \n    float hit_t = T_MAX;\n    float idx = scene( from, d, hit_t );\n    \n    int id = max( 0, int( idx ) );\n    vec3 normal = normalize( ( from + d * hit_t ) - sp_defs[id].xyz );\n    \n    float t = 0.5 * ( d.y + 1. );\n    vec3 bg = mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), t );\n    return mix( bg, 0.5 * ( normal + 1. ) , step( 0., idx ) );\n}\n\n#elif CH_7\n\nvec3 trace_it( in vec3 from, in vec3 d, in int depth )\n{\n    const float T_MAX = 999999.;\n\tconst float T_MIN = 0.001;\n    vec3 bg = mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), 0.5 * ( d.y + 1. ) );\n    for( int i = 0; i != depth; ++i )\n    {\n        float hit_t = T_MAX;\n        float idx = scene( from, d, hit_t );\n        \n        if( idx < 0. )\n        {    \n            return bg;\n        }\n        \n        int id = int( idx );\n        from = ( from + d * hit_t );\n        vec3 normal = normalize( from - sp_defs[id].xyz );\n        //d = normalize( ( from + normal + random_in_usphere( from ) ) - from );        \n        d = normalize( normal + random_in_usphere( from ) );        \n        bg *= 0.5;\n    }\n    \n    return bg;\n}\n\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    return trace_it( from, d, 50 );\n}\n\n#elif CH_8\n\nvec3 trace_it( in vec3 from, in vec3 d, in int depth )\n{\n    const float T_MAX = 999999.;\n\tconst float T_MIN = 0.001;\n    vec3 bg = mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), 0.5 * ( d.y + 1. ) );\n    int i = 0;\n    for( i = 0; i != depth; ++i )\n    {\n        float hit_t = T_MAX;\n        float idx = scene( from, d, hit_t );\n        \n        if( idx < 0. )\n        {    \n            break;\n        }\n        \n        from = ( from + d * hit_t );\n        int id = int( idx );\n        vec3 normal = normalize( from - sp_defs[id].xyz );\n        vec3 s;\n        float sf = scatter( from, d, normal, \n                           m_r[id].x, m_r[id].y,\n                          s );\n        \n        \n        if( sf < 0. )\n        {\n            bg = vec3(0.);\n            break;\n        }\n        \n        d = s;\n        bg *= albedos[id];\n    }\n    \n    return mix( bg, vec3( 0. ), step( float( depth ), float( i ) ) );\n}\n\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    return trace_it( from, d, 50 );\n}\n\n#elif CH_9 || CH_10 || CH_11 || CH_12\n\nvec3 trace_it( in vec3 from, in vec3 d, in int depth )\n{\n    const float T_MAX = 999999.;\n\tconst float T_MIN = 0.01;\n    vec3 bg = mix( vec3( 0.5, 0.7, 1. ), vec3( 1. ), 0.5 * ( d.y + 1. ) );\n    int i = 0;\n    for( i = 0; i != depth; ++i )\n    {\n        float hit_t = T_MAX;\n        float idx = scene( from, d, hit_t );\n        \n        if( idx < 0. )\n        {    \n            break;\n        }\n        \n        from = ( from + d * hit_t );\n        int id = int( idx );\n        vec3 normal = normalize( ( from - sp_defs[id].xyz ) / sp_defs[id].w );\n        vec3 s;\n        float sf = scatter( from, d, normal, \n                           m_r_i[id].x, m_r_i[id].y,\n                          s );\n        vec3 r;\n        float rf = refraction( d, normal, m_r_i[id].z, r );\n        \n        sf = mix( sf, 1., rf );\n        d = mix( s, r , rf );\n        \n        if( sf < 0. )\n        {\n            bg = vec3(0.);\n            break;\n        }\n        \n        bg *= albedos[id];\n    }\n    \n    //return mix( bg, vec3( 0. ), step( float( depth ), float( i ) ) );\n    return bg;\n}\n\n\nvec3 trace( in vec3 from, in vec3 d )\n{\n    return trace_it( from, d, 50 );\n}\n\n\n#else\n\n// default trace\nvec3 trace( in vec3 from, in vec3 d )\n{   \n    return vec3(0.);\n}\n\n#endif\n\nmat4 create_camera( in vec3 from, in vec3 to, in vec3 up, in float fov, in float n, in float ar)\n{\n    vec3 z = normalize( from - to );\n    vec3 x = normalize( cross( up, z ) );\n    vec3 y = ( cross( z, x ) );\n    \n    float hh = tan( fov * 0.5 ) * n;\n    vec3 hs = vec3( ar * hh, hh, n );\n    vec3 t = from - hs.x * x - hs.y * y - hs.z * z;\n    vec3 s = 2. * hs;\n    \n    return mat4( vec4( s.x * x, 0.), vec4( s.y * y, 0), vec4( z, 0 ), vec4( t, 1. ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 from = vec3( 0. );\n    vec3 d = vec3( 0., 0., -1. );\n \tvec3 color = vec3( 0. );   \n#if CH_3\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 bl = vec3( -2., -1., -1. );\n    vec3 p = bl + uv.x * vec3( 4., 0, 0 ) + uv.y * vec3( 0., 2., 0. ); \n    d = normalize( p );\n    color = trace( from, d );\n#elif CH_4\n  \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 bl = vec3( -2., -1., -1. );\n    vec3 p = bl + uv.x * vec3( 4., 0, 0 ) + uv.y * vec3( 0., 2., 0. ); \n    d = normalize( p );\n    \n    color = trace( from, d );\n    \n#elif CH_5\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 p = vec4( uv.x, uv.y, 0., 1. );\n    mat4 camera = create_camera( from, vec3(0.,0.,-1), vec3( 0.,1.,0. ), 1.57, 1., 2. );\n    vec4 to = camera * p;\n    d = normalize( to.xyz );\n    color = trace( from, d );\n    \n#elif CH_6\n    const int NUM_SAMPLES = 200;\n    mat4 camera = create_camera( from, vec3(0.,0.,-1), vec3( 0.,1.,0. ), 1.57, 1., 2. );\n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        d = normalize( to.xyz );\n        color += trace( from, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n#elif CH_7\n    \n    const int NUM_SAMPLES = 200;\n    mat4 camera = create_camera( from, vec3(0.,0.,-1), vec3( 0.,1.,0. ), 1.57, 1., 2. );\n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        d = normalize( to.xyz );\n        color += trace( from, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n    color = sqrt( color );\n\n#elif CH_8\n    \n    const int NUM_SAMPLES = 200;\n    mat4 camera = create_camera( from, vec3(0.,0.,-1), vec3( 0.,1.,0. ), 1.57, 1., 2. );\n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        d = normalize( to.xyz );\n        color += trace( from, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n    color = sqrt( color );\n    \n#elif CH_9\n    \n    const int NUM_SAMPLES = 200;\n    mat4 camera = create_camera( from, vec3(0.,0.,-1), vec3( 0.,1.,0. ), \n                                1.57, 1., 2. );\n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        d = normalize( to.xyz );\n        color += trace( from, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n    color = sqrt( color );\n\n#elif CH_10\n    \n    const int NUM_SAMPLES = 200;\n    float ar = iResolution.x/iResolution.y;\n    from = vec3( -2. , 2. , 1. );\n    vec3 at = vec3(0.,0.,-1.);\n    mat4 camera = create_camera( from, at, vec3( 0.,1.,0. ), \n                                0.785, 1., ar );\n    /*\n    vec3 fwd = normalize( from - at );\n    vec3 right = normalize( cross( vec3( 0., 1., 0. ), fwd ) );\n    vec3 up = cross( fwd, right );\n    */\n    \n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        \n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        d = normalize( to.xyz - from );\n        \n        /*\n        vec3 hs = vec3( ar, 1, 0. );\n        vec3 s = 2. * hs;\n        vec3 bl = from - hs.x * right - hs.y * up - fwd;\n        vec3 p = bl + uv.x * right * s.x + uv.y * up * s.y; \n        d = normalize( p - from );\n        */\n        \n        color += trace( from, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n    color = sqrt( color );\n\n#elif CH_11\n    \n    const int NUM_SAMPLES = 200;\n    float ar = iResolution.x/iResolution.y;\n    from = vec3( 3. , 3. , 2. );\n    vec3 at = vec3(0.,0.,-1.);\n    mat4 camera = create_camera( from, at, vec3( 0.,1.,0. ), \n                                0.35, length( from - at ), ar );\n    float lens_radius = 0.25;\n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        \n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        vec3 offset = vec3( random_in_udisk( sp ) * lens_radius, 0. );\n        vec3 f = from + offset;\n        d = normalize( to.xyz - f );\n        \n        color += trace( f, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n    color = sqrt( color );\n\n#elif CH_12\n    \n    const int NUM_SAMPLES = 10;\n    float ar = iResolution.x/iResolution.y;\n    from = vec3( 13. , 2. , 3. );\n    vec3 at = vec3(0.,0., 0.);\n    mat4 camera = create_camera( from, at, vec3( 0.,1.,0. ), \n                                0.35, 10., ar );\n    float lens_radius = 0.1;\n    for( int i = 0; i != NUM_SAMPLES; ++i )\n    {\n        vec2 sp = fragCoord + noise( float( i ) + fragCoord + iTime );\n    \tvec2 uv = sp / iResolution.xy;\n        \n        vec4 p = vec4( uv.x, uv.y, 0., 1. );\n        vec4 to = camera * p;\n        vec3 offset = vec3( random_in_udisk( sp ) * lens_radius, 0. );\n        vec3 f = from + offset;\n        d = normalize( to.xyz - f );\n        \n        color += trace( f, d );\n    }\n    \n    color /= float( NUM_SAMPLES );\n    \n    color = sqrt( color );\n\n\n    \n    \n#else\n    \n#endif\n    \n    \n    fragColor = vec4( color, 1. );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}