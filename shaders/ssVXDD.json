{
    "Shader": {
        "info": {
            "date": "1634696784",
            "description": "For a personal website I'm working on. Maybe I'll share it in the future :)",
            "flags": 0,
            "hasliked": 0,
            "id": "ssVXDD",
            "likes": 16,
            "name": "Gaussian Kernel Visual",
            "published": 3,
            "tags": [
                "math",
                "graph",
                "gaussian",
                "kernel",
                "visualize"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "#define draw(dist, col) color = mix(color, col.rgb, smoothstep(unit, 0.0, dist) * col.a)\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(1.0);\n    float PI = 3.14159265;\n\n    uv.y += 1.0;\n\n    // Grid\n    draw(abs(fract(uv.x + 0.5) - 0.5), vec4(0.0, 0.0, 1.0, 1.0));\n    draw(abs(fract(uv.y + 0.5) - 0.5), vec4(0.0, 0.0, 1.0, 1.0));\n\n    // Subgrid\n    draw(abs(mod(uv.x + 0.125, 0.25) - 0.125) + 0.001, vec4(0.75, 0.75, 1.0, 1.0));\n    draw(abs(mod(uv.y + 0.125, 0.25) - 0.125) + 0.001, vec4(0.75, 0.75, 1.0, 1.0));\n\n    // Axes\n    draw(abs(uv.x) - 0.002, vec4(1.0, 0.0, 0.0, 1.0));\n    draw(abs(uv.y) - 0.002, vec4(1.0, 0.0, 0.0, 1.0));\n\n    // Filter width or \"blurriness\"\n    float w = iMouse.z > 0.0 ? abs((iMouse.x - 0.5 * iResolution.x) / iResolution.y * 4.0) : 1.125;\n\n    // Draw the function\n    float t = uv.x / w;\n    float norm = w * sqrt(PI) / 2.0;\n    float y = exp(-t * t) / norm;\n    float dydx = -2.0 * t / w * exp(-t * t) / norm;\n    draw(abs(uv.y - y) / sqrt(1.0 + dydx * dydx) - 0.005, vec4(0.6, 0.0, 0.8, 1.0));\n    draw((uv.y - y) / sqrt(1.0 + dydx * dydx) - 0.005, vec4(0.6, 0.0, 0.8, 0.5));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}