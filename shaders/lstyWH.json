{
    "Shader": {
        "info": {
            "date": "1518752848",
            "description": "\"I drink your milkshake!\"",
            "flags": 0,
            "hasliked": 0,
            "id": "lstyWH",
            "likes": 1,
            "name": "Perpetual Motion Machines",
            "published": 3,
            "tags": [
                "shaderclub"
            ],
            "usePreview": 0,
            "username": "jpyepez",
            "viewed": 2533
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.2831853072\n#define LEN .707\n\n\nfloat rect(in vec2 _st, in vec2 pos, in vec2 dim);\nfloat rectCenter(in vec2 _st, in vec2 pos, in vec2 dim);\nmat2 rotate2d(float _angle);\nvec3 hsb2rgb_smooth( in vec3 c );\n\nconst vec3 normal = vec3(360., 100., 100.);\nconst float hue1 = 235./normal.x;\nconst float hue2 = 205./normal.x;\nconst vec2 sb1 = vec2(62., 100.)/normal.yz;\nconst vec2 sb2 = vec2(37., 100.)/normal.yz;\nconst vec2 sb3 = vec2(0., 100.)/normal.yz;\nconst vec2 sb4 = vec2(89., 69.)/normal.yz;\nconst vec2 sb5 = vec2(100., 34.)/normal.yz;\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 st = gl_FragCoord.xy/iResolution.xy;\n  st.x *= iResolution.x/iResolution.y;\n  vec3 color = vec3(0.);\n\n  st -= vec2(0.5);\n  st *= rotate2d(iTime*0.1);\n  st *= 3. + 2.5*(1.+cos(iTime*0.25));\n  st = fract(st);\n  \n  vec3 c1 = hsb2rgb_smooth(vec3(hue2-2.*fract(st.x/10.), sb1));\n  vec3 c2 = hsb2rgb_smooth(vec3(hue2, sb4));\n  vec3 c3 = hsb2rgb_smooth(vec3(hue1+fract(st.y/15.), sb5));\n  vec3 bg = hsb2rgb_smooth(vec3(hue2+fract(st.x/10.), sb5));\n\n  float factor = pow(st.x*sin(25.*st.y+2.*iTime), 2.);\n\n  vec3 r = mix(c1, c2, factor);\n\n  float speed = TWO_PI*sin(iTime*0.5);\n  st -= vec2(.5);\n  st *= rotate2d(speed);\n  color = mix(bg, r, rectCenter(st, vec2(0., 0.), vec2(LEN)));\n  st *= rotate2d(speed);\n  color = mix(color, c3, rectCenter(st, vec2(0., 0.), vec2(pow(LEN,2.))));\n  st *= rotate2d(speed);\n  color = mix(color, r, rectCenter(st, vec2(0., 0.), vec2(pow(LEN,4.))));\n  st *= rotate2d(speed);\n  color = mix(color, c3, rectCenter(st, vec2(0., 0.), vec2(pow(LEN,8.))));\n  st += vec2(.5);\n\n\n  fragColor = vec4(color, 1.0);\n}\n\n\nfloat rect(in vec2 _st, in vec2 pos, in vec2 dim) {\n  float left = step(pos.x, _st.x);\n  float bottom = step(pos.y-dim.y, _st.y);\n  float right = step((1.-pos.x-dim.x), 1.-_st.x);\n  float top = step(1.-pos.y, 1.-_st.y);\n  return left*bottom*right*top;\n}\n\nfloat rectCenter(in vec2 _st, in vec2 pos, in vec2 dim) {\n  vec2 hdim = dim*0.5;\n  float left = step(pos.x-hdim.x, _st.x);\n  float bottom = step(pos.y-hdim.y, _st.y);\n  float right = step((1.-pos.x-hdim.x), 1.-_st.x);\n  float top = step(1.-pos.y-hdim.y, 1.-_st.y);\n  return left*bottom*right*top;\n}\n\nmat2 rotate2d(float _angle){\n  return mat2(cos(_angle),-sin(_angle),\n              sin(_angle),cos(_angle));\n}\n\nvec3 hsb2rgb_smooth( in vec3 c )\n{\n  vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n  rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n  return c.z * mix( vec3(1.0), rgb, c.y);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}