{
    "Shader": {
        "info": {
            "date": "1610758493",
            "description": "3D scene, found by accident and tweaked a bit.\nThanks to  the unknown person from which this was derived. link at http://glslsandbox.com/e#70315.0",
            "flags": 0,
            "hasliked": 0,
            "id": "WlGcWz",
            "likes": 3,
            "name": "Mausoleum of The Kings",
            "published": 3,
            "tags": [
                "3d",
                "scene",
                "geometric"
            ],
            "usePreview": 0,
            "username": "xavierseb",
            "viewed": 263
        },
        "renderpass": [
            {
                "code": "// started from http://glslsandbox.com/e#70315.0 , thanks to the person who posted the original shader\n// \n#define PI 3.14159\n\nfloat map(vec3 p, mat2 m, float d) {\n\tfloat k;\n\tp.yz *= m;\n\tfor (int i = 0; i < 6; i++) {\n\t\tk = length(p.xy);\n\t\tp.x = k * (mod(atan(p.y, p.x), PI/4.) - PI/8.);\t\t\t\t\t\n\t\tp.y = k - 8.0305;\t\t\n\t\tk = length(p.yz);\t\t\t\t\n\t\tp.y = k * (abs(sin(atan(p.z, p.y))) - .37);\t\t\t\t\n\t\tp.z = k - 9.8 +d; \n\t}\n\t\n\treturn dot(abs(p), normalize(vec3(6.9,3.6,6.2))) - 1.591;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - 0.5*iResolution.xy) /iResolution.y;\n\tfloat v = .8 - PI*sin(mod(iTime/15.,PI/2.)), dd= .22*clamp(6.*cos(v+.75),-.5,.5);\n\tmat2 m  = mat2(cos(v),sin(v),-sin(v),cos(v));\n\tvec3 rd = normalize(vec3(uv, 1)),  \n         p  = vec3( iMouse.x/iResolution.x*2.-1., 14.-6.*abs(sin(v+.4)), -6.3);\n    fragColor=vec4(0);\n\tfor (int i = 1; i < 160; i++) {\n\t\tfloat d = map(p,m,dd); \t\t\t\t\n\t\tp += rd * d;\n\t\tif (d < 0.001) {\n\t\t\tfloat gl= (1.-smoothstep(0.,.75,distance(p,vec3(0,6.95,13.+16.8*sin(v+.74)))))*(1.+sin(iTime*10.)); // glow factor\n\t\t\tfragColor = vec4( 6,6,5,6)/float(i)  +  vec4( gl*gl*gl*.86,gl*.5,gl*gl*.75,1.);\t// stone + glow\t\t\n\t\t\tbreak;\n\t\t}\n\t}\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}