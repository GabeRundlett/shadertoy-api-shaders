{
    "Shader": {
        "info": {
            "date": "1659765152",
            "description": "My first attempt at a golf-type shader. Inspired by Descending (1965) by Bridget Riley, Gemeentemuseum Den Haag.\n\nhttps://upload.wikimedia.org/wikipedia/commons/b/bd/Binary_%2826093852377%29.jpg\n\nI got it down under 280 characters at least, woohoo!",
            "flags": 0,
            "hasliked": 0,
            "id": "7t3yW8",
            "likes": 3,
            "name": "\"Descending\" (227 chs)",
            "published": 3,
            "tags": [
                "stripes",
                "steps",
                "stairs",
                "golf",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "fenix",
            "viewed": 261
        },
        "renderpass": [
            {
                "code": "// also from Xor: 210 characters! :O\n\n//*\nvoid mainImage( out vec4 O, vec2 u)\n{\n    u /= iResolution.xy;\n\n    float x = u.x - .1 * (u.x - .5) * u.y,\n          z = .3 + .6 * (x - smoothstep(0., .75 / (.5 - abs(x - .5)), \n                                      1. - abs(u.y - .25))),  \n          f = fract(x*7. + iTime * .14);\n\n    O = vec4(mod( u.y / .1 - min(f / z, --f / --z), .4) > .2);\n}\n/**/\n\n// from coyote: 221 characters\n\n/*\nvoid mainImage( out vec4 O, vec2 u)\n{\n    u /= iResolution.xy;\n\n    float x = u.x - .1 * (u.x - .5) * u.y,\n          z = .3 + .6 * (x - smoothstep(0., .75, \n                                      (1. - abs(u.y - .25)) * (.5 - abs(x - .5)))), \n          f = fract(x*7. + iTime * .14);\n\n    O = vec4(abs(.2 - mod( u.y / .1 - (f < z ? f / z : --f / --z), .4) ) > .1);\n}\n/**/\n\n// from Xor: 227 characters\n\n/*\nvoid mainImage( out vec4 O, vec2 u)\n{\n    u /= iResolution.xy;\n\n    float x = u.x - .1 * (u.x - .5) * u.y,\n          z = .3 + .6 * (x - smoothstep(0., .75, \n                                      (1. - abs(u.y - .25)) * (.5 - abs(x - .5)))), \n          f = fract(x*7. + iTime * .14);\n\n    O = vec4(abs(.2 - mod( u.y / .1 - (f < z ? f / z : (1. - f) / (1. - z)), .4) ) > .1);\n}\n/**/\n\n// from FabriceNeyret2: 237 chars (+ 12 for aa)\n\n/*\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u /= iResolution.xy;\n\n    float x = u.x - .1 * (u.x - .5) * u.y,\n          z = .7 - .6 * (x - smoothstep(0., .75, \n                                      (1. - abs(u.y - .25)) * (.5 - abs(x - .5)))), \n          f = fract(-x*7. - iTime * .14);\n\n    O = vec4( round( abs(1. - mod( u.y - .1 * (f < z ? f / z : (1. - f) / (1. - z)), .04) / .02 ) ) );\n  //O = R.yyyy*.01*(s-.3);  // antialiasing\n}\n/**/\n\n// Amateur hour (251 chars):\n\n/*\nvoid mainImage( out vec4 O, in vec2 u )\n{\n    u /= iResolution.xy;\n\n        float x = u.x - .1 * (u.x - .5) * u.y,                // warp apart at the top\n        z = .7 - .6 * (x - smoothstep(0., .75,                // warp away from (0.5, 0.25)\n                (1. - abs(u.y - .25)) * (.5 - abs(x - .5)))), \n        f = fract((-x - iTime * .02) * 7.),                   // horizontal stripes\n        y = u.y - .1 * (f < z ? f / z : (1. - f) / (1. - z)), // doubleRamp\n        s = abs(.5 - fract(y / .04)) * 2.;                    // vertical stripes\n    \n    O = vec4(round(s));\n}\n/**/\n\n// Original:\n\n/*\nfloat doubleRamp(float x, float z)\n{\n    if (x < z) return x / z;\n    return (1.0 - x) / (1.0 - z);\n}\n\nvoid mainImage( out vec4 O, in vec2 u )\n{\n    u /= iResolution.xy;\n    \n    u.x += -0.1 * (u.x - 0.5) * u.y;\n    float a = -u.x - iTime * 0.02;//  + 0.01 * sin(uv.y * 3.1 + 1.4) / (0.2 + 1.0 * length((uv - vec2(0.5, 0.25)) * vec2(1.0, 0.1)));\n    \n    u.x -= 1.0 * smoothstep(0.0, 0.75, (1.0 - abs(u.y - 0.25)) * (0.5 - abs(u.x - 0.5)));\n    u.y -= 0.1 * doubleRamp(mod(a * 7.0, 1.0), u.x * -0.6 + 0.65);\n    \n    const float w = 1.0 / 24.0;\n    float s = abs(0.5 - mod(u.y, w) / w) * 2.0;\n    float bw = smoothstep(.4, .6, s);\n    \n    vec3 col = vec3(bw);\n\n    O = vec4(col,1.0);\n}\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}