{
    "Shader": {
        "info": {
            "date": "1424107695",
            "description": "2d",
            "flags": 0,
            "hasliked": 0,
            "id": "XtfGRl",
            "likes": 0,
            "name": "GPU Juggler 7",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "rcread",
            "viewed": 145
        },
        "renderpass": [
            {
                "code": "// Created by randy read - rcread/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat ss( float b, float t ) {\n    return clamp( abs( b / 2. - mod(  t * .9e0, b ) ), 0., 1e5 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tconst float max_j = 2e1, inc_j = .2;\n    float a = 1e1, d = 0., m = 0., t = mod( iTime, 7e2 ) + 1e3;\n\tvec2 p = 3e1 * ( fragCoord.xy - iResolution.xy / 2. ) / iResolution.xy + 4.;\n    vec3 c = vec3( 0 );\n\tfor ( float j = 0. ; j < max_j * inc_j; j += inc_j ) {\n\t    for ( float i = 1.3e1 ; i <= 1.6e1 ; i++ ) {\n\t        d = distance( p, vec2( ss( i, t + j ), ss( i+1., t + j ) ) );\n\t\t\tif ( a > d ) {\n\t\t\t\ta = d;\n\t\t\t\tm = i;\n\t\t\t}\n\t\t}\n\t\tfor ( int i = 0 ; i < 3 ; i++ ) {\n\t\t\tm /= ss( ss( 13., t / 1e2 ), t / 1e3 );\n\t\t\tc[ i ] += fract( m );\n\t\t}\n    }\n\tif ( a < .2 ) c = vec3( 0.2 );\n    fragColor.rgb = mix( vec3( 0.2 ), clamp( 8. * c / ( a * max_j ), 0., 1. ) * .8 - .2, abs( a - 1.5 ) );\n\tfragColor.w = 1.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}