{
    "Shader": {
        "info": {
            "date": "1579751255",
            "description": "for test",
            "flags": 0,
            "hasliked": 0,
            "id": "3lVGDG",
            "likes": 1,
            "name": "Super Smile",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "tonywu",
            "viewed": 346
        },
        "renderpass": [
            {
                "code": "#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t){\n\treturn sat((t-a)/(b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n\treturn sat((t-a)/(b-a)) * (d-c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect){\n    return (uv - rect.xy)/(rect.zw - rect.xy);\n}\n\nvec4 Eye(vec2 uv){\n    uv -= 0.5;\n    \n    float d = length(uv);\n\t\n    vec4 irisCol = vec4(.3, .5, 1., 1.);\n    \n    vec4 col = mix(vec4(1.), irisCol, S(.1, .7, d)*0.5);\n    \n    col.rgb *= 1. - S(.45, .5, d)*0.5*sat(-uv.y-uv.x);\n    \n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .28, d));\n    \n    irisCol.rgb *= 1. + S(.3, .05, d);\n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28, .25, d));\n    \n    col.rgb = mix(col.rgb, vec3(0.), S(.16, .14, d));\n    \n    float highlight = S(.1, .09, length(uv - vec2(-.15, .15)));\n    highlight += S(.07, .05, length(uv + vec2(-.08, .08)));\n    \n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    col.a = S(.5, .48, d);\n    \n     \n    return col;\n}\n\nvec4 Mouth(vec2 uv){\n\tuv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n    \n    uv.y *= 1.5+ abs(2.*cos(0.5*3.14*iTime));\n    uv.y -= uv.x * uv.x*2.; \n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    \n    float td = length(uv-vec2(0., .6));\n    \n    vec3 toothCol = vec3(1.) * S(.6, .35, d);\n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, td));\n     \n    td = length(uv+vec2(0., .5));\n    col.rgb =mix(col.rgb, vec3(1., .5, .5), S(.5, .2, td));\n    return col;\n}\n\nvec4 Head(vec2 uv){\n\tvec4 col = vec4(.9, .65, .1, 1.);\n    float d = length(uv);\n    col.a = S(0.5, 0.49, d);\n    float edgeShade = remap01(.35, .5, d);\n    edgeShade *= edgeShade;\n    \n    col.rgb *= 1. - edgeShade*.5;\n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(0.47, 0.48, d));\n    \n    float highlight = S(0.41, 0.405, d);\n    highlight *=remap(0.41, -.1, 0.75, 0., uv.y);\n    col.rgb = mix(col.rgb, vec3(1.0), highlight);\n    \n    \n    \n    d = length(uv - vec2(.25, -.2));\n    float cheek = S(0.2, 0.01, d)*0.4;\n    cheek *= S(0.17, 0.16, d);\n    col.rgb = mix(col.rgb, vec3(1., .1, .1), cheek);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv){\n\tvec4 col = vec4(0.0);\n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(0.03, -.1, .37, .25)));\n    vec4 mouth = Mouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = Smiley(uv);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}