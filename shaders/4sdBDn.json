{
    "Shader": {
        "info": {
            "date": "1524737784",
            "description": "this is my first shader ever",
            "flags": 0,
            "hasliked": 0,
            "id": "4sdBDn",
            "likes": 15,
            "name": "line clock glsl",
            "published": 3,
            "tags": [
                "clock"
            ],
            "usePreview": 1,
            "username": "morimea",
            "viewed": 692
        },
        "renderpass": [
            {
                "code": "\n// License - CC0 or use as you wish\n\nvec3 colorMinutes=vec3(.98222,.98222,.98222);\nvec3 colorHours=vec3(.98222,.98222,.98222);\nvec3 colorTextM=vec3(.98222,.98222,.98222);\nvec3 colorTextH=vec3(.98222,.98222,.98222);\nvec3 colorTri=vec3(.98222,.98222,.98222)/2.5;\n\n//https://www.shadertoy.com/view/Xsy3zG\nfloat segment(vec2 uv)\n{\n    uv = abs(uv);\n\treturn (1.0-smoothstep(-0.257,0.40,uv.x))\n         * (1.0-smoothstep(0.25,0.66,uv.y));\n}\n\nfloat sevenSegment(vec2 uv,int num)\n{\n\tfloat seg= 0.0;\n    if (num>=2 && num!=7 || num==-2)\n        seg = max(seg,segment(uv.yx));\n    if (num==0 || \n            (uv.y<0.?((num==2)==(uv.x<0.) || num==6 || num==8):\n            (uv.x>0.?(num!=5 && num!=6):(num>=4 && num!=7) )))\n        seg = max(seg,segment(abs(uv)-0.5)); \n    if (num>=0 && num!=1 && num!=4 && (num!=7 || uv.y>0.))\n        seg = max(seg,segment(vec2(abs(uv.y)-1.0,uv.x)));\n\treturn seg;\n}\n\nfloat showNum(vec2 uv,float nr)\n{\n        float digit = floor(-uv.x / 1.5);\n    \tnr /= pow(10.,digit);\n        nr = mod(floor(nr+0.000001),10.0);\n    \tif (uv.x<-2.90 )\n            return 0.;\n\t\treturn sevenSegment(uv+vec2( 0.75 + digit*1.5,0.0),int(nr));\n}\n\nfloat drawminutes(vec2 uv){\n    float t;\n    t=floor(mod((uv.x-0.0035)/.01,12.)/2.)*10.+10.;\n    uv.y+=0.0652;\n    uv.y/=0.25;\n    uv.x+=0.0573;\n    uv/=2.25;\n    uv.x=-uv.x;\n    return showNum(vec2(-mod(uv.x/.01,2./2.25)/0.15,uv.y*80.),t);\n}\n\nfloat drawhours(vec2 uv){\n    float t;\n    uv.y-=0.12852;\n    uv.y/=0.221;\n    uv.x+=0.0313024;\n    uv/=2.;\n    t=(floor(mod((uv.x-0.0035)/.01,144.)/6.)*10.)/10.;\n    uv/=2.85;\n    uv.x=-uv.x;\n    return showNum(vec2(-mod((uv.x)/(.01),2./2.85)/(0.15),uv.y*80.),t);\n}\n\n//https://www.shadertoy.com/view/XlBBWt\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\nfloat drawtriangle(vec2 uv){\n    uv+=0.5;\n    uv.y-=0.18;\n    uv = uv *2.-1.;\n    uv.x/=1.7;\n    uv*=20.;\n    int N = 3;\n    float a = atan(uv.x,uv.y);\n    float r = TWO_PI/float(N);\n    return 1.0-smoothstep(.4,.541,cos(floor(.5+a/r)*r-a)*length(uv));\n}\n\nfloat moveto(){\n    float timeval=iDate.w;\n    //timeval=iMouse.x/iResolution.x*86400.;//test1\n    //timeval=iTime*70.;//test2\n    //timeval=3600.*5.;//test3 5 hours\n    float h = floor(timeval/3600.);\n    float m = floor(mod(timeval/60.,60.));\n    float s = floor(mod(timeval,60.));\n    float size=1./50.;//<screen res>/<num of 10min marks>\n    return h*6.*size+(m/60.)*size*6.+((s/60.)/10.)*size;\n}\n\n//https://iquilezles.org/articles/filterableprocedurals\nfloat filteredGrid( in vec2 p, in vec2 dpdx, in vec2 dpdy )\n{\n    const float N = 8.0;\n    vec2 w = max(abs(dpdx), abs(dpdy));\n    vec2 a = p + 0.5*w;                        \n    vec2 b = p - 0.5*w;           \n    vec2 i = (floor(a)+min(fract(a)*N,1.0)-\n              floor(b)-min(fract(b)*N,1.0))/(N*w);\n    return (1.0-i.x);//*(1.0-i.y);\n}\n\nvoid mainImage( out vec4 fragColor, vec2  fragCoord)\n{\n    vec2 uv = ((fragCoord-.5*iResolution.xy) / iResolution.y)*vec2(9./16.,1.);//vec2 uv = fragCoord/iResolution.xy-0.5;\n    uv*=0.75;\n    float px=2./iResolution.y; //pixel size for AA in smoothstep\n    float gradient=smoothstep(0.31,0.,abs(uv.x));//gradient to black on left right\n    float tri=drawtriangle(uv);//triangle\n    uv.x+=24.*6.*(1./50.)+px*0.5; //to avoid negative in mod and fract\n    uv.x+=moveto();\n    float hline1=1.-smoothstep(0.001,0.001+px,abs(uv.y)); //horizontal line\n    float hline2=1.-smoothstep(0.05,0.05+px,abs(uv.y)); //mins horizontal\n    float hline3=1.-smoothstep(0.1,0.1+px,abs(uv.y)); //hours horizontal\n\n    vec2 tuv=(uv+px*0.5)*50.;\n    float hdiv=1.-step(.85,abs(mod(tuv.x+3.,6.)-3.)); //hours\n    float hdiv2=1.-step(.5,abs(mod(tuv.x+3.,6.)-3.)); //mins\n    hline3*=hdiv;\n    float vline1_aa=1.-filteredGrid(tuv,dFdx(tuv),dFdy(tuv));\n    \n    vline1_aa=max(vline1_aa,hline1);\n    vline1_aa*=max(hline2,hline3);\n    float dmins=drawminutes(uv)*(1.-hdiv2);\n    dmins=smoothstep(0.01,0.5,dmins);\n    float dhours=drawhours(uv)*hdiv;\n    dhours=smoothstep(0.1,0.5,dhours);\n    fragColor = vec4(colorMinutes*vline1_aa,1.);\n    fragColor += vec4(tri*colorTri,1.);\n    fragColor += vec4(dmins*colorTextM,1.);\n    fragColor+=vec4(dhours*colorTextH,1.);\n    fragColor.w=max(max(vline1_aa,dmins),max(dhours,tri))*gradient;\n    fragColor.w=clamp(fragColor.w,0.,1.);\n    \n    fragColor.rgb*=gradient;\n    \n    //fragColor.rgb=fragColor.rgb*fragColor.w+texture(iChannel0,fragCoord/iResolution.xy).rgb*(1.-fragColor.w);\n    \n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}