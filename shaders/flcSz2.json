{
    "Shader": {
        "info": {
            "date": "1639386638",
            "description": "Extremely simple space with pixel stars",
            "flags": 0,
            "hasliked": 0,
            "id": "flcSz2",
            "likes": 8,
            "name": "Pixel stars",
            "published": 3,
            "tags": [
                "simple",
                "pixel",
                "space",
                "galaxy",
                "stars"
            ],
            "usePreview": 0,
            "username": "_Chae4ek_",
            "viewed": 573
        },
        "renderpass": [
            {
                "code": "float rand(in vec2 st) {\n  vec2 r = fract(sin(st) * 2.7644437);\n  return fract(r.y * 276.44437 + r.x);\n}\n\nfloat particles(in vec2 st) {\n  float r = rand(floor(st));\n  return 0.01 + smoothstep(0.995, 1.0, r) * max(0.0, sin(r * 34433.0 + iTime));\n}\n\nconst vec3 BLUE = vec3(0.0, 0.1, 0.2);\n\n#define p(st) particles(st)\nvec3 avg(in vec2 st, in float a) {\n  vec2 A = vec2(0.0, a);\n  return BLUE * (p(st) + p(st + A) + p(st + A.yx) + p(st - A) + p(st - A.yx));\n}\n\nvec3 stars(in vec2 st) {\n  vec3 color = vec3(0.0);\n  for (float i = 5.0; i > 0.0; --i) color += mix(color, avg(st, i), 1.5);\n  return color + p(st);\n}\n\n#define scale 150.0\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 st = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n  st *= scale;\n\n  vec3 color = stars(st);\n\n  fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}