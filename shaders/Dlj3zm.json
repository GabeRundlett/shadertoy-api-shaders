{
    "Shader": {
        "info": {
            "date": "1673051018",
            "description": "A breakfast on the boardwalk",
            "flags": 0,
            "hasliked": 0,
            "id": "Dlj3zm",
            "likes": 4,
            "name": "3C : Breakfast on the Boardwalk",
            "published": 3,
            "tags": [
                "wave",
                "sine",
                "beach"
            ],
            "usePreview": 0,
            "username": "Xenolupus",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "float PHI = 1.61803398874989484820459;  // Î¦ = Golden Ratio   \n\nfloat gold_noise(in vec2 xy, in float seed){\n       return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\n\nfloat waveMaker (in vec2 uv, float timeOffset, vec2 distortOffset, float yOffset)\n{\n    float sineWaveDistort = 1.0-sin(iTime+timeOffset+uv.x*20.0*distortOffset.x)*0.2*distortOffset.y;\n\n    float bigSineWave1 = sin(iTime+timeOffset+uv.x*5.0*distortOffset.x)*0.03*sineWaveDistort*distortOffset.y;\n    float sineWave1 = sin(iTime+timeOffset+uv.x*30.0*distortOffset.x)*0.03*sineWaveDistort*distortOffset.y+0.8;\n\n    float wave = clamp((uv.y-sineWave1+bigSineWave1+yOffset)*1000.0,0.0,1.0);\n        \n    return wave;\n}\n\nfloat combinedWave(float totalTimeOffset, float totalYOffset,in vec2 uv)\n{\n    float wave1 = waveMaker(uv,0.0+totalTimeOffset,vec2(1.0,1.0),0.0+totalYOffset);\n    float wave2 = waveMaker(uv,0.01+totalTimeOffset,vec2(1.01,0.99),0.02+totalYOffset);\n    float wave3 = waveMaker(uv,0.02+totalTimeOffset,vec2(1.03,1.11),0.04+totalYOffset);\n    float wave4 = waveMaker(uv,0.03+totalTimeOffset,vec2(0.99,1.03),0.08+totalYOffset);\n    \n    return wave1*0.25+wave2*0.25+wave3*0.25+wave4*0.25;\n}\n\nvec3 beachCol(in vec2 uv,in vec2 fragCoord)\n{\n    float wave1 = waveMaker(uv,0.0,vec2(1.0,1.0),0.0);\n    float wave2 = waveMaker(uv,0.01,vec2(1.01,0.99),0.02);\n    float wave3 = waveMaker(uv,0.02,vec2(1.03,1.11),0.04);\n    float wave4 = waveMaker(uv,0.03,vec2(0.99,1.03),0.08);\n    \n    float wave = combinedWave(0.0,0.0,uv);\n    \n    vec3 waterCol = vec3(0.0,0.5,1.0);\n    vec3 frothCol = vec3(0.95,0.95,0.95);\n    \n    vec3 waveCol = mix(waterCol,frothCol,1.0-wave+0.25);\n    \n    float wet = clamp(combinedWave(-0.5,0.02,uv)*1000.0,0.0,1.0);\n    \n    float sandMask = 1.0-clamp(wave*1000.0,0.0,1.0);\n    \n    float sandSpecs = clamp((gold_noise(fragCoord,fract(123.12))-0.05)*20.0,0.0,1.0);\n    \n    vec3 sandCol1 = vec3(0.525,0.4,0.2);\n    vec3 sandCol2 = vec3(0.95,0.95,0.7);\n    \n    vec3 sancCol = mix(sandCol1,sandCol2,sandSpecs-wet*0.3);\n    \n    return mix(waveCol,sancCol,sandMask);\n}\n\nfloat boardWalkBoards(in vec2 uv)\n{\n    return clamp((sin(uv.x*50.0+4.8)+0.85)*50.0,0.0,1.0);\n}\n\nfloat boardWalkMask(in vec2 uv)\n{\n        float boardwalk = 1.0-clamp((uv.y-0.55)*1000.0,0.0,1.0);\n    boardwalk *= boardWalkBoards(uv);\n    boardwalk += 1.0-clamp((uv.y-0.45)*1000.0,0.0,1.0);\n    return clamp(boardwalk,0.0,1.0);\n}\n\nfloat findDis(in vec2 pos1, in vec2 pos2)\n{\n    return sqrt(pow(pos2.y-pos1.y,2.0)+pow(pos2.x-pos1.x,2.0));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 boardwalkColor = vec3(0.8,0.7,0.5)*clamp(boardWalkBoards(uv)+0.7,0.0,1.0);\n    \n    boardwalkColor = boardwalkColor*clamp(0.8+(1.0-(boardWalkMask(uv) - boardWalkMask(uv+vec2(0.0,0.01)))),0.0,1.0);\n    \n    vec3 beachColor = beachCol(uv,fragCoord)-boardWalkMask(uv-vec2(0.01,-0.01))*0.2;\n    \n    vec3 result = mix(beachColor,boardwalkColor,boardWalkMask(uv));\n    \n    float aspect = iResolution.x/iResolution.y;\n    vec2 aspectScaledUV = vec2(uv.x*aspect,uv.y);\n    \n    float coconutDis = 1.0-findDis(aspectScaledUV, (vec2(0.5*aspect,0.2)));\n    \n    float coconutMask = clamp((coconutDis-0.9)*1000.0,0.0,1.0);\n    \n    float coconutDisShade = coconutMask * clamp((1.0-findDis(aspectScaledUV, (vec2(0.52*aspect,0.22)))-0.6)*2.25,0.0,1.0);\n    \n\n    \n    float coconutShadowDis = 1.0-findDis(aspectScaledUV, (vec2(0.48*aspect,0.18)));\n    \n    float coconutShadowMask = clamp(1.8-clamp((coconutShadowDis-0.9)*1000.0,0.0,1.0),0.0,1.0);\n    \n    \n    \n    \n    float coconutHoleDis1 = clamp(1.0-findDis(aspectScaledUV, (vec2(0.52*aspect,0.22))),0.0,1.0);\n    float coconutHoleMask1 = clamp(1.5-clamp((coconutHoleDis1-0.9875)*1000.0,0.0,1.0),0.0,1.0);\n    float coconutHoleDis2 = clamp( 1.0-findDis(aspectScaledUV, (vec2(0.52*aspect,0.25))),0.0,1.0);\n    float coconutHoleMask2 = clamp(1.5-clamp((coconutHoleDis2-0.9875)*1000.0,0.0,1.0),0.0,1.0);\n    float coconutHoleDis3 = clamp(1.0-findDis(aspectScaledUV, (vec2(0.50*aspect,0.25))),0.0,1.0);\n    float coconutHoleMask3 = clamp(1.5-clamp((coconutHoleDis3-0.9875)*1000.0,0.0,1.0),0.0,1.0);\n    \n    vec3 coconutColor = vec3(0.5,0.3,0.0)*coconutDisShade*coconutHoleMask1*coconutHoleMask2*coconutHoleMask3;\n    \n    result = mix(result*coconutShadowMask,coconutColor,coconutMask);\n    \n    // Output to screen\n    fragColor = vec4(result,0.0);//vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}