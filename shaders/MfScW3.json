{
    "Shader": {
        "info": {
            "date": "1723055388",
            "description": "originals  https://www.shadertoy.com/view/4tyfWy https://www.shadertoy.com/view/fscXR8",
            "flags": 0,
            "hasliked": 0,
            "id": "MfScW3",
            "likes": 2,
            "name": "fractal in fractal",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 78
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(20,23,11))*.05+.5)\n#define PI 3.14159265\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat cube(vec3 p,vec3 s){\n  return length(max(abs(p)-s,0.));\n}\n\nvec2 fmod(vec2 p,float r){\n  float a=atan(p.x,p.y)+PI/r;\n\n\n  float n=(2.*PI)/r;\n  a=floor(a/n)*n;\n  return rot(a)*p;\n}\n\n\nfloat m1(vec3 p){\n\n\nfor(int i=0;i<5;i++){\n\n  p=abs(p)-0.5;\n   p.xz*=rot(iTime*0.05);\n  p.xy*=rot(iTime*0.05);\n  if(p.x<p.y)p.xy=p.yx;\n  if(p.x<p.z)p.xz=p.zx;\n  if(p.y<p.z)p.yz=p.zy;\n\n  p.xy=fmod(p.xy,24.0);\n  \n p.x-=abs(p.x)-0.5;\n p.y=abs(p.y)-0.15;\n\n float t=floor(iTime*0.25)+pow(fract(iTime*0.25),.5);\n\n\n p.z-abs(p.z)-0.45;\n\n\n\n\n}\n\n\n  float m=cube(p,vec3(.5,3.,2.));\n\n\n  return m;\n}\n\nfloat map(vec3 p){\n\n p.z+=iTime*0.5;\n\n   float t=floor(iTime*2.0)+pow(fract(iTime*2.0),.75);\n\n \nfloat k=10.5;\np=mod(p,k)-k*0.5;\n\n  float m=m1(p);\n\n   p.xz*=rot(iTime*0.05);\n  p.xy*=rot(iTime*0.05);\n  return m;\n}\n\nvec3 gn(vec3 p){\n   \n  vec2 t=vec2(0.001,0.0);\n  return normalize(\n      vec3(\n        map(p+t.xyy)-map(p-t.xyy),\n        map(p+t.yxy)-map(p-t.yxy),\n        map(p+t.yyx)-map(p-t.yyx)\n        )\n    );\n}\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \nvoid mainImage(out vec4 O, vec2 C)\n{\n  O=vec4(0);\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));\n    vec2 st=(gl_FragCoord.xy*2.0-iResolution.xy)/min(iResolution.x,iResolution.y);\n\n      vec3 ro=vec3(0,0,10.0);\n      vec3 rd=vec3(st,-1.0);\n\n      vec3 col=vec3(0,0,0);\n      float d3,t=0.0,acc=0.0;\n\n      for(int i=0;i<64;i++){\n        d3=map(ro+rd*t);\n        if(d3<0.001||t>1000.0)break;\n        t+=d3;\n        acc+=exp(-3.0*d3);\n      }\n\n    vec3 refo=ro+rd*t;\n     vec3 n=gn(refo);\n    rd=reflect(refo,n);\n    ro=refo;\n    t=0.1;\n    float acc2=0.;\n vec2 uv = ( C - .5*iResolution.xy ) / iResolution.y;\n    for(int i=0;i<32;i++){\n      d3=map(ro+rd*t);\n      if(d3<0.001||t>1000.0){\n        t+=d3;\n        acc2=exp(-3.0*d3);\n      }\n\n    }\n\n\n    col=vec3(1.,0.5,1.)*acc*0.1;\n    col+=vec3(0.,.5,1.)*acc2*0.075;\n    float g=0.1,e,s;\n    for(float i=0.;i<99.;++i)\n    {\n        p=g*d;\n        \n        p.z-=.2;\n       p.xz*=rot(iTime);\n        s=3.;\n        for(int j=0;j<8;++j)\n        {\n    \n            p=abs(p+col),p=p.x<p.y?p.zxy:p.zyx;\n            s*=e=2./min(dot(p,p),1.2);\n            p=p*e-vec3(3,3,3);\n        }\n        g+=e=length(p.xyz)/s+0.00007;\n        // color matrix test\n        mat3 m = mat3(\n            .1,.0,.2,\n            .0,.4,.4,\n            .1,.7,.9\n            );\n        O.rgb+=m*(H(log(s)-.1)+.5)*.016*exp(-.4*i*i*e);  \n    }\n    O=pow(O,vec4(10.));\n     uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    O+= vec4(happy_star(uv, anim) * vec3(0.35,0.42,0.75)*0.1, 1.0);\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}