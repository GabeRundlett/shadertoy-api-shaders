{
    "Shader": {
        "info": {
            "date": "1722012594",
            "description": "cubes  https://www.shadertoy.com/view/7tsSDs",
            "flags": 0,
            "hasliked": 0,
            "id": "lc2czD",
            "likes": 3,
            "name": "cubes in color",
            "published": 3,
            "tags": [
                "fractal",
                "cubes",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*2.5+.5)\nconst float SceneDurationSeconds = 4.;\nconst float Complexity = 7.;\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec4 o = O;\n    \n      vec2 uv = C/max(iResolution.x, iResolution.y);\n    uv.x --;\n    uv /= 5.5;\n\n    float scene = floor((iTime+98.)/SceneDurationSeconds);\n    vec4 hscene = hash42(vec2(scene));\n    uv += scene;\n    \n  \n \n\n    vec2 uvn = C/iResolution.xy-.5;\n    float ds = max(abs(uvn.x), abs(uvn.y))*2.;\n     vec4 h ;\n    for (float i = 1.; i < Complexity; ++ i) {\n        vec2 c = floor(uv);\n        h = hash42(c);\n        vec2 p = fract(uv);\n        vec2 a = abs(p-.5);\n        float sd = .5-max(a.x, a.y);\n        o = h*sqrt(sd)*4.;\n        uv *= 2.;\n        float sc = 1./i;\n       \n    }\n    o = clamp(o * hscene,0.,1.);\n    o.rgb = mix(vec3(o.r+o.g+o.b)/3., o.rgb, 1.-ds*ds);\n    o += (hash42(C+iTime).r-.5)*.15;\n    o *= 1.-dot(uvn,uvn*2.);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(2.1,0.2,1.),H(g*0.25),0.78)*1./e/8e3\n    )\n    {\n        p=g*d;\n   p.xz*=mat2(cos(iTime),sin(iTime), -sin(iTime) ,cos(iTime));\n    p.yz*=mat2(cos(iTime),sin(iTime), -sin(iTime) ,cos(iTime));\n      p.x+=cos(iTime);\n         p.y+=sin(iTime);\n          p.z-=5.*cos(iTime);\n        \n        s=3.;\n        for(int i=0;i++<12;\n        \n        p=abs(p)*e-vec3(1,1,1))\n        \n            p=.2-abs(p-.6),\n             \n            p.x<p.z?p=p.zyx:p,\n            p.z<p.y?p=p.xzy:p,\n            \n            s*=e=1.0;\n           \n         g+=e=abs(p.z)/s+.011;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}