{
    "Shader": {
        "info": {
            "date": "1506132928",
            "description": "quick attempt at a toon shader",
            "flags": 32,
            "hasliked": 0,
            "id": "XtXcDS",
            "likes": 12,
            "name": "comic book hero",
            "published": 3,
            "tags": [
                "video",
                "toon"
            ],
            "usePreview": 1,
            "username": "mds2",
            "viewed": 1636
        },
        "renderpass": [
            {
                "code": "const mat3 yuv_2_rgb = mat3(1.0, 1.0, 1.0,\n                            0.0, -0.39465, 2.03211,\n                            1.13983, -0.58060, 0.0);\n\nconst mat3 rgb_2_yuv = mat3(0.299, -0.14713, 0.615,\n                            0.587, -0.28886, -0.51499,\n                            0.114, 0.436, -0.10001);\n\nfloat edge(vec2 uv, float stepsize) {\n\tfloat x = length(\n                     texture(iChannel0, uv - vec2(stepsize, 0.0)).rgb -\n                     texture(iChannel0, uv + vec2(stepsize, 0.0)).rgb);\n    \n\tfloat y = length(\n                     texture(iChannel0, uv - vec2(0.0, stepsize)).rgb -\n                     texture(iChannel0, uv + vec2(0.0, stepsize)).rgb);\n    return (x + y) / stepsize;\n}\n\n\nvec3 color_quantize_yuv(in vec3 color) {\n    const float yuv_step = 0.1;\n \tvec3 yuv = rgb_2_yuv * color;\n    yuv.x = 0.2 + 0.8 * yuv.x;\n    vec3 quantized =\n        vec3(0.1 * (0.2 + round(10.0 * yuv.x)),\n             0.125 * (0.25 * sign(yuv.yz) + round(8.0 * yuv.yz)));\n    return yuv_2_rgb * quantized;\n}\n\nvec3 orangize(in vec3 col) {\n     mat3 blowout = mat3(1.87583893, 0.96308725, 0.,\n       0.96308725, 1.17416107, 0.,\n       0.        , 0.        , 0.5);\n    vec3 cent = vec3(0.47968451, \n                     0.450743, \n                     0.45227517) + 0.2;\n   \n    \n    vec3 dir = blowout * (col - cent);\n    \n    vec3 maxes = (step(vec3(0.0), dir) - col)/dir;\n    \n    float amount = min(maxes.x, min(maxes.y, maxes.z));\n    \n    return col + dir * 0.5 * amount;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float edgesize = 2.0 / min(iResolution.x, iResolution.y);\n    float edge_modulate =\n        smoothstep(30.0, 15.0, 0.4 * edge(uv, edgesize));\n    vec3 color = orangize(color_quantize_yuv(texture(iChannel0, uv).rgb));\n    vec3 line_color = vec3(0.1);\n\tfragColor = vec4(mix(line_color, color, edge_modulate),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 vidcolor = texture(iChannel0, uv).rgb;\n    float greenliness = \n        smoothstep(0.05, 0.15, vidcolor.g - 0.5 * (vidcolor.b + vidcolor.r + max(vidcolor.b, vidcolor.r)));\n\n    vec3 bgcolor = texture(iChannel1, uv).rgb;\n    fragColor = vec4(mix(vidcolor - vec3(0.0, greenliness, 0.0),\n                         bgcolor, greenliness), 1.0);\n    //    fragColor = vec4(vec3(greenliness), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u1v = (fragCoord + vec2(-1.0, 0.0))/iResolution.xy;\n    vec2 uv1 = (fragCoord + vec2(0.0, -1.0))/iResolution.xy;\n    vec2 u1v1 = (fragCoord + vec2(-1.0, -1.0))/iResolution.xy;\n    fragColor = 0.25 * (texture(iChannel0, uv) +\n                        texture(iChannel0, u1v) +\n                        texture(iChannel0, uv1) +\n                        texture(iChannel0, u1v1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u1v = (fragCoord + vec2(1.0, 0.0))/iResolution.xy;\n    vec2 uv1 = (fragCoord + vec2(0.0, 1.0))/iResolution.xy;\n    vec2 u1v1 = (fragCoord + vec2(1.0, 1.0))/iResolution.xy;\n    fragColor = 0.25 * (texture(iChannel0, uv) +\n                        texture(iChannel0, u1v) +\n                        texture(iChannel0, uv1) +\n                        texture(iChannel0, u1v1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u1v = (fragCoord + vec2(-1.0, 0.0))/iResolution.xy;\n    vec2 uv1 = (fragCoord + vec2(0.0, -1.0))/iResolution.xy;\n    vec2 u1v1 = (fragCoord + vec2(-1.0, -1.0))/iResolution.xy;\n    fragColor = 0.25 * (texture(iChannel0, uv) +\n                        texture(iChannel0, u1v) +\n                        texture(iChannel0, uv1) +\n                        texture(iChannel0, u1v1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}