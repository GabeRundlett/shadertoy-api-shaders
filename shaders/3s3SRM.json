{
    "Shader": {
        "info": {
            "date": "1571625365",
            "description": "for testing, reference the other shader, will remove later.",
            "flags": 0,
            "hasliked": 0,
            "id": "3s3SRM",
            "likes": 3,
            "name": "willster debug shader",
            "published": 3,
            "tags": [
                "willster"
            ],
            "usePreview": 0,
            "username": "willster",
            "viewed": 401
        },
        "renderpass": [
            {
                "code": "vec2 normz(vec2 x) {\n    return x == vec2(0.0, 0.0) ? vec2(0.0, 0.0) : normalize(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime*1.0;\n\tvec2 uv = ( gl_FragCoord.xy / iResolution.xy )*4.0;\n\n\tfloat i0=1.2;\n\tfloat i1=0.95;\n\tfloat i2=1.5;\n\tvec2 i4=vec2(0.0,0.0);\n\tfor(int s=0;s<4;s++)\n\t{\n\t\tvec2 r;\n\t\tr=vec2(cos(uv.y*i0-i4.y+time/i1),sin(uv.x*i0+i4.x+time/i1))/i2;\n\t\tr+=vec2(-r.y,r.x)*0.2;\n\t\tuv.xy+=r;\n\n\t\ti0*=1.93;\n\t\ti1*=1.25;\n\t\ti2*=1.7;\n\t\ti4+=r.xy*1.0+0.5*time*i1;\n\t}\n\tfloat r=sin(uv.x-time)*0.7+0.5;\n\tfloat b=sin(uv.y+time)*0.5+0.5;\n\tfloat g=sin((sqrt(uv.x*uv.x+uv.y*uv.y)+time))*0.5+0.5;\n\tvec3 c=vec3(r,g,b);\n    if (iMouse.z > 0.0) {\n        vec2 d = gl_FragCoord.xy - iMouse.xy;\n        float m = exp(-length(d) / 50.0);\n        c.xy += m * normz(d);\n    }\n\tfragColor = vec4(c,1.5);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}