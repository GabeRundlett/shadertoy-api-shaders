{
    "Shader": {
        "info": {
            "date": "1567039025",
            "description": "idk",
            "flags": 0,
            "hasliked": 0,
            "id": "WlSXWK",
            "likes": 1,
            "name": "Kaleido noise",
            "published": 3,
            "tags": [
                "idk"
            ],
            "usePreview": 0,
            "username": "josplode",
            "viewed": 373
        },
        "renderpass": [
            {
                "code": "float rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    p.x = sin(p.x);\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat n(vec2 p, float s) {\n    float o = s / iResolution.x;\n    return (noise(p + vec2(o, 0.)) + noise(p + vec2(0., o)) + noise(p + vec2(-o, 0.)) + noise(p + vec2(0., -o))) / 4.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = (fragCoord.xy / iResolution.xy - vec2(0.5)) * 0.25;\n    float l = length(c);\n    float s = pow(0.5, 1. / iTime) * 0.5;\n    float t = atan(c.y, c.x);\n    vec2 p = vec2(t, pow(2., l * 10.) / s + iTime);\n    float e = 1. - smoothstep(s - .01, s, l);\n    \n    fragColor = vec4(n(p * 8., l * 100000.) * e);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}