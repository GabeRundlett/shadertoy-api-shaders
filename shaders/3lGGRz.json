{
    "Shader": {
        "info": {
            "date": "1578371729",
            "description": "\"Yokohama 2020\"\ncomposed by Catzpaw 2020",
            "flags": 40,
            "hasliked": 0,
            "id": "3lGGRz",
            "likes": 33,
            "name": "[â™ª]Yokohama 2020",
            "published": 3,
            "tags": [
                "raymarching",
                "music"
            ],
            "usePreview": 1,
            "username": "Catzpaw",
            "viewed": 1134
        },
        "renderpass": [
            {
                "code": "//---Yokohama 2020\n// by Catzpaw 2020\n\n#define LINES 288.\n#define ITER 6\n#define DIF 0.002\n#define GAP 0.007\n\nvec3 gettex(vec2 p,float o){\n    vec3 t=texture(iChannel0,p+vec2(o,0)).rgb;\n    t+=hash(p+fract(iTime))*.2-.1;\n    return clamp(t,0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv=fragCoord/iResolution.xy;\n    float sl=clamp(abs(sin(fract(uv.y*LINES)*3.14)*1.1),0.,1.);\n    uv.y=floor(uv.y*LINES)/LINES;\n    vec3 tx,yc,rgb=vec3(0);\n    float o=-DIF*float(ITER)/2.;\n    o+=sin(uv.y-iTime)>.999?sin(hash(uv.yy)*.04-.02):0.;\n    for(int i=ZERO;i<ITER;i++){\n\t    tx=gettex(uv,o);yc.x=tx.r*.257+tx.g*.504+tx.b*.098+.0625;\n\t    tx=gettex(uv,o+GAP);yc.y=-tx.r*.148-tx.g*.291+tx.b*.439+.5;\n\t    tx=gettex(uv,o-GAP);yc.z=tx.r*.439-tx.g*.368-tx.b*.071+.5;\n        yc.x+=sin(iTime*40.+uv.y*300.)*.03;\n\t    rgb+=vec3((yc.x-.0625)*1.164+(yc.z-.5)*1.596,\n                (yc.x-.0625)*1.164-(yc.y-.5)*.391-(yc.z-.5)*.813,\n                (yc.x-.0625)*1.164+(yc.y-.5)*2.018);\n        o+=DIF;\n    }\n    rgb/=float(ITER);\n    fragColor = vec4(rgb*sl,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//---Yokohama 2020\n// by Catzpaw 2020\n\n#define ITER 96\n#define EPS 1e-3\n#define NEAR 1.\n#define FAR 100.\n\nconst vec2 e=vec2(EPS,-EPS);\nvec3 h=vec3(.42);\nfloat map(in vec3 p){\n    p.xz=mod(p.xz,1.)-.5;p=abs(p)-h;\n    return length(max(p,0.))+min(max(p.x,max(p.y,p.z)),0.)-.05;\n}\nfloat trace(in vec3 ro,in vec3 rd,out float c,out vec3 n){\n    float t=NEAR,d;\n    vec3 p;\n\tfor(int i=ZERO;i<ITER;i++){\n        p=ro+rd*t;h.y=fbm(p.xz)*3.;d=map(p);\n        if(abs(d)<EPS||t>FAR)break;\n        t+=step(d,.7)*d+d*.1;c+=1.;\n    }\n\tn=normalize(e.xxx*map(p+e.xxx)+e.xyy*map(p+e.xyy)+e.yxy*map(p+e.yxy)+e.yyx*map(p+e.yyx));\n    float w=(p.y<h.y-.2)&&(mod(p.y*4.,hash(floor(p.xz))*.5+.5)<hash(h.yy))?.7:1.;\n    n*=w;\n    c*=(w<1.)&&(hash(floor((p.xz)*12.))>.2)?.3:1.;\n\treturn min(t,FAR);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n    vec2 uv=(fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec3 n,ro=vec3(0,15,30),rd=vec3(uv,.8),ld=normalize(vec3(0.4,0.2,0.6));\n    ro.xz*=rot(iTime*.2);\n    rd.yz*=rot(-.4+sin(iTime*.25)*.3);\n    rd.xy*=rot(sin(iTime*.14)*.3);\n    rd.xz*=rot(iTime*.23);\n\tfloat c=0.,v=trace(ro,rd,c,n),s=pow(clamp(dot(n,ld),0.,1.),2.);\n    s+=pow(clamp(dot(normalize(rd),ld),0.,1.),5.);\n\tfragColor=vec4(vec3(v/float(FAR),s,s+c/float(ITER)),1);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//---Yokohama 2020\n// by Catzpaw 2020\n\n#define ZERO min(0,iFrame)\n\nfloat hash(vec2 n){return fract(sin(dot(n,vec2(17.1,3.13)))*41414.1);}\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\nfloat fbm(vec2 p){return hash(floor(p*.0625))+hash(floor(p*.25))+hash(floor(p*.5))+hash(floor(p))*2.;}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "//MUSIC:\n//\"Yokohama 2020\"\n//composed by Catzpaw 2020\n\n//---Music Renderer https://www.shadertoy.com/view/tttGzB\n// by Catzpaw 2019\n\n//SETUP\nconst float base =432.;\t//A tuning (Hz)\nconst float bpm  =96.;\t//beats per minute\nconst float steps=480.;\t//block length\nconst float start=2.;   //start count (beats)\n\n//STATE\nfloat gtime=0.;\t//time\nint   gchord=0;\t//chord\nfloat garp=0.;\t//arpeggio pattern\nfloat gdyn=1.;\t//dynamics\n\n//RANDOM ARP PATTERN GENERATOR\nfloat hash(float s){s=fract(s*.13);s*=s+33.33;return fract(s+s*s);}\nfloat pgen(float s,float r){\n    int p=0;\n    for(int i=0;i<16;i+=2){p+=int(hash(s)*r)<<i;s+=1.;}\n    return float(p);\n}\n\n//AMP\n//  vec3 p( drive, pressure, volume)\nvec2 amp(vec2 i,vec3 p){\n    vec2 v=pow(abs(i*p.x),vec2(1./p.y));\n    return clamp(sign(i)*v,-1.,1.)*p.z;\n}\n\n//CHORD\n//  global int gchord ...hex tetrad chord pattern\nfloat chord(float n){ // n:place in gchord (0-3)\n    float c=0.;\n    if(n>2.)c+=float((gchord>>8)&15);\n    if(n>1.)c+=float((gchord>>4)&15);\n    if(n>0.)c+=float(gchord&15);\n    return c; // return:relative note number to add to root note\n}\n\n//ARPEGGIATOR\n//  vec3 p( pattern, step_length, pattern_steps)\n//    arp_gate :p.pattern ...1bit pattern 1-16 steps 0:off 1:on\n//    arp_chord:p.pattern ...2bit pattern 1-8 steps 0-3:note\nfloat arp_gate(float t,vec3 p){\n    float l=15.*p.y/bpm;\n    float g=float((int(p.x)>>int(mod(t/l,p.z)))&1);\n    return (g>0.)?mod(t,l):-1.; // return:gate time or note off (-1)\n}\nfloat arp_chord(float t,vec3 p){\n    return chord(float((int(p.x)>>int(floor(mod(t/(15.*p.y/bpm),p.z))*2.))&3));\n}\n\n//FREQUENCY FROM MIDI NOTE NUMBER\n//single note\nfloat freq(float n){\n    return pow(2.,(n-69.)/12.)*base*6.283;\n}\n//with tetrad chord\nvec4 freq4(float n){\n    vec4 r;\n    r.x=freq(n);\n    r.y=gchord>0?freq(n+chord(1.)):0.;\n    r.z=gchord>16?freq(n+chord(2.)):0.;\n    r.w=gchord>256?freq(n+chord(3.)):0.;\n    return r;\n}\n\n//SOUND GENERATORS\n//  sequence => note pattern => instrument => oscillator\n\n//OSC\nfloat osc_saw(float x,float v){return clamp(mod(x/6.283,1.)*2.-1.,-1.,1.)*v;}\nfloat osc_sin(float x,float v){return clamp(sin(x)*v,-1.,1.);}\nfloat osc_sqr(float x,float v){return clamp(sign(sin(x))*v,-1.,1.);}\nfloat osc_noise(float x,float v){x=floor(x*1e3/v)*1e-3;return fract(sin(x*1717.17)*1313.13)*2.-1.;}\nfloat osc_metal(float x,float v){return fract(sin(x*v*171.17)*313.13)*2.-1.;}\n\n//ENVELOPE\nconst vec4 env0=vec4(0.00,.2,0.60,1.50); //piano\nconst vec4 env1=vec4(0.10,.4,0.50,0.50); //woodwind\nconst vec4 env2=vec4(0.20,.6,0.50,0.50); //string\nconst vec4 env3=vec4(0.00,.2,0.90,1.50); //synth\nfloat env_d(float x,float d){return max(0.,1.-x/max(d,1e-4));}\nfloat env_ad(float x,float a,float d){return min(x/max(a,1e-4),max(0.,1.-(x-a)/max(d,1e-4)));}\nfloat env_adsr(float x,vec4 e,float g){return max(0.,min(1.,x/max(e.x,1e-4))-min(1.-e.z,max(x-e.x,0.)*(1.-e.z)/max(e.y,1e-4))-max(x-g,0.)*e.z/max(e.w,1e-4));}\n\n//PERCUSSION INSTRUMENTS (time)\nfloat bass_drum(float x){return osc_sin(x*freq(46./(1.+x*2.)),8.*env_d(x,.07));}\nfloat snare_drum(float x){float f=freq(52./(1.+x*.02))*x;return (osc_noise(x,.05)*env_d(x,.3)*.5+osc_sin(f+osc_sin(f*1.92,.3),5.))*max(env_d(x,.1),env_d(x,.3)*.7);}\nfloat hihat(float x,float d){return osc_metal(x,3.5)*env_d(x,d);}\n\n//MELODIC INSTRUMENTS (freq)\n//float vibe(float f){return osc_sin(f+osc_sin(f*8.+osc_sin(f*.02,1.),.3),1.5);}\n//float harpsi(float f){return osc_saw(f*4.+osc_sin(f*18.,.4),1.3);}\n//float organ(float f){return osc_sin(f,1.3)+osc_sin(f*.5,1.)+osc_sin(f*2.,1.)+osc_sin(f*4.,.5);}\n//float reed(float f){return osc_sin(f,1.)*osc_sqr(f*3.,1.);}\nfloat sawlead(float f){return osc_saw(f,1.)+osc_saw(f*2.01,1.);}\n//float sqrlead(float f){return osc_sqr(f,.7)+osc_sqr(f*2.01,.7);}\n//float synlead(float f){return osc_saw(f,1.)*osc_sqr(f*3.02,1.);}\n\n//MELODIC INSTRUMENTS (freq,time)\n//float piano(float f,float x){return osc_sin(f+osc_sin(f,env_d(x,.5))+osc_sin(f*3.,env_d(x,2.)*.8),1.);}\nfloat epiano(float f,float x){return osc_sin(f+osc_sin(f*15.,.04)+osc_sin(f*.99,.4),1.);}\nfloat bass(float f,float x){return osc_sin(f*.5+osc_sin(f*4.5,env_d(x,.1)*.5)+osc_sin(f*1.5,env_ad(x,.1,.2)*.3),2.)*env_d(x,.6);}\n//float bell(float f,float x){return osc_sin(f+osc_sin(f*3.4,env_d(x,1.)*.2)+osc_sin(f*4.,.5),1.);}\n//float guitar(float f,float x){return osc_sin(f+osc_sin(f*8.,env_d(x,.05)*.3)+osc_sin(f*5.,env_ad(x,.03,5.)*.3),2.);}\n\n//NOTE OPERATORS\n//float bup(float x){return min(x*(bpm/30.)-1.,0.);}\n//float bdwn(float x){return max(1.-x*(bpm/30.),0.);}\n//float pral(float x){float y=20./bpm;return ((x>y/2.)&&(x<y))?2.:0.;}\n//float mord(float x){float y=20./bpm;return ((x>y/2.)&&(x<y))?-2.:0.;}\n//float tril(float x){return sign(sin(3.14+x*bpm*6.28/15.))+1.;}\n\n//NOTE PATTERNS\n//P( note length, num of notes) ...pattern init\n//T( position)                  ...set trigger (for percussion)\n//N( position, note)            ...set note (for melody)\n//NU( position, note)           ...set note with bend up\n//ND( position, note)           ...set note with bend down\n//NP( position, note)           ...set note with pral triller\n//NM( position, note)           ...set note with mordent\n//NT( position, note)           ...set note with trill\n//X( position, macro)           ...execute macro (CHORD_mM7 etc.)\n//X( position, code)            ...execute code (gchord=0x333; etc.)\n#define P(l,s) float x=1e3,y=15.*float(l)/bpm,z=0.,v=mod(t,y*float(s));\n#define T(s) if(v>float(s)*y){x=v-float(s)*y;}\n#define N(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n);}\n/*\n#define NU(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+bup(x);}\n#define ND(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+bdwn(x);}\n#define NP(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+pral(x);}\n#define NM(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+mord(x);}\n#define NT(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+tril(x);}\n*/\n#define X(s,n) if(v>float(s)*y){x=v-float(s)*y;n;}\n\n#define R -1e3\n#define C  60.\n#define Cs 61.\n#define Db 61.\n#define D  62.\n#define Ds 63.\n#define Eb 63.\n#define E  64.\n#define F  65.\n#define Fs 66.\n#define Gb 66.\n#define G  67.\n#define Gs 68.\n#define Ab 68.\n#define A  69.\n#define As 70.\n#define Bb 70.\n#define B  71.\n#define HI  12.+\n#define LO -12.+\n\n/*\n#define CHORD_3        gchord=0x484;\n#define CHORD_4        gchord=0x575;\n#define CHORD_5        gchord=0x757;\n#define CHORD_M        gchord=0x534;\n#define CHORD_on3      gchord=0x453;\n#define CHORD_on5      gchord=0x345;\n#define CHORD_sus4     gchord=0x525;\n*/\n#define CHORD_sus4on4  gchord=0x552;\n/*\n#define CHORD_sus4on5  gchord=0x255;\n#define CHORD_7        gchord=0x334;\n#define CHORD_7sus4    gchord=0x325;\n#define CHORD_7alt     gchord=0x424;\n#define CHORD_M7       gchord=0x434;\n#define CHORD_M7sus4   gchord=0x425;\n#define CHORD_m        gchord=0x543;\n#define CHORD_mon3     gchord=0x354;\n#define CHORD_mon5     gchord=0x435;\n#define CHORD_m7       gchord=0x343;\n#define CHORD_mM7      gchord=0x443;\n#define CHORD_add9     gchord=0x734;\n#define CHORD_madd9    gchord=0x743;\n#define CHORD_add9on5  gchord=0x552;\n*/\n\n#define DYN_ff gdyn=1.0;\n#define DYN_f  gdyn=0.9;\n#define DYN_mf gdyn=0.8;\n#define DYN_mp gdyn=0.7;\n#define DYN_p  gdyn=0.6;\n#define DYN_pp gdyn=0.5;\n\n/*\n#define ARP4_up 58596.\n#define ARP4_down 6939.\n#define ARP4_updown 18148.\n#define ARP4_downup 47387.\n#define ARP4_p1 18118.\n#define ARP4_p2 4656.\n\n#define ARP3_up 18724.\n#define ARP3_down 24966.\n#define ARP3_updown 25700.\n#define ARP3_downup 17990.\n#define ARP3_p1 4486.\n#define ARP3_p2 8480.\n*/\n\n//NOTE PATTERNS:percussion\nvec2 bd(float t,float p){\n    float g=arp_gate(t,vec3(p,1.,16.));\n    return g<0.?vec2(0):amp(vec2(.6*bass_drum(g*1.05),.6*bass_drum(g*.95)),vec3(1,2.2,1));\n}\nvec2 sd(float t,float p){\n    float g=arp_gate(t,vec3(p,1.,16.));\n    return g<0.?vec2(0):vec2(.6*snare_drum(g*.995),.6*snare_drum(g*1.005));\n}\nvec2 hh(float t,float p1,float p2){\n    float g=arp_gate(t,vec3(p1,1.,16.));\n    vec2 r=g<0.?vec2(0):vec2(.2)*hihat(g,.08);\n    g=arp_gate(t,vec3(p2,2.,8.));r+=g<0.?vec2(0):vec2(.15)*hihat(g,.3);\n    return r;\n}\n\n//NOTE PATTERNS:epiano\nvec2 ep(float x,float n){\n    //epiano single note\n\tfloat f=freq(n)*x;\n    return vec2(epiano(f*.995,x),epiano(f*1.005,x))*env_adsr(x,env0,.1)*gdyn;\n}\nvec2 epc(float x,float n){\n    //epiano triad chord\n\tvec4 fl=freq4(n)*x,fr=fl*.995;fl*=1.005;\n    return vec2(\n        (epiano(fl.x,x)+epiano(fl.y,x)+epiano(fl.z,x)),\n        (epiano(fr.x,x)+epiano(fr.y,x)+epiano(fr.z,x)))*env_adsr(x,env0,.1)*gdyn;\n}\nvec2 ep0(float t,float o){\n    //section:A1(triad)\n    P(1,32)\n    N(0,HI Ds) N(1,R)\n    N(3,As)    N(4,R)\n    N(6,HI Cs) N(7,R)\n    N(9,Gs)    N(10,R)\n    N(12,B)    N(13,R)\n    N(15,B)    N(16,R)\n    N(17,B)    N(30,R)\n    return z<0.?vec2(0):epc(x,z+o)*.3;\n}\nvec2 ep1(float t,float o){\n    //section:A2(triad)\n    P(1,32)\n    N(0,HI Ds)  N(1,R)\n    N(3,As)     N(4,R)\n    N(6,HI Cs)  N(7,R)\n    N(9,Gs)     N(10,R)\n    N(12,B)     N(13,R)\n    N(15,HI Cs) N(16,R)\n    N(17,HI Cs) N(30,R)\n    return z<0.?vec2(0):epc(x,z+o)*.3;\n}\nvec2 ep2(float t,float o){\n    //section:B1-1/B2-1\n    P(1,32)\n    N(0,HI Cs)\n    N(8,HI Cs)\n    N(11,HI Ds)\n    N(14,HI Cs)\n    N(16,HI C)\n    N(22,Gs)\n    return z<0.?vec2(0):ep(x,z+o)*.3;\n}\nvec2 ep3(float t,float o){\n    //section:B1-2/B2-2/B3-2\n    P(1,16)\n    N(1,HI F) N(9,R)\n    return z<0.?vec2(0):ep(x,z+o)*.3;\n}\nvec2 ep4(float t,float o){\n    //section:B1-3/B2-3/B3-3\n    P(1,16)\n    N(2,HI Gs) N(10,R)\n    return z<0.?vec2(0):ep(x,z+o)*.3;\n}\nvec2 ep5(float t,float o){\n    //section:B3-1\n    P(1,32)\n    N(0,A)\n    N(8,As)\n    N(11,HI C)\n    N(14,As)\n    N(16,A)\n    N(22,F)\n    return z<0.?vec2(0):ep(x,z+o)*.3;\n}\nvec2 ep6(float t,float o){\n    //section:B4(triad)\n    P(1,32)\n    X(0,gchord=0x642)\n    N(0,Gs) N(1,Gs) N(2,R)\n    N(9,Gs) N(10,R) N(11,Gs) N(12,R)\n    X(18,CHORD_sus4on4)\n    N(18,Gs) N(19,R) N(21,Gs) N(22,R)\n    X(23,gchord=0x642)\n    N(23,Gs) N(31,R)\n    return z<0.?vec2(0):epc(x,z+o)*.3;\n}\n\n//NOTE PATTERNS:bass\nvec2 bs(float x,float n){\n    float f=freq(n-12.)*x;\n    return amp(vec2(bass(f+1.005,x),bass(f*.995,x)),vec3(gdyn,1.8,0.6));\n}\nvec2 bs0(float t,float o){\n    //section:A1a/A2a\n    P(1,16)\n    N(0,F)     N(1,R)\n    N(2,As)\n    N(3,C)\n    N(4,F)\n    N(5,LO As) N(6,R)\n    N(7,Ds)    N(8,R)\n    N(9,LO As)\n    N(10,Ds)\n    N(11,LO Gs)\n    N(12,Fs)\n    N(13,LO B) N(14,R)\n    N(15,Cs)\n    return z<0.?vec2(0):bs(x,z+o);\n}\nvec2 bs1(float t,float o){\n    //section:A1b/A2b\n    P(1,16)\n    N(0,Cs)   N(1,R)\n    N(2,Fs)\n    N(3,LO B)\n    N(4,Cs)\n    N(5,LO B) N(6,R)\n    N(7,Fs)   N(8,R)\n    N(9,Fs)\n    N(10,Cs)\n    N(11,LO B)\n    N(12,Fs)\n    N(13,Cs)  N(14,R)\n    N(15,LO B)\n    return z<0.?vec2(0):bs(x,z+o);\n}\nvec2 bs2(float t,float o){\n    //section:B1-B3(arp3)\n    P(1,8)\n    N(0,0)\n    z=arp_chord(x,vec3(7224.,1.,8.));\n    x=arp_gate(x,vec3(239.,1.,8.));\n    return x<0.?vec2(0):bs(x,z+o);\n}\nvec2 bs3(float t,float o){\n    //section:B4\n    P(1,16)\n    N(0,LO Gs)  N(1,R)\n    N(2,LO Gs)\n    N(3,LO As)\n    N(8,LO Gs)\n    N(11,LO As) N(17,R)\n    N(18,LO Gs) N(19,R)\n    N(21,LO Gs) N(22,R)\n    N(23,LO As) N(31,R)\n    return z<0.?vec2(0):bs(x,z+o);\n}\n\n//NOTE PATTERNS:synth lead(unison)\nvec2 ld(float x,float n){\n\tfloat fl=freq(n)*x,fr=fl*.995;fl*=1.005;\n    return vec2(sawlead(fl)+sawlead(fl*2.),sawlead(fr)+sawlead(fr*2.))*env_adsr(x,env0,1.)*gdyn;     \n}\nvec2 ld0(float t,float o){\n    P(1,32)\n    N(0,LO As) N(2,R)\n    N(4,C)\n    N(8,Ds)    N(10,R)\n    N(12,Cs)\n    N(22,LO B) N(28,R)\n    N(30,LO F)\n    N(31,LO Gs)    \n    return z<0.?vec2(0):ld(x,z+o)*.2;\n}\nvec2 ld1(float t,float o){\n    P(1,32)\n    N(0,LO As) N(2,R)\n    N(4,C)\n    N(8,Ds)    N(10,R)\n    N(12,Cs)\n    N(22,Ds)   N(28,R)\n    N(30,LO F)\n    N(31,LO Gs)    \n    return z<0.?vec2(0):ld(x,z+o)*.2;\n}\nvec2 ld2(float t,float o){\n    P(1,32)\n    N(0,Cs)\n    N(3,Ds)\n    N(6,F) N(15,R)\n    N(16,Gs)\n    N(19,F)\n    N(22,Ds)\n    N(24,C) N(31,R)\n    return z<0.?vec2(0):ld(x,z+o)*.2;\n}\nvec2 ld3(float t,float o){\n    P(1,32)\n    N(0,LO Gs)\n    N(3,LO B)\n    N(6,Cs) N(15,R)\n    N(16,Fs)\n    N(19,E)\n    N(22,Cs)\n    N(24,LO As) N(31,R)\n    return z<0.?vec2(0):ld(x,z+o)*.2;\n}\nvec2 ld4(float t,float o){\n    P(1,32)\n    N(0,LO A)\n    N(3,C)\n    N(6,Ds) N(15,R)\n    N(16,F)\n    N(19,Ds)\n    N(22,C)\n    N(24,LO A)\n    N(28,LO F)\n    return z<0.?vec2(0):ld(x,z+o)*.2;\n}\nvec2 ld5(float t,float o){\n    P(1,32)\n    N(0,LO Gs) N(3,R)\n    N(6,LO Gs) N(9,R)\n    N(12,LO Gs) N(15,R)\n    N(18,LO As) N(19,R)\n    N(21,Ds) N(22,R)\n    N(23,D) N(31,R)\n    return z<0.?vec2(0):ld(x,z+o)*.2;\n}\n\n//SEQUENCE\n#define TRACK t=time;v=vec2(0);\n#define   SEGNO(block,blocks)        if(t>float(block)*l){t=mod(t-float(block)*l,float(blocks)*l);\n#define     REP(block,blocks,repend) if((t>float(block)*l)&&(t<=float(block)*l+float(repend)*l)){t=mod(t-float(block)*l,float(blocks)*l);\n#define       SEQ(block,patterns)    if(t>float(block)*l){v=patterns;v*=d;}\n#define     NEXT                     }\n#define   DS                         }\n#define END                          o+=v;\nvoid sequence(float time,float l,float d,inout vec2 o){vec2 v=vec2(0);float t=time;\n\n    DYN_mf\n\n    TRACK //1 rhythm hh+bd\n      SEGNO(0,16)\n        SEQ(0.0,hh(t,4947.,0.))\n        SEQ(1.0,hh(t,4947.,18440.))\n        SEQ(1.5,hh(t,4947.,18440.)+bd(t,43305.))\n      DS\n    END\n\n    TRACK //2 rhythm sd\n      SEGNO(0,16)\n        REP(0,4,4)\n          SEQ(1.5,sd(t,61456.))\n          SEQ(2.0,sd(t,4112.))\n          SEQ(3.5,sd(t,36880.))\n        NEXT\n        REP(4,2,8)\n          SEQ(0.0,sd(t,4112.))\n          SEQ(1.5,sd(t,61456.))\n        NEXT\n        REP(8,4,16)\n          SEQ(0.0,sd(t,4112.))\n          SEQ(1.5,sd(t,36880.))\n          SEQ(2.0,sd(t,4112.))\n          SEQ(3.5,sd(t,61456.))\n        NEXT\n      DS\n    END\n\n    TRACK //3 epiano\n      DYN_mf\n      SEGNO(0,16)\n        REP(0,2,12)\n          CHORD_sus4on4\n          SEQ(0,ep0(t,0.))\n          SEQ(1,ep1(t,0.))\n        NEXT\n        REP(12,4,16)\n          SEQ(0.0,ep2(t, 0.)+ep3(t, 0.)+ep4(t, 0.))\n          SEQ(1.0,ep2(t,-2.)+ep3(t,-1.)+ep4(t, 0.))\n          SEQ(1.5,ep2(t,-2.)+ep3(t,-4.)+ep4(t,-2.))\n          SEQ(2.0,ep5(t, 0.)+ep3(t,-5.)+ep4(t,-3.))\n          SEQ(3.0,ep6(t, 0.))\n        NEXT\n      DS\n    END\n\n    TRACK //4 bass\n      DYN_mf\n      SEGNO(0,16)\n        REP(1,2,11)\n          SEQ(0.0,bs0(t,0.))\n          SEQ(0.5,bs1(t,2.))\n          SEQ(1.0,bs0(t,0.))\n          SEQ(1.5,bs1(t,0.))\n        NEXT\n        REP(12,4,16)\n          gchord=0x322;\n          SEQ(0.0,bs2(t,Cs))\n          gchord=0x323;\n          SEQ(0.5,bs2(t,C))\n          gchord=0x432;\n          SEQ(1.0,bs2(t,LO B))\n          gchord=0x503;\n          SEQ(1.5,bs2(t,LO As))\n          SEQ(2.0,bs2(t,LO A))\n          SEQ(3.0,bs3(t,0.))\n        NEXT\n      DS\n    END\n\n    TRACK //5 synth lead\n      DYN_mp\n      SEGNO(0,16)\n        REP(0,6,12)\n          REP(2,2,6)\n            SEQ(0,ld0(t,0.))\n            SEQ(1,ld1(t,0.))\n          NEXT\n        NEXT\n        REP(12,4,16)\n          SEQ(0,ld2(t,0.))\n          SEQ(1,ld3(t,0.))\n          SEQ(2,ld4(t,0.))\n          SEQ(3,ld5(t,0.))\n        NEXT\n      DS\n    END\n}\n\n//MASTER SECTION\n#define MASTER_DRIVE    0.4\n#define MASTER_PRESSURE 1.1\n#define DELAY_REPEAT    4\n#define DELAY_WET       0.15\n#define DELAY_FEEDBACK  0.85\n#define DELAY_TIME      0.05\nvec2 mainSound( in int samp,float time){\n    float l=steps/bpm,vol=1.,d=DELAY_WET,r=DELAY_TIME;vec2 o=vec2(0),v=vec2(0);\n    if(time>170.){vol=(180.-min(time,180.))/10.;}\n    time-=start*60./bpm;if(time<0.)return o;\n    gtime=time;\n    sequence(time,l,1.,o);\n    for(int i=0;i<DELAY_REPEAT;i++){\n        time-=r;gtime-=r;\n        sequence(time,l,d,o);\n        d*=DELAY_FEEDBACK;\n        r+=DELAY_TIME;\n    }\n    return amp(o,vec3(MASTER_DRIVE,MASTER_PRESSURE,vol));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}