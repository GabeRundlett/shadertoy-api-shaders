{
    "Shader": {
        "info": {
            "date": "1458971620",
            "description": "code golfing of  lejeunerenard's https://www.shadertoy.com/view/ltjGWt",
            "flags": 0,
            "hasliked": 0,
            "id": "ls3XW8",
            "likes": 9,
            "name": "Isometric Grid 2 (108 chars)",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "grid",
                "isometric",
                "pattern",
                "short",
                "onetweet"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1211
        },
        "renderpass": [
            {
                "code": "// code golfing of  lejeunerenard's https://www.shadertoy.com/view/ltjGWt\n\n/**/      // 108 chars\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U =  fract( vec2(4,6.7) * U/iResolution.y );\n\n    O = vec4( U.x < .5 == U.x < 1.-U.y == U.x < U.y );\n}\n/**/\n\n\n\n\n\n/**      // 110 chars\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    O = vec4( U.x < .5 == U.x < 1.-U.y == U.x < U.y );\n}\n/**/\n\n\n\n/**      // 121 chars\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    O = vec4( (U.x < .5) == ( ( U.x + U.y < 1.) == ( U.x - U.y < 0. )));\n}\n/**/\n\n\n\n/**      // 140 chars\n\nvoid mainImage( out vec4 o,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    o = vec4(U.x + U.y < 1., U.x - U.y < 0., U.x < .5, 1);\n    o +=  abs(o.z - abs(o.x-o.y))-o;\n}\n/**/\n\n\n\n/**      // 150 chars\n\nvoid mainImage( out vec4 o,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    float s = abs(   step( U.x + U.y, 1.)\n                   - step( U.x - U.y, 0.)\n                         ),\n          d  = step( U.x, .5);   \n    \n\to +=  abs(d - s)-o;\n}\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}