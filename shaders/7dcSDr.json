{
    "Shader": {
        "info": {
            "date": "1632933564",
            "description": "Oscillator like hydra does: [url]https://github.com/ojack/hydra-synth[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "7dcSDr",
            "likes": 1,
            "name": "Oscillator a la hydra",
            "published": 3,
            "tags": [
                "hydra"
            ],
            "usePreview": 0,
            "username": "alvarobyrne",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "vec4 osc(vec2 _st, float frequency, float sync, float offset) {\n     vec2 st = _st;\n     float r = sin((st.x-offset/frequency+iTime*sync)*frequency)*0.5  + 0.5;\n     float g = sin((st.x+iTime*sync)*frequency)*0.5 + 0.5;\n     float b = sin((st.x+offset/frequency+iTime*sync)*frequency)*0.5  + 0.5;\n     return vec4(r, g, b, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = osc(uv,60.,0.1,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}