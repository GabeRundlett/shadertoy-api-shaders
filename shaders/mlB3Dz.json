{
    "Shader": {
        "info": {
            "date": "1673129251",
            "description": "morphing\n",
            "flags": 0,
            "hasliked": 0,
            "id": "mlB3Dz",
            "likes": 4,
            "name": "morphing spheres 3 ",
            "published": 3,
            "tags": [
                "morphing"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 170
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //needed for anti aliasing ?\n    float n_ratio_1to_iresx = 1./ iResolution.x;\n    \n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    o_trn_fc_nor_offset*=2.5;\n\n    float n_its = 50.;\n    float n_tau = 6.2831;\n    float n_dist_prod = 1.;\n    float n_dist_prod2 = 1.;\n    float n_dist_min = 1.;\n    float n_it_nor_dmin = 0.;\n    for(float n_it = 0.; n_it< n_its; n_it+=1.){\n        float n_it_nor = n_it/ n_its;\n        float n_radius = cos(iTime+n_it_nor*n_tau*2.);\n        float n_ang_nor = n_tau * n_it_nor;\n        vec2 o_p = vec2(\n            sin(n_ang_nor)*n_radius,\n            cos(n_ang_nor)*n_radius\n        );\n        float n_dist = length(o_trn_fc_nor_offset - o_p);\n        if(n_dist < n_dist_min){\n            n_it_nor_dmin = n_it_nor;\n        }\n        n_dist_prod *= n_dist;\n        n_dist_prod2 *= pow(n_dist, 1./10.);\n\n        n_dist_min = min(n_dist_min, n_dist);\n    }\n\n    float n_aa = n_ratio_1to_iresx*200.;\n    float n_th = 0.5;\n    float nds = smoothstep(n_th, n_th+n_aa, n_dist_prod);\n    fragColor = vec4(1.-n_dist_prod2);\n    \n    if(o_trn_fc_nor.y > (1./3.)*1.){\n        vec4 o_col = vec4(n_it_nor_dmin, 0.,0.,1.);\n        fragColor = vec4(o_col*(1.-nds));\n    }\n    if(o_trn_fc_nor.y > (1./3.)*2.){\n        fragColor = vec4(1.-n_dist_min);\n    }\n    if(o_trn_fc_nor.y > (1./3.)*3.){\n        fragColor = vec4(1.-n_dist_prod);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}