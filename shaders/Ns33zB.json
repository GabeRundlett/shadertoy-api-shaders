{
    "Shader": {
        "info": {
            "date": "1725996146",
            "description": "This animation can be physically realized as a paper crafts project, with a spinner for the center strip, behind paper with a slit for the spinner to show through. Press 'E' to show the spinner texture. You can save this spinner texture and print it.",
            "flags": 16,
            "hasliked": 0,
            "id": "Ns33zB",
            "likes": 2,
            "name": "Paper craftable animated road",
            "published": 3,
            "tags": [
                "road",
                "paper",
                "craft",
                "spinner",
                "highway",
                "street",
                "origami",
                "popupbook",
                "movablebook",
                "papercraft",
                "paperengineering"
            ],
            "usePreview": 0,
            "username": "1j01",
            "viewed": 60
        },
        "renderpass": [
            {
                "code": "// This generates a spiral texture for a paper-craftable animated road\n// It also simulates a static overlay on top of the spinning spiral disk.\n//\n// It was designed in Shadertoy, so it uses Shadertoy's uniforms and such.\n// This shader can be viewed here: https://shadertoy.com/view/Ns33zB\n//\n// To see the paper craft in action, check the repo here: https://github.com/1j01/algodoo-stuff/\n// You can at least play around with it in Algodoo, as a physics simulation,\n// (along with some much less practical but also interesting conveyor belt based variations),\n// but I may release a video of it and instructions later on,\n// which I would post in that repo somewhere.\n//\n// 'E' toggles between exportable texture and preview\n// 'R' reverses rotation\n\nbool keyToggle(int ascii) {\n\treturn (texture(iChannel0,vec2((.5+float(ascii))/256.,0.75)).x > 0.);\n}\n\nfloat spinnerTexture(vec2 m) {\n\tfloat r = length(m);\n\tif (r > 1.3) return 1.;\n\tfloat a = atan(m.y, m.x);\n\t//return smoothstep(0.6, 2., mod(r*a*50., 4.));\n\t//return smoothstep(0.15, 0.16, mod(a - pow(r, 8.)*0.9, 3.1415926/10.));\n\t//return smoothstep(0.15, 0.16, mod(a - pow(r-.2, 9.)*3., 3.1415926/10.));\n\treturn smoothstep(0.15, 0.16, mod(a - pow(r, 8.)*0.9, 3.1415926/10.));\n}\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n\treturn vec2(\n\t  cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n\t  cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n\tif (keyToggle(82)) t=-t; // 'R' for \"Reverse\"\n\tif (keyToggle(80)) t=0.; // 'P' for \"Pause\"\n\tbool showSpinnerTexture = keyToggle(69); // 'E' for \"Export\", as the product is the spinner texture\n\tbool showDebug = keyToggle(68); // 'D' for \"Debug\"\n\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\n\tvec2 m = iMouse.xy / iResolution.y;\n\tif ((length(m)==0.) || (iMouse.z<0.)) m = vec2(1.2,-.7);\n\tif (showSpinnerTexture) m = vec2(0.5);\n\n\tfloat v = spinnerTexture(rotateUV(m-uv, t*2., vec2(0)) * (showSpinnerTexture ? 2.62 : 1.));\n\n\tuv = fragCoord.xy / iResolution.xy;\n\tvec3 col = vec3(v);\n\n\tfloat horizonY = 0.5;\n\tfloat roadCenterX = 0.5;//0.7-sin(uv.y)*0.2;\n\tfloat roadWidth = 0.5*(1.-uv.y*2.*0.96);//pow(10.7, uv.y);\n\tfloat stripWidth = 0.15;\n\tfloat xOnRoad = abs(uv.x - roadCenterX) / roadWidth; // x in pavement texture space\n\tfloat sideLineWidth = stripWidth; // doesn't make sense mathematically yet\n\tfloat sideLineOffsetX = 0.8;\n\tfloat grass = smoothstep(1., 1.006, xOnRoad);\n\tfloat strip = 1. - smoothstep(0.1, 0.2, xOnRoad / stripWidth);\n\tfloat sideLine = 1. - smoothstep(sideLineWidth, sideLineWidth * 1.2, abs((xOnRoad - sideLineOffsetX)) / sideLineWidth);\n\n\t// grass and asphalt\n\tvec3 overlayCol = grass * vec3(0.094,0.749,0.094);\n\t// side-line\n\toverlayCol = mix(overlayCol, vec3(1.), sideLine);\n\t// sky\n\tif (uv.y > horizonY) {\n\t\toverlayCol = vec3(0.600,0.992,1.000);\n\t\tstrip = 0.;\n\t}\n\n\tcol = mix(overlayCol, col, showSpinnerTexture ? 1. : (showDebug ? (0.5 + strip * 0.5) : strip));\n\n\tfragColor = vec4(col,1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}