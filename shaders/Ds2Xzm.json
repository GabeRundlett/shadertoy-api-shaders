{
    "Shader": {
        "info": {
            "date": "1670573113",
            "description": "Day 25 of Codevember 2022\n\nInstagram : https://www.instagram.com/etidouu/\nTwitter : https://twitter.com/EPEtidou",
            "flags": 0,
            "hasliked": 0,
            "id": "Ds2Xzm",
            "likes": 2,
            "name": "Codevember #25 Random Spiral 5",
            "published": 3,
            "tags": [
                "spiral",
                "random",
                "codevember"
            ],
            "usePreview": 0,
            "username": "Etidou",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\n\nuniform float u_time;\n\nfloat SEGMENT_TIME = 4.0;\n\nconst float PI = 3.1415926535;\n\n#ifndef TAU\n#define TAU 6.2831853071795864769252867665590\n#endif\n\nfloat segmentAngle;\n\nfloat polySDFScale(vec2 uv, vec2 s, int V) {\n    uv = uv*2.-1.;\n    float a = atan(uv.x,uv.y)+PI;\n    float r = length(uv);\n    float v = TAU/float(V);\n    float final = cos(floor(.3+a/v)*v-a)*r;\n    return final;\n}\n\nvec2 rotate(vec2 st, float a) {\n    st = mat2(cos(a),-sin(a),\n              sin(a),cos(a))*(st-.5);\n    return st+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (gl_FragCoord.xy - iResolution.xy * .5) / iResolution.yy + 0.5;\n\n    vec2 rot = rotate(uv, PI + (u_time * 0.075));\n    uv = rot;    \n    \n    float radius = length(uv - 0.5);\n\n    float poly = polySDFScale(\n        uv,\n        vec2(2.7),\n        8\n    ); \n\n    float segmentAngle = ((PI + 40.0) / SEGMENT_TIME);\n\n    poly -= segmentAngle + floor((cos(iTime) + poly) - segmentAngle);\n\n    poly = min(-poly, segmentAngle * poly);\n\n    vec2 st = vec2(sin((cos(-poly / -iTime), sin(poly + iTime)) + radius * segmentAngle))  ;\n\n    st = max(min(st, 3.0 * st), st);\n\n    vec3 color = vec3(0.0, cos(sin(-iTime) / -st));\n\n    float len = length(uv - 0.5);\n\n    color.r += sin(len * 40.0 + poly * 4.0 * sin((iTime / 5.0)));\n    color.g = cos(len / 30.0 + poly * 6.0 * -sin((iTime / 5.0)));\n    color.b *= sin(len * 5.0 + poly * 5.0 * cos(iTime / 5.0));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}